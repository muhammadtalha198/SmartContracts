{
	"id": "eacbd86bc2d75bf9c471c01ad86d9deb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"DripWarrior/poolContract_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC1822.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n\n// File: @openzeppelin/contracts/proxy/beacon/IBeacon.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n\n// File: @chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\n\n\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n\n// File: DripWarrior/poolContract.sol\n\n\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\n\n\n\n\n\n// 0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\ninterface IBEP20 {        \n    \n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address recipient, uint256 amount) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function transferFrom(address sender,address recipient,uint256 amount) external returns (bool);\n}\n\ncontract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {\n\n    IBEP20 public usdcToken;\n    \n    uint256 public treasuryPoolAmount;\n    uint256 public ownerShipPoolAmount;\n    uint256 public totalStakedAmount;\n\n    uint256 public tdividentPayoutPercentage;\n    uint256 public odividentPayoutPercentage;\n    uint256 public flowToTreasuryPercentage;\n    uint256 public maintainceFeePercentage;\n\n    uint256 public noOfUsers;\n    address public multisigAddress;\n\n    bool private locked;\n    uint256 public interval; // interval specifies the time between upkeeps\n    uint256 public realInterval; // interval specifies the time between upkeeps\n    uint256 public startingTime; \n    uint256 public lastTimeStamp; // lastTimeStamp tracks the last upkeep performed\n    address public s_forwarderAddress;\n\n    address public ownerOne;\n    address public ownerTwo;\n\n    struct UserRegistered{\n\n        bool blocked;\n        uint256 receivedAmount;\n        uint256 withdrawAmount;\n        uint256 receiveFromTreasury;\n        uint256 receiveFromOwneerShip;\n        uint256 totalStakedAmount;\n    }\n\n    uint256 public totalProjects;\n    mapping(address => bool) public alreadyAdded;\n    mapping(uint256 => address) public totalUsers;\n    mapping(uint256 => uint256) public tPPercentages;\n    mapping(address => UserRegistered) public userRegistered;\n\n    event AddTreasuery(uint256 _treasuryPoolAmount);\n    event AddOwnership(uint256 _ownerShipPoolAmount);\n    event AddFunds(uint256 _amount, uint256 _projectNo);\n    event offInterval(address _owner, uint256 _interval);\n    event Withdraw (address recipient, uint256 usdcAmount);\n    event PercentageChanged(address _owner, uint256 _newPercentage);\n    event SetForwarderAddress(address _owner, address _s_forwarderAddress);\n    event UserBlocked(address owner,address blockUserAddress, bool blocked);\n    event StakeTokens (address sender, address recepient,uint256 usdcAmount);\n    event singleUserAddeed(address owner,uint256 _amount, address userAddress);\n    event SetInterval(address _owner, uint256 _interval, uint256 _lastTimeStamp);\n    event AddProject(uint256 projectId, uint256 OpPercentage,uint256 tpPercentage);\n    event multipleUserAddeed(address owner,uint256 _amountLength, uint256 usersLength);\n    event WeeklyTransfered(address caller,uint256  ownerShipPoolAmount, uint256  treasuryPoolAmount);\n\n    error ArrayLengthMismatch();\n    error wrongValue(bool value);\n    error wrongTime(uint256 time);\n    error userBlocked(bool blocked);\n    error wrongOwner(address owner);\n    error wrongAmount(uint256 amount);\n    error zeroUsers(uint256 noOfUsers);\n    error transferFailed(bool transfered);\n    error notEnoughBalance(uint256 amount);\n    error emptyAmount(uint256 amountLength);\n    error wrongProjectNo(uint256 projectNO);\n    error wrongAddress(address wrongAddress);\n    error wrongPercentage(uint256 percentage);\n    error emptyAddresses(uint256 addressLength);\n    error wrongInterval(uint256 updateInterval);\n    error notEnoughAmount(uint256 balanceAmount);\n    error  wrongPerceentage(uint256 percentageNumber);\n    error wrongPercentageAmount(uint256 _totalStakeAmount);\n    error emptyPools(uint256 ownerShipPoolAmount, uint256 treasuryPoolAmount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address initialOwner,\n        address _usdcAddress,\n        address _ownerOne,\n        address _ownerTwo,\n        address _multisigAddress)\n        initializer public\n    {\n        \n        __Ownable_init(initialOwner);\n        __UUPSUpgradeable_init();\n\n        usdcToken = IBEP20(_usdcAddress);\n\n            // tPPercentages[0] = 5100; // 51 %\n            // tPPercentages[1] = 7500; // 75 % \n            // tPPercentages[2] = 3500; // 35 %\n            // tPPercentages[3] = 7700; // 77 %\n            tdividentPayoutPercentage = 5000; // 50 %\n            odividentPayoutPercentage = 7500; // 75 %\n            \n            flowToTreasuryPercentage = 1500; // l5%\n            maintainceFeePercentage = 1000; // 10 % \n\n            // totalProjects = 4;\n            multisigAddress = _multisigAddress;\n            ownerOne = _ownerOne;\n            ownerTwo = _ownerTwo;\n    }\n\n    \n\n     function addProjects(uint256 _tPPercentage) external bothOwner(){\n        \n        if(_tPPercentage <= 0){\n            revert wrongPercentage(_tPPercentage);\n        }\n\n        tPPercentages[totalProjects] = _tPPercentage;\n        totalProjects++;\n\n\n        emit AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage);\n    }\n\n    function addOwnership(uint256 _amount) external bothOwner(){\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        ownerShipPoolAmount += _amount;\n\n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddOwnership(ownerShipPoolAmount);\n    }\n    \n    function addTreasuery(uint256 _amount) external bothOwner(){\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        treasuryPoolAmount += _amount;\n\n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddTreasuery(treasuryPoolAmount);\n    }\n\n    function stakeTokens(uint256 _amount) external  {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n        \n        if(userRegistered[msg.sender].blocked){\n            revert userBlocked(userRegistered[msg.sender].blocked);\n        }\n\n        userRegistered[msg.sender].totalStakedAmount += _amount;\n       \n        if(!alreadyAdded[msg.sender]){\n            \n            totalUsers[noOfUsers] = msg.sender;\n            alreadyAdded[msg.sender] = true;\n            noOfUsers++;\n        }\n\n        totalStakedAmount += _amount;\n\n        bool success =usdcToken.transferFrom(msg.sender,multisigAddress,_amount);\n        \n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit StakeTokens(msg.sender,multisigAddress, _amount);\n\n    }\n\n\n   \n    function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {\n        \n         if(_amount.length <= 0){\n\n            revert emptyAmount(_amount.length);\n        }\n        if(users.length <= 0){\n\n            revert emptyAddresses(users.length);\n        }\n\n        if (users.length != _amount.length) {\n            revert ArrayLengthMismatch();\n        }\n\n        for(uint i=0 ;i < _amount.length; i++){\n\n            userRegistered[users[i]].totalStakedAmount += _amount[i];\n            totalStakedAmount += _amount[i];\n        }\n\n        emit multipleUserAddeed(msg.sender,_amount.length,users.length);\n    }\n\n\n    function reStakeTokens(uint256 _amount) external  {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n       \n        if(userRegistered[msg.sender].blocked){\n            revert userBlocked(userRegistered[msg.sender].blocked);\n        }\n\n        if(userRegistered[msg.sender].receivedAmount <= _amount){\n            revert notEnoughBalance(_amount);\n        }\n\n        userRegistered[msg.sender].receivedAmount -= _amount;\n        userRegistered[msg.sender].totalStakedAmount += _amount;\n        \n        ownerShipPoolAmount += _amount;\n        totalStakedAmount += _amount;\n\n        emit StakeTokens(msg.sender,address(this), _amount);\n\n    }\n\n   \n    function addFunds(uint256 _amount, uint256 _projectNo)   external {\n\n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        if(_projectNo > totalProjects){\n            revert wrongProjectNo(_projectNo);\n        }\n            \n        calculateFees(_amount, tPPercentages[_projectNo]);\n        \n        bool success = usdcToken.transferFrom(msg.sender,address(this),_amount );\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit AddFunds(_amount,_projectNo);\n        \n    }\n\n\n    function calculateFees(uint256 _amount, uint256 _tPPercentage) private {\n       \n        uint256 oPPercentage = 10000 - _tPPercentage;\n        uint256 ownerShipFee = calculatePercentage(_amount, oPPercentage);\n        uint256 treasuryFee = calculatePercentage(_amount, _tPPercentage);\n\n        ownerShipPoolAmount += ownerShipFee;\n        treasuryPoolAmount += treasuryFee;\n    }\n\n\n\n    function weeklyTransfer() public  {\n\n        if(msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo){\n            revert wrongOwner(msg.sender);\n        }\n\n        if(ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0){\n            revert emptyPools(ownerShipPoolAmount,treasuryPoolAmount);\n        }\n        \n        ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation();\n        \n       \n        uint256 maxlimit;\n\n        for(uint256 i = 0; i < noOfUsers; i++){\n\n            if(!userRegistered[totalUsers[i]].blocked){\n\n                uint256 eachSharePercentage = (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount);\n                \n                uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage);\n                ownerShipPoolAmount -= eachSendAmount;\n                        \n                maxlimit += eachSendAmount;\n                treasuryPoolAmount -= perPersonFromTPool;\n\n                userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool;\n                userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount;\n                \n                uint256 totalSendAmount = eachSendAmount + perPersonFromTPool;\n                userRegistered[totalUsers[i]].receivedAmount += totalSendAmount;\n\n                require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\");\n            }\n            \n        }\n\n        emit WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount);\n\n    }\n\n    \n\n    function perPoolCalculation() private returns(uint256, uint256,uint256){\n        \n\n        uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000);\n\n        uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage);\n        uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage);\n        uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage);\n        uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage);\n\n        if(noOfUsers <= 0){\n            revert zeroUsers(noOfUsers);\n        }\n        \n        uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers;\n        \n        ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount);\n        treasuryPoolAmount += fifteenPercenntToTPoolAmount;\n\n        bool success = usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount);\n        if(!success){\n            revert transferFailed(success);\n        }\n\n        return (remainFiftyOPool,dividentPayoutOPoolAmount,perPersonFromTPool);\n    }\n\n    function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {\n         \n        bool needsUpkeep = (block.timestamp - lastTimeStamp) > interval;\n        return (needsUpkeep, bytes(\"\"));\n    }\n    \n\n    function performUpkeep(bytes calldata /*performData*/) external  {\n        \n        require(\n            msg.sender == s_forwarderAddress,\n            \"This address does not have permission to call performUpkeep\"\n        );\n       \n        if (interval == 0){\n            revert wrongInterval(interval);\n        }\n        \n         if(block.timestamp >= startingTime){\n\n            interval = realInterval;\n            lastTimeStamp = block.timestamp;\n            startingTime = block.timestamp + realInterval;\n            weeklyTransfer();\n        }\n        else{\n            revert wrongTime(startingTime);\n        }\n        \n    }\n\n    \n    function setInterval (uint256 _startingTime, uint256 updateInterval) external  bothOwner{\n         \n       if(updateInterval <= 0){\n            revert wrongInterval(updateInterval);\n        }\n        \n        if(_startingTime < block.timestamp){\n            revert wrongTime(_startingTime);\n        }\n\n        interval = _startingTime - block.timestamp;\n        startingTime = _startingTime;\n        lastTimeStamp = block.timestamp;\n        realInterval = updateInterval;\n\n        emit SetInterval(msg.sender, interval, lastTimeStamp);\n\n    }\n\n    function off () external  bothOwner{\n       \n        interval = 0;\n        emit offInterval(msg.sender, interval);\n    }\n\n\n    function setForwarderAddress(address forwarderAddress) external bothOwner {\n        \n        if(forwarderAddress == address(0)){\n            revert wrongAddress(forwarderAddress);\n        }\n        \n        s_forwarderAddress = forwarderAddress;\n\n        emit SetForwarderAddress(msg.sender, s_forwarderAddress);\n    }\n\n    function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {\n        \n        if(_totalStakeAmount <= 0){\n            revert wrongPercentageAmount(_totalStakeAmount);\n        }\n        if(percentageNumber <= 0){\n            revert wrongPerceentage(percentageNumber);\n        }\n       \n        uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000);\n        \n        return serviceFee;\n    }\n    \n\n    function userWithdrawAmoount(uint256 _amount) external nonReentrant {\n        \n        if(_amount <= 0){\n            revert wrongAmount(_amount);\n        }\n\n        if(_amount > userRegistered[msg.sender].receivedAmount){\n            revert notEnoughAmount(userRegistered[msg.sender].receivedAmount);\n        }\n\n        userRegistered[msg.sender].receivedAmount -= _amount;\n        userRegistered[msg.sender].withdrawAmount += _amount;\n       \n        bool success = usdcToken.transfer(msg.sender,_amount);\n       \n        if(!success){\n            revert transferFailed(success);\n        }\n\n        emit Withdraw(msg.sender, _amount);\n    }\n\n    function blockUser(address _userAddress, bool value) external bothOwner {\n        \n        if(_userAddress == address(0)){\n            revert wrongAddress(_userAddress);\n        }\n\n        if(value != true && value != false){\n            revert wrongValue(value);\n        }\n\n        if(value == true){\n\n            userRegistered[_userAddress].blocked = true;\n        }else{\n       \n            userRegistered[_userAddress].blocked = false;\n        }\n        \n        emit UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked);\n    }\n\n\n    \n    function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        tPPercentages[_projectId] = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, tPPercentages[_projectId]);\n    }\n\n    function settdividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        tdividentPayoutPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, tdividentPayoutPercentage);\n\n    }\n    \n    function setodividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        odividentPayoutPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, odividentPayoutPercentage);\n    }\n    \n\n    function setflowToTreasuryPercentage(uint256 _newPerccentage) external bothOwner {\n       \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        flowToTreasuryPercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, flowToTreasuryPercentage);\n    }\n\n    function setmaintainceFeePercentage(uint256 _newPerccentage) external bothOwner {\n        \n        if(_newPerccentage <= 0){\n            revert wrongPercentage(_newPerccentage);\n        }\n        \n        maintainceFeePercentage = _newPerccentage;\n\n        emit PercentageChanged(msg.sender, maintainceFeePercentage);\n    }\n\n    modifier bothOwner(){\n        if(msg.sender != ownerOne && msg.sender != ownerTwo){\n            revert wrongOwner(msg.sender);\n        }\n        _;\n    }\n\n    modifier nonReentrant() {\n        require(!locked, \"ReentrancyGuard: reentrant call\");\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        onlyOwner\n        override\n    {}\n}\n\n// 0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"DripWarrior/poolContract_flattened.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/poolContract_flattened.sol\":15735:21801  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/poolContract_flattened.sol\":15735:21801  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a9522e4f18883ca989c82e7625dd6aea9ec7aaaa63514ebd45ffb6400fc92e364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a9522e4f18883ca989c82e7625dd6aea9ec7aaaa63514ebd45ffb6400fc92e364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE SWAP6 0x22 0xE4 CALL DUP9 DUP4 0xCA SWAP9 SWAP13 DUP3 0xE7 PUSH3 0x5DD6AE 0xA9 0xEC PUSH27 0xAAA63514EBD45FFB6400FC92E364736F6C634300081A0033000000 ",
							"sourceMap": "15735:6066:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;15735:6066:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203a9522e4f18883ca989c82e7625dd6aea9ec7aaaa63514ebd45ffb6400fc92e364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE SWAP6 0x22 0xE4 CALL DUP9 DUP4 0xCA SWAP9 SWAP13 DUP3 0xE7 PUSH3 0x5DD6AE 0xA9 0xEC PUSH27 0xAAA63514EBD45FFB6400FC92E364736F6C634300081A0033000000 ",
							"sourceMap": "15735:6066:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15735,
									"end": 21801,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a9522e4f18883ca989c82e7625dd6aea9ec7aaaa63514ebd45ffb6400fc92e364736f6c634300081a0033",
									".code": [
										{
											"begin": 15735,
											"end": 21801,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15735,
											"end": 21801,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"DripWarrior/poolContract_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				},
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/poolContract_flattened.sol\":26092:32365  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/poolContract_flattened.sol\":26092:32365  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c4fd0562466ac9013c1f6e415ea2123a99705960648eec4c1473b01bdb09de2164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c4fd0562466ac9013c1f6e415ea2123a99705960648eec4c1473b01bdb09de2164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 REVERT SDIV PUSH3 0x466AC9 ADD EXTCODECOPY 0x1F PUSH15 0x415EA2123A99705960648EEC4C1473 0xB0 SHL 0xDB MULMOD 0xDE 0x21 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "26092:6273:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;26092:6273:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c4fd0562466ac9013c1f6e415ea2123a99705960648eec4c1473b01bdb09de2164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 REVERT SDIV PUSH3 0x466AC9 ADD EXTCODECOPY 0x1F PUSH15 0x415EA2123A99705960648EEC4C1473 0xB0 SHL 0xDB MULMOD 0xDE 0x21 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "26092:6273:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 26092,
									"end": 32365,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c4fd0562466ac9013c1f6e415ea2123a99705960648eec4c1473b01bdb09de2164736f6c634300081a0033",
									".code": [
										{
											"begin": 26092,
											"end": 32365,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26092,
											"end": 32365,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"DripWarrior/poolContract_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBEP20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"IBEP20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PoolContrcat": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ArrayLengthMismatch",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "addressLength",
									"type": "uint256"
								}
							],
							"name": "emptyAddresses",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountLength",
									"type": "uint256"
								}
							],
							"name": "emptyAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ownerShipPoolAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "emptyPools",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balanceAmount",
									"type": "uint256"
								}
							],
							"name": "notEnoughAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notEnoughBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "transfered",
									"type": "bool"
								}
							],
							"name": "transferFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								}
							],
							"name": "userBlocked",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wrongAddress",
									"type": "address"
								}
							],
							"name": "wrongAddress",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "wrongAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "wrongInterval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "wrongOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentageNumber",
									"type": "uint256"
								}
							],
							"name": "wrongPerceentage",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "percentage",
									"type": "uint256"
								}
							],
							"name": "wrongPercentage",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_totalStakeAmount",
									"type": "uint256"
								}
							],
							"name": "wrongPercentageAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "projectNO",
									"type": "uint256"
								}
							],
							"name": "wrongProjectNo",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "wrongTime",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "wrongValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "noOfUsers",
									"type": "uint256"
								}
							],
							"name": "zeroUsers",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_projectNo",
									"type": "uint256"
								}
							],
							"name": "AddFunds",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_ownerShipPoolAmount",
									"type": "uint256"
								}
							],
							"name": "AddOwnership",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "projectId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "OpPercentage",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tpPercentage",
									"type": "uint256"
								}
							],
							"name": "AddProject",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "AddTreasuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newPercentage",
									"type": "uint256"
								}
							],
							"name": "PercentageChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_s_forwarderAddress",
									"type": "address"
								}
							],
							"name": "SetForwarderAddress",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interval",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lastTimeStamp",
									"type": "uint256"
								}
							],
							"name": "SetInterval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recepient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "StakeTokens",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "blockUserAddress",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								}
							],
							"name": "UserBlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "caller",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ownerShipPoolAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "treasuryPoolAmount",
									"type": "uint256"
								}
							],
							"name": "WeeklyTransfered",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdcAmount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amountLength",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usersLength",
									"type": "uint256"
								}
							],
							"name": "multipleUserAddeed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_interval",
									"type": "uint256"
								}
							],
							"name": "offInterval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "userAddress",
									"type": "address"
								}
							],
							"name": "singleUserAddeed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_projectNo",
									"type": "uint256"
								}
							],
							"name": "addFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tPPercentage",
									"type": "uint256"
								}
							],
							"name": "addProjects",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "addTreasuery",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "alreadyAdded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_userAddress",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "value",
									"type": "bool"
								}
							],
							"name": "blockUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "flowToTreasuryPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_usdcAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ownerOne",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ownerTwo",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_multisigAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "interval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maintainceFeePercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "multisigAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "noOfUsers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "odividentPayoutPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "off",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerOne",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerShipPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ownerTwo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "reStakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "realInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_forwarderAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarderAddress",
									"type": "address"
								}
							],
							"name": "setForwarderAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_startingTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updateInterval",
									"type": "uint256"
								}
							],
							"name": "setInterval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_projectId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setTeasueryPercentages",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setflowToTreasuryPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setmaintainceFeePercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "setodividentPayoutPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerccentage",
									"type": "uint256"
								}
							],
							"name": "settdividentPayoutPercentage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "_amount",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "users",
									"type": "address[]"
								}
							],
							"name": "stakeTokensByOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startingTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tPPercentages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tdividentPayoutPercentage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalProjects",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStakedAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalUsers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryPoolAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcToken",
							"outputs": [
								{
									"internalType": "contract IBEP20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRegistered",
							"outputs": [
								{
									"internalType": "bool",
									"name": "blocked",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "receivedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "withdrawAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "receiveFromTreasury",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "receiveFromOwneerShip",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalStakedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "userWithdrawAmoount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weeklyTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/poolContract_flattened.sol\":41720:58793  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  mstore(0x40, 0xa0)\n    /* \"DripWarrior/poolContract_flattened.sol\":33362:33366  this */\n  address\n    /* \"DripWarrior/poolContract_flattened.sol\":33319:33367  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"DripWarrior/poolContract_flattened.sol\":45057:45110  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DripWarrior/poolContract_flattened.sol\":45081:45103  _disableInitializers() */\n  tag_4\n    /* \"DripWarrior/poolContract_flattened.sol\":45081:45101  _disableInitializers */\n  tag_5\n    /* \"DripWarrior/poolContract_flattened.sol\":45081:45103  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"DripWarrior/poolContract_flattened.sol\":41720:58793  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  jump(tag_15)\n    /* \"DripWarrior/poolContract_flattened.sol\":7788:8210  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"DripWarrior/poolContract_flattened.sol\":8947:8968  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"DripWarrior/poolContract_flattened.sol\":7977:7992  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"DripWarrior/poolContract_flattened.sol\":7973:8049  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"DripWarrior/poolContract_flattened.sol\":8015:8038  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"DripWarrior/poolContract_flattened.sol\":7973:8049  if ($._initializing) {... */\ntag_10:\n    /* \"DripWarrior/poolContract_flattened.sol\":8062:8076  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"DripWarrior/poolContract_flattened.sol\":8062:8096  $._initialized != type(uint64).max */\n  eq\n    /* \"DripWarrior/poolContract_flattened.sol\":8058:8204  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"DripWarrior/poolContract_flattened.sol\":8112:8145  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"DripWarrior/poolContract_flattened.sol\":8164:8193  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"DripWarrior/poolContract_flattened.sol\":8164:8193  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"DripWarrior/poolContract_flattened.sol\":8164:8193  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"DripWarrior/poolContract_flattened.sol\":8058:8204  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"DripWarrior/poolContract_flattened.sol\":7837:8210  {... */\n  pop\n    /* \"DripWarrior/poolContract_flattened.sol\":7788:8210  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"DripWarrior/poolContract_flattened.sol\":41720:58793  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xcf44e63ed97cae6647795b2d87c131e71c545e7c60486fbc78d35dfb7f2e49dc\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/poolContract_flattened.sol\":41720:58793  contract PoolContrcat is Initializable, OwnableUpgradeable, UUPSUpgradeable, AutomationCompatibleInterface {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7547c7a3\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xad8e5ec4\n      gt\n      tag_52\n      jumpi\n      dup1\n      0xd777cc6d\n      gt\n      tag_53\n      jumpi\n      dup1\n      0xed061067\n      gt\n      tag_54\n      jumpi\n      dup1\n      0xed061067\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xf0664a4f\n      eq\n      tag_48\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xff3d65d9\n      eq\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      0xd777cc6d\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xd9b998b4\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xe9c68e2c\n      eq\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup1\n      0xad8e5ec4\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xb47ff951\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xb9dac1eb\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xbccbc36c\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xc7fd5bf0\n      eq\n      tag_42\n      jumpi\n      dup1\n      0xce356a24\n      eq\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0x85f45250\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x85f45250\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x947a36fb\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x9c361e4e\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xa4f67b8b\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup1\n      0x7547c7a3\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x78fd078d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x7f111e60\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x7f70c5e7\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x7ffe4d93\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x83aa9985\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0x44490ff4\n      gt\n      tag_56\n      jumpi\n      dup1\n      0x567e98f9\n      gt\n      tag_57\n      jumpi\n      dup1\n      0x567e98f9\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x5f17e616\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x6626b26d\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x67976974\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup1\n      0x44490ff4\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x5256dbbf\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5462870d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      dup1\n      0x30cac972\n      gt\n      tag_58\n      jumpi\n      dup1\n      0x30cac972\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x33244c2c\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x34107c87\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x39518b5e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3a71a9e4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f3b3b27\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      dup1\n      0x01934a83\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x11eac855\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1459457a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x188e07b9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2765df7a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3070fbf8\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":42168:42192  uint256 public noOfUsers */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      sload(0x08)\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":42168:42192  uint256 public noOfUsers */\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DripWarrior/poolContract_flattened.sol\":41834:41857  IBEP20 public usdcToken */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      sload(0x00)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_65:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":357:408   */\n      dup2\n      mstore\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":41834:41857  IBEP20 public usdcToken */\n      tag_62\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":45116:46018  function initialize(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"DripWarrior/poolContract_flattened.sol\":41868:41901  uint256 public treasuryPoolAmount */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_60\n      sload(0x01)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":46031:46368  function addProjects(uint256 _tPPercentage) external bothOwner(){... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_70\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":42534:42567  address public s_forwarderAddress */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      sload(0x0e)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42336:42363  uint256 public realInterval */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_60\n      sload(0x0b)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":41986:42026  uint256 public tdividentPayoutPercentage */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_60\n      sload(0x04)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48003:48650  function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_70\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":42416:42443  uint256 public startingTime */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_60\n      sload(0x0c)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42123:42161  uint256 public maintainceFeePercentage */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_60\n      sload(0x07)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42450:42478  uint256 public lastTimeStamp */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_60\n      sload(0x0d)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42032:42072  uint256 public odividentPayoutPercentage */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_60\n      sload(0x05)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":53352:53985  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_70\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":36349:36563  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_16:\n      tag_70\n      tag_123\n      calldatasize\n      0x04\n      tag_124\n      jump\t// in\n    tag_123:\n      tag_125\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":46785:47184  function addTreasuery(uint256 _amount) external bothOwner(){... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_70\n      tag_128\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":35896:36030  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_60\n      tag_132\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":42198:42228  address public multisigAddress */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      sload(0x09)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":41947:41979  uint256 public totalStakedAmount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_139\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_139:\n      pop\n      tag_60\n      sload(0x03)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":53996:54538  function setInterval (uint256 _startingTime, uint256 updateInterval) external  bothOwner{... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_70\n      tag_145\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":54544:54664  function off () external  bothOwner{... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_70\n      tag_150\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":55463:56104  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_70\n      tag_153\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_153:\n      tag_154\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":53106:53341  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      tag_157\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_62\n      swap3\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":13233:13334  function renounceOwnership() public virtual onlyOwner {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_70\n      tag_163\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":47190:47992  function stakeTokens(uint256 _amount) external  {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n      pop\n      tag_70\n      tag_166\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":46374:46775  function addOwnership(uint256 _amount) external bothOwner(){... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      tag_70\n      tag_170\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_170:\n      tag_171\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":58035:58358  function setmaintainceFeePercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_70\n      tag_174\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":57024:57354  function settdividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_70\n      tag_178\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_178:\n      tag_179\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":48657:49335  function reStakeTokens(uint256 _amount) external  {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_70\n      tag_182\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":42603:42626  address public ownerTwo */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      sload(0x10)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":49345:49886  function addFunds(uint256 _amount, uint256 _projectNo)   external {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_188\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_188:\n      pop\n      tag_70\n      tag_190\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_190:\n      tag_191\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":12519:12663  function owner() public view virtual returns (address) {... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":11391:11413  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"DripWarrior/poolContract_flattened.sol\":12648:12656  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":12519:12663  function owner() public view virtual returns (address) {... */\n      jump(tag_65)\n        /* \"DripWarrior/poolContract_flattened.sol\":42260:42283  uint256 public interval */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      tag_60\n      sload(0x0a)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42865:42893  uint256 public totalProjects */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      tag_60\n      sload(0x11)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42949:42994  mapping(uint256 => address) public totalUsers */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      tag_65\n      tag_206\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_206:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":34010:34068  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      tag_210\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_210:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":57704:58029  function setflowToTreasuryPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_214\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_214:\n      pop\n      tag_70\n      tag_216\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_216:\n      tag_217\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":41907:41941  uint256 public ownerShipPoolAmount */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n      pop\n      tag_60\n      sload(0x02)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":57364:57693  function setodividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_222\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_222:\n      pop\n      tag_70\n      tag_224\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_224:\n      tag_225\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":43054:43110  mapping(address => UserRegistered) public userRegistered */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      pop\n      tag_227\n      tag_228\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_228:\n      mstore(0x20, 0x15)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      swap1\n      swap6\n      add\n      sload\n      0xff\n      swap1\n      swap5\n      and\n      swap5\n      swap3\n      swap4\n      swap2\n      swap3\n      swap1\n      swap2\n      dup7\n      jump\n    tag_227:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7289:7303   */\n      swap7\n      iszero\n        /* \"#utility.yul\":7282:7304   */\n      iszero\n        /* \"#utility.yul\":7264:7305   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7336:7338   */\n      0x20\n        /* \"#utility.yul\":7321:7339   */\n      dup8\n      add\n        /* \"#utility.yul\":7314:7348   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":7364:7382   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":7357:7391   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":7422:7424   */\n      0x60\n        /* \"#utility.yul\":7407:7425   */\n      dup5\n      add\n        /* \"#utility.yul\":7400:7434   */\n      mstore\n        /* \"#utility.yul\":7465:7468   */\n      0x80\n        /* \"#utility.yul\":7450:7469   */\n      dup4\n      add\n        /* \"#utility.yul\":7443:7478   */\n      mstore\n        /* \"#utility.yul\":7509:7512   */\n      0xa0\n        /* \"#utility.yul\":7494:7513   */\n      dup3\n      add\n        /* \"#utility.yul\":7487:7522   */\n      mstore\n        /* \"#utility.yul\":7251:7254   */\n      0xc0\n        /* \"#utility.yul\":7236:7255   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":43054:43110  mapping(address => UserRegistered) public userRegistered */\n      tag_62\n        /* \"#utility.yul\":6983:7528   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42899:42943  mapping(address => bool) public alreadyAdded */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      tag_234\n      tag_235\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_235:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_234:\n      mload(0x40)\n        /* \"#utility.yul\":7698:7712   */\n      swap1\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"#utility.yul\":7673:7714   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7661:7663   */\n      0x20\n        /* \"#utility.yul\":7646:7664   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":42899:42943  mapping(address => bool) public alreadyAdded */\n      tag_62\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":42078:42117  uint256 public flowToTreasuryPercentage */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      tag_60\n      sload(0x06)\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":54671:54989  function setForwarderAddress(address forwarderAddress) external bothOwner {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      tag_70\n      tag_245\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_245:\n      tag_246\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":56110:56664  function blockUser(address _userAddress, bool value) external bothOwner {... */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      tag_70\n      tag_249\n      calldatasize\n      0x04\n      tag_250\n      jump\t// in\n    tag_249:\n      tag_251\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":50280:51903  function weeklyTransfer() public  {... */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      tag_70\n      tag_254\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":56676:57018  function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external bothOwner {... */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_255\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_255:\n      pop\n      tag_70\n      tag_257\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_257:\n      tag_258\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":42574:42597  address public ownerOne */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_259\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_259:\n      pop\n      sload(0x0f)\n      tag_65\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":13483:13698  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_263\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_263:\n      pop\n      tag_70\n      tag_265\n      calldatasize\n      0x04\n      tag_229\n      jump\t// in\n    tag_265:\n      tag_266\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":43000:43048  mapping(uint256 => uint256) public tPPercentages */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_267:\n      pop\n      tag_60\n      tag_269\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_269:\n      mstore(0x20, 0x14)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":45116:46018  function initialize(... */\n    tag_73:\n        /* \"DripWarrior/poolContract_flattened.sol\":8947:8968  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"DripWarrior/poolContract_flattened.sol\":4379:4394  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":4378:4394  !$._initializing */\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":4425:4439  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":4235:4265  InitializableStorage storage $ */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":4803:4819  initialized == 0 */\n      dup2\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":4803:4837  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":4823:4837  isTopLevelCall */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":4803:4837  initialized == 0 && isTopLevelCall */\n    tag_275:\n        /* \"DripWarrior/poolContract_flattened.sol\":4783:4837  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":4847:4864  bool construction */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":4867:4878  initialized */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":4867:4883  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":4882:4883  1 */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":4867:4883  initialized == 1 */\n      eq\n        /* \"DripWarrior/poolContract_flattened.sol\":4867:4917  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_276\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":4895:4899  this */\n      address\n        /* \"DripWarrior/poolContract_flattened.sol\":4887:4912  address(this).code.length */\n      extcodesize\n        /* \"DripWarrior/poolContract_flattened.sol\":4887:4917  address(this).code.length == 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":4867:4917  initialized == 1 && address(this).code.length == 0 */\n    tag_276:\n        /* \"DripWarrior/poolContract_flattened.sol\":4847:4917  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":4933:4945  initialSetup */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":4932:4945  !initialSetup */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":4932:4962  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":4950:4962  construction */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":4949:4962  !construction */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":4932:4962  !initialSetup && !construction */\n    tag_277:\n        /* \"DripWarrior/poolContract_flattened.sol\":4928:5019  if (!initialSetup && !construction) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":4985:5008  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":4928:5019  if (!initialSetup && !construction) {... */\n    tag_278:\n        /* \"DripWarrior/poolContract_flattened.sol\":5028:5046  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":5045:5046  1 */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":5028:5046  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":5056:5123  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_279\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":5090:5112  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":5056:5123  if (isTopLevelCall) {... */\n    tag_279:\n        /* \"DripWarrior/poolContract_flattened.sol\":45335:45363  __Ownable_init(initialOwner) */\n      tag_281\n        /* \"DripWarrior/poolContract_flattened.sol\":45350:45362  initialOwner */\n      dup11\n        /* \"DripWarrior/poolContract_flattened.sol\":45335:45349  __Ownable_init */\n      tag_282\n        /* \"DripWarrior/poolContract_flattened.sol\":45335:45363  __Ownable_init(initialOwner) */\n      jump\t// in\n    tag_281:\n        /* \"DripWarrior/poolContract_flattened.sol\":45373:45397  __UUPSUpgradeable_init() */\n      tag_283\n        /* \"DripWarrior/poolContract_flattened.sol\":45373:45395  __UUPSUpgradeable_init */\n      tag_284\n        /* \"DripWarrior/poolContract_flattened.sol\":45373:45397  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_283:\n        /* \"DripWarrior/poolContract_flattened.sol\":45408:45417  usdcToken */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":45408:45440  usdcToken = IBEP20(_usdcAddress) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup13\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45676:45680  5000 */\n      0x1388\n        /* \"DripWarrior/poolContract_flattened.sol\":45648:45673  tdividentPayoutPercentage */\n      0x04\n        /* \"DripWarrior/poolContract_flattened.sol\":45648:45680  tdividentPayoutPercentage = 5000 */\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45730:45734  7500 */\n      0x1d4c\n        /* \"DripWarrior/poolContract_flattened.sol\":45702:45727  odividentPayoutPercentage */\n      0x05\n        /* \"DripWarrior/poolContract_flattened.sol\":45702:45734  odividentPayoutPercentage = 7500 */\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45796:45800  1500 */\n      0x05dc\n        /* \"DripWarrior/poolContract_flattened.sol\":45769:45793  flowToTreasuryPercentage */\n      0x06\n        /* \"DripWarrior/poolContract_flattened.sol\":45769:45800  flowToTreasuryPercentage = 1500 */\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45847:45851  1000 */\n      0x03e8\n        /* \"DripWarrior/poolContract_flattened.sol\":45821:45844  maintainceFeePercentage */\n      0x07\n        /* \"DripWarrior/poolContract_flattened.sol\":45821:45851  maintainceFeePercentage = 1000 */\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45909:45924  multisigAddress */\n      0x09\n        /* \"DripWarrior/poolContract_flattened.sol\":45909:45943  multisigAddress = _multisigAddress */\n      dup1\n      sload\n      dup10\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45957:45965  ownerOne */\n      0x0f\n        /* \"DripWarrior/poolContract_flattened.sol\":45957:45977  ownerOne = _ownerOne */\n      dup1\n      sload\n      dup12\n      dup5\n      and\n      swap1\n      dup4\n      and\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":45991:45999  ownerTwo */\n      0x10\n        /* \"DripWarrior/poolContract_flattened.sol\":45991:46011  ownerTwo = _ownerTwo */\n      dup1\n      sload\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":5143:5244  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_285\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":5177:5200  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":5219:5233  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8321:8371   */\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":5219:5233  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8309:8311   */\n      0x20\n        /* \"#utility.yul\":8294:8312   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":5219:5233  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract_flattened.sol\":5143:5244  if (isTopLevelCall) {... */\n    tag_285:\n        /* \"DripWarrior/poolContract_flattened.sol\":4169:5250  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":45116:46018  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":46031:46368  function addProjects(uint256 _tPPercentage) external bothOwner(){... */\n    tag_82:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_289\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_289:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_290\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_290:\n        /* \"DripWarrior/poolContract_flattened.sol\":46134:46135  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46117:46130  _tPPercentage */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":46117:46135  _tPPercentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":46114:46198  if(_tPPercentage <= 0){... */\n      tag_293\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":46157:46187  wrongPercentage(_tPPercentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":46157:46187  wrongPercentage(_tPPercentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":46114:46198  if(_tPPercentage <= 0){... */\n    tag_293:\n        /* \"DripWarrior/poolContract_flattened.sol\":46222:46235  totalProjects */\n      0x11\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":46208:46236  tPPercentages[totalProjects] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":46208:46221  tPPercentages */\n      0x14\n        /* \"DripWarrior/poolContract_flattened.sol\":46208:46236  tPPercentages[totalProjects] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":46208:46252  tPPercentages[totalProjects] = _tPPercentage */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":46262:46277  totalProjects++ */\n      dup2\n      sload\n      swap2\n        /* \"DripWarrior/poolContract_flattened.sol\":46222:46235  totalProjects */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46262:46277  totalProjects++ */\n      tag_295\n      dup4\n      tag_296\n      jump\t// in\n    tag_295:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":46306:46319  totalProjects */\n      sload(0x11)\n        /* \"DripWarrior/poolContract_flattened.sol\":46294:46361  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n      0xe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46323:46344  10000 - _tPPercentage */\n      tag_297\n        /* \"DripWarrior/poolContract_flattened.sol\":46331:46344  _tPPercentage */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":46323:46328  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract_flattened.sol\":46323:46344  10000 - _tPPercentage */\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"DripWarrior/poolContract_flattened.sol\":46294:46361  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8989:9014   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":9045:9047   */\n      0x20\n        /* \"#utility.yul\":9030:9048   */\n      dup4\n      add\n        /* \"#utility.yul\":9023:9057   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9073:9091   */\n      dup2\n      add\n        /* \"#utility.yul\":9066:9100   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":8977:8979   */\n      0x60\n        /* \"#utility.yul\":8962:8980   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":46294:46361  AddProject((totalProjects), (10000 - _tPPercentage), _tPPercentage) */\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract_flattened.sol\":46031:46368  function addProjects(uint256 _tPPercentage) external bothOwner(){... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":48003:48650  function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {... */\n    tag_100:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_302\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_302:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_303\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_303:\n        /* \"DripWarrior/poolContract_flattened.sol\":48143:48144  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48125:48132  _amount */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":48125:48139  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48125:48144  _amount.length <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":48122:48205  if(_amount.length <= 0){... */\n      tag_306\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":48179:48186  _amount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48179:48193  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48167:48194  emptyAmount(_amount.length) */\n      mload(0x40)\n      shl(0xe2, 0x3ddd5557)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48122:48205  if(_amount.length <= 0){... */\n    tag_306:\n        /* \"DripWarrior/poolContract_flattened.sol\":48233:48234  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48217:48222  users */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48217:48229  users.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48217:48234  users.length <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":48214:48296  if(users.length <= 0){... */\n      tag_308\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":48272:48277  users */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":48272:48284  users.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48257:48285  emptyAddresses(users.length) */\n      mload(0x40)\n      shl(0xe0, 0x3a46e2ab)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48214:48296  if(users.length <= 0){... */\n    tag_308:\n        /* \"DripWarrior/poolContract_flattened.sol\":48326:48333  _amount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48326:48340  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48310:48315  users */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48310:48322  users.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48310:48340  users.length != _amount.length */\n      eq\n        /* \"DripWarrior/poolContract_flattened.sol\":48306:48395  if (users.length != _amount.length) {... */\n      tag_310\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":48363:48384  ArrayLengthMismatch() */\n      mload(0x40)\n      shl(0xe1, 0x512509d3)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":48306:48395  if (users.length != _amount.length) {... */\n    tag_310:\n        /* \"DripWarrior/poolContract_flattened.sol\":48409:48415  uint i */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48405:48570  for(uint i=0 ;i < _amount.length; i++){... */\n    tag_311:\n        /* \"DripWarrior/poolContract_flattened.sol\":48423:48430  _amount */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":48423:48437  _amount.length */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48419:48420  i */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48419:48437  i < _amount.length */\n      lt\n        /* \"DripWarrior/poolContract_flattened.sol\":48405:48570  for(uint i=0 ;i < _amount.length; i++){... */\n      iszero\n      tag_312\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":48504:48511  _amount */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":48512:48513  i */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48504:48514  _amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_316\n      jump\t// in\n    tag_315:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48458:48472  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":48458:48482  userRegistered[users[i]] */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48473:48478  users */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":48479:48480  i */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":48473:48481  users[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_318\n      tag_316\n      jump\t// in\n    tag_318:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":48458:48482  userRegistered[users[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":48458:48500  userRegistered[users[i]].totalStakedAmount */\n      0x05\n      add\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48458:48514  userRegistered[users[i]].totalStakedAmount += _amount[i] */\n      dup3\n      dup3\n      sload\n      tag_319\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_319:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":48549:48556  _amount */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":48557:48558  i */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48549:48559  _amount[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_322\n      jumpi\n      tag_322\n      tag_316\n      jump\t// in\n    tag_322:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48528:48545  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48528:48559  totalStakedAmount += _amount[i] */\n      dup3\n      dup3\n      sload\n      tag_323\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_323:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":48439:48442  i++ */\n      0x01\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":48405:48570  for(uint i=0 ;i < _amount.length; i++){... */\n      jump(tag_311)\n    tag_312:\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":48615:48629  _amount.length */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48630:48642  users.length */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48585:48643  multipleUserAddeed(msg.sender,_amount.length,users.length) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":48604:48614  msg.sender */\n      caller\n        /* \"#utility.yul\":9575:9626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9642:9660   */\n      dup2\n      add\n        /* \"#utility.yul\":9635:9669   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9685:9703   */\n      dup3\n      add\n        /* \"#utility.yul\":9678:9712   */\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":48585:48643  multipleUserAddeed(msg.sender,_amount.length,users.length) */\n      0x472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6\n      swap1\n        /* \"#utility.yul\":9563:9565   */\n      0x60\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":48585:48643  multipleUserAddeed(msg.sender,_amount.length,users.length) */\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract_flattened.sol\":48003:48650  function stakeTokensByOwner(uint256[] memory _amount, address[] memory users) external bothOwner() {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":53352:53985  function performUpkeep(bytes calldata /*performData*/) external  {... */\n    tag_121:\n        /* \"DripWarrior/poolContract_flattened.sol\":53471:53489  s_forwarderAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"DripWarrior/poolContract_flattened.sol\":53457:53467  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":53457:53489  msg.sender == s_forwarderAddress */\n      eq\n        /* \"DripWarrior/poolContract_flattened.sol\":53436:53574  require(... */\n      tag_327\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9925:9927   */\n      0x20\n        /* \"DripWarrior/poolContract_flattened.sol\":53436:53574  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9907:9928   */\n      mstore\n        /* \"#utility.yul\":9964:9966   */\n      0x3b\n        /* \"#utility.yul\":9944:9962   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9937:9967   */\n      mstore\n        /* \"#utility.yul\":10003:10037   */\n      0x54686973206164647265737320646f6573206e6f742068617665207065726d69\n        /* \"#utility.yul\":9983:10001   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9976:10038   */\n      mstore\n        /* \"#utility.yul\":10074:10103   */\n      0x7373696f6e20746f2063616c6c20706572666f726d55706b6565700000000000\n        /* \"#utility.yul\":10054:10072   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10047:10104   */\n      mstore\n        /* \"#utility.yul\":10121:10140   */\n      0x84\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":53436:53574  require(... */\n      tag_291\n        /* \"#utility.yul\":9723:10146   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":53436:53574  require(... */\n    tag_327:\n        /* \"DripWarrior/poolContract_flattened.sol\":53596:53604  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolContract_flattened.sol\":53608:53609  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":53596:53609  interval == 0 */\n      sub\n        /* \"DripWarrior/poolContract_flattened.sol\":53592:53665  if (interval == 0){... */\n      tag_330\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":53645:53653  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolContract_flattened.sol\":53631:53654  wrongInterval(interval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":53592:53665  if (interval == 0){... */\n    tag_330:\n        /* \"DripWarrior/poolContract_flattened.sol\":53706:53718  startingTime */\n      sload(0x0c)\n        /* \"DripWarrior/poolContract_flattened.sol\":53687:53702  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract_flattened.sol\":53687:53718  block.timestamp >= startingTime */\n      lt\n        /* \"DripWarrior/poolContract_flattened.sol\":53684:53970  if(block.timestamp >= startingTime){... */\n      tag_332\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":53745:53757  realInterval */\n      sload(0x0b)\n        /* \"DripWarrior/poolContract_flattened.sol\":53734:53742  interval */\n      0x0a\n        /* \"DripWarrior/poolContract_flattened.sol\":53734:53757  interval = realInterval */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":53787:53802  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract_flattened.sol\":53771:53784  lastTimeStamp */\n      0x0d\n        /* \"DripWarrior/poolContract_flattened.sol\":53771:53802  lastTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":53831:53861  block.timestamp + realInterval */\n      tag_333\n      swap2\n        /* \"DripWarrior/poolContract_flattened.sol\":53745:53757  realInterval */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":53831:53861  block.timestamp + realInterval */\n      tag_320\n      jump\t// in\n    tag_333:\n        /* \"DripWarrior/poolContract_flattened.sol\":53816:53828  startingTime */\n      0x0c\n        /* \"DripWarrior/poolContract_flattened.sol\":53816:53861  startingTime = block.timestamp + realInterval */\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":53875:53891  weeklyTransfer() */\n      tag_334\n        /* \"DripWarrior/poolContract_flattened.sol\":53875:53889  weeklyTransfer */\n      tag_254\n        /* \"DripWarrior/poolContract_flattened.sol\":53875:53891  weeklyTransfer() */\n      jump\t// in\n    tag_334:\n        /* \"DripWarrior/poolContract_flattened.sol\":53352:53985  function performUpkeep(bytes calldata /*performData*/) external  {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":53684:53970  if(block.timestamp >= startingTime){... */\n    tag_332:\n        /* \"DripWarrior/poolContract_flattened.sol\":53946:53958  startingTime */\n      sload(0x0c)\n        /* \"DripWarrior/poolContract_flattened.sol\":53936:53959  wrongTime(startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":36349:36563  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_125:\n        /* \"DripWarrior/poolContract_flattened.sol\":34844:34857  _checkProxy() */\n      tag_338\n        /* \"DripWarrior/poolContract_flattened.sol\":34844:34855  _checkProxy */\n      tag_339\n        /* \"DripWarrior/poolContract_flattened.sol\":34844:34857  _checkProxy() */\n      jump\t// in\n    tag_338:\n        /* \"DripWarrior/poolContract_flattened.sol\":36464:36500  _authorizeUpgrade(newImplementation) */\n      tag_341\n        /* \"DripWarrior/poolContract_flattened.sol\":36482:36499  newImplementation */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":36464:36481  _authorizeUpgrade */\n      tag_342\n        /* \"DripWarrior/poolContract_flattened.sol\":36464:36500  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_341:\n        /* \"DripWarrior/poolContract_flattened.sol\":36510:36556  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_334\n        /* \"DripWarrior/poolContract_flattened.sol\":36532:36549  newImplementation */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":36551:36555  data */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":36510:36531  _upgradeToAndCallUUPS */\n      tag_344\n        /* \"DripWarrior/poolContract_flattened.sol\":36510:36556  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":46785:47184  function addTreasuery(uint256 _amount) external bothOwner(){... */\n    tag_129:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_346\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_346:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_347\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_347:\n        /* \"DripWarrior/poolContract_flattened.sol\":46877:46878  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46866:46873  _amount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":46866:46878  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":46863:46931  if(_amount <= 0){... */\n      tag_350\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":46900:46920  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":46900:46920  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":46863:46931  if(_amount <= 0){... */\n    tag_350:\n        /* \"DripWarrior/poolContract_flattened.sol\":46963:46970  _amount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":46941:46959  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46941:46970  treasuryPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_352\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_352:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":46981:46993  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46996:47005  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":46996:47053  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":46996:47005  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46996:47018  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46996:47053  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_353\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47019:47029  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47038:47042  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47044:47051  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46996:47053  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_353:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_356\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_357\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_357:\n        /* \"DripWarrior/poolContract_flattened.sol\":46981:47053  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":47067:47074  success */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":47063:47130  if(!success){... */\n      tag_359\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":47096:47119  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":47096:47119  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":47096:47119  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":47063:47130  if(!success){... */\n    tag_359:\n        /* \"DripWarrior/poolContract_flattened.sol\":47145:47177  AddTreasuery(treasuryPoolAmount) */\n      0xa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404\n        /* \"DripWarrior/poolContract_flattened.sol\":47158:47176  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":47145:47177  AddTreasuery(treasuryPoolAmount) */\n      mload(0x40)\n      tag_324\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":35896:36030  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_132:\n        /* \"DripWarrior/poolContract_flattened.sol\":35965:35972  bytes32 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":35115:35135  _checkNotDelegated() */\n      tag_363\n        /* \"DripWarrior/poolContract_flattened.sol\":35115:35133  _checkNotDelegated */\n      tag_364\n        /* \"DripWarrior/poolContract_flattened.sol\":35115:35135  _checkNotDelegated() */\n      jump\t// in\n    tag_363:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":35896:36030  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":53996:54538  function setInterval (uint256 _startingTime, uint256 updateInterval) external  bothOwner{... */\n    tag_147:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_367\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_367:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_368\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_368:\n        /* \"DripWarrior/poolContract_flattened.sol\":54124:54125  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":54106:54120  updateInterval */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":54106:54125  updateInterval <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":54103:54187  if(updateInterval <= 0){... */\n      tag_371\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":54147:54176  wrongInterval(updateInterval) */\n      mload(0x40)\n      shl(0xe0, 0x71540007)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":54147:54176  wrongInterval(updateInterval) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":54103:54187  if(updateInterval <= 0){... */\n    tag_371:\n        /* \"DripWarrior/poolContract_flattened.sol\":54224:54239  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract_flattened.sol\":54208:54221  _startingTime */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":54208:54239  _startingTime < block.timestamp */\n      lt\n        /* \"DripWarrior/poolContract_flattened.sol\":54205:54296  if(_startingTime < block.timestamp){... */\n      iszero\n      tag_373\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":54261:54285  wrongTime(_startingTime) */\n      mload(0x40)\n      shl(0xe0, 0x54593e75)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":54261:54285  wrongTime(_startingTime) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":54205:54296  if(_startingTime < block.timestamp){... */\n    tag_373:\n        /* \"DripWarrior/poolContract_flattened.sol\":54317:54348  _startingTime - block.timestamp */\n      tag_375\n        /* \"DripWarrior/poolContract_flattened.sol\":54333:54348  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract_flattened.sol\":54317:54330  _startingTime */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":54317:54348  _startingTime - block.timestamp */\n      tag_298\n      jump\t// in\n    tag_375:\n        /* \"DripWarrior/poolContract_flattened.sol\":54306:54314  interval */\n      0x0a\n        /* \"DripWarrior/poolContract_flattened.sol\":54306:54348  interval = _startingTime - block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54358:54370  startingTime */\n      0x0c\n        /* \"DripWarrior/poolContract_flattened.sol\":54358:54386  startingTime = _startingTime */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54412:54427  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract_flattened.sol\":54396:54409  lastTimeStamp */\n      0x0d\n        /* \"DripWarrior/poolContract_flattened.sol\":54396:54427  lastTimeStamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54437:54449  realInterval */\n      0x0b\n        /* \"DripWarrior/poolContract_flattened.sol\":54437:54466  realInterval = updateInterval */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54482:54530  SetInterval(msg.sender, interval, lastTimeStamp) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":54494:54504  msg.sender */\n      caller\n        /* \"#utility.yul\":9575:9626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9642:9660   */\n      dup2\n      add\n        /* \"#utility.yul\":9635:9669   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9685:9703   */\n      dup3\n      add\n        /* \"#utility.yul\":9678:9712   */\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54482:54530  SetInterval(msg.sender, interval, lastTimeStamp) */\n      0x2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a00\n      swap1\n        /* \"#utility.yul\":9563:9565   */\n      0x60\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":54482:54530  SetInterval(msg.sender, interval, lastTimeStamp) */\n      tag_324\n        /* \"#utility.yul\":9373:9718   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":54544:54664  function off () external  bothOwner{... */\n    tag_150:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_378\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_378:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_379\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_379:\n        /* \"DripWarrior/poolContract_flattened.sol\":54608:54609  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":54597:54605  interval */\n      0x0a\n        /* \"DripWarrior/poolContract_flattened.sol\":54597:54609  interval = 0 */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54624:54657  offInterval(msg.sender, interval) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":54636:54646  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54624:54657  offInterval(msg.sender, interval) */\n      0x3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":54624:54657  offInterval(msg.sender, interval) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract_flattened.sol\":54544:54664  function off () external  bothOwner{... */\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":55463:56104  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n    tag_154:\n        /* \"DripWarrior/poolContract_flattened.sol\":58566:58572  locked */\n      sload(0x09)\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":58565:58572  !locked */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58557:58608  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11258:11260   */\n      0x20\n        /* \"DripWarrior/poolContract_flattened.sol\":58557:58608  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11240:11261   */\n      mstore\n        /* \"#utility.yul\":11297:11299   */\n      0x1f\n        /* \"#utility.yul\":11277:11295   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11270:11300   */\n      mstore\n        /* \"#utility.yul\":11336:11369   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11316:11334   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11309:11370   */\n      mstore\n        /* \"#utility.yul\":11387:11405   */\n      0x64\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58557:58608  require(!locked, \"ReentrancyGuard: reentrant call\") */\n      tag_291\n        /* \"#utility.yul\":11056:11411   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58557:58608  require(!locked, \"ReentrancyGuard: reentrant call\") */\n    tag_385:\n        /* \"DripWarrior/poolContract_flattened.sol\":58618:58624  locked */\n      0x09\n        /* \"DripWarrior/poolContract_flattened.sol\":58618:58631  locked = true */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      shl(0xa0, 0x01)\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55553:55565  _amount <= 0 */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":55550:55618  if(_amount <= 0){... */\n      tag_389\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":55587:55607  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55587:55607  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":55550:55618  if(_amount <= 0){... */\n    tag_389:\n        /* \"DripWarrior/poolContract_flattened.sol\":55656:55666  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":55641:55667  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55641:55655  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":55641:55667  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":55641:55682  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":55631:55682  _amount > userRegistered[msg.sender].receivedAmount */\n      dup2\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":55628:55773  if(_amount > userRegistered[msg.sender].receivedAmount){... */\n      iszero\n      tag_391\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":55735:55745  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":55720:55746  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55720:55734  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":55720:55746  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":55720:55761  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":55704:55762  notEnoughAmount(userRegistered[msg.sender].receivedAmount) */\n      swap1\n      mload\n      shl(0xe0, 0x98e712c3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55704:55762  notEnoughAmount(userRegistered[msg.sender].receivedAmount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":55628:55773  if(_amount > userRegistered[msg.sender].receivedAmount){... */\n    tag_391:\n        /* \"DripWarrior/poolContract_flattened.sol\":55798:55808  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55809  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55797  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55809  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55824  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55835  userRegistered[msg.sender].receivedAmount -= _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":55828:55835  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55809  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55835  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_393\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55828:55835  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55783:55835  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_298\n      jump\t// in\n    tag_393:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":55860:55870  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55871  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55859  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55871  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55886  userRegistered[msg.sender].withdrawAmount */\n      0x02\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55897  userRegistered[msg.sender].withdrawAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":55890:55897  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55871  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55897  userRegistered[msg.sender].withdrawAmount += _amount */\n      tag_394\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55890:55897  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55845:55897  userRegistered[msg.sender].withdrawAmount += _amount */\n      tag_320\n      jump\t// in\n    tag_394:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":55915:55927  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":55930:55939  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":55930:55968  usdcToken.transfer(msg.sender,_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55949:55959  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":55930:55968  usdcToken.transfer(msg.sender,_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10951:11002   */\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":55930:55939  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":55930:55948  usdcToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10924:10942   */\n      0x44\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55930:55968  usdcToken.transfer(msg.sender,_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_398\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_398:\n        /* \"DripWarrior/poolContract_flattened.sol\":55915:55968  bool success = usdcToken.transfer(msg.sender,_amount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":55990:55997  success */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":55986:56053  if(!success){... */\n      tag_399\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":56019:56042  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":56019:56042  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56019:56042  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":55986:56053  if(!success){... */\n    tag_399:\n        /* \"DripWarrior/poolContract_flattened.sol\":56068:56097  Withdraw(msg.sender, _amount) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":56077:56087  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup5\n      swap1\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56068:56097  Withdraw(msg.sender, _amount) */\n      0x884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56068:56097  Withdraw(msg.sender, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58652:58658  locked */\n      0x09\n        /* \"DripWarrior/poolContract_flattened.sol\":58652:58666  locked = false */\n      dup1\n      sload\n      not(shl(0xa0, 0xff))\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":55463:56104  function userWithdrawAmoount(uint256 _amount) external nonReentrant {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":53106:53341  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n    tag_158:\n        /* \"DripWarrior/poolContract_flattened.sol\":53190:53194  bool */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":53196:53208  bytes memory */\n      0x60\n        /* \"DripWarrior/poolContract_flattened.sol\":53230:53246  bool needsUpkeep */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":53285:53293  interval */\n      sload(0x0a)\n        /* \"DripWarrior/poolContract_flattened.sol\":53268:53281  lastTimeStamp */\n      sload(0x0d)\n        /* \"DripWarrior/poolContract_flattened.sol\":53250:53265  block.timestamp */\n      timestamp\n        /* \"DripWarrior/poolContract_flattened.sol\":53250:53281  block.timestamp - lastTimeStamp */\n      tag_403\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_403:\n        /* \"DripWarrior/poolContract_flattened.sol\":53324:53333  bytes(\"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap2\n      lt\n      swap7\n      swap1\n      swap6\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":53106:53341  function checkUpkeep(bytes calldata /*checkData*/) external override view  returns (bool, bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":13233:13334  function renounceOwnership() public virtual onlyOwner {... */\n    tag_163:\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12425  _checkOwner() */\n      tag_405\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12423  _checkOwner */\n      tag_406\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12425  _checkOwner() */\n      jump\t// in\n    tag_405:\n        /* \"DripWarrior/poolContract_flattened.sol\":13297:13327  _transferOwnership(address(0)) */\n      tag_408\n        /* \"DripWarrior/poolContract_flattened.sol\":13324:13325  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":13297:13315  _transferOwnership */\n      tag_409\n        /* \"DripWarrior/poolContract_flattened.sol\":13297:13327  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_408:\n        /* \"DripWarrior/poolContract_flattened.sol\":13233:13334  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":47190:47992  function stakeTokens(uint256 _amount) external  {... */\n    tag_167:\n        /* \"DripWarrior/poolContract_flattened.sol\":47271:47272  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":47260:47267  _amount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":47260:47272  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":47257:47325  if(_amount <= 0){... */\n      tag_411\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":47294:47314  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":47294:47314  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":47257:47325  if(_amount <= 0){... */\n    tag_411:\n        /* \"DripWarrior/poolContract_flattened.sol\":47361:47371  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":47346:47372  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47346:47360  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":47346:47372  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":47346:47380  userRegistered[msg.sender].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":47343:47460  if(userRegistered[msg.sender].blocked){... */\n      iszero\n      tag_413\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":47429:47439  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":47414:47440  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47414:47428  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":47414:47440  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":47414:47448  userRegistered[msg.sender].blocked */\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":47402:47449  userBlocked(userRegistered[msg.sender].blocked) */\n      swap1\n      mload\n      shl(0xe6, 0x01be970f)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47414:47448  userRegistered[msg.sender].blocked */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7698:7712   */\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":47402:47449  userBlocked(userRegistered[msg.sender].blocked) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":47402:47449  userBlocked(userRegistered[msg.sender].blocked) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":47343:47460  if(userRegistered[msg.sender].blocked){... */\n    tag_413:\n        /* \"DripWarrior/poolContract_flattened.sol\":47485:47495  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47496  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47484  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47496  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47514  userRegistered[msg.sender].totalStakedAmount */\n      0x05\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47525  userRegistered[msg.sender].totalStakedAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":47518:47525  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47496  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47525  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_415\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47518:47525  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47470:47525  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_320\n      jump\t// in\n    tag_415:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":47560:47570  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":47547:47571  alreadyAdded[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47547:47559  alreadyAdded */\n      0x12\n        /* \"DripWarrior/poolContract_flattened.sol\":47547:47571  alreadyAdded[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":47543:47714  if(!alreadyAdded[msg.sender]){... */\n      tag_416\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":47610:47619  noOfUsers */\n      0x08\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":47599:47620  totalUsers[noOfUsers] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47599:47609  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract_flattened.sol\":47599:47620  totalUsers[noOfUsers] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":47599:47633  totalUsers[noOfUsers] = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":47623:47633  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":47599:47633  totalUsers[noOfUsers] = msg.sender */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47647:47671  alreadyAdded[msg.sender] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47647:47659  alreadyAdded */\n      0x12\n        /* \"DripWarrior/poolContract_flattened.sol\":47647:47671  alreadyAdded[msg.sender] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":47647:47678  alreadyAdded[msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":47599:47633  totalUsers[noOfUsers] = msg.sender */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":47647:47678  alreadyAdded[msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":47692:47703  noOfUsers++ */\n      dup2\n      sload\n      swap2\n        /* \"DripWarrior/poolContract_flattened.sol\":47610:47619  noOfUsers */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47692:47703  noOfUsers++ */\n      tag_417\n      dup4\n      tag_296\n      jump\t// in\n    tag_417:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":47543:47714  if(!alreadyAdded[msg.sender]){... */\n    tag_416:\n        /* \"DripWarrior/poolContract_flattened.sol\":47745:47752  _amount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":47724:47741  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":47724:47752  totalStakedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_418\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_418:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":47763:47775  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":47777:47786  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":47811:47826  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolContract_flattened.sol\":47777:47835  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":47777:47786  usdcToken */\n      swap3\n      dup4\n      and\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":47777:47799  usdcToken.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":47777:47835  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      tag_419\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":47800:47810  msg.sender */\n      caller\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":47811:47826  multisigAddress */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47827:47834  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47777:47835  usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_419:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_421\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_421:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_422\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_422:\n        /* \"DripWarrior/poolContract_flattened.sol\":47763:47835  bool success =usdcToken.transferFrom(msg.sender,multisigAddress,_amount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":47858:47865  success */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":47854:47921  if(!success){... */\n      tag_423\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":47887:47910  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":47887:47910  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":47887:47910  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":47854:47921  if(!success){... */\n    tag_423:\n        /* \"DripWarrior/poolContract_flattened.sol\":47959:47974  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolContract_flattened.sol\":47936:47984  StakeTokens(msg.sender,multisigAddress, _amount) */\n      mload(0x40)\n      0x14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab\n      swap2\n      tag_324\n      swap2\n        /* \"DripWarrior/poolContract_flattened.sol\":47948:47958  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":47959:47974  multisigAddress */\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47976:47983  _amount */\n      dup7\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":47936:47984  StakeTokens(msg.sender,multisigAddress, _amount) */\n      tag_354\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":46374:46775  function addOwnership(uint256 _amount) external bothOwner(){... */\n    tag_171:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_427\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_427:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_428\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_428:\n        /* \"DripWarrior/poolContract_flattened.sol\":46466:46467  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46455:46462  _amount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":46455:46467  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":46452:46520  if(_amount <= 0){... */\n      tag_431\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":46489:46509  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":46489:46509  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":46452:46520  if(_amount <= 0){... */\n    tag_431:\n        /* \"DripWarrior/poolContract_flattened.sol\":46553:46560  _amount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":46530:46549  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46530:46560  ownerShipPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_433\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_433:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":46571:46583  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":46586:46595  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":46586:46643  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":46586:46595  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46586:46608  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46586:46643  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_434\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46609:46619  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46628:46632  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46634:46641  _amount */\n      dup8\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":46586:46643  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_434:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_436\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_436:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_437\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_437:\n        /* \"DripWarrior/poolContract_flattened.sol\":46571:46643  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":46657:46664  success */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":46653:46720  if(!success){... */\n      tag_438\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":46686:46709  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":46686:46709  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":46686:46709  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":46653:46720  if(!success){... */\n    tag_438:\n        /* \"DripWarrior/poolContract_flattened.sol\":46735:46768  AddOwnership(ownerShipPoolAmount) */\n      0x73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94\n        /* \"DripWarrior/poolContract_flattened.sol\":46748:46767  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract_flattened.sol\":46735:46768  AddOwnership(ownerShipPoolAmount) */\n      mload(0x40)\n      tag_324\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58035:58358  function setmaintainceFeePercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_175:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_442\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_442:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_443\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_443:\n        /* \"DripWarrior/poolContract_flattened.sol\":58156:58157  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":58137:58152  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":58137:58157  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":58134:58222  if(_newPerccentage <= 0){... */\n      tag_446\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58179:58211  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58179:58211  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58134:58222  if(_newPerccentage <= 0){... */\n    tag_446:\n        /* \"DripWarrior/poolContract_flattened.sol\":58240:58263  maintainceFeePercentage */\n      0x07\n        /* \"DripWarrior/poolContract_flattened.sol\":58240:58281  maintainceFeePercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58297:58351  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":58315:58325  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58297:58351  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58297:58351  PercentageChanged(msg.sender, maintainceFeePercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":57024:57354  function settdividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_179:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_450\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_450:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_451\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_451:\n        /* \"DripWarrior/poolContract_flattened.sol\":57147:57148  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":57128:57143  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":57128:57148  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":57125:57213  if(_newPerccentage <= 0){... */\n      tag_454\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":57170:57202  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":57170:57202  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":57125:57213  if(_newPerccentage <= 0){... */\n    tag_454:\n        /* \"DripWarrior/poolContract_flattened.sol\":57231:57256  tdividentPayoutPercentage */\n      0x04\n        /* \"DripWarrior/poolContract_flattened.sol\":57231:57274  tdividentPayoutPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":57290:57346  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":57308:57318  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":57290:57346  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":57290:57346  PercentageChanged(msg.sender, tdividentPayoutPercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48657:49335  function reStakeTokens(uint256 _amount) external  {... */\n    tag_183:\n        /* \"DripWarrior/poolContract_flattened.sol\":48740:48741  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":48729:48736  _amount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":48729:48741  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":48726:48794  if(_amount <= 0){... */\n      tag_458\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":48763:48783  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":48763:48783  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48726:48794  if(_amount <= 0){... */\n    tag_458:\n        /* \"DripWarrior/poolContract_flattened.sol\":48829:48839  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":48814:48840  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":48814:48828  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":48814:48840  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":48814:48848  userRegistered[msg.sender].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":48811:48928  if(userRegistered[msg.sender].blocked){... */\n      iszero\n      tag_460\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":48897:48907  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":48882:48908  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":48882:48896  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":48882:48908  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":48882:48916  userRegistered[msg.sender].blocked */\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":48870:48917  userBlocked(userRegistered[msg.sender].blocked) */\n      swap1\n      mload\n      shl(0xe6, 0x01be970f)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":48882:48916  userRegistered[msg.sender].blocked */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7698:7712   */\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":48870:48917  userBlocked(userRegistered[msg.sender].blocked) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":48870:48917  userBlocked(userRegistered[msg.sender].blocked) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48811:48928  if(userRegistered[msg.sender].blocked){... */\n    tag_460:\n        /* \"DripWarrior/poolContract_flattened.sol\":48956:48966  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":48941:48967  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":48941:48955  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":48941:48967  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":48941:48982  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":48941:48993  userRegistered[msg.sender].receivedAmount <= _amount */\n      dup2\n      lt\n        /* \"DripWarrior/poolContract_flattened.sol\":48938:49051  if(userRegistered[msg.sender].receivedAmount <= _amount){... */\n      tag_462\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":49015:49040  notEnoughBalance(_amount) */\n      mload(0x40)\n      shl(0xe3, 0x0636dc6b)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49015:49040  notEnoughBalance(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":48938:49051  if(userRegistered[msg.sender].receivedAmount <= _amount){... */\n    tag_462:\n        /* \"DripWarrior/poolContract_flattened.sol\":49076:49086  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49087  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49075  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49087  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49102  userRegistered[msg.sender].receivedAmount */\n      0x01\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49113  userRegistered[msg.sender].receivedAmount -= _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":49106:49113  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49087  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49113  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_464\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49106:49113  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49061:49113  userRegistered[msg.sender].receivedAmount -= _amount */\n      tag_298\n      jump\t// in\n    tag_464:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49138:49148  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49149  userRegistered[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49137  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49149  userRegistered[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49167  userRegistered[msg.sender].totalStakedAmount */\n      0x05\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49178  userRegistered[msg.sender].totalStakedAmount += _amount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":49171:49178  _amount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49149  userRegistered[msg.sender] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49178  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_465\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49171:49178  _amount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49123:49178  userRegistered[msg.sender].totalStakedAmount += _amount */\n      tag_320\n      jump\t// in\n    tag_465:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49220:49227  _amount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":49197:49216  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":49197:49227  ownerShipPoolAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_466\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_466:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49258:49265  _amount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":49237:49254  totalStakedAmount */\n      0x03\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":49237:49265  totalStakedAmount += _amount */\n      dup3\n      dup3\n      sload\n      tag_467\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_467:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49281:49327  StakeTokens(msg.sender,address(this), _amount) */\n      mload(0x40)\n      0x14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab\n      swap1\n      tag_299\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49293:49303  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49312:49316  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49319:49326  _amount */\n      dup6\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49281:49327  StakeTokens(msg.sender,address(this), _amount) */\n      tag_354\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":49345:49886  function addFunds(uint256 _amount, uint256 _projectNo)   external {... */\n    tag_191:\n        /* \"DripWarrior/poolContract_flattened.sol\":49436:49437  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":49425:49432  _amount */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":49425:49437  _amount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":49422:49490  if(_amount <= 0){... */\n      tag_470\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":49459:49479  wrongAmount(_amount) */\n      mload(0x40)\n      shl(0xe4, 0x02ff4783)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49459:49479  wrongAmount(_amount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":49422:49490  if(_amount <= 0){... */\n    tag_470:\n        /* \"DripWarrior/poolContract_flattened.sol\":49516:49529  totalProjects */\n      sload(0x11)\n        /* \"DripWarrior/poolContract_flattened.sol\":49503:49513  _projectNo */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":49503:49529  _projectNo > totalProjects */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":49500:49588  if(_projectNo > totalProjects){... */\n      iszero\n      tag_472\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":49551:49577  wrongProjectNo(_projectNo) */\n      mload(0x40)\n      shl(0xe0, 0x222a50f3)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49551:49577  wrongProjectNo(_projectNo) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":49500:49588  if(_projectNo > totalProjects){... */\n    tag_472:\n        /* \"DripWarrior/poolContract_flattened.sol\":49633:49658  tPPercentages[_projectNo] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":49633:49646  tPPercentages */\n      0x14\n        /* \"DripWarrior/poolContract_flattened.sol\":49633:49658  tPPercentages[_projectNo] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":49610:49659  calculateFees(_amount, tPPercentages[_projectNo]) */\n      tag_474\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49624:49631  _amount */\n      dup4\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49610:49623  calculateFees */\n      tag_475\n        /* \"DripWarrior/poolContract_flattened.sol\":49610:49659  calculateFees(_amount, tPPercentages[_projectNo]) */\n      jump\t// in\n    tag_474:\n        /* \"DripWarrior/poolContract_flattened.sol\":49678:49690  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":49693:49702  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":49693:49750  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":49693:49702  usdcToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49693:49715  usdcToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49693:49750  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      tag_476\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49716:49726  msg.sender */\n      caller\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49735:49739  this */\n      address\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49741:49748  _amount */\n      dup9\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":49693:49750  usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      0x04\n      add\n      tag_354\n      jump\t// in\n    tag_476:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_478\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_478:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_479\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_479:\n        /* \"DripWarrior/poolContract_flattened.sol\":49678:49750  bool success = usdcToken.transferFrom(msg.sender,address(this),_amount ) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49764:49771  success */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":49760:49827  if(!success){... */\n      tag_480\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":49793:49816  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":49793:49816  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49793:49816  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":49760:49827  if(!success){... */\n    tag_480:\n        /* \"DripWarrior/poolContract_flattened.sol\":49842:49870  AddFunds(_amount,_projectNo) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":11590:11615   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":11646:11648   */\n      0x20\n        /* \"#utility.yul\":11631:11649   */\n      dup2\n      add\n        /* \"#utility.yul\":11624:11658   */\n      dup5\n      swap1\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":49842:49870  AddFunds(_amount,_projectNo) */\n      0xa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900\n      swap2\n        /* \"#utility.yul\":11563:11581   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":49842:49870  AddFunds(_amount,_projectNo) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract_flattened.sol\":49411:49886  {... */\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49345:49886  function addFunds(uint256 _amount, uint256 _projectNo)   external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":57704:58029  function setflowToTreasuryPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_217:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_488\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_488:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_489\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_489:\n        /* \"DripWarrior/poolContract_flattened.sol\":57825:57826  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":57806:57821  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":57806:57826  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":57803:57891  if(_newPerccentage <= 0){... */\n      tag_492\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":57848:57880  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":57848:57880  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":57803:57891  if(_newPerccentage <= 0){... */\n    tag_492:\n        /* \"DripWarrior/poolContract_flattened.sol\":57909:57933  flowToTreasuryPercentage */\n      0x06\n        /* \"DripWarrior/poolContract_flattened.sol\":57909:57951  flowToTreasuryPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":57967:58022  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":57985:57995  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":57967:58022  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":57967:58022  PercentageChanged(msg.sender, flowToTreasuryPercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":57364:57693  function setodividentPayoutPercentage(uint256 _newPerccentage) external bothOwner {... */\n    tag_225:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_496\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_496:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_497\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_497:\n        /* \"DripWarrior/poolContract_flattened.sol\":57487:57488  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":57468:57483  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":57468:57488  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":57465:57553  if(_newPerccentage <= 0){... */\n      tag_500\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":57510:57542  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":57510:57542  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":57465:57553  if(_newPerccentage <= 0){... */\n    tag_500:\n        /* \"DripWarrior/poolContract_flattened.sol\":57571:57596  odividentPayoutPercentage */\n      0x05\n        /* \"DripWarrior/poolContract_flattened.sol\":57571:57614  odividentPayoutPercentage = _newPerccentage */\n      dup2\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":57630:57686  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":57648:57658  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11033:11035   */\n      0x20\n        /* \"#utility.yul\":11018:11036   */\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":57630:57686  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":57630:57686  PercentageChanged(msg.sender, odividentPayoutPercentage) */\n      tag_299\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":54671:54989  function setForwarderAddress(address forwarderAddress) external bothOwner {... */\n    tag_246:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_504\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_504:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_505\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_505:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":54767:54797  forwarderAddress == address(0) */\n      dup2\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":54764:54860  if(forwarderAddress == address(0)){... */\n      tag_508\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":54819:54849  wrongAddress(forwarderAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe4cfa94d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup3\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":54819:54849  wrongAddress(forwarderAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":54819:54849  wrongAddress(forwarderAddress) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":54764:54860  if(forwarderAddress == address(0)){... */\n    tag_508:\n        /* \"DripWarrior/poolContract_flattened.sol\":54878:54896  s_forwarderAddress */\n      0x0e\n        /* \"DripWarrior/poolContract_flattened.sol\":54878:54915  s_forwarderAddress = forwarderAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54931:54982  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":54951:54961  msg.sender */\n      caller\n        /* \"#utility.yul\":11843:11894   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11925:11927   */\n      0x20\n        /* \"#utility.yul\":11910:11928   */\n      dup2\n      add\n        /* \"#utility.yul\":11903:11963   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":54931:54982  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      0x75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a\n      swap2\n        /* \"#utility.yul\":11816:11834   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":54931:54982  SetForwarderAddress(msg.sender, s_forwarderAddress) */\n      tag_299\n        /* \"#utility.yul\":11669:11969   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":56110:56664  function blockUser(address _userAddress, bool value) external bothOwner {... */\n    tag_251:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_513\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_513:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_514\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_514:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":56204:56230  _userAddress == address(0) */\n      dup3\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":56201:56289  if(_userAddress == address(0)){... */\n      tag_517\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":56252:56278  wrongAddress(_userAddress) */\n      mload(0x40)\n      shl(0xe0, 0xe4cfa94d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup4\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":56252:56278  wrongAddress(_userAddress) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56252:56278  wrongAddress(_userAddress) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":56201:56289  if(_userAddress == address(0)){... */\n    tag_517:\n        /* \"DripWarrior/poolContract_flattened.sol\":56311:56315  true */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":56302:56315  value != true */\n      dup2\n      iszero\n      iszero\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":56302:56333  value != true && value != false */\n      tag_519\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":56319:56333  value != false */\n      dup1\n      iszero\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":56302:56333  value != true && value != false */\n    tag_519:\n        /* \"DripWarrior/poolContract_flattened.sol\":56299:56383  if(value != true && value != false){... */\n      iszero\n      tag_520\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":56355:56372  wrongValue(value) */\n      mload(0x40)\n      shl(0xe0, 0x81ed1ae3)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":56355:56372  wrongValue(value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56355:56372  wrongValue(value) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":56299:56383  if(value != true && value != false){... */\n    tag_520:\n        /* \"DripWarrior/poolContract_flattened.sol\":56396:56409  value == true */\n      dup1\n      iszero\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":56405:56409  true */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":56396:56409  value == true */\n      sub\n        /* \"DripWarrior/poolContract_flattened.sol\":56393:56560  if(value == true){... */\n      tag_522\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":56425:56453  userRegistered[_userAddress] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56425:56439  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":56425:56453  userRegistered[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":56425:56468  userRegistered[_userAddress].blocked = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":56464:56468  true */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":56425:56468  userRegistered[_userAddress].blocked = true */\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56393:56560  if(value == true){... */\n      jump(tag_523)\n    tag_522:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":56505:56533  userRegistered[_userAddress] */\n      dup3\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":56544:56549  false */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":56505:56533  userRegistered[_userAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56505:56519  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":56505:56533  userRegistered[_userAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":56505:56549  userRegistered[_userAddress].blocked = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56393:56560  if(value == true){... */\n    tag_523:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":56620:56648  userRegistered[_userAddress] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56620:56634  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":56620:56648  userRegistered[_userAddress] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":56620:56656  userRegistered[_userAddress].blocked */\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":56583:56657  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      dup3\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":56595:56605  msg.sender */\n      caller\n        /* \"#utility.yul\":12170:12221   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12237:12255   */\n      swap2\n      dup3\n      add\n        /* \"#utility.yul\":12230:12290   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56620:56656  userRegistered[_userAddress].blocked */\n      0xff\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12333:12347   */\n      iszero\n        /* \"#utility.yul\":12326:12348   */\n      iszero\n        /* \"#utility.yul\":12306:12324   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12299:12349   */\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56583:56657  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      0x7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f1\n      swap1\n        /* \"#utility.yul\":12158:12160   */\n      0x60\n        /* \"#utility.yul\":12143:12161   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56583:56657  UserBlocked(msg.sender,_userAddress, userRegistered[_userAddress].blocked) */\n      tag_324\n        /* \"#utility.yul\":11974:12355   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":50280:51903  function weeklyTransfer() public  {... */\n    tag_254:\n        /* \"DripWarrior/poolContract_flattened.sol\":50342:50360  s_forwarderAddress */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0e))\n        /* \"DripWarrior/poolContract_flattened.sol\":50328:50338  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":50328:50360  msg.sender != s_forwarderAddress */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":50328:50386  msg.sender != s_forwarderAddress && msg.sender != ownerOne */\n      tag_527\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50378:50386  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":50364:50374  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":50364:50386  msg.sender != ownerOne */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":50328:50386  msg.sender != s_forwarderAddress && msg.sender != ownerOne */\n    tag_527:\n        /* \"DripWarrior/poolContract_flattened.sol\":50328:50412  msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo */\n      dup1\n      iszero\n      tag_528\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50404:50412  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":50390:50400  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":50390:50412  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":50328:50412  msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_528:\n        /* \"DripWarrior/poolContract_flattened.sol\":50325:50467  if(msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_529\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":50434:50456  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":50445:50455  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":50434:50456  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":50434:50456  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":50325:50467  if(msg.sender != s_forwarderAddress && msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_529:\n        /* \"DripWarrior/poolContract_flattened.sol\":50480:50499  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract_flattened.sol\":50480:50504  ownerShipPoolAmount <= 0 */\n      iszero\n      dup1\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":50480:50531  ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0 */\n      tag_531\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50508:50526  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":50508:50531  treasuryPoolAmount <= 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":50480:50531  ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0 */\n    tag_531:\n        /* \"DripWarrior/poolContract_flattened.sol\":50477:50614  if(ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0){... */\n      iszero\n      tag_532\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":50564:50583  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract_flattened.sol\":50584:50602  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":50553:50603  emptyPools(ownerShipPoolAmount,treasuryPoolAmount) */\n      mload(0x40)\n      shl(0xe0, 0x2fd92d8d)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":11590:11615   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":11631:11649   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11624:11658   */\n      mstore\n        /* \"#utility.yul\":11563:11581   */\n      0x44\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":50553:50603  emptyPools(ownerShipPoolAmount,treasuryPoolAmount) */\n      tag_291\n        /* \"#utility.yul\":11416:11664   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":50477:50614  if(ownerShipPoolAmount <= 0 && treasuryPoolAmount <= 0){... */\n    tag_532:\n        /* \"DripWarrior/poolContract_flattened.sol\":50634:50658  uint256 remainFiftyOPool */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50659:50692  uint256 dividentPayoutOPoolAmount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":50694:50720  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50725:50745  perPoolCalculation() */\n      tag_534\n        /* \"DripWarrior/poolContract_flattened.sol\":50725:50743  perPoolCalculation */\n      tag_535\n        /* \"DripWarrior/poolContract_flattened.sol\":50725:50745  perPoolCalculation() */\n      jump\t// in\n    tag_534:\n        /* \"DripWarrior/poolContract_flattened.sol\":50632:50745  ( uint256 remainFiftyOPool,uint256 dividentPayoutOPoolAmount, uint256 perPersonFromTPool)  = perPoolCalculation() */\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50772:50788  uint256 maxlimit */\n      0x00\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":50799:51811  for(uint256 i = 0; i < noOfUsers; i++){... */\n    tag_536:\n        /* \"DripWarrior/poolContract_flattened.sol\":50822:50831  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract_flattened.sol\":50818:50819  i */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":50818:50831  i < noOfUsers */\n      lt\n        /* \"DripWarrior/poolContract_flattened.sol\":50799:51811  for(uint256 i = 0; i < noOfUsers; i++){... */\n      iszero\n      tag_537\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":50856:50885  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50871:50884  totalUsers[i] */\n      dup2\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":50871:50881  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract_flattened.sol\":50871:50884  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":50856:50885  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":50856:50870  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":50856:50885  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":50856:50893  userRegistered[totalUsers[i]].blocked */\n      sload\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":50852:51788  if(!userRegistered[totalUsers[i]].blocked){... */\n      tag_539\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":51006:51023  totalStakedAmount */\n      sload(0x03)\n        /* \"DripWarrior/poolContract_flattened.sol\":50913:50940  uint256 eachSharePercentage */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50959:50972  totalUsers[i] */\n      dup3\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":50959:50969  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract_flattened.sol\":50959:50972  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":50944:50973  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":50944:50958  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":50944:50973  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":50944:50991  userRegistered[totalUsers[i]].totalStakedAmount */\n      0x05\n      add\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":50913:50940  uint256 eachSharePercentage */\n      swap1\n      swap2\n        /* \"DripWarrior/poolContract_flattened.sol\":51006:51023  totalStakedAmount */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":50944:51001  userRegistered[totalUsers[i]].totalStakedAmount * (10000) */\n      tag_540\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":50995:51000  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract_flattened.sol\":50944:51001  userRegistered[totalUsers[i]].totalStakedAmount * (10000) */\n      tag_541\n      jump\t// in\n    tag_540:\n        /* \"DripWarrior/poolContract_flattened.sol\":50943:51024  (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount) */\n      tag_542\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_542:\n        /* \"DripWarrior/poolContract_flattened.sol\":50913:51024  uint256 eachSharePercentage = (userRegistered[totalUsers[i]].totalStakedAmount * (10000)) / (totalStakedAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51059:51081  uint256 eachSendAmount */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51084:51151  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      tag_544\n        /* \"DripWarrior/poolContract_flattened.sol\":51104:51129  dividentPayoutOPoolAmount */\n      dup7\n        /* \"DripWarrior/poolContract_flattened.sol\":51131:51150  eachSharePercentage */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":51084:51103  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":51084:51151  calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      jump\t// in\n    tag_544:\n        /* \"DripWarrior/poolContract_flattened.sol\":51059:51151  uint256 eachSendAmount = calculatePercentage(dividentPayoutOPoolAmount, eachSharePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51192:51206  eachSendAmount */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":51169:51188  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51169:51206  ownerShipPoolAmount -= eachSendAmount */\n      dup3\n      dup3\n      sload\n      tag_546\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_546:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51249:51275  maxlimit += eachSendAmount */\n      tag_547\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51261:51275  eachSendAmount */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":51249:51275  maxlimit += eachSendAmount */\n      dup6\n      tag_320\n      jump\t// in\n    tag_547:\n      swap4\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51315:51333  perPersonFromTPool */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":51293:51311  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51293:51333  treasuryPoolAmount -= perPersonFromTPool */\n      dup3\n      dup3\n      sload\n      tag_548\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_548:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51381  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51367:51380  totalUsers[i] */\n      dup4\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51367:51377  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract_flattened.sol\":51367:51380  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51381  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51366  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51381  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51401  userRegistered[totalUsers[i]].receiveFromTreasury */\n      0x03\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51423  userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":51405:51423  perPersonFromTPool */\n      dup8\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51381  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51423  userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool */\n      tag_549\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51405:51423  perPersonFromTPool */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51352:51423  userRegistered[totalUsers[i]].receiveFromTreasury += perPersonFromTPool */\n      tag_320\n      jump\t// in\n    tag_549:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51470  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51456:51469  totalUsers[i] */\n      dup4\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51456:51466  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract_flattened.sol\":51456:51469  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51470  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51455  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51470  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51492  userRegistered[totalUsers[i]].receiveFromOwneerShip */\n      0x04\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51510  userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":51496:51510  eachSendAmount */\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51470  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51510  userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount */\n      tag_550\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51496:51510  eachSendAmount */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51441:51510  userRegistered[totalUsers[i]].receiveFromOwneerShip += eachSendAmount */\n      tag_320\n      jump\t// in\n    tag_550:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51545:51568  uint256 totalSendAmount */\n      0x00\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51571:51606  eachSendAmount + perPersonFromTPool */\n      tag_551\n        /* \"DripWarrior/poolContract_flattened.sol\":51588:51606  perPersonFromTPool */\n      dup7\n        /* \"DripWarrior/poolContract_flattened.sol\":51571:51585  eachSendAmount */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":51571:51606  eachSendAmount + perPersonFromTPool */\n      tag_320\n      jump\t// in\n    tag_551:\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51653  userRegistered[totalUsers[i]] */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51639:51652  totalUsers[i] */\n      dup6\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51639:51649  totalUsers */\n      0x13\n        /* \"DripWarrior/poolContract_flattened.sol\":51639:51652  totalUsers[i] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51653  userRegistered[totalUsers[i]] */\n      dup4\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51638  userRegistered */\n      0x15\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51653  userRegistered[totalUsers[i]] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":51639:51652  totalUsers[i] */\n      0x01\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51668  userRegistered[totalUsers[i]].receivedAmount */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51687  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":51545:51606  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      swap3\n      swap4\n      pop\n      dup4\n      swap3\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51668  userRegistered[totalUsers[i]].receivedAmount */\n      swap1\n      swap2\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51653  userRegistered[totalUsers[i]] */\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51687  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      tag_552\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51545:51606  uint256 totalSendAmount = eachSendAmount + perPersonFromTPool */\n      dup5\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":51624:51687  userRegistered[totalUsers[i]].receivedAmount += totalSendAmount */\n      tag_320\n      jump\t// in\n    tag_552:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51714:51742  maxlimit <= remainFiftyOPool */\n      dup8\n      dup6\n      gt\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":51706:51773  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      tag_553\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12957:12959   */\n      0x20\n        /* \"DripWarrior/poolContract_flattened.sol\":51706:51773  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12939:12960   */\n      mstore\n        /* \"#utility.yul\":12996:12998   */\n      0x1a\n        /* \"#utility.yul\":12976:12994   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12969:12999   */\n      mstore\n        /* \"#utility.yul\":13035:13063   */\n      0x416d6f756e742069732067726561746572207468656e20353025000000000000\n        /* \"#utility.yul\":13015:13033   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13008:13064   */\n      mstore\n        /* \"#utility.yul\":13081:13099   */\n      0x64\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":51706:51773  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n      tag_291\n        /* \"#utility.yul\":12755:13105   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":51706:51773  require(maxlimit <= remainFiftyOPool, \"Amount is greater then 50%\") */\n    tag_553:\n        /* \"DripWarrior/poolContract_flattened.sol\":50894:51788  {... */\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50852:51788  if(!userRegistered[totalUsers[i]].blocked){... */\n    tag_539:\n        /* \"DripWarrior/poolContract_flattened.sol\":50833:50836  i++ */\n      0x01\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":50799:51811  for(uint256 i = 0; i < noOfUsers; i++){... */\n      jump(tag_536)\n    tag_537:\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51855:51874  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract_flattened.sol\":51876:51894  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":51826:51895  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      0x40\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":51843:51853  msg.sender */\n      caller\n        /* \"#utility.yul\":9575:9626   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9657:9659   */\n      0x20\n        /* \"#utility.yul\":9642:9660   */\n      dup2\n      add\n        /* \"#utility.yul\":9635:9669   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":9685:9703   */\n      dup3\n      add\n        /* \"#utility.yul\":9678:9712   */\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":51826:51895  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      0xee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e58020\n      swap1\n        /* \"#utility.yul\":9563:9565   */\n      0x60\n        /* \"#utility.yul\":9548:9566   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":51826:51895  WeeklyTransfered(msg.sender, ownerShipPoolAmount, treasuryPoolAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"DripWarrior/poolContract_flattened.sol\":50314:51903  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50280:51903  function weeklyTransfer() public  {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":56676:57018  function setTeasueryPercentages(uint256 _projectId,uint256 _newPerccentage) external bothOwner {... */\n    tag_258:\n        /* \"DripWarrior/poolContract_flattened.sol\":58411:58419  ownerOne */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0f))\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58407  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58419  msg.sender != ownerOne */\n      eq\n      dup1\n      iszero\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n      tag_558\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":58437:58445  ownerTwo */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x10))\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58433  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58423:58445  msg.sender != ownerTwo */\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":58397:58445  msg.sender != ownerOne && msg.sender != ownerTwo */\n    tag_558:\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n      iszero\n      tag_559\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      mload(0x40)\n      shl(0xe3, 0x1ed6f38b)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":58478:58488  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":58467:58489  wrongOwner(msg.sender) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":58394:58500  if(msg.sender != ownerOne && msg.sender != ownerTwo){... */\n    tag_559:\n        /* \"DripWarrior/poolContract_flattened.sol\":56812:56813  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":56793:56808  _newPerccentage */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":56793:56813  _newPerccentage <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":56790:56878  if(_newPerccentage <= 0){... */\n      tag_562\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":56835:56867  wrongPercentage(_newPerccentage) */\n      mload(0x40)\n      shl(0xe0, 0xcdbc6335)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56835:56867  wrongPercentage(_newPerccentage) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":56790:56878  if(_newPerccentage <= 0){... */\n    tag_562:\n        /* \"DripWarrior/poolContract_flattened.sol\":56896:56921  tPPercentages[_projectId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56896:56909  tPPercentages */\n      0x14\n        /* \"DripWarrior/poolContract_flattened.sol\":56896:56921  tPPercentages[_projectId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"DripWarrior/poolContract_flattened.sol\":56896:56939  tPPercentages[_projectId] = _newPerccentage */\n      dup4\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56955:57011  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":56973:56983  msg.sender */\n      caller\n        /* \"#utility.yul\":10951:11002   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup4\n      swap1\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":56955:57011  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      swap2\n        /* \"#utility.yul\":10924:10942   */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":56955:57011  PercentageChanged(msg.sender, tPPercentages[_projectId]) */\n      tag_324\n        /* \"#utility.yul\":10777:11051   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":13483:13698  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_266:\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12425  _checkOwner() */\n      tag_566\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12423  _checkOwner */\n      tag_406\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12425  _checkOwner() */\n      jump\t// in\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":13567:13589  newOwner == address(0) */\n      dup2\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":13563:13654  if (newOwner == address(0)) {... */\n      tag_568\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":13612:13643  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":13640:13641  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":13612:13643  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":13612:13643  OwnableInvalidOwner(address(0)) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":13563:13654  if (newOwner == address(0)) {... */\n    tag_568:\n        /* \"DripWarrior/poolContract_flattened.sol\":13663:13691  _transferOwnership(newOwner) */\n      tag_570\n        /* \"DripWarrior/poolContract_flattened.sol\":13682:13690  newOwner */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":13663:13681  _transferOwnership */\n      tag_409\n        /* \"DripWarrior/poolContract_flattened.sol\":13663:13691  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_570:\n        /* \"DripWarrior/poolContract_flattened.sol\":13483:13698  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":11925:12052  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_282:\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7028  _checkInitializing() */\n      tag_573\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7026  _checkInitializing */\n      tag_574\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7028  _checkInitializing() */\n      jump\t// in\n    tag_573:\n        /* \"DripWarrior/poolContract_flattened.sol\":12007:12045  __Ownable_init_unchained(initialOwner) */\n      tag_570\n        /* \"DripWarrior/poolContract_flattened.sol\":12032:12044  initialOwner */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":12007:12031  __Ownable_init_unchained */\n      tag_577\n        /* \"DripWarrior/poolContract_flattened.sol\":12007:12045  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":35159:35226  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_284:\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7028  _checkInitializing() */\n      tag_408\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7026  _checkInitializing */\n      tag_574\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7028  _checkInitializing() */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":36790:37102  function _checkProxy() internal view virtual {... */\n    tag_339:\n        /* \"DripWarrior/poolContract_flattened.sol\":36870:36874  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":36879:36885  __self */\n      immutable(\"0xcf44e63ed97cae6647795b2d87c131e71c545e7c60486fbc78d35dfb7f2e49dc\")\n        /* \"DripWarrior/poolContract_flattened.sol\":36862:36885  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":36862:36982  address(this) == __self || // Must be called through delegatecall... */\n      tag_582\n      jumpi\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":36976:36982  __self */\n      immutable(\"0xcf44e63ed97cae6647795b2d87c131e71c545e7c60486fbc78d35dfb7f2e49dc\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":36940:36982  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":36940:36972  ERC1967Utils.getImplementation() */\n      tag_583\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":27678:27731  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":27600:27738  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":36940:36972  ERC1967Utils.getImplementation() */\n    tag_583:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":36940:36982  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":36862:36982  address(this) == __self || // Must be called through delegatecall... */\n    tag_582:\n        /* \"DripWarrior/poolContract_flattened.sol\":36845:37096  if (... */\n      iszero\n      tag_408\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":37056:37085  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":58679:58791  function _authorizeUpgrade(address newImplementation)... */\n    tag_342:\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12425  _checkOwner() */\n      tag_570\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12423  _checkOwner */\n      tag_406\n        /* \"DripWarrior/poolContract_flattened.sol\":12412:12425  _checkOwner() */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":38243:38781  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_344:\n        /* \"DripWarrior/poolContract_flattened.sol\":38360:38377  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":38342:38392  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"DripWarrior/poolContract_flattened.sol\":38342:38394  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_590\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_591\n      swap2\n      dup2\n      add\n      swap1\n      tag_592\n      jump\t// in\n    tag_591:\n      0x01\n    tag_590:\n        /* \"DripWarrior/poolContract_flattened.sol\":38338:38775  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_593\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":38704:38764  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup4\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":38704:38764  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":38704:38764  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":38338:38775  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_593:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":38436:38476  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"DripWarrior/poolContract_flattened.sol\":38432:38552  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_599\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":38503:38537  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":38503:38537  UUPSUnsupportedProxiableUUID(slot) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":38432:38552  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_599:\n        /* \"DripWarrior/poolContract_flattened.sol\":38565:38619  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_601\n        /* \"DripWarrior/poolContract_flattened.sol\":38595:38612  newImplementation */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":38614:38618  data */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":38565:38594  ERC1967Utils.upgradeToAndCall */\n      tag_602\n        /* \"DripWarrior/poolContract_flattened.sol\":38565:38619  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_601:\n        /* \"DripWarrior/poolContract_flattened.sol\":38395:38630  returns (bytes32 slot) {... */\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":38243:38781  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":37219:37432  function _checkNotDelegated() internal view virtual {... */\n    tag_364:\n        /* \"DripWarrior/poolContract_flattened.sol\":37293:37297  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":37302:37308  __self */\n      immutable(\"0xcf44e63ed97cae6647795b2d87c131e71c545e7c60486fbc78d35dfb7f2e49dc\")\n        /* \"DripWarrior/poolContract_flattened.sol\":37285:37308  address(this) != __self */\n      and\n      eq\n        /* \"DripWarrior/poolContract_flattened.sol\":37281:37426  if (address(this) != __self) {... */\n      tag_408\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":37386:37415  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":12736:12898  function _checkOwner() internal view virtual {... */\n    tag_406:\n        /* \"DripWarrior/poolContract_flattened.sol\":9935:9945  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":12795:12802  owner() */\n      tag_608\n        /* \"DripWarrior/poolContract_flattened.sol\":11391:11413  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"DripWarrior/poolContract_flattened.sol\":12648:12656  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":12519:12663  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":12795:12802  owner() */\n    tag_608:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":12795:12818  owner() != _msgSender() */\n      and\n      eq\n        /* \"DripWarrior/poolContract_flattened.sol\":12791:12892  if (owner() != _msgSender()) {... */\n      tag_408\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":12841:12881  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":9935:9945  msg.sender */\n      caller\n        /* \"DripWarrior/poolContract_flattened.sol\":12841:12881  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":12841:12881  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":13852:14100  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_409:\n        /* \"DripWarrior/poolContract_flattened.sol\":11391:11413  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"DripWarrior/poolContract_flattened.sol\":14001:14009  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"DripWarrior/poolContract_flattened.sol\":14019:14038  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":14053:14093  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"DripWarrior/poolContract_flattened.sol\":14001:14009  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":14053:14093  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":13925:13949  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":14053:14093  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"DripWarrior/poolContract_flattened.sol\":13915:14100  {... */\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":13852:14100  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":49893:50272  function calculateFees(uint256 _amount, uint256 _tPPercentage) private {... */\n    tag_475:\n        /* \"DripWarrior/poolContract_flattened.sol\":49982:50002  uint256 oPPercentage */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50005:50026  10000 - _tPPercentage */\n      tag_615\n        /* \"DripWarrior/poolContract_flattened.sol\":50013:50026  _tPPercentage */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":50005:50010  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract_flattened.sol\":50005:50026  10000 - _tPPercentage */\n      tag_298\n      jump\t// in\n    tag_615:\n        /* \"DripWarrior/poolContract_flattened.sol\":49982:50026  uint256 oPPercentage = 10000 - _tPPercentage */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50036:50056  uint256 ownerShipFee */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50059:50101  calculatePercentage(_amount, oPPercentage) */\n      tag_616\n        /* \"DripWarrior/poolContract_flattened.sol\":50079:50086  _amount */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":50088:50100  oPPercentage */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":50059:50078  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":50059:50101  calculatePercentage(_amount, oPPercentage) */\n      jump\t// in\n    tag_616:\n        /* \"DripWarrior/poolContract_flattened.sol\":50036:50101  uint256 ownerShipFee = calculatePercentage(_amount, oPPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50111:50130  uint256 treasuryFee */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50133:50176  calculatePercentage(_amount, _tPPercentage) */\n      tag_617\n        /* \"DripWarrior/poolContract_flattened.sol\":50153:50160  _amount */\n      dup6\n        /* \"DripWarrior/poolContract_flattened.sol\":50162:50175  _tPPercentage */\n      dup6\n        /* \"DripWarrior/poolContract_flattened.sol\":50133:50152  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":50133:50176  calculatePercentage(_amount, _tPPercentage) */\n      jump\t// in\n    tag_617:\n        /* \"DripWarrior/poolContract_flattened.sol\":50111:50176  uint256 treasuryFee = calculatePercentage(_amount, _tPPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50210:50222  ownerShipFee */\n      dup2\n        /* \"DripWarrior/poolContract_flattened.sol\":50187:50206  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50187:50222  ownerShipPoolAmount += ownerShipFee */\n      dup3\n      dup3\n      sload\n      tag_618\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_618:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":50254:50265  treasuryFee */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":50232:50250  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":50232:50265  treasuryPoolAmount += treasuryFee */\n      dup3\n      dup3\n      sload\n      tag_619\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_619:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":49893:50272  function calculateFees(uint256 _amount, uint256 _tPPercentage) private {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":51915:53100  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n    tag_535:\n        /* \"DripWarrior/poolContract_flattened.sol\":51961:51968  uint256 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":51970:51977  uint256 */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":51978:51985  uint256 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52006:52030  uint256 remainFiftyOPool */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":52033:52079  calculatePercentage(ownerShipPoolAmount, 5000) */\n      tag_622\n        /* \"DripWarrior/poolContract_flattened.sol\":52053:52072  ownerShipPoolAmount */\n      sload(0x02)\n        /* \"DripWarrior/poolContract_flattened.sol\":52074:52078  5000 */\n      0x1388\n        /* \"DripWarrior/poolContract_flattened.sol\":52033:52052  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":52033:52079  calculatePercentage(ownerShipPoolAmount, 5000) */\n      jump\t// in\n    tag_622:\n        /* \"DripWarrior/poolContract_flattened.sol\":52006:52079  uint256 remainFiftyOPool = calculatePercentage(ownerShipPoolAmount, 5000) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52090:52123  uint256 dividentPayoutOPoolAmount */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52126:52190  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      tag_623\n        /* \"DripWarrior/poolContract_flattened.sol\":52146:52162  remainFiftyOPool */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":52164:52189  odividentPayoutPercentage */\n      sload(0x05)\n        /* \"DripWarrior/poolContract_flattened.sol\":52126:52145  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":52126:52190  calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      jump\t// in\n    tag_623:\n        /* \"DripWarrior/poolContract_flattened.sol\":52090:52190  uint256 dividentPayoutOPoolAmount = calculatePercentage(remainFiftyOPool, odividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52200:52236  uint256 fifteenPercenntToTPoolAmount */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52239:52302  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      tag_624\n        /* \"DripWarrior/poolContract_flattened.sol\":52259:52275  remainFiftyOPool */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":52277:52301  flowToTreasuryPercentage */\n      sload(0x06)\n        /* \"DripWarrior/poolContract_flattened.sol\":52239:52258  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":52239:52302  calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      jump\t// in\n    tag_624:\n        /* \"DripWarrior/poolContract_flattened.sol\":52200:52302  uint256 fifteenPercenntToTPoolAmount = calculatePercentage(remainFiftyOPool, flowToTreasuryPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52312:52348  uint256 tenPercenntToMaintenceAmount */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52351:52413  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      tag_625\n        /* \"DripWarrior/poolContract_flattened.sol\":52371:52387  remainFiftyOPool */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":52389:52412  maintainceFeePercentage */\n      sload(0x07)\n        /* \"DripWarrior/poolContract_flattened.sol\":52351:52370  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":52351:52413  calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      jump\t// in\n    tag_625:\n        /* \"DripWarrior/poolContract_flattened.sol\":52312:52413  uint256 tenPercenntToMaintenceAmount = calculatePercentage(remainFiftyOPool, maintainceFeePercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52423:52453  uint256 remainFiftyTPoolAmount */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52456:52522  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      tag_626\n        /* \"DripWarrior/poolContract_flattened.sol\":52476:52494  treasuryPoolAmount */\n      sload(0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":52496:52521  tdividentPayoutPercentage */\n      sload(0x04)\n        /* \"DripWarrior/poolContract_flattened.sol\":52456:52475  calculatePercentage */\n      tag_545\n        /* \"DripWarrior/poolContract_flattened.sol\":52456:52522  calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      jump\t// in\n    tag_626:\n        /* \"DripWarrior/poolContract_flattened.sol\":52423:52522  uint256 remainFiftyTPoolAmount = calculatePercentage(treasuryPoolAmount, tdividentPayoutPercentage) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52549:52550  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52536:52545  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract_flattened.sol\":52536:52550  noOfUsers <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":52533:52603  if(noOfUsers <= 0){... */\n      tag_627\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":52582:52591  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract_flattened.sol\":52572:52592  zeroUsers(noOfUsers) */\n      mload(0x40)\n      shl(0xe0, 0x7ca8d0db)\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap2\n        /* \"#utility.yul\":160:185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":52533:52603  if(noOfUsers <= 0){... */\n    tag_627:\n        /* \"DripWarrior/poolContract_flattened.sol\":52621:52647  uint256 perPersonFromTPool */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52673:52682  noOfUsers */\n      sload(0x08)\n        /* \"DripWarrior/poolContract_flattened.sol\":52650:52672  remainFiftyTPoolAmount */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":52650:52682  remainFiftyTPoolAmount/noOfUsers */\n      tag_629\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_629:\n        /* \"DripWarrior/poolContract_flattened.sol\":52621:52682  uint256 perPersonFromTPool = remainFiftyTPoolAmount/noOfUsers */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52725:52784  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_630\n        /* \"DripWarrior/poolContract_flattened.sol\":52756:52784  tenPercenntToMaintenceAmount */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":52725:52753  fifteenPercenntToTPoolAmount */\n      dup6\n        /* \"DripWarrior/poolContract_flattened.sol\":52725:52784  fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount */\n      tag_320\n      jump\t// in\n    tag_630:\n        /* \"DripWarrior/poolContract_flattened.sol\":52701:52720  ownerShipPoolAmount */\n      0x02\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52701:52785  ownerShipPoolAmount -= (fifteenPercenntToTPoolAmount + tenPercenntToMaintenceAmount) */\n      dup3\n      dup3\n      sload\n      tag_631\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_631:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52817:52845  fifteenPercenntToTPoolAmount */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":52795:52813  treasuryPoolAmount */\n      0x01\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52795:52845  treasuryPoolAmount += fifteenPercenntToTPoolAmount */\n      dup3\n      dup3\n      sload\n      tag_632\n      swap2\n      swap1\n      tag_320\n      jump\t// in\n    tag_632:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52856:52868  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":52871:52880  usdcToken */\n      dup1\n      sload\n        /* \"DripWarrior/poolContract_flattened.sol\":52890:52905  multisigAddress */\n      sload(0x09)\n        /* \"DripWarrior/poolContract_flattened.sol\":52871:52936  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":52890:52905  multisigAddress */\n      swap2\n      dup3\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":52871:52936  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10951:11002   */\n      mstore\n        /* \"#utility.yul\":11018:11036   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":11011:11045   */\n      dup8\n      swap1\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":52871:52880  usdcToken */\n      swap2\n      and\n      swap1\n        /* \"DripWarrior/poolContract_flattened.sol\":52871:52889  usdcToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":10924:10942   */\n      0x44\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":52871:52936  usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_635\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_635:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_636\n      swap2\n      swap1\n      tag_358\n      jump\t// in\n    tag_636:\n        /* \"DripWarrior/poolContract_flattened.sol\":52856:52936  bool success = usdcToken.transfer(multisigAddress, tenPercenntToMaintenceAmount) */\n      swap1\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":52950:52957  success */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":52946:53013  if(!success){... */\n      tag_637\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":52979:53002  transferFailed(success) */\n      mload(0x40)\n      shl(0xe0, 0xd85d3cef)\n      dup2\n      mstore\n        /* \"#utility.yul\":7698:7712   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7691:7713   */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":52979:53002  transferFailed(success) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7673:7714   */\n      mstore\n        /* \"#utility.yul\":7646:7664   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":52979:53002  transferFailed(success) */\n      tag_291\n        /* \"#utility.yul\":7533:7720   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":52946:53013  if(!success){... */\n    tag_637:\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":53031:53047  remainFiftyOPool */\n      swap5\n      swap9\n        /* \"DripWarrior/poolContract_flattened.sol\":53048:53073  dividentPayoutOPoolAmount */\n      swap4\n      swap8\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":53074:53092  perPersonFromTPool */\n      swap4\n      swap6\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":51915:53100  function perPoolCalculation() private returns(uint256, uint256,uint256){... */\n      swap2\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":54995:55452  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_545:\n        /* \"DripWarrior/poolContract_flattened.sol\":55097:55104  uint256 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":55149:55150  0 */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":55128:55145  _totalStakeAmount */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":55128:55150  _totalStakeAmount <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":55125:55223  if(_totalStakeAmount <= 0){... */\n      tag_640\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":55172:55212  wrongPercentageAmount(_totalStakeAmount) */\n      mload(0x40)\n      shl(0xe0, 0x9b7220af)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55172:55212  wrongPercentageAmount(_totalStakeAmount) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":55125:55223  if(_totalStakeAmount <= 0){... */\n    tag_640:\n        /* \"DripWarrior/poolContract_flattened.sol\":55255:55256  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":55235:55251  percentageNumber */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":55235:55256  percentageNumber <= 0 */\n      gt\n        /* \"DripWarrior/poolContract_flattened.sol\":55232:55323  if(percentageNumber <= 0){... */\n      tag_642\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":55278:55312  wrongPerceentage(percentageNumber) */\n      mload(0x40)\n      shl(0xe3, 0x0b015aa7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":55278:55312  wrongPerceentage(percentageNumber) */\n      tag_291\n        /* \"#utility.yul\":14:191   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":55232:55323  if(percentageNumber <= 0){... */\n    tag_642:\n        /* \"DripWarrior/poolContract_flattened.sol\":55340:55358  uint256 serviceFee */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":55403:55408  10000 */\n      0x2710\n        /* \"DripWarrior/poolContract_flattened.sol\":55361:55399  _totalStakeAmount * (percentageNumber) */\n      tag_644\n        /* \"DripWarrior/poolContract_flattened.sol\":55382:55398  percentageNumber */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":55361:55378  _totalStakeAmount */\n      dup7\n        /* \"DripWarrior/poolContract_flattened.sol\":55361:55399  _totalStakeAmount * (percentageNumber) */\n      tag_541\n      jump\t// in\n    tag_644:\n        /* \"DripWarrior/poolContract_flattened.sol\":55361:55409  _totalStakeAmount * (percentageNumber) / (10000) */\n      tag_645\n      swap2\n      swap1\n      tag_543\n      jump\t// in\n    tag_645:\n        /* \"DripWarrior/poolContract_flattened.sol\":55340:55409  uint256 serviceFee = _totalStakeAmount * (percentageNumber) / (10000) */\n      swap2\n      pop\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":54995:55452  function calculatePercentage(uint256 _totalStakeAmount,uint256 percentageNumber) private pure returns(uint256) {... */\n    tag_639:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":7161:7302  function _checkInitializing() internal view virtual {... */\n    tag_574:\n        /* \"DripWarrior/poolContract_flattened.sol\":8947:8968  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"DripWarrior/poolContract_flattened.sol\":8637:8677  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":7223:7296  if (!_isInitializing()) {... */\n      tag_408\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":7268:7285  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":12058:12293  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_577:\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7028  _checkInitializing() */\n      tag_566\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7026  _checkInitializing */\n      tag_574\n        /* \"DripWarrior/poolContract_flattened.sol\":7008:7028  _checkInitializing() */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":28422:28757  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_602:\n        /* \"DripWarrior/poolContract_flattened.sol\":28513:28550  _setImplementation(newImplementation) */\n      tag_660\n        /* \"DripWarrior/poolContract_flattened.sol\":28532:28549  newImplementation */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":28513:28531  _setImplementation */\n      tag_661\n        /* \"DripWarrior/poolContract_flattened.sol\":28513:28550  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_660:\n        /* \"DripWarrior/poolContract_flattened.sol\":28565:28592  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"DripWarrior/poolContract_flattened.sol\":28607:28618  data.length */\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":28607:28622  data.length > 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":28603:28751  if (data.length > 0) {... */\n      tag_662\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":28638:28691  Address.functionDelegateCall(newImplementation, data) */\n      tag_601\n        /* \"DripWarrior/poolContract_flattened.sol\":28667:28684  newImplementation */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":28686:28690  data */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":28638:28666  Address.functionDelegateCall */\n      tag_664\n        /* \"DripWarrior/poolContract_flattened.sol\":28638:28691  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":28603:28751  if (data.length > 0) {... */\n    tag_662:\n        /* \"DripWarrior/poolContract_flattened.sol\":28722:28740  _checkNonPayable() */\n      tag_334\n        /* \"DripWarrior/poolContract_flattened.sol\":28722:28738  _checkNonPayable */\n      tag_667\n        /* \"DripWarrior/poolContract_flattened.sol\":28722:28740  _checkNonPayable() */\n      jump\t// in\n        /* \"DripWarrior/poolContract_flattened.sol\":27829:28110  function _setImplementation(address newImplementation) private {... */\n    tag_661:\n        /* \"DripWarrior/poolContract_flattened.sol\":27906:27923  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":27906:27935  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"DripWarrior/poolContract_flattened.sol\":27939:27940  0 */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":27906:27940  newImplementation.code.length == 0 */\n      sub\n        /* \"DripWarrior/poolContract_flattened.sol\":27902:28021  if (newImplementation.code.length == 0) {... */\n      tag_673\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":27963:28010  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup3\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":27963:28010  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":27963:28010  ERC1967InvalidImplementation(newImplementation) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":27902:28021  if (newImplementation.code.length == 0) {... */\n    tag_673:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"DripWarrior/poolContract_flattened.sol\":28030:28103  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"DripWarrior/poolContract_flattened.sol\":27829:28110  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":19646:19899  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_664:\n        /* \"DripWarrior/poolContract_flattened.sol\":19729:19741  bytes memory */\n      0x60\n        /* \"DripWarrior/poolContract_flattened.sol\":19754:19766  bool success */\n      0x00\n        /* \"DripWarrior/poolContract_flattened.sol\":19768:19791  bytes memory returndata */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":19795:19801  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":19795:19814  target.delegatecall */\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":19815:19819  data */\n      dup5\n        /* \"DripWarrior/poolContract_flattened.sol\":19795:19820  target.delegatecall(data) */\n      mload(0x40)\n      tag_677\n      swap2\n      swap1\n      tag_678\n      jump\t// in\n    tag_677:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_681\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_680)\n    tag_681:\n      0x60\n      swap2\n      pop\n    tag_680:\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":19753:19820  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":19837:19892  verifyCallResultFromTarget(target, success, returndata) */\n      tag_682\n        /* \"DripWarrior/poolContract_flattened.sol\":19864:19870  target */\n      dup6\n        /* \"DripWarrior/poolContract_flattened.sol\":19872:19879  success */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":19881:19891  returndata */\n      dup4\n        /* \"DripWarrior/poolContract_flattened.sol\":19837:19863  verifyCallResultFromTarget */\n      tag_683\n        /* \"DripWarrior/poolContract_flattened.sol\":19837:19892  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_682:\n        /* \"DripWarrior/poolContract_flattened.sol\":19830:19892  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"DripWarrior/poolContract_flattened.sol\":19646:19899  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":32241:32363  function _checkNonPayable() private {... */\n    tag_667:\n        /* \"DripWarrior/poolContract_flattened.sol\":32291:32300  msg.value */\n      callvalue\n        /* \"DripWarrior/poolContract_flattened.sol\":32291:32304  msg.value > 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":32287:32357  if (msg.value > 0) {... */\n      tag_408\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":32327:32346  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":20165:20747  function verifyCallResultFromTarget(... */\n    tag_683:\n        /* \"DripWarrior/poolContract_flattened.sol\":20309:20321  bytes memory */\n      0x60\n        /* \"DripWarrior/poolContract_flattened.sol\":20338:20345  success */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":20333:20741  if (!success) {... */\n      tag_687\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":20361:20380  _revert(returndata) */\n      tag_688\n        /* \"DripWarrior/poolContract_flattened.sol\":20369:20379  returndata */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":20361:20368  _revert */\n      tag_689\n        /* \"DripWarrior/poolContract_flattened.sol\":20361:20380  _revert(returndata) */\n      jump\t// in\n    tag_688:\n        /* \"DripWarrior/poolContract_flattened.sol\":20333:20741  if (!success) {... */\n      jump(tag_690)\n    tag_687:\n        /* \"DripWarrior/poolContract_flattened.sol\":20585:20602  returndata.length */\n      dup2\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":20585:20607  returndata.length == 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":20585:20634  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_691\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DripWarrior/poolContract_flattened.sol\":20611:20629  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"DripWarrior/poolContract_flattened.sol\":20611:20634  target.code.length == 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":20585:20634  returndata.length == 0 && target.code.length == 0 */\n    tag_691:\n        /* \"DripWarrior/poolContract_flattened.sol\":20581:20700  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_692\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":20661:20685  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":375:407   */\n      dup6\n      and\n        /* \"DripWarrior/poolContract_flattened.sol\":20661:20685  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":357:408   */\n      mstore\n        /* \"#utility.yul\":330:348   */\n      0x24\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":20661:20685  AddressEmptyCode(target) */\n      tag_291\n        /* \"#utility.yul\":196:414   */\n      jump\n        /* \"DripWarrior/poolContract_flattened.sol\":20581:20700  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_692:\n      pop\n        /* \"DripWarrior/poolContract_flattened.sol\":20720:20730  returndata */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":20333:20741  if (!success) {... */\n    tag_690:\n        /* \"DripWarrior/poolContract_flattened.sol\":20165:20747  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DripWarrior/poolContract_flattened.sol\":21283:21799  function _revert(bytes memory returndata) private pure {... */\n    tag_689:\n        /* \"DripWarrior/poolContract_flattened.sol\":21414:21431  returndata.length */\n      dup1\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":21414:21435  returndata.length > 0 */\n      iszero\n        /* \"DripWarrior/poolContract_flattened.sol\":21410:21793  if (returndata.length > 0) {... */\n      tag_695\n      jumpi\n        /* \"DripWarrior/poolContract_flattened.sol\":21642:21652  returndata */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":21636:21653  mload(returndata) */\n      mload\n        /* \"DripWarrior/poolContract_flattened.sol\":21698:21713  returndata_size */\n      dup1\n        /* \"DripWarrior/poolContract_flattened.sol\":21685:21695  returndata */\n      dup3\n        /* \"DripWarrior/poolContract_flattened.sol\":21681:21683  32 */\n      0x20\n        /* \"DripWarrior/poolContract_flattened.sol\":21677:21696  add(32, returndata) */\n      add\n        /* \"DripWarrior/poolContract_flattened.sol\":21670:21714  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"DripWarrior/poolContract_flattened.sol\":21410:21793  if (returndata.length > 0) {... */\n    tag_695:\n        /* \"DripWarrior/poolContract_flattened.sol\":21765:21782  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":419:592   */\n    tag_697:\n        /* \"#utility.yul\":487:507   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":536:567   */\n      dup2\n      and\n        /* \"#utility.yul\":526:568   */\n      dup2\n      eq\n        /* \"#utility.yul\":516:586   */\n      tag_709\n      jumpi\n        /* \"#utility.yul\":582:583   */\n      0x00\n        /* \"#utility.yul\":579:580   */\n      dup1\n        /* \"#utility.yul\":572:584   */\n      revert\n        /* \"#utility.yul\":516:586   */\n    tag_709:\n        /* \"#utility.yul\":419:592   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":597:1081   */\n    tag_72:\n        /* \"#utility.yul\":692:698   */\n      0x00\n        /* \"#utility.yul\":700:706   */\n      dup1\n        /* \"#utility.yul\":708:714   */\n      0x00\n        /* \"#utility.yul\":716:722   */\n      dup1\n        /* \"#utility.yul\":724:730   */\n      0x00\n        /* \"#utility.yul\":777:780   */\n      0xa0\n        /* \"#utility.yul\":765:774   */\n      dup7\n        /* \"#utility.yul\":756:763   */\n      dup9\n        /* \"#utility.yul\":752:775   */\n      sub\n        /* \"#utility.yul\":748:781   */\n      slt\n        /* \"#utility.yul\":745:798   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":794:795   */\n      0x00\n        /* \"#utility.yul\":791:792   */\n      dup1\n        /* \"#utility.yul\":784:796   */\n      revert\n        /* \"#utility.yul\":745:798   */\n    tag_711:\n        /* \"#utility.yul\":817:846   */\n      tag_712\n        /* \"#utility.yul\":836:845   */\n      dup7\n        /* \"#utility.yul\":817:846   */\n      tag_697\n      jump\t// in\n    tag_712:\n        /* \"#utility.yul\":807:846   */\n      swap5\n      pop\n        /* \"#utility.yul\":865:903   */\n      tag_713\n        /* \"#utility.yul\":899:901   */\n      0x20\n        /* \"#utility.yul\":888:897   */\n      dup8\n        /* \"#utility.yul\":884:902   */\n      add\n        /* \"#utility.yul\":865:903   */\n      tag_697\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":855:903   */\n      swap4\n      pop\n        /* \"#utility.yul\":922:960   */\n      tag_714\n        /* \"#utility.yul\":956:958   */\n      0x40\n        /* \"#utility.yul\":945:954   */\n      dup8\n        /* \"#utility.yul\":941:959   */\n      add\n        /* \"#utility.yul\":922:960   */\n      tag_697\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":912:960   */\n      swap3\n      pop\n        /* \"#utility.yul\":979:1017   */\n      tag_715\n        /* \"#utility.yul\":1013:1015   */\n      0x60\n        /* \"#utility.yul\":1002:1011   */\n      dup8\n        /* \"#utility.yul\":998:1016   */\n      add\n        /* \"#utility.yul\":979:1017   */\n      tag_697\n      jump\t// in\n    tag_715:\n        /* \"#utility.yul\":969:1017   */\n      swap2\n      pop\n        /* \"#utility.yul\":1036:1075   */\n      tag_716\n        /* \"#utility.yul\":1070:1073   */\n      0x80\n        /* \"#utility.yul\":1059:1068   */\n      dup8\n        /* \"#utility.yul\":1055:1074   */\n      add\n        /* \"#utility.yul\":1036:1075   */\n      tag_697\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":1026:1075   */\n      swap1\n      pop\n        /* \"#utility.yul\":597:1081   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1086:1312   */\n    tag_81:\n        /* \"#utility.yul\":1145:1151   */\n      0x00\n        /* \"#utility.yul\":1198:1200   */\n      0x20\n        /* \"#utility.yul\":1186:1195   */\n      dup3\n        /* \"#utility.yul\":1177:1184   */\n      dup5\n        /* \"#utility.yul\":1173:1196   */\n      sub\n        /* \"#utility.yul\":1169:1201   */\n      slt\n        /* \"#utility.yul\":1166:1218   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":1214:1215   */\n      0x00\n        /* \"#utility.yul\":1211:1212   */\n      dup1\n        /* \"#utility.yul\":1204:1216   */\n      revert\n        /* \"#utility.yul\":1166:1218   */\n    tag_718:\n      pop\n        /* \"#utility.yul\":1259:1282   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1086:1312   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1525:1652   */\n    tag_698:\n        /* \"#utility.yul\":1586:1596   */\n      0x4e487b71\n        /* \"#utility.yul\":1581:1584   */\n      0xe0\n        /* \"#utility.yul\":1577:1597   */\n      shl\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1567:1598   */\n      mstore\n        /* \"#utility.yul\":1617:1621   */\n      0x41\n        /* \"#utility.yul\":1614:1615   */\n      0x04\n        /* \"#utility.yul\":1607:1622   */\n      mstore\n        /* \"#utility.yul\":1641:1645   */\n      0x24\n        /* \"#utility.yul\":1638:1639   */\n      0x00\n        /* \"#utility.yul\":1631:1646   */\n      revert\n        /* \"#utility.yul\":1657:1932   */\n    tag_699:\n        /* \"#utility.yul\":1728:1730   */\n      0x40\n        /* \"#utility.yul\":1722:1731   */\n      mload\n        /* \"#utility.yul\":1793:1795   */\n      0x1f\n        /* \"#utility.yul\":1774:1787   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1770:1797   */\n      and\n        /* \"#utility.yul\":1758:1798   */\n      dup2\n      add\n        /* \"#utility.yul\":1828:1846   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1813:1847   */\n      dup2\n      gt\n        /* \"#utility.yul\":1849:1871   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":1810:1872   */\n      or\n        /* \"#utility.yul\":1807:1895   */\n      iszero\n      tag_723\n      jumpi\n        /* \"#utility.yul\":1875:1893   */\n      tag_723\n      tag_698\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":1911:1913   */\n      0x40\n        /* \"#utility.yul\":1904:1926   */\n      mstore\n        /* \"#utility.yul\":1657:1932   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1937:2120   */\n    tag_700:\n        /* \"#utility.yul\":1997:2001   */\n      0x00\n        /* \"#utility.yul\":2030:2048   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2022:2028   */\n      dup3\n        /* \"#utility.yul\":2019:2049   */\n      gt\n        /* \"#utility.yul\":2016:2072   */\n      iszero\n      tag_726\n      jumpi\n        /* \"#utility.yul\":2052:2070   */\n      tag_726\n      tag_698\n      jump\t// in\n    tag_726:\n      pop\n        /* \"#utility.yul\":2097:2098   */\n      0x05\n        /* \"#utility.yul\":2093:2107   */\n      shl\n        /* \"#utility.yul\":2109:2113   */\n      0x20\n        /* \"#utility.yul\":2089:2114   */\n      add\n      swap1\n        /* \"#utility.yul\":1937:2120   */\n      jump\t// out\n        /* \"#utility.yul\":2125:2800   */\n    tag_701:\n        /* \"#utility.yul\":2179:2184   */\n      0x00\n        /* \"#utility.yul\":2232:2235   */\n      dup3\n        /* \"#utility.yul\":2225:2229   */\n      0x1f\n        /* \"#utility.yul\":2217:2223   */\n      dup4\n        /* \"#utility.yul\":2213:2230   */\n      add\n        /* \"#utility.yul\":2209:2236   */\n      slt\n        /* \"#utility.yul\":2199:2254   */\n      tag_728\n      jumpi\n        /* \"#utility.yul\":2250:2251   */\n      0x00\n        /* \"#utility.yul\":2247:2248   */\n      dup1\n        /* \"#utility.yul\":2240:2252   */\n      revert\n        /* \"#utility.yul\":2199:2254   */\n    tag_728:\n        /* \"#utility.yul\":2290:2296   */\n      dup2\n        /* \"#utility.yul\":2277:2297   */\n      calldataload\n        /* \"#utility.yul\":2317:2381   */\n      tag_729\n        /* \"#utility.yul\":2333:2380   */\n      tag_730\n        /* \"#utility.yul\":2373:2379   */\n      dup3\n        /* \"#utility.yul\":2333:2380   */\n      tag_700\n      jump\t// in\n    tag_730:\n        /* \"#utility.yul\":2317:2381   */\n      tag_699\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":2405:2408   */\n      dup1\n        /* \"#utility.yul\":2429:2435   */\n      dup3\n        /* \"#utility.yul\":2424:2427   */\n      dup3\n        /* \"#utility.yul\":2417:2436   */\n      mstore\n        /* \"#utility.yul\":2461:2465   */\n      0x20\n        /* \"#utility.yul\":2456:2459   */\n      dup3\n        /* \"#utility.yul\":2452:2466   */\n      add\n        /* \"#utility.yul\":2445:2466   */\n      swap2\n      pop\n        /* \"#utility.yul\":2522:2526   */\n      0x20\n        /* \"#utility.yul\":2512:2518   */\n      dup4\n        /* \"#utility.yul\":2509:2510   */\n      0x05\n        /* \"#utility.yul\":2505:2519   */\n      shl\n        /* \"#utility.yul\":2497:2503   */\n      dup7\n        /* \"#utility.yul\":2493:2520   */\n      add\n        /* \"#utility.yul\":2489:2527   */\n      add\n        /* \"#utility.yul\":2475:2527   */\n      swap3\n      pop\n        /* \"#utility.yul\":2550:2553   */\n      dup6\n        /* \"#utility.yul\":2542:2548   */\n      dup4\n        /* \"#utility.yul\":2539:2554   */\n      gt\n        /* \"#utility.yul\":2536:2571   */\n      iszero\n      tag_731\n      jumpi\n        /* \"#utility.yul\":2567:2568   */\n      0x00\n        /* \"#utility.yul\":2564:2565   */\n      dup1\n        /* \"#utility.yul\":2557:2569   */\n      revert\n        /* \"#utility.yul\":2536:2571   */\n    tag_731:\n        /* \"#utility.yul\":2603:2607   */\n      0x20\n        /* \"#utility.yul\":2595:2601   */\n      dup6\n        /* \"#utility.yul\":2591:2608   */\n      add\n        /* \"#utility.yul\":2617:2769   */\n    tag_732:\n        /* \"#utility.yul\":2633:2639   */\n      dup4\n        /* \"#utility.yul\":2628:2631   */\n      dup2\n        /* \"#utility.yul\":2625:2640   */\n      lt\n        /* \"#utility.yul\":2617:2769   */\n      iszero\n      tag_734\n      jumpi\n        /* \"#utility.yul\":2701:2724   */\n      tag_735\n        /* \"#utility.yul\":2720:2723   */\n      dup2\n        /* \"#utility.yul\":2701:2724   */\n      tag_697\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":2689:2725   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2754:2758   */\n      0x20\n        /* \"#utility.yul\":2745:2759   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":2650:2664   */\n      add\n        /* \"#utility.yul\":2617:2769   */\n      jump(tag_732)\n    tag_734:\n      pop\n        /* \"#utility.yul\":2787:2794   */\n      swap6\n        /* \"#utility.yul\":2125:2800   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2805:3999   */\n    tag_99:\n        /* \"#utility.yul\":2923:2929   */\n      0x00\n        /* \"#utility.yul\":2931:2937   */\n      dup1\n        /* \"#utility.yul\":2984:2986   */\n      0x40\n        /* \"#utility.yul\":2972:2981   */\n      dup4\n        /* \"#utility.yul\":2963:2970   */\n      dup6\n        /* \"#utility.yul\":2959:2982   */\n      sub\n        /* \"#utility.yul\":2955:2987   */\n      slt\n        /* \"#utility.yul\":2952:3004   */\n      iszero\n      tag_737\n      jumpi\n        /* \"#utility.yul\":3000:3001   */\n      0x00\n        /* \"#utility.yul\":2997:2998   */\n      dup1\n        /* \"#utility.yul\":2990:3002   */\n      revert\n        /* \"#utility.yul\":2952:3004   */\n    tag_737:\n        /* \"#utility.yul\":3040:3049   */\n      dup3\n        /* \"#utility.yul\":3027:3050   */\n      calldataload\n        /* \"#utility.yul\":3073:3091   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3065:3071   */\n      dup2\n        /* \"#utility.yul\":3062:3092   */\n      gt\n        /* \"#utility.yul\":3059:3109   */\n      iszero\n      tag_738\n      jumpi\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3102:3103   */\n      dup1\n        /* \"#utility.yul\":3095:3107   */\n      revert\n        /* \"#utility.yul\":3059:3109   */\n    tag_738:\n        /* \"#utility.yul\":3128:3150   */\n      dup4\n      add\n        /* \"#utility.yul\":3181:3185   */\n      0x1f\n        /* \"#utility.yul\":3173:3186   */\n      dup2\n      add\n        /* \"#utility.yul\":3169:3196   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3159:3214   */\n      tag_739\n      jumpi\n        /* \"#utility.yul\":3210:3211   */\n      0x00\n        /* \"#utility.yul\":3207:3208   */\n      dup1\n        /* \"#utility.yul\":3200:3212   */\n      revert\n        /* \"#utility.yul\":3159:3214   */\n    tag_739:\n        /* \"#utility.yul\":3250:3252   */\n      dup1\n        /* \"#utility.yul\":3237:3253   */\n      calldataload\n        /* \"#utility.yul\":3273:3337   */\n      tag_740\n        /* \"#utility.yul\":3289:3336   */\n      tag_730\n        /* \"#utility.yul\":3329:3335   */\n      dup3\n        /* \"#utility.yul\":3289:3336   */\n      tag_700\n      jump\t// in\n        /* \"#utility.yul\":3273:3337   */\n    tag_740:\n        /* \"#utility.yul\":3359:3362   */\n      dup1\n        /* \"#utility.yul\":3383:3389   */\n      dup3\n        /* \"#utility.yul\":3378:3381   */\n      dup3\n        /* \"#utility.yul\":3371:3390   */\n      mstore\n        /* \"#utility.yul\":3415:3419   */\n      0x20\n        /* \"#utility.yul\":3410:3413   */\n      dup3\n        /* \"#utility.yul\":3406:3420   */\n      add\n        /* \"#utility.yul\":3399:3420   */\n      swap2\n      pop\n        /* \"#utility.yul\":3472:3476   */\n      0x20\n        /* \"#utility.yul\":3462:3468   */\n      dup4\n        /* \"#utility.yul\":3459:3460   */\n      0x05\n        /* \"#utility.yul\":3455:3469   */\n      shl\n        /* \"#utility.yul\":3451:3453   */\n      dup6\n        /* \"#utility.yul\":3447:3470   */\n      add\n        /* \"#utility.yul\":3443:3477   */\n      add\n        /* \"#utility.yul\":3429:3477   */\n      swap3\n      pop\n        /* \"#utility.yul\":3500:3507   */\n      dup8\n        /* \"#utility.yul\":3492:3498   */\n      dup4\n        /* \"#utility.yul\":3489:3508   */\n      gt\n        /* \"#utility.yul\":3486:3525   */\n      iszero\n      tag_742\n      jumpi\n        /* \"#utility.yul\":3521:3522   */\n      0x00\n        /* \"#utility.yul\":3518:3519   */\n      dup1\n        /* \"#utility.yul\":3511:3523   */\n      revert\n        /* \"#utility.yul\":3486:3525   */\n    tag_742:\n        /* \"#utility.yul\":3553:3557   */\n      0x20\n        /* \"#utility.yul\":3549:3551   */\n      dup5\n        /* \"#utility.yul\":3545:3558   */\n      add\n        /* \"#utility.yul\":3534:3558   */\n      swap4\n      pop\n        /* \"#utility.yul\":3567:3767   */\n    tag_743:\n        /* \"#utility.yul\":3583:3589   */\n      dup3\n        /* \"#utility.yul\":3578:3581   */\n      dup5\n        /* \"#utility.yul\":3575:3590   */\n      lt\n        /* \"#utility.yul\":3567:3767   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":3675:3692   */\n      dup4\n      calldataload\n        /* \"#utility.yul\":3705:3723   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3752:3756   */\n      0x20\n        /* \"#utility.yul\":3600:3614   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":3743:3757   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":3567:3767   */\n      jump(tag_743)\n    tag_745:\n        /* \"#utility.yul\":3786:3791   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3844:3848   */\n      0x20\n        /* \"#utility.yul\":3829:3849   */\n      dup4\n      add\n        /* \"#utility.yul\":3816:3850   */\n      calldataload\n        /* \"#utility.yul\":3875:3893   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3862:3894   */\n      dup2\n      gt\n        /* \"#utility.yul\":3859:3911   */\n      iszero\n      tag_746\n      jumpi\n        /* \"#utility.yul\":3907:3908   */\n      0x00\n        /* \"#utility.yul\":3904:3905   */\n      dup1\n        /* \"#utility.yul\":3897:3909   */\n      revert\n        /* \"#utility.yul\":3859:3911   */\n    tag_746:\n        /* \"#utility.yul\":3930:3993   */\n      tag_747\n        /* \"#utility.yul\":3985:3992   */\n      dup6\n        /* \"#utility.yul\":3974:3982   */\n      dup3\n        /* \"#utility.yul\":3963:3972   */\n      dup7\n        /* \"#utility.yul\":3959:3983   */\n      add\n        /* \"#utility.yul\":3930:3993   */\n      tag_701\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":3920:3993   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2805:3999   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4004:4590   */\n    tag_120:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4082:4088   */\n      dup1\n        /* \"#utility.yul\":4135:4137   */\n      0x20\n        /* \"#utility.yul\":4123:4132   */\n      dup4\n        /* \"#utility.yul\":4114:4121   */\n      dup6\n        /* \"#utility.yul\":4110:4133   */\n      sub\n        /* \"#utility.yul\":4106:4138   */\n      slt\n        /* \"#utility.yul\":4103:4155   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4148:4149   */\n      dup1\n        /* \"#utility.yul\":4141:4153   */\n      revert\n        /* \"#utility.yul\":4103:4155   */\n    tag_749:\n        /* \"#utility.yul\":4191:4200   */\n      dup3\n        /* \"#utility.yul\":4178:4201   */\n      calldataload\n        /* \"#utility.yul\":4224:4242   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4216:4222   */\n      dup2\n        /* \"#utility.yul\":4213:4243   */\n      gt\n        /* \"#utility.yul\":4210:4260   */\n      iszero\n      tag_750\n      jumpi\n        /* \"#utility.yul\":4256:4257   */\n      0x00\n        /* \"#utility.yul\":4253:4254   */\n      dup1\n        /* \"#utility.yul\":4246:4258   */\n      revert\n        /* \"#utility.yul\":4210:4260   */\n    tag_750:\n        /* \"#utility.yul\":4279:4301   */\n      dup4\n      add\n        /* \"#utility.yul\":4332:4336   */\n      0x1f\n        /* \"#utility.yul\":4324:4337   */\n      dup2\n      add\n        /* \"#utility.yul\":4320:4347   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4310:4365   */\n      tag_751\n      jumpi\n        /* \"#utility.yul\":4361:4362   */\n      0x00\n        /* \"#utility.yul\":4358:4359   */\n      dup1\n        /* \"#utility.yul\":4351:4363   */\n      revert\n        /* \"#utility.yul\":4310:4365   */\n    tag_751:\n        /* \"#utility.yul\":4401:4403   */\n      dup1\n        /* \"#utility.yul\":4388:4404   */\n      calldataload\n        /* \"#utility.yul\":4427:4445   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4419:4425   */\n      dup2\n        /* \"#utility.yul\":4416:4446   */\n      gt\n        /* \"#utility.yul\":4413:4463   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":4459:4460   */\n      0x00\n        /* \"#utility.yul\":4456:4457   */\n      dup1\n        /* \"#utility.yul\":4449:4461   */\n      revert\n        /* \"#utility.yul\":4413:4463   */\n    tag_752:\n        /* \"#utility.yul\":4504:4511   */\n      dup6\n        /* \"#utility.yul\":4499:4501   */\n      0x20\n        /* \"#utility.yul\":4490:4496   */\n      dup3\n        /* \"#utility.yul\":4486:4488   */\n      dup5\n        /* \"#utility.yul\":4482:4497   */\n      add\n        /* \"#utility.yul\":4478:4502   */\n      add\n        /* \"#utility.yul\":4475:4512   */\n      gt\n        /* \"#utility.yul\":4472:4529   */\n      iszero\n      tag_753\n      jumpi\n        /* \"#utility.yul\":4525:4526   */\n      0x00\n        /* \"#utility.yul\":4522:4523   */\n      dup1\n        /* \"#utility.yul\":4515:4527   */\n      revert\n        /* \"#utility.yul\":4472:4529   */\n    tag_753:\n        /* \"#utility.yul\":4556:4558   */\n      0x20\n        /* \"#utility.yul\":4548:4559   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":4578:4584   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":4004:4590   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4595:5434   */\n    tag_124:\n        /* \"#utility.yul\":4672:4678   */\n      0x00\n        /* \"#utility.yul\":4680:4686   */\n      dup1\n        /* \"#utility.yul\":4733:4735   */\n      0x40\n        /* \"#utility.yul\":4721:4730   */\n      dup4\n        /* \"#utility.yul\":4712:4719   */\n      dup6\n        /* \"#utility.yul\":4708:4731   */\n      sub\n        /* \"#utility.yul\":4704:4736   */\n      slt\n        /* \"#utility.yul\":4701:4753   */\n      iszero\n      tag_755\n      jumpi\n        /* \"#utility.yul\":4749:4750   */\n      0x00\n        /* \"#utility.yul\":4746:4747   */\n      dup1\n        /* \"#utility.yul\":4739:4751   */\n      revert\n        /* \"#utility.yul\":4701:4753   */\n    tag_755:\n        /* \"#utility.yul\":4772:4801   */\n      tag_756\n        /* \"#utility.yul\":4791:4800   */\n      dup4\n        /* \"#utility.yul\":4772:4801   */\n      tag_697\n      jump\t// in\n    tag_756:\n        /* \"#utility.yul\":4762:4801   */\n      swap2\n      pop\n        /* \"#utility.yul\":4852:4854   */\n      0x20\n        /* \"#utility.yul\":4841:4850   */\n      dup4\n        /* \"#utility.yul\":4837:4855   */\n      add\n        /* \"#utility.yul\":4824:4856   */\n      calldataload\n        /* \"#utility.yul\":4879:4897   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4871:4877   */\n      dup2\n        /* \"#utility.yul\":4868:4898   */\n      gt\n        /* \"#utility.yul\":4865:4915   */\n      iszero\n      tag_757\n      jumpi\n        /* \"#utility.yul\":4911:4912   */\n      0x00\n        /* \"#utility.yul\":4908:4909   */\n      dup1\n        /* \"#utility.yul\":4901:4913   */\n      revert\n        /* \"#utility.yul\":4865:4915   */\n    tag_757:\n        /* \"#utility.yul\":4934:4956   */\n      dup4\n      add\n        /* \"#utility.yul\":4987:4991   */\n      0x1f\n        /* \"#utility.yul\":4979:4992   */\n      dup2\n      add\n        /* \"#utility.yul\":4975:5002   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4965:5020   */\n      tag_758\n      jumpi\n        /* \"#utility.yul\":5016:5017   */\n      0x00\n        /* \"#utility.yul\":5013:5014   */\n      dup1\n        /* \"#utility.yul\":5006:5018   */\n      revert\n        /* \"#utility.yul\":4965:5020   */\n    tag_758:\n        /* \"#utility.yul\":5056:5058   */\n      dup1\n        /* \"#utility.yul\":5043:5059   */\n      calldataload\n        /* \"#utility.yul\":5082:5100   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5074:5080   */\n      dup2\n        /* \"#utility.yul\":5071:5101   */\n      gt\n        /* \"#utility.yul\":5068:5124   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":5104:5122   */\n      tag_760\n      tag_698\n      jump\t// in\n    tag_760:\n        /* \"#utility.yul\":5146:5203   */\n      tag_761\n        /* \"#utility.yul\":5193:5195   */\n      0x1f\n        /* \"#utility.yul\":5170:5187   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":5166:5197   */\n      and\n        /* \"#utility.yul\":5199:5201   */\n      0x20\n        /* \"#utility.yul\":5162:5202   */\n      add\n        /* \"#utility.yul\":5146:5203   */\n      tag_699\n      jump\t// in\n    tag_761:\n        /* \"#utility.yul\":5226:5232   */\n      dup2\n        /* \"#utility.yul\":5219:5224   */\n      dup2\n        /* \"#utility.yul\":5212:5233   */\n      mstore\n        /* \"#utility.yul\":5274:5281   */\n      dup7\n        /* \"#utility.yul\":5269:5271   */\n      0x20\n        /* \"#utility.yul\":5260:5266   */\n      dup4\n        /* \"#utility.yul\":5256:5258   */\n      dup6\n        /* \"#utility.yul\":5252:5267   */\n      add\n        /* \"#utility.yul\":5248:5272   */\n      add\n        /* \"#utility.yul\":5245:5282   */\n      gt\n        /* \"#utility.yul\":5242:5299   */\n      iszero\n      tag_762\n      jumpi\n        /* \"#utility.yul\":5295:5296   */\n      0x00\n        /* \"#utility.yul\":5292:5293   */\n      dup1\n        /* \"#utility.yul\":5285:5297   */\n      revert\n        /* \"#utility.yul\":5242:5299   */\n    tag_762:\n        /* \"#utility.yul\":5350:5356   */\n      dup2\n        /* \"#utility.yul\":5345:5347   */\n      0x20\n        /* \"#utility.yul\":5341:5343   */\n      dup5\n        /* \"#utility.yul\":5337:5348   */\n      add\n        /* \"#utility.yul\":5332:5334   */\n      0x20\n        /* \"#utility.yul\":5325:5330   */\n      dup4\n        /* \"#utility.yul\":5321:5335   */\n      add\n        /* \"#utility.yul\":5308:5357   */\n      calldatacopy\n        /* \"#utility.yul\":5402:5403   */\n      0x00\n        /* \"#utility.yul\":5397:5399   */\n      0x20\n        /* \"#utility.yul\":5388:5394   */\n      dup4\n        /* \"#utility.yul\":5381:5386   */\n      dup4\n        /* \"#utility.yul\":5377:5395   */\n      add\n        /* \"#utility.yul\":5373:5400   */\n      add\n        /* \"#utility.yul\":5366:5404   */\n      mstore\n        /* \"#utility.yul\":5423:5428   */\n      dup1\n        /* \"#utility.yul\":5413:5428   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4595:5434   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5621:5967   */\n    tag_146:\n        /* \"#utility.yul\":5689:5695   */\n      0x00\n        /* \"#utility.yul\":5697:5703   */\n      dup1\n        /* \"#utility.yul\":5750:5752   */\n      0x40\n        /* \"#utility.yul\":5738:5747   */\n      dup4\n        /* \"#utility.yul\":5729:5736   */\n      dup6\n        /* \"#utility.yul\":5725:5748   */\n      sub\n        /* \"#utility.yul\":5721:5753   */\n      slt\n        /* \"#utility.yul\":5718:5770   */\n      iszero\n      tag_765\n      jumpi\n        /* \"#utility.yul\":5766:5767   */\n      0x00\n        /* \"#utility.yul\":5763:5764   */\n      dup1\n        /* \"#utility.yul\":5756:5768   */\n      revert\n        /* \"#utility.yul\":5718:5770   */\n    tag_765:\n      pop\n      pop\n        /* \"#utility.yul\":5811:5834   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":5931:5933   */\n      0x20\n        /* \"#utility.yul\":5916:5934   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5621:5967   */\n      jump\t// out\n        /* \"#utility.yul\":5972:6260   */\n    tag_702:\n        /* \"#utility.yul\":6013:6016   */\n      0x00\n        /* \"#utility.yul\":6051:6056   */\n      dup2\n        /* \"#utility.yul\":6045:6057   */\n      mload\n        /* \"#utility.yul\":6078:6084   */\n      dup1\n        /* \"#utility.yul\":6073:6076   */\n      dup5\n        /* \"#utility.yul\":6066:6085   */\n      mstore\n        /* \"#utility.yul\":6134:6140   */\n      dup1\n        /* \"#utility.yul\":6127:6131   */\n      0x20\n        /* \"#utility.yul\":6120:6125   */\n      dup5\n        /* \"#utility.yul\":6116:6132   */\n      add\n        /* \"#utility.yul\":6109:6113   */\n      0x20\n        /* \"#utility.yul\":6104:6107   */\n      dup7\n        /* \"#utility.yul\":6100:6114   */\n      add\n        /* \"#utility.yul\":6094:6141   */\n      mcopy\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6179:6183   */\n      0x20\n        /* \"#utility.yul\":6170:6176   */\n      dup3\n        /* \"#utility.yul\":6165:6168   */\n      dup7\n        /* \"#utility.yul\":6161:6177   */\n      add\n        /* \"#utility.yul\":6157:6184   */\n      add\n        /* \"#utility.yul\":6150:6188   */\n      mstore\n        /* \"#utility.yul\":6249:6253   */\n      0x20\n        /* \"#utility.yul\":6242:6244   */\n      0x1f\n        /* \"#utility.yul\":6238:6245   */\n      not\n        /* \"#utility.yul\":6233:6235   */\n      0x1f\n        /* \"#utility.yul\":6225:6231   */\n      dup4\n        /* \"#utility.yul\":6221:6236   */\n      add\n        /* \"#utility.yul\":6217:6246   */\n      and\n        /* \"#utility.yul\":6212:6215   */\n      dup6\n        /* \"#utility.yul\":6208:6247   */\n      add\n        /* \"#utility.yul\":6204:6254   */\n      add\n        /* \"#utility.yul\":6197:6254   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5972:6260   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6563   */\n    tag_160:\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6441:6455   */\n      iszero\n        /* \"#utility.yul\":6434:6456   */\n      iszero\n        /* \"#utility.yul\":6423:6432   */\n      dup2\n        /* \"#utility.yul\":6416:6457   */\n      mstore\n        /* \"#utility.yul\":6493:6495   */\n      0x40\n        /* \"#utility.yul\":6488:6490   */\n      0x20\n        /* \"#utility.yul\":6477:6486   */\n      dup3\n        /* \"#utility.yul\":6473:6491   */\n      add\n        /* \"#utility.yul\":6466:6496   */\n      mstore\n        /* \"#utility.yul\":6397:6401   */\n      0x00\n        /* \"#utility.yul\":6513:6557   */\n      tag_768\n        /* \"#utility.yul\":6553:6555   */\n      0x40\n        /* \"#utility.yul\":6542:6551   */\n      dup4\n        /* \"#utility.yul\":6538:6556   */\n      add\n        /* \"#utility.yul\":6530:6536   */\n      dup5\n        /* \"#utility.yul\":6513:6557   */\n      tag_702\n      jump\t// in\n    tag_768:\n        /* \"#utility.yul\":6505:6557   */\n      swap5\n        /* \"#utility.yul\":6265:6563   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6568:6787   */\n    tag_213:\n        /* \"#utility.yul\":6717:6719   */\n      0x20\n        /* \"#utility.yul\":6706:6715   */\n      dup2\n        /* \"#utility.yul\":6699:6720   */\n      mstore\n        /* \"#utility.yul\":6680:6684   */\n      0x00\n        /* \"#utility.yul\":6737:6781   */\n      tag_690\n        /* \"#utility.yul\":6777:6779   */\n      0x20\n        /* \"#utility.yul\":6766:6775   */\n      dup4\n        /* \"#utility.yul\":6762:6780   */\n      add\n        /* \"#utility.yul\":6754:6760   */\n      dup5\n        /* \"#utility.yul\":6737:6781   */\n      tag_702\n      jump\t// in\n        /* \"#utility.yul\":6792:6978   */\n    tag_229:\n        /* \"#utility.yul\":6851:6857   */\n      0x00\n        /* \"#utility.yul\":6904:6906   */\n      0x20\n        /* \"#utility.yul\":6892:6901   */\n      dup3\n        /* \"#utility.yul\":6883:6890   */\n      dup5\n        /* \"#utility.yul\":6879:6902   */\n      sub\n        /* \"#utility.yul\":6875:6907   */\n      slt\n        /* \"#utility.yul\":6872:6924   */\n      iszero\n      tag_772\n      jumpi\n        /* \"#utility.yul\":6920:6921   */\n      0x00\n        /* \"#utility.yul\":6917:6918   */\n      dup1\n        /* \"#utility.yul\":6910:6922   */\n      revert\n        /* \"#utility.yul\":6872:6924   */\n    tag_772:\n        /* \"#utility.yul\":6943:6972   */\n      tag_690\n        /* \"#utility.yul\":6962:6971   */\n      dup3\n        /* \"#utility.yul\":6943:6972   */\n      tag_697\n      jump\t// in\n        /* \"#utility.yul\":7725:7843   */\n    tag_703:\n        /* \"#utility.yul\":7811:7816   */\n      dup1\n        /* \"#utility.yul\":7804:7817   */\n      iszero\n        /* \"#utility.yul\":7797:7818   */\n      iszero\n        /* \"#utility.yul\":7790:7795   */\n      dup2\n        /* \"#utility.yul\":7787:7819   */\n      eq\n        /* \"#utility.yul\":7777:7837   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":7833:7834   */\n      0x00\n        /* \"#utility.yul\":7830:7831   */\n      dup1\n        /* \"#utility.yul\":7823:7835   */\n      revert\n        /* \"#utility.yul\":7848:8163   */\n    tag_250:\n        /* \"#utility.yul\":7913:7919   */\n      0x00\n        /* \"#utility.yul\":7921:7927   */\n      dup1\n        /* \"#utility.yul\":7974:7976   */\n      0x40\n        /* \"#utility.yul\":7962:7971   */\n      dup4\n        /* \"#utility.yul\":7953:7960   */\n      dup6\n        /* \"#utility.yul\":7949:7972   */\n      sub\n        /* \"#utility.yul\":7945:7977   */\n      slt\n        /* \"#utility.yul\":7942:7994   */\n      iszero\n      tag_779\n      jumpi\n        /* \"#utility.yul\":7990:7991   */\n      0x00\n        /* \"#utility.yul\":7987:7988   */\n      dup1\n        /* \"#utility.yul\":7980:7992   */\n      revert\n        /* \"#utility.yul\":7942:7994   */\n    tag_779:\n        /* \"#utility.yul\":8013:8042   */\n      tag_780\n        /* \"#utility.yul\":8032:8041   */\n      dup4\n        /* \"#utility.yul\":8013:8042   */\n      tag_697\n      jump\t// in\n    tag_780:\n        /* \"#utility.yul\":8003:8042   */\n      swap2\n      pop\n        /* \"#utility.yul\":8092:8094   */\n      0x20\n        /* \"#utility.yul\":8081:8090   */\n      dup4\n        /* \"#utility.yul\":8077:8095   */\n      add\n        /* \"#utility.yul\":8064:8096   */\n      calldataload\n        /* \"#utility.yul\":8105:8133   */\n      tag_781\n        /* \"#utility.yul\":8127:8132   */\n      dup2\n        /* \"#utility.yul\":8105:8133   */\n      tag_703\n      jump\t// in\n    tag_781:\n        /* \"#utility.yul\":8152:8157   */\n      dup1\n        /* \"#utility.yul\":8142:8157   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7848:8163   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8382:8509   */\n    tag_704:\n        /* \"#utility.yul\":8443:8453   */\n      0x4e487b71\n        /* \"#utility.yul\":8438:8441   */\n      0xe0\n        /* \"#utility.yul\":8434:8454   */\n      shl\n        /* \"#utility.yul\":8431:8432   */\n      0x00\n        /* \"#utility.yul\":8424:8455   */\n      mstore\n        /* \"#utility.yul\":8474:8478   */\n      0x11\n        /* \"#utility.yul\":8471:8472   */\n      0x04\n        /* \"#utility.yul\":8464:8479   */\n      mstore\n        /* \"#utility.yul\":8498:8502   */\n      0x24\n        /* \"#utility.yul\":8495:8496   */\n      0x00\n        /* \"#utility.yul\":8488:8503   */\n      revert\n        /* \"#utility.yul\":8514:8649   */\n    tag_296:\n        /* \"#utility.yul\":8553:8556   */\n      0x00\n        /* \"#utility.yul\":8574:8591   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":8571:8614   */\n      tag_786\n      jumpi\n        /* \"#utility.yul\":8594:8612   */\n      tag_786\n      tag_704\n      jump\t// in\n    tag_786:\n      pop\n        /* \"#utility.yul\":8641:8642   */\n      0x01\n        /* \"#utility.yul\":8630:8643   */\n      add\n      swap1\n        /* \"#utility.yul\":8514:8649   */\n      jump\t// out\n        /* \"#utility.yul\":8654:8782   */\n    tag_298:\n        /* \"#utility.yul\":8721:8730   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":8742:8753   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":8739:8776   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":8756:8774   */\n      tag_639\n      tag_704\n      jump\t// in\n        /* \"#utility.yul\":9111:9238   */\n    tag_316:\n        /* \"#utility.yul\":9172:9182   */\n      0x4e487b71\n        /* \"#utility.yul\":9167:9170   */\n      0xe0\n        /* \"#utility.yul\":9163:9183   */\n      shl\n        /* \"#utility.yul\":9160:9161   */\n      0x00\n        /* \"#utility.yul\":9153:9184   */\n      mstore\n        /* \"#utility.yul\":9203:9207   */\n      0x32\n        /* \"#utility.yul\":9200:9201   */\n      0x04\n        /* \"#utility.yul\":9193:9208   */\n      mstore\n        /* \"#utility.yul\":9227:9231   */\n      0x24\n        /* \"#utility.yul\":9224:9225   */\n      0x00\n        /* \"#utility.yul\":9217:9232   */\n      revert\n        /* \"#utility.yul\":9243:9368   */\n    tag_320:\n        /* \"#utility.yul\":9308:9317   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9329:9339   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9326:9362   */\n      iszero\n      tag_639\n      jumpi\n        /* \"#utility.yul\":9342:9360   */\n      tag_639\n      tag_704\n      jump\t// in\n        /* \"#utility.yul\":10151:10522   */\n    tag_354:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10371:10403   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":10353:10404   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10440:10472   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":10435:10437   */\n      0x20\n        /* \"#utility.yul\":10420:10438   */\n      dup3\n      add\n        /* \"#utility.yul\":10413:10473   */\n      mstore\n        /* \"#utility.yul\":10504:10506   */\n      0x40\n        /* \"#utility.yul\":10489:10507   */\n      dup2\n      add\n        /* \"#utility.yul\":10482:10516   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10341:10343   */\n      0x60\n        /* \"#utility.yul\":10326:10344   */\n      add\n      swap1\n        /* \"#utility.yul\":10151:10522   */\n      jump\t// out\n        /* \"#utility.yul\":10527:10772   */\n    tag_358:\n        /* \"#utility.yul\":10594:10600   */\n      0x00\n        /* \"#utility.yul\":10647:10649   */\n      0x20\n        /* \"#utility.yul\":10635:10644   */\n      dup3\n        /* \"#utility.yul\":10626:10633   */\n      dup5\n        /* \"#utility.yul\":10622:10645   */\n      sub\n        /* \"#utility.yul\":10618:10650   */\n      slt\n        /* \"#utility.yul\":10615:10667   */\n      iszero\n      tag_799\n      jumpi\n        /* \"#utility.yul\":10663:10664   */\n      0x00\n        /* \"#utility.yul\":10660:10661   */\n      dup1\n        /* \"#utility.yul\":10653:10665   */\n      revert\n        /* \"#utility.yul\":10615:10667   */\n    tag_799:\n        /* \"#utility.yul\":10695:10704   */\n      dup2\n        /* \"#utility.yul\":10689:10705   */\n      mload\n        /* \"#utility.yul\":10714:10742   */\n      tag_690\n        /* \"#utility.yul\":10736:10741   */\n      dup2\n        /* \"#utility.yul\":10714:10742   */\n      tag_703\n      jump\t// in\n        /* \"#utility.yul\":12360:12528   */\n    tag_541:\n        /* \"#utility.yul\":12433:12442   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12464:12473   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12481:12496   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12475:12497   */\n      dup5\n      eq\n        /* \"#utility.yul\":12461:12498   */\n      or\n        /* \"#utility.yul\":12451:12522   */\n      tag_639\n      jumpi\n        /* \"#utility.yul\":12502:12520   */\n      tag_639\n      tag_704\n      jump\t// in\n        /* \"#utility.yul\":12533:12750   */\n    tag_543:\n        /* \"#utility.yul\":12573:12574   */\n      0x00\n        /* \"#utility.yul\":12599:12600   */\n      dup3\n        /* \"#utility.yul\":12589:12721   */\n      tag_810\n      jumpi\n        /* \"#utility.yul\":12643:12653   */\n      0x4e487b71\n        /* \"#utility.yul\":12638:12641   */\n      0xe0\n        /* \"#utility.yul\":12634:12654   */\n      shl\n        /* \"#utility.yul\":12631:12632   */\n      0x00\n        /* \"#utility.yul\":12624:12655   */\n      mstore\n        /* \"#utility.yul\":12678:12682   */\n      0x12\n        /* \"#utility.yul\":12675:12676   */\n      0x04\n        /* \"#utility.yul\":12668:12683   */\n      mstore\n        /* \"#utility.yul\":12706:12710   */\n      0x24\n        /* \"#utility.yul\":12703:12704   */\n      0x00\n        /* \"#utility.yul\":12696:12711   */\n      revert\n        /* \"#utility.yul\":12589:12721   */\n    tag_810:\n      pop\n        /* \"#utility.yul\":12735:12744   */\n      div\n      swap1\n        /* \"#utility.yul\":12533:12750   */\n      jump\t// out\n        /* \"#utility.yul\":13110:13294   */\n    tag_592:\n        /* \"#utility.yul\":13180:13186   */\n      0x00\n        /* \"#utility.yul\":13233:13235   */\n      0x20\n        /* \"#utility.yul\":13221:13230   */\n      dup3\n        /* \"#utility.yul\":13212:13219   */\n      dup5\n        /* \"#utility.yul\":13208:13231   */\n      sub\n        /* \"#utility.yul\":13204:13236   */\n      slt\n        /* \"#utility.yul\":13201:13253   */\n      iszero\n      tag_813\n      jumpi\n        /* \"#utility.yul\":13249:13250   */\n      0x00\n        /* \"#utility.yul\":13246:13247   */\n      dup1\n        /* \"#utility.yul\":13239:13251   */\n      revert\n        /* \"#utility.yul\":13201:13253   */\n    tag_813:\n      pop\n        /* \"#utility.yul\":13272:13288   */\n      mload\n      swap2\n        /* \"#utility.yul\":13110:13294   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13299:13600   */\n    tag_678:\n        /* \"#utility.yul\":13428:13431   */\n      0x00\n        /* \"#utility.yul\":13466:13472   */\n      dup3\n        /* \"#utility.yul\":13460:13473   */\n      mload\n        /* \"#utility.yul\":13512:13518   */\n      dup1\n        /* \"#utility.yul\":13505:13509   */\n      0x20\n        /* \"#utility.yul\":13497:13503   */\n      dup6\n        /* \"#utility.yul\":13493:13510   */\n      add\n        /* \"#utility.yul\":13488:13491   */\n      dup5\n        /* \"#utility.yul\":13482:13519   */\n      mcopy\n        /* \"#utility.yul\":13574:13575   */\n      0x00\n        /* \"#utility.yul\":13538:13554   */\n      swap3\n      add\n        /* \"#utility.yul\":13563:13576   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":13538:13554   */\n      swap2\n        /* \"#utility.yul\":13299:13600   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_d85598d6ea860439b48fc265883a1cac638ff64dca5391fe12b46f27076e26fe b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9\n\n    auxdata: 0xa2646970667358221220287ed1eda293901ad5f23b7e46e50582bc56101813fe50a963b2e23fe45e364064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1647": {
									"entryPoint": null,
									"id": 1647,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_221": {
									"entryPoint": 33,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:1",
										"nodeType": "YulBlock",
										"src": "0:216:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:1",
													"nodeType": "YulBlock",
													"src": "113:101:1",
													"statements": [
														{
															"nativeSrc": "123:26:1",
															"nodeType": "YulAssignment",
															"src": "123:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:1",
																		"nodeType": "YulLiteral",
																		"src": "146:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:1"
																},
																"nativeSrc": "131:18:1",
																"nodeType": "YulFunctionCall",
																"src": "131:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:1",
																								"nodeType": "YulLiteral",
																								"src": "196:2:1",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:1",
																								"nodeType": "YulLiteral",
																								"src": "200:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:1"
																						},
																						"nativeSrc": "192:10:1",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:1",
																						"nodeType": "YulLiteral",
																						"src": "204:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:1"
																				},
																				"nativeSrc": "188:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:1"
																		},
																		"nativeSrc": "176:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:1"
																},
																"nativeSrc": "158:50:1",
																"nodeType": "YulFunctionCall",
																"src": "158:50:1"
															},
															"nativeSrc": "158:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:1",
														"nodeType": "YulTypedName",
														"src": "82:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:1",
														"nodeType": "YulTypedName",
														"src": "93:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:1",
														"nodeType": "YulTypedName",
														"src": "104:4:1",
														"type": ""
													}
												],
												"src": "14:200:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051612d8e6100f95f395f818161212c0152818161215501526122990152612d8e5ff3fe6080604052600436106102a5575f3560e01c80637547c7a31161016f578063ad8e5ec4116100d8578063d777cc6d11610092578063ed0610671161006d578063ed0610671461086d578063f0664a4f1461088c578063f2fde38b146108ab578063ff3d65d9146108ca575f80fd5b8063d777cc6d1461081b578063d9b998b41461083a578063e9c68e2c14610859575f80fd5b8063ad8e5ec4146106f4578063b47ff95114610713578063b9dac1eb14610728578063bccbc36c14610747578063c7fd5bf0146107c8578063ce356a2414610806575f80fd5b806385f452501161012957806385f45250146105fe5780638da5cb5b1461061d578063947a36fb146106595780639c361e4e1461066e578063a4f67b8b14610683578063ad3cb1cc146106b7575f80fd5b80637547c7a31461054457806378fd078d146105635780637f111e60146105825780637f70c5e7146105a15780637ffe4d93146105c057806383aa9985146105df575f80fd5b806344490ff411610211578063567e98f9116101cb578063567e98f91461049c5780635f17e616146104b15780636626b26d146104d057806367976974146104e45780636e04ff0d14610503578063715018a614610530575f80fd5b806344490ff4146104035780634585e33b146104185780634f1ef286146104375780635256dbbf1461044a57806352d1902d146104695780635462870d1461047d575f80fd5b806330cac9721161026257806330cac9721461037b57806333244c2c1461039057806334107c87146103a557806339518b5e146103c45780633a71a9e4146103d95780633f3b3b27146103ee575f80fd5b806301934a83146102a957806311eac855146102d15780631459457a14610307578063188e07b9146103285780632765df7a1461033d5780633070fbf81461035c575b5f80fd5b3480156102b4575f80fd5b506102be60085481565b6040519081526020015b60405180910390f35b3480156102dc575f80fd5b505f546102ef906001600160a01b031681565b6040516001600160a01b0390911681526020016102c8565b348015610312575f80fd5b50610326610321366004612813565b6108f5565b005b348015610333575f80fd5b506102be60015481565b348015610348575f80fd5b50610326610357366004612874565b610a70565b348015610367575f80fd5b50600e546102ef906001600160a01b031681565b348015610386575f80fd5b506102be600b5481565b34801561039b575f80fd5b506102be60045481565b3480156103b0575f80fd5b506103266103bf366004612964565b610b58565b3480156103cf575f80fd5b506102be600c5481565b3480156103e4575f80fd5b506102be60075481565b3480156103f9575f80fd5b506102be600d5481565b34801561040e575f80fd5b506102be60055481565b348015610423575f80fd5b50610326610432366004612a20565b610d05565b610326610445366004612a8e565b610dfc565b348015610455575f80fd5b50610326610464366004612874565b610e17565b348015610474575f80fd5b506102be610f61565b348015610488575f80fd5b506009546102ef906001600160a01b031681565b3480156104a7575f80fd5b506102be60035481565b3480156104bc575f80fd5b506103266104cb366004612b33565b610f7c565b3480156104db575f80fd5b50610326611064565b3480156104ef575f80fd5b506103266104fe366004612874565b6110ec565b34801561050e575f80fd5b5061052261051d366004612a20565b6112ef565b6040516102c8929190612b81565b34801561053b575f80fd5b5061032661131f565b34801561054f575f80fd5b5061032661055e366004612874565b611332565b34801561056e575f80fd5b5061032661057d366004612874565b611519565b34801561058d575f80fd5b5061032661059c366004612874565b611663565b3480156105ac575f80fd5b506103266105bb366004612874565b6116f4565b3480156105cb575f80fd5b506103266105da366004612874565b611785565b3480156105ea575f80fd5b506010546102ef906001600160a01b031681565b348015610609575f80fd5b50610326610618366004612b33565b6118d4565b348015610628575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102ef565b348015610664575f80fd5b506102be600a5481565b348015610679575f80fd5b506102be60115481565b34801561068e575f80fd5b506102ef61069d366004612874565b60136020525f90815260409020546001600160a01b031681565b3480156106c2575f80fd5b506106e7604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102c89190612ba3565b3480156106ff575f80fd5b5061032661070e366004612874565b611a0c565b34801561071e575f80fd5b506102be60025481565b348015610733575f80fd5b50610326610742366004612874565b611a9d565b348015610752575f80fd5b50610799610761366004612bb5565b60156020525f908152604090208054600182015460028301546003840154600485015460059095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c0016102c8565b3480156107d3575f80fd5b506107f66107e2366004612bb5565b60126020525f908152604090205460ff1681565b60405190151581526020016102c8565b348015610811575f80fd5b506102be60065481565b348015610826575f80fd5b50610326610835366004612bb5565b611b2e565b348015610845575f80fd5b50610326610854366004612bdb565b611bfb565b348015610864575f80fd5b50610326611d55565b348015610878575f80fd5b50610326610887366004612b33565b61202e565b348015610897575f80fd5b50600f546102ef906001600160a01b031681565b3480156108b6575f80fd5b506103266108c5366004612bb5565b6120cb565b3480156108d5575f80fd5b506102be6108e4366004612874565b60146020525f908152604090205481565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561093a5750825b90505f8267ffffffffffffffff1660011480156109565750303b155b905081158015610964575080155b156109825760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109ac57845460ff60401b1916600160401b1785555b6109b58a612108565b6109bd612119565b5f80546001600160a01b03808c166001600160a01b031992831617909255611388600455611d4c6005556105dc6006556103e860075560098054898416908316179055600f80548b841690831617905560108054928a16929091169190911790558315610a6457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b600f546001600160a01b03163314801590610a9657506010546001600160a01b03163314155b15610abb57604051631ed6f38b60e31b81523360048201526024015b60405180910390fd5b5f8111610ade5760405163cdbc633560e01b815260048101829052602401610ab2565b601180545f90815260146020526040812083905581549190610aff83612c24565b90915550506011547fe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f90610b3583612710612c3c565b60408051928352602083019190915281018390526060015b60405180910390a150565b600f546001600160a01b03163314801590610b7e57506010546001600160a01b03163314155b15610b9e57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f825111610bc4578151604051633ddd555760e21b8152600401610ab291815260200190565b5f815111610bea578051604051633a46e2ab60e01b8152600401610ab291815260200190565b8151815114610c0c5760405163512509d360e11b815260040160405180910390fd5b5f5b8251811015610cbc57828181518110610c2957610c29612c4f565b602002602001015160155f848481518110610c4657610c46612c4f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206005015f828254610c7e9190612c63565b92505081905550828181518110610c9757610c97612c4f565b602002602001015160035f828254610caf9190612c63565b9091555050600101610c0e565b50815181516040805133815260208101939093528201527f472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6906060015b60405180910390a15050565b600e546001600160a01b03163314610d855760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b65657000000000006064820152608401610ab2565b600a545f03610dad57600a54604051637154000760e01b8152600401610ab291815260200190565b600c544210610ddd57600b54600a81905542600d819055610dce9190612c63565b600c55610dd9611d55565b5050565b600c546040516354593e7560e01b8152600401610ab291815260200190565b610e04612121565b610e0d826121c5565b610dd982826121cd565b600f546001600160a01b03163314801590610e3d57506010546001600160a01b03163314155b15610e5d57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610e80576040516302ff478360e41b815260048101829052602401610ab2565b8060015f828254610e919190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610eca90339030908790600401612c76565b6020604051808303815f875af1158015610ee6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0a9190612c9a565b905080610f2e5760405163d85d3cef60e01b81528115156004820152602401610ab2565b7fa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404600154604051610cf991815260200190565b5f610f6a61228e565b505f80516020612d1983398151915290565b600f546001600160a01b03163314801590610fa257506010546001600160a01b03163314155b15610fc257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610fe557604051637154000760e01b815260048101829052602401610ab2565b42821015611009576040516354593e7560e01b815260048101839052602401610ab2565b6110134283612c3c565b600a819055600c83905542600d819055600b8390556040805133815260208101939093528201527f2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a0090606001610cf9565b600f546001600160a01b0316331480159061108a57506010546001600160a01b03163314155b156110aa57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f600a8190556040805133815260208101929092527f3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f910160405180910390a1565b600954600160a01b900460ff16156111465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ab2565b6009805460ff60a01b1916600160a01b1790558061117a576040516302ff478360e41b815260048101829052602401610ab2565b335f908152601560205260409020600101548111156111c357335f90815260156020526040908190206001015490516398e712c360e01b81526004810191909152602401610ab2565b335f90815260156020526040812060010180548392906111e4908490612c3c565b9091555050335f908152601560205260408120600201805483929061120a908490612c63565b90915550505f805460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561125d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112819190612c9a565b9050806112a55760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051338152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506009805460ff60a01b19169055565b5f60605f600a54600d54426113049190612c3c565b60408051602081019091525f81529110969095509350505050565b6113276122d7565b6113305f612332565b565b5f8111611355576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff161561139d57335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040812060050180548392906113be908490612c63565b9091555050335f9081526012602052604090205460ff1661142757600880545f90815260136020908152604080832080546001600160a01b03191633908117909155835260129091528120805460ff191660011790558154919061142183612c24565b91905055505b8060035f8282546114389190612c63565b90915550505f80546009546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92611476923392909116908790600401612c76565b6020604051808303815f875af1158015611492573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114b69190612c9a565b9050806114da5760405163d85d3cef60e01b81528115156004820152602401610ab2565b6009546040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab91610cf99133916001600160a01b0316908690612c76565b600f546001600160a01b0316331480159061153f57506010546001600160a01b03163314155b1561155f57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611582576040516302ff478360e41b815260048101829052602401610ab2565b8060025f8282546115939190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115cc90339030908790600401612c76565b6020604051808303815f875af11580156115e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061160c9190612c9a565b9050806116305760405163d85d3cef60e01b81528115156004820152602401610ab2565b7f73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94600254604051610cf991815260200190565b600f546001600160a01b0316331480159061168957506010546001600160a01b03163314155b156116a957604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116116cc5760405163cdbc633560e01b815260048101829052602401610ab2565b600781905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b0316331480159061171a57506010546001600160a01b03163314155b1561173a57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f811161175d5760405163cdbc633560e01b815260048101829052602401610ab2565b600481905560408051338152602081018390525f80516020612d398339815191529101610b4d565b5f81116117a8576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff16156117f057335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040902060010154811061182457604051630636dc6b60e31b815260048101829052602401610ab2565b335f9081526015602052604081206001018054839290611845908490612c3c565b9091555050335f908152601560205260408120600501805483929061186b908490612c63565b925050819055508060025f8282546118839190612c63565b925050819055508060035f82825461189b9190612c63565b90915550506040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab90610b4d90339030908590612c76565b5f82116118f7576040516302ff478360e41b815260048101839052602401610ab2565b60115481111561191d5760405163222a50f360e01b815260048101829052602401610ab2565b5f818152601460205260409020546119369083906123a2565b5f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061196a90339030908890600401612c76565b6020604051808303815f875af1158015611986573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119aa9190612c9a565b9050806119ce5760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051848152602081018490527fa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900910160405180910390a1505050565b600f546001600160a01b03163314801590611a3257506010546001600160a01b03163314155b15611a5257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611a755760405163cdbc633560e01b815260048101829052602401610ab2565b600681905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611ac357506010546001600160a01b03163314155b15611ae357604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611b065760405163cdbc633560e01b815260048101829052602401610ab2565b600581905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611b5457506010546001600160a01b03163314155b15611b7457604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038116611ba65760405163e4cfa94d60e01b81526001600160a01b0382166004820152602401610ab2565b600e80546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a9101610b4d565b600f546001600160a01b03163314801590611c2157506010546001600160a01b03163314155b15611c4157604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038216611c735760405163e4cfa94d60e01b81526001600160a01b0383166004820152602401610ab2565b600181151514801590611c8557508015155b15611ca7576040516381ed1ae360e01b81528115156004820152602401610ab2565b801515600103611cd8576001600160a01b0382165f908152601560205260409020805460ff19166001179055611cf8565b6001600160a01b0382165f908152601560205260409020805460ff191690555b6001600160a01b0382165f818152601560209081526040918290205482513381529182019390935260ff9092161515908201527f7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f190606001610cf9565b600e546001600160a01b03163314801590611d7b5750600f546001600160a01b03163314155b8015611d9257506010546001600160a01b03163314155b15611db257604051631ed6f38b60e31b8152336004820152602401610ab2565b600254158015611dc25750600154155b15611def57600254600154604051632fd92d8d60e01b815260048101929092526024820152604401610ab2565b5f805f611dfa612400565b919450925090505f805b600854811015611fe2575f818152601360209081526040808320546001600160a01b03168352601590915290205460ff16611fda576003545f828152601360209081526040808320546001600160a01b031683526015909152812060050154909190611e7290612710612cb5565b611e7c9190612ccc565b90505f611e89868361256d565b90508060025f828254611e9c9190612c3c565b90915550611eac90508185612c63565b93508460015f828254611ebf9190612c3c565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206003018054879290611efa908490612c63565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206004018054839290611f35908490612c63565b909155505f9050611f468683612c63565b5f858152601360209081526040808320546001600160a01b031683526015909152812060010180549293508392909190611f81908490612c63565b909155505087851115611fd65760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742069732067726561746572207468656e203530250000000000006044820152606401610ab2565b5050505b600101611e04565b506002546001546040805133815260208101939093528201527fee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e580209060600160405180910390a150505050565b600f546001600160a01b0316331480159061205457506010546001600160a01b03163314155b1561207457604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116120975760405163cdbc633560e01b815260048101829052602401610ab2565b5f8281526014602090815260409182902083905581513381529081018390525f80516020612d398339815191529101610cf9565b6120d36122d7565b6001600160a01b0381166120fc57604051631e4fbdf760e01b81525f6004820152602401610ab2565b61210581612332565b50565b6121106125d6565b6121058161261f565b6113306125d6565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806121a757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661219b5f80516020612d19833981519152546001600160a01b031690565b6001600160a01b031614155b156113305760405163703e46dd60e11b815260040160405180910390fd5b6121056122d7565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612227575060408051601f3d908101601f1916820190925261222491810190612ceb565b60015b61224f57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610ab2565b5f80516020612d19833981519152811461227f57604051632a87526960e21b815260048101829052602401610ab2565b6122898383612627565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113305760405163703e46dd60e11b815260040160405180910390fd5b336123097f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146113305760405163118cdaa760e01b8152336004820152602401610ab2565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6123af82612710612c3c565b90505f6123bc848361256d565b90505f6123c9858561256d565b90508160025f8282546123dc9190612c63565b925050819055508060015f8282546123f49190612c63565b90915550505050505050565b5f805f8061241260025461138861256d565b90505f6124218260055461256d565b90505f6124308360065461256d565b90505f61243f8460075461256d565b90505f61245060015460045461256d565b90505f6008541161247a57600854604051637ca8d0db60e01b8152600401610ab291815260200190565b5f600854826124899190612ccc565b90506124958385612c63565b60025f8282546124a59190612c3c565b925050819055508360015f8282546124bd9190612c63565b90915550505f805460095460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291169063a9059cbb906044016020604051808303815f875af1158015612514573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125389190612c9a565b90508061255c5760405163d85d3cef60e01b81528115156004820152602401610ab2565b509498939750939550919350505050565b5f80831161259157604051639b7220af60e01b815260048101849052602401610ab2565b5f82116125b457604051630b015aa760e31b815260048101839052602401610ab2565b5f6127106125c28486612cb5565b6125cc9190612ccc565b9150505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661133057604051631afcd79f60e31b815260040160405180910390fd5b6120d36125d6565b6126308261267c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156126745761228982826126df565b610dd9612751565b806001600160a01b03163b5f036126b157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610ab2565b5f80516020612d1983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516126fb9190612d02565b5f60405180830381855af49150503d805f8114612733576040519150601f19603f3d011682016040523d82523d5f602084013e612738565b606091505b5091509150612748858383612770565b95945050505050565b34156113305760405163b398979f60e01b815260040160405180910390fd5b60608261278557612780826127cf565b6127c8565b815115801561279c57506001600160a01b0384163b155b156127c557604051639996b31560e01b81526001600160a01b0385166004820152602401610ab2565b50805b9392505050565b8051156127df5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461280e575f80fd5b919050565b5f805f805f60a08688031215612827575f80fd5b612830866127f8565b945061283e602087016127f8565b935061284c604087016127f8565b925061285a606087016127f8565b9150612868608087016127f8565b90509295509295909350565b5f60208284031215612884575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128c8576128c861288b565b604052919050565b5f67ffffffffffffffff8211156128e9576128e961288b565b5060051b60200190565b5f82601f830112612902575f80fd5b8135612915612910826128d0565b61289f565b8082825260208201915060208360051b860101925085831115612936575f80fd5b602085015b8381101561295a5761294c816127f8565b83526020928301920161293b565b5095945050505050565b5f8060408385031215612975575f80fd5b823567ffffffffffffffff81111561298b575f80fd5b8301601f8101851361299b575f80fd5b80356129a9612910826128d0565b8082825260208201915060208360051b8501019250878311156129ca575f80fd5b6020840193505b828410156129ec5783358252602093840193909101906129d1565b9450505050602083013567ffffffffffffffff811115612a0a575f80fd5b612a16858286016128f3565b9150509250929050565b5f8060208385031215612a31575f80fd5b823567ffffffffffffffff811115612a47575f80fd5b8301601f81018513612a57575f80fd5b803567ffffffffffffffff811115612a6d575f80fd5b856020828401011115612a7e575f80fd5b6020919091019590945092505050565b5f8060408385031215612a9f575f80fd5b612aa8836127f8565b9150602083013567ffffffffffffffff811115612ac3575f80fd5b8301601f81018513612ad3575f80fd5b803567ffffffffffffffff811115612aed57612aed61288b565b612b00601f8201601f191660200161289f565b818152866020838501011115612b14575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f8060408385031215612b44575f80fd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f612b9b6040830184612b53565b949350505050565b602081525f6127c86020830184612b53565b5f60208284031215612bc5575f80fd5b6127c8826127f8565b8015158114612105575f80fd5b5f8060408385031215612bec575f80fd5b612bf5836127f8565b91506020830135612c0581612bce565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201612c3557612c35612c10565b5060010190565b818103818111156125d0576125d0612c10565b634e487b7160e01b5f52603260045260245ffd5b808201808211156125d0576125d0612c10565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612caa575f80fd5b81516127c881612bce565b80820281158282048414176125d0576125d0612c10565b5f82612ce657634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612cfb575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9a2646970667358221220287ed1eda293901ad5f23b7e46e50582bc56101813fe50a963b2e23fe45e364064736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2D8E PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x212C ADD MSTORE DUP2 DUP2 PUSH2 0x2155 ADD MSTORE PUSH2 0x2299 ADD MSTORE PUSH2 0x2D8E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xAD8E5EC4 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD777CC6D GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xED061067 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xED061067 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xF0664A4F EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8AB JUMPI DUP1 PUSH4 0xFF3D65D9 EQ PUSH2 0x8CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xD9B998B4 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD8E5EC4 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xB47FF951 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xB9DAC1EB EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xBCCBC36C EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xC7FD5BF0 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xCE356A24 EQ PUSH2 0x806 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85F45250 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0x85F45250 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xA4F67B8B EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x78FD078D EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x7F111E60 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x7F70C5E7 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7FFE4D93 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x83AA9985 EQ PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 GT PUSH2 0x211 JUMPI DUP1 PUSH4 0x567E98F9 GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x6626B26D EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x67976974 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x5256DBBF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30CAC972 GT PUSH2 0x262 JUMPI DUP1 PUSH4 0x30CAC972 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x33244C2C EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x34107C87 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x3A71A9E4 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x3EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1934A83 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x1459457A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x188E07B9 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x2765DF7A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0x35C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0xF61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x131F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1663 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x18D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x799 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F6 PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x835 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x845 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x854 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1D55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x202E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x8C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x8E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x956 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9AC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9B5 DUP11 PUSH2 0x2108 JUMP JUMPDEST PUSH2 0x9BD PUSH2 0x2119 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1388 PUSH1 0x4 SSTORE PUSH2 0x1D4C PUSH1 0x5 SSTORE PUSH2 0x5DC PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xA64 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA96 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xAFF DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x11 SLOAD PUSH32 0xE1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F SWAP1 PUSH2 0xB35 DUP4 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xB7E JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0xBC4 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDD5557 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0xBEA JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3A46E2AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x512509D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC29 JUMPI PUSH2 0xC29 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x15 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0xC0E JUMP JUMPDEST POP DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x472714A70B748503A00EFA85A1C3081B2A3477CE3BE0227CB140455F82CCAEB6 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH0 SUB PUSH2 0xDAD JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0xDDD JUMPI PUSH1 0xB SLOAD PUSH1 0xA DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xDD9 PUSH2 0x1D55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0xE0D DUP3 PUSH2 0x21C5 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xE3D JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xECA SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0A SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0xA9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF6A PUSH2 0x228E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xFA2 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1013 TIMESTAMP DUP4 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x108A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x11C3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x98E712C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x11E4 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x120A SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0xA SLOAD PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x1330 PUSH0 PUSH2 0x2332 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x139D JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13BE SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1427 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x1421 DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x1476 SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP2 PUSH2 0xCF9 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x153F JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x15CC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160C SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1689 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x171A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17F0 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH4 0x636DC6B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1845 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x186B SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP1 PUSH2 0xB4D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x191D JUMPI PUSH1 0x40 MLOAD PUSH4 0x222A50F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1936 SWAP1 DUP4 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x196A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1986 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AA SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1A32 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1AC3 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1B54 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1C21 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ DUP1 ISZERO SWAP1 PUSH2 0x1C85 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x81ED1AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1CD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH32 0x7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1D7B JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D92 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI POP PUSH1 0x1 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FD92D8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1DFA PUSH2 0x2400 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1FE2 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FDA JUMPI PUSH1 0x3 SLOAD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1E72 SWAP1 PUSH2 0x2710 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E89 DUP7 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1EAC SWAP1 POP DUP2 DUP6 PUSH2 0x2C63 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EBF SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1EFA SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1F35 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1F46 DUP7 DUP4 PUSH2 0x2C63 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F81 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 DUP6 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732067726561746572207468656E20353025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1E04 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xEE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x2054 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x2074 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x20D3 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x2332 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2110 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x1330 PUSH2 0x25D6 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x21A7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2105 PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2227 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2224 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x224F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2289 DUP4 DUP4 PUSH2 0x2627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x2309 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AF DUP3 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23BC DUP5 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23C9 DUP6 DUP6 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23DC SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23F4 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x2412 PUSH1 0x2 SLOAD PUSH2 0x1388 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2421 DUP3 PUSH1 0x5 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2430 DUP4 PUSH1 0x6 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x243F DUP5 PUSH1 0x7 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2450 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x247A JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CA8D0DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x2489 SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH2 0x2495 DUP4 DUP6 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24A5 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24BD SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2514 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2538 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x255C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP4 SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT PUSH2 0x2591 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9B7220AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x25B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB015AA7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x25C2 DUP5 DUP7 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20D3 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2630 DUP3 PUSH2 0x267C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2289 DUP3 DUP3 PUSH2 0x26DF JUMP JUMPDEST PUSH2 0xDD9 PUSH2 0x2751 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x26B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26FB SWAP2 SWAP1 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2738 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2748 DUP6 DUP4 DUP4 PUSH2 0x2770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2785 JUMPI PUSH2 0x2780 DUP3 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x27C8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x279C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x27DF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x280E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2827 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2830 DUP7 PUSH2 0x27F8 JUMP JUMPDEST SWAP5 POP PUSH2 0x283E PUSH1 0x20 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x284C PUSH1 0x40 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x285A PUSH1 0x60 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2868 PUSH1 0x80 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2884 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28C8 JUMPI PUSH2 0x28C8 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x288B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2902 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2915 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x289F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x2936 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x295A JUMPI PUSH2 0x294C DUP2 PUSH2 0x27F8 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x293B JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2975 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x299B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29A9 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x29CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x29EC JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29D1 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2A16 DUP6 DUP3 DUP7 ADD PUSH2 0x28F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A47 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2A57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A7E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2AA8 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2AD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AED JUMPI PUSH2 0x2AED PUSH2 0x288B JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x289F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2B14 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2B9B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x27C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27C8 DUP3 PUSH2 0x27F8 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2105 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BEC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2BF5 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C05 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2C35 JUMPI PUSH2 0x2C35 PUSH2 0x2C10 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x27C8 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2CE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCB5671393C7C6980552E50A BALANCE 0xE7 PUSH25 0x921EB17D764C2E98FBF4D44FFF524712DEF9A2646970667358 0x22 SLT KECCAK256 0x28 PUSH31 0xD1EDA293901AD5F23B7E46E50582BC56101813FE50A963B2E23FE45E364064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "41720:17073:0:-:0;;;33362:4;33319:48;;45057:53;;;;;;;;;-1:-1:-1;45081:22:0;:20;:22::i;:::-;41720:17073;;7788:422;8947:21;7977:15;;;;;;;7973:76;;;8015:23;;-1:-1:-1;;;8015:23:0;;;;;;;;;;;7973:76;8062:14;;-1:-1:-1;;;;;8062:14:0;;;:34;8058:146;;8112:33;;-1:-1:-1;;;;;;8112:33:0;-1:-1:-1;;;;;8112:33:0;;;;;8164:29;;158:50:1;;;8164:29:0;;146:2:1;131:18;8164:29:0;;;;;;;8058:146;7837:373;7788:422::o;14:200:1:-;41720:17073:0;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_1178": {
									"entryPoint": null,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_346": {
									"entryPoint": 8456,
									"id": 346,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_373": {
									"entryPoint": 9759,
									"id": 373,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_1208": {
									"entryPoint": 8473,
									"id": 1208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2973": {
									"entryPoint": 8645,
									"id": 2973,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_175": {
									"entryPoint": 9686,
									"id": 175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1160": {
									"entryPoint": 10065,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_1284": {
									"entryPoint": 8846,
									"id": 1284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_414": {
									"entryPoint": 8919,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_1268": {
									"entryPoint": 8481,
									"id": 1268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_252": {
									"entryPoint": null,
									"id": 252,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_243": {
									"entryPoint": null,
									"id": 243,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_755": {
									"entryPoint": 10191,
									"id": 755,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_946": {
									"entryPoint": 9852,
									"id": 946,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_485": {
									"entryPoint": 9010,
									"id": 485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_1335": {
									"entryPoint": 8653,
									"id": 1335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addFunds_2142": {
									"entryPoint": 6356,
									"id": 2142,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addOwnership_1786": {
									"entryPoint": 5401,
									"id": 1786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addProjects_1740": {
									"entryPoint": 2672,
									"id": 1740,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTreasuery_1832": {
									"entryPoint": 3607,
									"id": 1832,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@alreadyAdded_1456": {
									"entryPoint": null,
									"id": 1456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blockUser_2785": {
									"entryPoint": 7163,
									"id": 2785,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculateFees_2178": {
									"entryPoint": 9122,
									"id": 2178,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@calculatePercentage_2647": {
									"entryPoint": 9581,
									"id": 2647,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@checkUpkeep_2452": {
									"entryPoint": 4847,
									"id": 2452,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@flowToTreasuryPercentage_1415": {
									"entryPoint": null,
									"id": 1415,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_675": {
									"entryPoint": 9951,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_787": {
									"entryPoint": null,
									"id": 787,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_919": {
									"entryPoint": null,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1704": {
									"entryPoint": 2293,
									"id": 1704,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@interval_1425": {
									"entryPoint": null,
									"id": 1425,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeStamp_1431": {
									"entryPoint": null,
									"id": 1431,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maintainceFeePercentage_1417": {
									"entryPoint": null,
									"id": 1417,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@multisigAddress_1421": {
									"entryPoint": null,
									"id": 1421,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@noOfUsers_1419": {
									"entryPoint": null,
									"id": 1419,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@odividentPayoutPercentage_1413": {
									"entryPoint": null,
									"id": 1413,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@off_2577": {
									"entryPoint": 4196,
									"id": 2577,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOne_1435": {
									"entryPoint": null,
									"id": 1435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerShipPoolAmount_1407": {
									"entryPoint": null,
									"id": 1407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerTwo_1437": {
									"entryPoint": null,
									"id": 1437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_397": {
									"entryPoint": null,
									"id": 397,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@perPoolCalculation_2424": {
									"entryPoint": 9216,
									"id": 2424,
									"parameterSlots": 0,
									"returnSlots": 3
								},
								"@performUpkeep_2505": {
									"entryPoint": 3333,
									"id": 2505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@proxiableUUID_1226": {
									"entryPoint": 3937,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@reStakeTokens_2083": {
									"entryPoint": 6021,
									"id": 2083,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@realInterval_1427": {
									"entryPoint": null,
									"id": 1427,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_428": {
									"entryPoint": 4895,
									"id": 428,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_forwarderAddress_1433": {
									"entryPoint": null,
									"id": 1433,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setForwarderAddress_2607": {
									"entryPoint": 6958,
									"id": 2607,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setInterval_2561": {
									"entryPoint": 3964,
									"id": 2561,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTeasueryPercentages_2818": {
									"entryPoint": 8238,
									"id": 2818,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setflowToTreasuryPercentage_2899": {
									"entryPoint": 6668,
									"id": 2899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setmaintainceFeePercentage_2926": {
									"entryPoint": 5731,
									"id": 2926,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setodividentPayoutPercentage_2872": {
									"entryPoint": 6813,
									"id": 2872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@settdividentPayoutPercentage_2845": {
									"entryPoint": 5876,
									"id": 2845,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakeTokensByOwner_2006": {
									"entryPoint": 2904,
									"id": 2006,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeTokens_1923": {
									"entryPoint": 4914,
									"id": 1923,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@startingTime_1429": {
									"entryPoint": null,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tPPercentages_1464": {
									"entryPoint": null,
									"id": 1464,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tdividentPayoutPercentage_1411": {
									"entryPoint": null,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalProjects_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStakedAmount_1409": {
									"entryPoint": null,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalUsers_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_456": {
									"entryPoint": 8395,
									"id": 456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasuryPoolAmount_1405": {
									"entryPoint": null,
									"id": 1405,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1246": {
									"entryPoint": 3580,
									"id": 1246,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_980": {
									"entryPoint": 9767,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usdcToken_1403": {
									"entryPoint": null,
									"id": 1403,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRegistered_1469": {
									"entryPoint": null,
									"id": 1469,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userWithdrawAmoount_2720": {
									"entryPoint": 4332,
									"id": 2720,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_715": {
									"entryPoint": 10096,
									"id": 715,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@weeklyTransfer_2332": {
									"entryPoint": 7509,
									"id": 2332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 10232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 10483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 10259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 11227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 10894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 10596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 11499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 10784,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10356,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 11059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_bytes": {
									"entryPoint": 11091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11382,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11137,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IBEP20_$1392__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 10448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 11468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 11445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 11324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 11300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 11280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 11214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13602:1",
										"nodeType": "YulBlock",
										"src": "0:13602:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:76:1",
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nativeSrc": "125:26:1",
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:1",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nativeSrc": "133:18:1",
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "178:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nativeSrc": "160:25:1",
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nativeSrc": "160:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "14:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:1",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:1",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:1",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nativeSrc": "312:102:1",
													"nodeType": "YulBlock",
													"src": "312:102:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "364:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "364:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "379:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "379:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "395:3:1",
																								"nodeType": "YulLiteral",
																								"src": "395:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "400:1:1",
																								"nodeType": "YulLiteral",
																								"src": "400:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "391:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "391:3:1"
																						},
																						"nativeSrc": "391:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "391:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "404:1:1",
																						"nodeType": "YulLiteral",
																						"src": "404:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "387:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "387:3:1"
																				},
																				"nativeSrc": "387:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "387:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "375:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "375:3:1"
																		},
																		"nativeSrc": "375:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "375:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:1"
																},
																"nativeSrc": "357:51:1",
																"nodeType": "YulFunctionCall",
																"src": "357:51:1"
															},
															"nativeSrc": "357:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "357:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IBEP20_$1392__to_t_address__fromStack_reversed",
												"nativeSrc": "196:218:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "281:9:1",
														"nodeType": "YulTypedName",
														"src": "281:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "292:6:1",
														"nodeType": "YulTypedName",
														"src": "292:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "303:4:1",
														"nodeType": "YulTypedName",
														"src": "303:4:1",
														"type": ""
													}
												],
												"src": "196:218:1"
											},
											{
												"body": {
													"nativeSrc": "468:124:1",
													"nodeType": "YulBlock",
													"src": "468:124:1",
													"statements": [
														{
															"nativeSrc": "478:29:1",
															"nodeType": "YulAssignment",
															"src": "478:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "500:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "500:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "487:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "487:12:1"
																},
																"nativeSrc": "487:20:1",
																"nodeType": "YulFunctionCall",
																"src": "487:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "478:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "478:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "570:16:1",
																"nodeType": "YulBlock",
																"src": "570:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "579:1:1",
																					"nodeType": "YulLiteral",
																					"src": "579:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "582:1:1",
																					"nodeType": "YulLiteral",
																					"src": "582:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "572:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "572:6:1"
																			},
																			"nativeSrc": "572:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "572:12:1"
																		},
																		"nativeSrc": "572:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "572:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "529:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "529:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "540:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "540:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "555:3:1",
																										"nodeType": "YulLiteral",
																										"src": "555:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "560:1:1",
																										"nodeType": "YulLiteral",
																										"src": "560:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "551:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "551:3:1"
																								},
																								"nativeSrc": "551:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "551:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "564:1:1",
																								"nodeType": "YulLiteral",
																								"src": "564:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "547:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "547:3:1"
																						},
																						"nativeSrc": "547:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "547:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "536:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "536:3:1"
																				},
																				"nativeSrc": "536:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "536:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "526:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "526:2:1"
																		},
																		"nativeSrc": "526:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "526:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "519:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "519:6:1"
																},
																"nativeSrc": "519:50:1",
																"nodeType": "YulFunctionCall",
																"src": "519:50:1"
															},
															"nativeSrc": "516:70:1",
															"nodeType": "YulIf",
															"src": "516:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "419:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "458:5:1",
														"nodeType": "YulTypedName",
														"src": "458:5:1",
														"type": ""
													}
												],
												"src": "419:173:1"
											},
											{
												"body": {
													"nativeSrc": "735:346:1",
													"nodeType": "YulBlock",
													"src": "735:346:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "782:16:1",
																"nodeType": "YulBlock",
																"src": "782:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "791:1:1",
																					"nodeType": "YulLiteral",
																					"src": "791:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "794:1:1",
																					"nodeType": "YulLiteral",
																					"src": "794:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "784:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "784:6:1"
																			},
																			"nativeSrc": "784:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "784:12:1"
																		},
																		"nativeSrc": "784:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "784:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "756:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "756:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "765:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "765:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "752:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "752:3:1"
																		},
																		"nativeSrc": "752:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "752:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "777:3:1",
																		"nodeType": "YulLiteral",
																		"src": "777:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "748:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:1"
																},
																"nativeSrc": "748:33:1",
																"nodeType": "YulFunctionCall",
																"src": "748:33:1"
															},
															"nativeSrc": "745:53:1",
															"nodeType": "YulIf",
															"src": "745:53:1"
														},
														{
															"nativeSrc": "807:39:1",
															"nodeType": "YulAssignment",
															"src": "807:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "836:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "836:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "817:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "817:18:1"
																},
																"nativeSrc": "817:29:1",
																"nodeType": "YulFunctionCall",
																"src": "817:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "807:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:1"
																}
															]
														},
														{
															"nativeSrc": "855:48:1",
															"nodeType": "YulAssignment",
															"src": "855:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "888:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "888:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "899:2:1",
																				"nodeType": "YulLiteral",
																				"src": "899:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "884:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "884:3:1"
																		},
																		"nativeSrc": "884:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "884:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "865:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "865:18:1"
																},
																"nativeSrc": "865:38:1",
																"nodeType": "YulFunctionCall",
																"src": "865:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "855:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:1"
																}
															]
														},
														{
															"nativeSrc": "912:48:1",
															"nodeType": "YulAssignment",
															"src": "912:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "945:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "945:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "956:2:1",
																				"nodeType": "YulLiteral",
																				"src": "956:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "941:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:1"
																		},
																		"nativeSrc": "941:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "941:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "922:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "922:18:1"
																},
																"nativeSrc": "922:38:1",
																"nodeType": "YulFunctionCall",
																"src": "922:38:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "912:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "912:6:1"
																}
															]
														},
														{
															"nativeSrc": "969:48:1",
															"nodeType": "YulAssignment",
															"src": "969:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1002:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1002:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1013:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1013:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "998:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "998:3:1"
																		},
																		"nativeSrc": "998:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "998:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "979:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "979:18:1"
																},
																"nativeSrc": "979:38:1",
																"nodeType": "YulFunctionCall",
																"src": "979:38:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "969:6:1"
																}
															]
														},
														{
															"nativeSrc": "1026:49:1",
															"nodeType": "YulAssignment",
															"src": "1026:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1059:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1059:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1070:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1070:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1055:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1055:3:1"
																		},
																		"nativeSrc": "1055:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1055:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1036:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1036:18:1"
																},
																"nativeSrc": "1036:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1036:39:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1026:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_address",
												"nativeSrc": "597:484:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "669:9:1",
														"nodeType": "YulTypedName",
														"src": "669:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "680:7:1",
														"nodeType": "YulTypedName",
														"src": "680:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "692:6:1",
														"nodeType": "YulTypedName",
														"src": "692:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "700:6:1",
														"nodeType": "YulTypedName",
														"src": "700:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "708:6:1",
														"nodeType": "YulTypedName",
														"src": "708:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "716:6:1",
														"nodeType": "YulTypedName",
														"src": "716:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "724:6:1",
														"nodeType": "YulTypedName",
														"src": "724:6:1",
														"type": ""
													}
												],
												"src": "597:484:1"
											},
											{
												"body": {
													"nativeSrc": "1156:156:1",
													"nodeType": "YulBlock",
													"src": "1156:156:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1202:16:1",
																"nodeType": "YulBlock",
																"src": "1202:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1211:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1211:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1214:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1214:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1204:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1204:6:1"
																			},
																			"nativeSrc": "1204:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1204:12:1"
																		},
																		"nativeSrc": "1204:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1204:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1177:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1177:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1186:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1186:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1173:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1173:3:1"
																		},
																		"nativeSrc": "1173:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1173:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1198:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1198:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1169:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1169:3:1"
																},
																"nativeSrc": "1169:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1169:32:1"
															},
															"nativeSrc": "1166:52:1",
															"nodeType": "YulIf",
															"src": "1166:52:1"
														},
														{
															"nativeSrc": "1227:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1227:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1240:1:1",
																"nodeType": "YulLiteral",
																"src": "1240:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1231:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1231:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1250:32:1",
															"nodeType": "YulAssignment",
															"src": "1250:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1272:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1272:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1259:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1259:12:1"
																},
																"nativeSrc": "1259:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1259:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1250:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1250:5:1"
																}
															]
														},
														{
															"nativeSrc": "1291:15:1",
															"nodeType": "YulAssignment",
															"src": "1291:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1301:5:1",
																"nodeType": "YulIdentifier",
																"src": "1301:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1086:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:1",
														"nodeType": "YulTypedName",
														"src": "1122:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1133:7:1",
														"nodeType": "YulTypedName",
														"src": "1133:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1145:6:1",
														"nodeType": "YulTypedName",
														"src": "1145:6:1",
														"type": ""
													}
												],
												"src": "1086:226:1"
											},
											{
												"body": {
													"nativeSrc": "1418:102:1",
													"nodeType": "YulBlock",
													"src": "1418:102:1",
													"statements": [
														{
															"nativeSrc": "1428:26:1",
															"nodeType": "YulAssignment",
															"src": "1428:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1440:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1440:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1451:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1451:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1436:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1436:3:1"
																},
																"nativeSrc": "1436:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1436:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1428:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1428:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1470:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1470:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1485:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1485:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1501:3:1",
																								"nodeType": "YulLiteral",
																								"src": "1501:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1506:1:1",
																								"nodeType": "YulLiteral",
																								"src": "1506:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1497:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1497:3:1"
																						},
																						"nativeSrc": "1497:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "1497:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1510:1:1",
																						"nodeType": "YulLiteral",
																						"src": "1510:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1493:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1493:3:1"
																				},
																				"nativeSrc": "1493:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1493:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1481:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1481:3:1"
																		},
																		"nativeSrc": "1481:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1481:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1463:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:1"
																},
																"nativeSrc": "1463:51:1",
																"nodeType": "YulFunctionCall",
																"src": "1463:51:1"
															},
															"nativeSrc": "1463:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "1463:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1317:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1387:9:1",
														"nodeType": "YulTypedName",
														"src": "1387:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1398:6:1",
														"nodeType": "YulTypedName",
														"src": "1398:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1409:4:1",
														"nodeType": "YulTypedName",
														"src": "1409:4:1",
														"type": ""
													}
												],
												"src": "1317:203:1"
											},
											{
												"body": {
													"nativeSrc": "1557:95:1",
													"nodeType": "YulBlock",
													"src": "1557:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1574:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1581:3:1",
																				"nodeType": "YulLiteral",
																				"src": "1581:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1586:10:1",
																				"nodeType": "YulLiteral",
																				"src": "1586:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1577:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1577:3:1"
																		},
																		"nativeSrc": "1577:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1577:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1567:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:1"
																},
																"nativeSrc": "1567:31:1",
																"nodeType": "YulFunctionCall",
																"src": "1567:31:1"
															},
															"nativeSrc": "1567:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "1567:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1614:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1614:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1617:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1617:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1607:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1607:6:1"
																},
																"nativeSrc": "1607:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1607:15:1"
															},
															"nativeSrc": "1607:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1607:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1638:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1641:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1641:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1631:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1631:6:1"
																},
																"nativeSrc": "1631:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1631:15:1"
															},
															"nativeSrc": "1631:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1631:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1525:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1525:127:1"
											},
											{
												"body": {
													"nativeSrc": "1702:230:1",
													"nodeType": "YulBlock",
													"src": "1702:230:1",
													"statements": [
														{
															"nativeSrc": "1712:19:1",
															"nodeType": "YulAssignment",
															"src": "1712:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1728:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1728:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1722:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1722:5:1"
																},
																"nativeSrc": "1722:9:1",
																"nodeType": "YulFunctionCall",
																"src": "1722:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1712:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:1"
																}
															]
														},
														{
															"nativeSrc": "1740:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1740:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1762:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1762:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "1778:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "1778:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1784:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1784:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1774:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1774:3:1"
																				},
																				"nativeSrc": "1774:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1774:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1793:2:1",
																						"nodeType": "YulLiteral",
																						"src": "1793:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1789:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1789:3:1"
																				},
																				"nativeSrc": "1789:7:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1789:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1770:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1770:3:1"
																		},
																		"nativeSrc": "1770:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1770:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1758:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1758:3:1"
																},
																"nativeSrc": "1758:40:1",
																"nodeType": "YulFunctionCall",
																"src": "1758:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1744:10:1",
																	"nodeType": "YulTypedName",
																	"src": "1744:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1873:22:1",
																"nodeType": "YulBlock",
																"src": "1873:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1875:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1875:16:1"
																			},
																			"nativeSrc": "1875:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1875:18:1"
																		},
																		"nativeSrc": "1875:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1875:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1816:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1816:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1828:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1828:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1813:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1813:2:1"
																		},
																		"nativeSrc": "1813:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1813:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1852:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1852:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1864:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1864:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1849:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1849:2:1"
																		},
																		"nativeSrc": "1849:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1849:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1810:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1810:2:1"
																},
																"nativeSrc": "1810:62:1",
																"nodeType": "YulFunctionCall",
																"src": "1810:62:1"
															},
															"nativeSrc": "1807:88:1",
															"nodeType": "YulIf",
															"src": "1807:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1911:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1911:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1915:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1915:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1904:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:1"
																},
																"nativeSrc": "1904:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1904:22:1"
															},
															"nativeSrc": "1904:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1904:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1657:275:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1682:4:1",
														"nodeType": "YulTypedName",
														"src": "1682:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1691:6:1",
														"nodeType": "YulTypedName",
														"src": "1691:6:1",
														"type": ""
													}
												],
												"src": "1657:275:1"
											},
											{
												"body": {
													"nativeSrc": "2006:114:1",
													"nodeType": "YulBlock",
													"src": "2006:114:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2050:22:1",
																"nodeType": "YulBlock",
																"src": "2050:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2052:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "2052:16:1"
																			},
																			"nativeSrc": "2052:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2052:18:1"
																		},
																		"nativeSrc": "2052:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2052:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2022:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2022:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2030:18:1",
																		"nodeType": "YulLiteral",
																		"src": "2030:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2019:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2019:2:1"
																},
																"nativeSrc": "2019:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2019:30:1"
															},
															"nativeSrc": "2016:56:1",
															"nodeType": "YulIf",
															"src": "2016:56:1"
														},
														{
															"nativeSrc": "2081:33:1",
															"nodeType": "YulAssignment",
															"src": "2081:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2097:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2097:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2100:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2100:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2093:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2093:3:1"
																		},
																		"nativeSrc": "2093:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2093:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2109:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2109:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2089:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2089:3:1"
																},
																"nativeSrc": "2089:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2089:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2081:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nativeSrc": "1937:183:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1986:6:1",
														"nodeType": "YulTypedName",
														"src": "1986:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1997:4:1",
														"nodeType": "YulTypedName",
														"src": "1997:4:1",
														"type": ""
													}
												],
												"src": "1937:183:1"
											},
											{
												"body": {
													"nativeSrc": "2189:611:1",
													"nodeType": "YulBlock",
													"src": "2189:611:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2238:16:1",
																"nodeType": "YulBlock",
																"src": "2238:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2247:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2247:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2250:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2240:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2240:6:1"
																			},
																			"nativeSrc": "2240:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2240:12:1"
																		},
																		"nativeSrc": "2240:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2240:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2217:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2217:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2225:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2225:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2213:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2213:3:1"
																				},
																				"nativeSrc": "2213:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2213:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2232:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2232:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2209:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:1"
																		},
																		"nativeSrc": "2209:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2209:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2202:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:1"
																},
																"nativeSrc": "2202:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2202:35:1"
															},
															"nativeSrc": "2199:55:1",
															"nodeType": "YulIf",
															"src": "2199:55:1"
														},
														{
															"nativeSrc": "2263:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2263:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2290:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2277:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2277:12:1"
																},
																"nativeSrc": "2277:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2277:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2267:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2267:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2306:75:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2306:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2373:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2373:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "2333:39:1",
																			"nodeType": "YulIdentifier",
																			"src": "2333:39:1"
																		},
																		"nativeSrc": "2333:47:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:47:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "2317:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "2317:15:1"
																},
																"nativeSrc": "2317:64:1",
																"nodeType": "YulFunctionCall",
																"src": "2317:64:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2310:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2310:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2390:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2390:18:1",
															"value": {
																"name": "dst",
																"nativeSrc": "2405:3:1",
																"nodeType": "YulIdentifier",
																"src": "2405:3:1"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "2394:7:1",
																	"nodeType": "YulTypedName",
																	"src": "2394:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2424:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2424:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2429:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2429:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2417:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:1"
																},
																"nativeSrc": "2417:19:1",
																"nodeType": "YulFunctionCall",
																"src": "2417:19:1"
															},
															"nativeSrc": "2417:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "2417:19:1"
														},
														{
															"nativeSrc": "2445:21:1",
															"nodeType": "YulAssignment",
															"src": "2445:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2456:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2456:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2461:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2461:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2452:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:1"
																},
																"nativeSrc": "2452:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2452:14:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "2445:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2445:3:1"
																}
															]
														},
														{
															"nativeSrc": "2475:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2475:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2497:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2497:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2509:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2509:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2512:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2512:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2505:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2505:3:1"
																				},
																				"nativeSrc": "2505:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2505:14:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2493:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2493:3:1"
																		},
																		"nativeSrc": "2493:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2493:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2522:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2522:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2489:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2489:3:1"
																},
																"nativeSrc": "2489:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2489:38:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "2479:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2479:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2555:16:1",
																"nodeType": "YulBlock",
																"src": "2555:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2564:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2567:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2567:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2557:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2557:6:1"
																			},
																			"nativeSrc": "2557:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2557:12:1"
																		},
																		"nativeSrc": "2557:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2557:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2542:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2542:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2550:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2550:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2539:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2539:2:1"
																},
																"nativeSrc": "2539:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2539:15:1"
															},
															"nativeSrc": "2536:35:1",
															"nodeType": "YulIf",
															"src": "2536:35:1"
														},
														{
															"nativeSrc": "2580:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2580:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2595:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2595:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2603:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2603:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:3:1"
																},
																"nativeSrc": "2591:17:1",
																"nodeType": "YulFunctionCall",
																"src": "2591:17:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "2584:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2584:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2675:94:1",
																"nodeType": "YulBlock",
																"src": "2675:94:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2696:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2696:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "2720:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2720:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "2701:18:1",
																						"nodeType": "YulIdentifier",
																						"src": "2701:18:1"
																					},
																					"nativeSrc": "2701:23:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2701:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2689:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2689:6:1"
																			},
																			"nativeSrc": "2689:36:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2689:36:1"
																		},
																		"nativeSrc": "2689:36:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2689:36:1"
																	},
																	{
																		"nativeSrc": "2738:21:1",
																		"nodeType": "YulAssignment",
																		"src": "2738:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "2749:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2749:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2754:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2754:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2745:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2745:3:1"
																			},
																			"nativeSrc": "2745:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2745:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "2738:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2738:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2628:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2628:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "2633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2633:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2625:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2625:2:1"
																},
																"nativeSrc": "2625:15:1",
																"nodeType": "YulFunctionCall",
																"src": "2625:15:1"
															},
															"nativeSrc": "2617:152:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2641:25:1",
																"nodeType": "YulBlock",
																"src": "2641:25:1",
																"statements": [
																	{
																		"nativeSrc": "2643:21:1",
																		"nodeType": "YulAssignment",
																		"src": "2643:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "2654:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2654:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2659:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2659:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2650:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2650:3:1"
																			},
																			"nativeSrc": "2650:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2650:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "2643:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2643:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2621:3:1",
																"nodeType": "YulBlock",
																"src": "2621:3:1",
																"statements": []
															},
															"src": "2617:152:1"
														},
														{
															"nativeSrc": "2778:16:1",
															"nodeType": "YulAssignment",
															"src": "2778:16:1",
															"value": {
																"name": "array_1",
																"nativeSrc": "2787:7:1",
																"nodeType": "YulIdentifier",
																"src": "2787:7:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2778:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "2125:675:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2163:6:1",
														"nodeType": "YulTypedName",
														"src": "2163:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2171:3:1",
														"nodeType": "YulTypedName",
														"src": "2171:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2179:5:1",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"src": "2125:675:1"
											},
											{
												"body": {
													"nativeSrc": "2942:1057:1",
													"nodeType": "YulBlock",
													"src": "2942:1057:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2988:16:1",
																"nodeType": "YulBlock",
																"src": "2988:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2997:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3000:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3000:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2990:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2990:6:1"
																			},
																			"nativeSrc": "2990:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2990:12:1"
																		},
																		"nativeSrc": "2990:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2990:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2963:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2963:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2972:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2959:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2959:3:1"
																		},
																		"nativeSrc": "2959:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2984:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2984:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2955:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2955:3:1"
																},
																"nativeSrc": "2955:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2955:32:1"
															},
															"nativeSrc": "2952:52:1",
															"nodeType": "YulIf",
															"src": "2952:52:1"
														},
														{
															"nativeSrc": "3013:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3013:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3040:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3040:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3027:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3027:12:1"
																},
																"nativeSrc": "3027:23:1",
																"nodeType": "YulFunctionCall",
																"src": "3027:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3017:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3017:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3093:16:1",
																"nodeType": "YulBlock",
																"src": "3093:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3102:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3102:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3105:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3095:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:1"
																			},
																			"nativeSrc": "3095:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3095:12:1"
																		},
																		"nativeSrc": "3095:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3095:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3065:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3065:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3073:18:1",
																		"nodeType": "YulLiteral",
																		"src": "3073:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3062:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3062:2:1"
																},
																"nativeSrc": "3062:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3062:30:1"
															},
															"nativeSrc": "3059:50:1",
															"nodeType": "YulIf",
															"src": "3059:50:1"
														},
														{
															"nativeSrc": "3118:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3118:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3132:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3132:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3143:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3143:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3128:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:3:1"
																},
																"nativeSrc": "3128:22:1",
																"nodeType": "YulFunctionCall",
																"src": "3128:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3122:2:1",
																	"nodeType": "YulTypedName",
																	"src": "3122:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3198:16:1",
																"nodeType": "YulBlock",
																"src": "3198:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3207:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3207:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3210:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3210:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3200:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3200:6:1"
																			},
																			"nativeSrc": "3200:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3200:12:1"
																		},
																		"nativeSrc": "3200:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3200:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3177:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "3177:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3181:4:1",
																						"nodeType": "YulLiteral",
																						"src": "3181:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3173:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3173:3:1"
																				},
																				"nativeSrc": "3173:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3173:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3188:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3169:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3169:3:1"
																		},
																		"nativeSrc": "3169:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3162:6:1"
																},
																"nativeSrc": "3162:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3162:35:1"
															},
															"nativeSrc": "3159:55:1",
															"nodeType": "YulIf",
															"src": "3159:55:1"
														},
														{
															"nativeSrc": "3223:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3223:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3250:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3250:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3237:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3237:12:1"
																},
																"nativeSrc": "3237:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3237:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3227:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3227:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3262:75:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3262:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3329:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3329:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_uint256_dyn",
																			"nativeSrc": "3289:39:1",
																			"nodeType": "YulIdentifier",
																			"src": "3289:39:1"
																		},
																		"nativeSrc": "3289:47:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3289:47:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3273:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "3273:15:1"
																},
																"nativeSrc": "3273:64:1",
																"nodeType": "YulFunctionCall",
																"src": "3273:64:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3266:3:1",
																	"nodeType": "YulTypedName",
																	"src": "3266:3:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3346:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3346:16:1",
															"value": {
																"name": "dst",
																"nativeSrc": "3359:3:1",
																"nodeType": "YulIdentifier",
																"src": "3359:3:1"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "3350:5:1",
																	"nodeType": "YulTypedName",
																	"src": "3350:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3378:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3378:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3383:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3383:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3371:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:1"
																},
																"nativeSrc": "3371:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3371:19:1"
															},
															"nativeSrc": "3371:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "3371:19:1"
														},
														{
															"nativeSrc": "3399:21:1",
															"nodeType": "YulAssignment",
															"src": "3399:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "3410:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3410:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3415:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3415:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3406:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3406:3:1"
																},
																"nativeSrc": "3406:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3406:14:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "3399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3399:3:1"
																}
															]
														},
														{
															"nativeSrc": "3429:48:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3429:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3451:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3451:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3459:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3459:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3462:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3462:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3455:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3455:3:1"
																				},
																				"nativeSrc": "3455:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:14:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3447:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:1"
																		},
																		"nativeSrc": "3447:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3447:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3472:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3472:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3443:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3443:3:1"
																},
																"nativeSrc": "3443:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3443:34:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "3433:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3433:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3509:16:1",
																"nodeType": "YulBlock",
																"src": "3509:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3518:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3518:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3521:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3521:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3511:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3511:6:1"
																			},
																			"nativeSrc": "3511:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3511:12:1"
																		},
																		"nativeSrc": "3511:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3511:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3492:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3492:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3500:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3500:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3489:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3489:2:1"
																},
																"nativeSrc": "3489:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3489:19:1"
															},
															"nativeSrc": "3486:39:1",
															"nodeType": "YulIf",
															"src": "3486:39:1"
														},
														{
															"nativeSrc": "3534:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3534:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3549:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "3549:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3553:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3553:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3545:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3545:3:1"
																},
																"nativeSrc": "3545:13:1",
																"nodeType": "YulFunctionCall",
																"src": "3545:13:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "3538:3:1",
																	"nodeType": "YulTypedName",
																	"src": "3538:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3625:142:1",
																"nodeType": "YulBlock",
																"src": "3625:142:1",
																"statements": [
																	{
																		"nativeSrc": "3639:14:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3639:14:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3652:1:1",
																			"nodeType": "YulLiteral",
																			"src": "3652:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "3643:5:1",
																				"nodeType": "YulTypedName",
																				"src": "3643:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3666:26:1",
																		"nodeType": "YulAssignment",
																		"src": "3666:26:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3688:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3688:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "3675:12:1",
																				"nodeType": "YulIdentifier",
																				"src": "3675:12:1"
																			},
																			"nativeSrc": "3675:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3675:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "3666:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3666:5:1"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3712:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3712:3:1"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "3717:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3717:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3705:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3705:6:1"
																			},
																			"nativeSrc": "3705:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3705:18:1"
																		},
																		"nativeSrc": "3705:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3705:18:1"
																	},
																	{
																		"nativeSrc": "3736:21:1",
																		"nodeType": "YulAssignment",
																		"src": "3736:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "3747:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3747:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3752:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3752:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3743:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3743:3:1"
																			},
																			"nativeSrc": "3743:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3743:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "3736:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3736:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3578:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3578:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "3583:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3583:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3575:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3575:2:1"
																},
																"nativeSrc": "3575:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3575:15:1"
															},
															"nativeSrc": "3567:200:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3591:25:1",
																"nodeType": "YulBlock",
																"src": "3591:25:1",
																"statements": [
																	{
																		"nativeSrc": "3593:21:1",
																		"nodeType": "YulAssignment",
																		"src": "3593:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "3604:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3604:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3609:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3609:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3600:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3600:3:1"
																			},
																			"nativeSrc": "3600:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3600:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "3593:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3593:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3571:3:1",
																"nodeType": "YulBlock",
																"src": "3571:3:1",
																"statements": []
															},
															"src": "3567:200:1"
														},
														{
															"nativeSrc": "3776:15:1",
															"nodeType": "YulAssignment",
															"src": "3776:15:1",
															"value": {
																"name": "array",
																"nativeSrc": "3786:5:1",
																"nodeType": "YulIdentifier",
																"src": "3786:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3776:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:1"
																}
															]
														},
														{
															"nativeSrc": "3800:50:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3800:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3833:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3833:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3844:4:1",
																				"nodeType": "YulLiteral",
																				"src": "3844:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3829:3:1"
																		},
																		"nativeSrc": "3829:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3829:20:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3816:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3816:12:1"
																},
																"nativeSrc": "3816:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3816:34:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "3804:8:1",
																	"nodeType": "YulTypedName",
																	"src": "3804:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3895:16:1",
																"nodeType": "YulBlock",
																"src": "3895:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3904:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3904:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3907:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3907:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3897:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3897:6:1"
																			},
																			"nativeSrc": "3897:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3897:12:1"
																		},
																		"nativeSrc": "3897:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3897:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "3865:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "3865:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3875:18:1",
																		"nodeType": "YulLiteral",
																		"src": "3875:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3862:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3862:2:1"
																},
																"nativeSrc": "3862:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3862:32:1"
															},
															"nativeSrc": "3859:52:1",
															"nodeType": "YulIf",
															"src": "3859:52:1"
														},
														{
															"nativeSrc": "3920:73:1",
															"nodeType": "YulAssignment",
															"src": "3920:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3963:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3963:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "3974:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "3974:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3959:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3959:3:1"
																		},
																		"nativeSrc": "3959:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3985:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3985:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "3930:28:1",
																	"nodeType": "YulIdentifier",
																	"src": "3930:28:1"
																},
																"nativeSrc": "3930:63:1",
																"nodeType": "YulFunctionCall",
																"src": "3930:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3920:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3920:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "2805:1194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2900:9:1",
														"nodeType": "YulTypedName",
														"src": "2900:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2911:7:1",
														"nodeType": "YulTypedName",
														"src": "2911:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2923:6:1",
														"nodeType": "YulTypedName",
														"src": "2923:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2931:6:1",
														"nodeType": "YulTypedName",
														"src": "2931:6:1",
														"type": ""
													}
												],
												"src": "2805:1194:1"
											},
											{
												"body": {
													"nativeSrc": "4093:497:1",
													"nodeType": "YulBlock",
													"src": "4093:497:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4139:16:1",
																"nodeType": "YulBlock",
																"src": "4139:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4148:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4148:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4151:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4151:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4141:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:1"
																			},
																			"nativeSrc": "4141:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4141:12:1"
																		},
																		"nativeSrc": "4141:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4141:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4114:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4114:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4123:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4123:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4110:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:1"
																		},
																		"nativeSrc": "4110:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4110:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4135:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4135:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4106:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:1"
																},
																"nativeSrc": "4106:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4106:32:1"
															},
															"nativeSrc": "4103:52:1",
															"nodeType": "YulIf",
															"src": "4103:52:1"
														},
														{
															"nativeSrc": "4164:37:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4164:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4191:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4191:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4178:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4178:12:1"
																},
																"nativeSrc": "4178:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4178:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4168:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4168:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4244:16:1",
																"nodeType": "YulBlock",
																"src": "4244:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4253:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4253:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4256:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4256:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4246:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4246:6:1"
																			},
																			"nativeSrc": "4246:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4246:12:1"
																		},
																		"nativeSrc": "4246:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4246:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4216:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4224:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4224:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4213:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4213:2:1"
																},
																"nativeSrc": "4213:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4213:30:1"
															},
															"nativeSrc": "4210:50:1",
															"nodeType": "YulIf",
															"src": "4210:50:1"
														},
														{
															"nativeSrc": "4269:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4269:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4283:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4283:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4294:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4294:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4279:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4279:3:1"
																},
																"nativeSrc": "4279:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4279:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4273:2:1",
																	"nodeType": "YulTypedName",
																	"src": "4273:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4349:16:1",
																"nodeType": "YulBlock",
																"src": "4349:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4358:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4358:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4361:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4361:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4351:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4351:6:1"
																			},
																			"nativeSrc": "4351:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4351:12:1"
																		},
																		"nativeSrc": "4351:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4351:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4328:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4328:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4332:4:1",
																						"nodeType": "YulLiteral",
																						"src": "4332:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4324:3:1"
																				},
																				"nativeSrc": "4324:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4324:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4339:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4339:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4320:3:1"
																		},
																		"nativeSrc": "4320:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4320:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4313:6:1"
																},
																"nativeSrc": "4313:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4313:35:1"
															},
															"nativeSrc": "4310:55:1",
															"nodeType": "YulIf",
															"src": "4310:55:1"
														},
														{
															"nativeSrc": "4374:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4374:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4401:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4401:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4388:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4388:12:1"
																},
																"nativeSrc": "4388:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4388:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4378:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4378:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4447:16:1",
																"nodeType": "YulBlock",
																"src": "4447:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4456:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4459:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4459:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4449:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4449:6:1"
																			},
																			"nativeSrc": "4449:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4449:12:1"
																		},
																		"nativeSrc": "4449:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4449:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4419:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4419:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4427:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4427:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4416:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4416:2:1"
																},
																"nativeSrc": "4416:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4416:30:1"
															},
															"nativeSrc": "4413:50:1",
															"nodeType": "YulIf",
															"src": "4413:50:1"
														},
														{
															"body": {
																"nativeSrc": "4513:16:1",
																"nodeType": "YulBlock",
																"src": "4513:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4522:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4522:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4525:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4525:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4515:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4515:6:1"
																			},
																			"nativeSrc": "4515:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4515:12:1"
																		},
																		"nativeSrc": "4515:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4515:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4486:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4486:2:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4490:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4490:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4482:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4482:3:1"
																				},
																				"nativeSrc": "4482:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4482:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4499:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4499:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4478:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4478:3:1"
																		},
																		"nativeSrc": "4478:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4478:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4504:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "4504:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4475:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4475:2:1"
																},
																"nativeSrc": "4475:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4475:37:1"
															},
															"nativeSrc": "4472:57:1",
															"nodeType": "YulIf",
															"src": "4472:57:1"
														},
														{
															"nativeSrc": "4538:21:1",
															"nodeType": "YulAssignment",
															"src": "4538:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4552:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "4552:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4556:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4548:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4548:3:1"
																},
																"nativeSrc": "4548:11:1",
																"nodeType": "YulFunctionCall",
																"src": "4548:11:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4538:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4538:6:1"
																}
															]
														},
														{
															"nativeSrc": "4568:16:1",
															"nodeType": "YulAssignment",
															"src": "4568:16:1",
															"value": {
																"name": "length",
																"nativeSrc": "4578:6:1",
																"nodeType": "YulIdentifier",
																"src": "4578:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4568:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4568:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "4004:586:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4051:9:1",
														"nodeType": "YulTypedName",
														"src": "4051:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4062:7:1",
														"nodeType": "YulTypedName",
														"src": "4062:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4074:6:1",
														"nodeType": "YulTypedName",
														"src": "4074:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4082:6:1",
														"nodeType": "YulTypedName",
														"src": "4082:6:1",
														"type": ""
													}
												],
												"src": "4004:586:1"
											},
											{
												"body": {
													"nativeSrc": "4691:743:1",
													"nodeType": "YulBlock",
													"src": "4691:743:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4737:16:1",
																"nodeType": "YulBlock",
																"src": "4737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4746:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4749:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4739:6:1"
																			},
																			"nativeSrc": "4739:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4739:12:1"
																		},
																		"nativeSrc": "4739:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4712:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4712:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4721:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4721:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4708:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4708:3:1"
																		},
																		"nativeSrc": "4708:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4708:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4733:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4733:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4704:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4704:3:1"
																},
																"nativeSrc": "4704:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4704:32:1"
															},
															"nativeSrc": "4701:52:1",
															"nodeType": "YulIf",
															"src": "4701:52:1"
														},
														{
															"nativeSrc": "4762:39:1",
															"nodeType": "YulAssignment",
															"src": "4762:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4791:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4772:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:1"
																},
																"nativeSrc": "4772:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4772:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4762:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:1"
																}
															]
														},
														{
															"nativeSrc": "4810:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4810:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4841:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4841:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4852:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4852:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4837:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4837:3:1"
																		},
																		"nativeSrc": "4837:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4837:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4824:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4824:12:1"
																},
																"nativeSrc": "4824:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4824:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4814:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4814:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4899:16:1",
																"nodeType": "YulBlock",
																"src": "4899:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4908:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4908:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4911:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4911:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4901:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4901:6:1"
																			},
																			"nativeSrc": "4901:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4901:12:1"
																		},
																		"nativeSrc": "4901:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4901:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4871:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4871:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4879:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4879:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4868:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4868:2:1"
																},
																"nativeSrc": "4868:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4868:30:1"
															},
															"nativeSrc": "4865:50:1",
															"nodeType": "YulIf",
															"src": "4865:50:1"
														},
														{
															"nativeSrc": "4924:32:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4924:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4938:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4938:9:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4949:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4934:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:1"
																},
																"nativeSrc": "4934:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4934:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4928:2:1",
																	"nodeType": "YulTypedName",
																	"src": "4928:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5004:16:1",
																"nodeType": "YulBlock",
																"src": "5004:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5013:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5013:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5016:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5016:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5006:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5006:6:1"
																			},
																			"nativeSrc": "5006:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5006:12:1"
																		},
																		"nativeSrc": "5006:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5006:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4983:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4983:2:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4987:4:1",
																						"nodeType": "YulLiteral",
																						"src": "4987:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4979:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4979:3:1"
																				},
																				"nativeSrc": "4979:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4979:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4975:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4975:3:1"
																		},
																		"nativeSrc": "4975:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4975:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4968:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:1"
																},
																"nativeSrc": "4968:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4968:35:1"
															},
															"nativeSrc": "4965:55:1",
															"nodeType": "YulIf",
															"src": "4965:55:1"
														},
														{
															"nativeSrc": "5029:30:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5029:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "5056:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "5056:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5043:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5043:12:1"
																},
																"nativeSrc": "5043:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5043:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5033:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5033:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5102:22:1",
																"nodeType": "YulBlock",
																"src": "5102:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5104:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5104:16:1"
																			},
																			"nativeSrc": "5104:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5104:18:1"
																		},
																		"nativeSrc": "5104:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5104:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5074:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5074:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5082:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5082:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5071:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5071:2:1"
																},
																"nativeSrc": "5071:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5071:30:1"
															},
															"nativeSrc": "5068:56:1",
															"nodeType": "YulIf",
															"src": "5068:56:1"
														},
														{
															"nativeSrc": "5133:70:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5133:70:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5174:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "5174:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5182:4:1",
																								"nodeType": "YulLiteral",
																								"src": "5182:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5170:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5170:3:1"
																						},
																						"nativeSrc": "5170:17:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5170:17:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5193:2:1",
																								"nodeType": "YulLiteral",
																								"src": "5193:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5189:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5189:3:1"
																						},
																						"nativeSrc": "5189:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5189:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5166:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5166:3:1"
																				},
																				"nativeSrc": "5166:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5166:31:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5199:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5199:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:1"
																		},
																		"nativeSrc": "5162:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:40:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5146:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "5146:15:1"
																},
																"nativeSrc": "5146:57:1",
																"nodeType": "YulFunctionCall",
																"src": "5146:57:1"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "5137:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5137:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5219:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5219:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5226:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5226:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:1"
																},
																"nativeSrc": "5212:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5212:21:1"
															},
															"nativeSrc": "5212:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5212:21:1"
														},
														{
															"body": {
																"nativeSrc": "5283:16:1",
																"nodeType": "YulBlock",
																"src": "5283:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5292:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5292:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5295:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5295:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5285:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5285:6:1"
																			},
																			"nativeSrc": "5285:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5285:12:1"
																		},
																		"nativeSrc": "5285:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5285:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "5256:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5256:2:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5260:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5260:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5252:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:1"
																				},
																				"nativeSrc": "5252:15:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5252:15:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5269:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5269:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5248:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5248:3:1"
																		},
																		"nativeSrc": "5248:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5248:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5274:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5274:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5245:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5245:2:1"
																},
																"nativeSrc": "5245:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5245:37:1"
															},
															"nativeSrc": "5242:57:1",
															"nodeType": "YulIf",
															"src": "5242:57:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "5325:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5325:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5332:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5332:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5321:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5321:3:1"
																		},
																		"nativeSrc": "5321:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5321:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "5341:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5341:2:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5345:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5345:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5337:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5337:3:1"
																		},
																		"nativeSrc": "5337:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5337:11:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5350:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5350:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5308:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5308:12:1"
																},
																"nativeSrc": "5308:49:1",
																"nodeType": "YulFunctionCall",
																"src": "5308:49:1"
															},
															"nativeSrc": "5308:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "5308:49:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "5381:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5381:5:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5388:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5388:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5377:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5377:3:1"
																				},
																				"nativeSrc": "5377:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5377:18:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5397:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5397:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5373:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5373:3:1"
																		},
																		"nativeSrc": "5373:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5373:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5402:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5402:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5366:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5366:6:1"
																},
																"nativeSrc": "5366:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5366:38:1"
															},
															"nativeSrc": "5366:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "5366:38:1"
														},
														{
															"nativeSrc": "5413:15:1",
															"nodeType": "YulAssignment",
															"src": "5413:15:1",
															"value": {
																"name": "array",
																"nativeSrc": "5423:5:1",
																"nodeType": "YulIdentifier",
																"src": "5423:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5413:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "4595:839:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4649:9:1",
														"nodeType": "YulTypedName",
														"src": "4649:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4660:7:1",
														"nodeType": "YulTypedName",
														"src": "4660:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4672:6:1",
														"nodeType": "YulTypedName",
														"src": "4672:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4680:6:1",
														"nodeType": "YulTypedName",
														"src": "4680:6:1",
														"type": ""
													}
												],
												"src": "4595:839:1"
											},
											{
												"body": {
													"nativeSrc": "5540:76:1",
													"nodeType": "YulBlock",
													"src": "5540:76:1",
													"statements": [
														{
															"nativeSrc": "5550:26:1",
															"nodeType": "YulAssignment",
															"src": "5550:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5562:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5562:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5573:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5573:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5558:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5558:3:1"
																},
																"nativeSrc": "5558:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5558:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5550:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5550:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5592:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5592:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5603:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5603:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5585:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5585:6:1"
																},
																"nativeSrc": "5585:25:1",
																"nodeType": "YulFunctionCall",
																"src": "5585:25:1"
															},
															"nativeSrc": "5585:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "5585:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5439:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5509:9:1",
														"nodeType": "YulTypedName",
														"src": "5509:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5520:6:1",
														"nodeType": "YulTypedName",
														"src": "5520:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5531:4:1",
														"nodeType": "YulTypedName",
														"src": "5531:4:1",
														"type": ""
													}
												],
												"src": "5439:177:1"
											},
											{
												"body": {
													"nativeSrc": "5708:259:1",
													"nodeType": "YulBlock",
													"src": "5708:259:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5754:16:1",
																"nodeType": "YulBlock",
																"src": "5754:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5763:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5763:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5766:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5766:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5756:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5756:6:1"
																			},
																			"nativeSrc": "5756:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5756:12:1"
																		},
																		"nativeSrc": "5756:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5756:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5729:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5729:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5738:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5738:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5725:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:1"
																		},
																		"nativeSrc": "5725:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5725:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5750:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5750:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5721:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5721:3:1"
																},
																"nativeSrc": "5721:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5721:32:1"
															},
															"nativeSrc": "5718:52:1",
															"nodeType": "YulIf",
															"src": "5718:52:1"
														},
														{
															"nativeSrc": "5779:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5779:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5792:1:1",
																"nodeType": "YulLiteral",
																"src": "5792:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5783:5:1",
																	"nodeType": "YulTypedName",
																	"src": "5783:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5802:32:1",
															"nodeType": "YulAssignment",
															"src": "5802:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5824:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5824:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5811:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5811:12:1"
																},
																"nativeSrc": "5811:23:1",
																"nodeType": "YulFunctionCall",
																"src": "5811:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5802:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5802:5:1"
																}
															]
														},
														{
															"nativeSrc": "5843:15:1",
															"nodeType": "YulAssignment",
															"src": "5843:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "5853:5:1",
																"nodeType": "YulIdentifier",
																"src": "5853:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5843:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5843:6:1"
																}
															]
														},
														{
															"nativeSrc": "5867:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5867:16:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5882:1:1",
																"nodeType": "YulLiteral",
																"src": "5882:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5871:7:1",
																	"nodeType": "YulTypedName",
																	"src": "5871:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5892:43:1",
															"nodeType": "YulAssignment",
															"src": "5892:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5920:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5931:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5931:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5916:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:1"
																		},
																		"nativeSrc": "5916:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5903:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:1"
																},
																"nativeSrc": "5903:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5903:32:1"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5892:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5892:7:1"
																}
															]
														},
														{
															"nativeSrc": "5944:17:1",
															"nodeType": "YulAssignment",
															"src": "5944:17:1",
															"value": {
																"name": "value_1",
																"nativeSrc": "5954:7:1",
																"nodeType": "YulIdentifier",
																"src": "5954:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5944:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5944:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5621:346:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5666:9:1",
														"nodeType": "YulTypedName",
														"src": "5666:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5677:7:1",
														"nodeType": "YulTypedName",
														"src": "5677:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5689:6:1",
														"nodeType": "YulTypedName",
														"src": "5689:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5697:6:1",
														"nodeType": "YulTypedName",
														"src": "5697:6:1",
														"type": ""
													}
												],
												"src": "5621:346:1"
											},
											{
												"body": {
													"nativeSrc": "6021:239:1",
													"nodeType": "YulBlock",
													"src": "6021:239:1",
													"statements": [
														{
															"nativeSrc": "6031:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6051:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6051:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6045:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6045:5:1"
																},
																"nativeSrc": "6045:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6045:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6035:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6035:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6073:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6073:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6078:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6078:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6066:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6066:6:1"
																},
																"nativeSrc": "6066:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6066:19:1"
															},
															"nativeSrc": "6066:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6066:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6104:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6104:3:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6109:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6109:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6100:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6100:3:1"
																		},
																		"nativeSrc": "6100:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6100:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6120:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6120:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6127:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6127:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6116:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6116:3:1"
																		},
																		"nativeSrc": "6116:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6116:16:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6134:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6134:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6094:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6094:5:1"
																},
																"nativeSrc": "6094:47:1",
																"nodeType": "YulFunctionCall",
																"src": "6094:47:1"
															},
															"nativeSrc": "6094:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "6094:47:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "6165:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6165:3:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6170:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6170:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6161:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6161:3:1"
																				},
																				"nativeSrc": "6161:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6161:16:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6179:4:1",
																				"nodeType": "YulLiteral",
																				"src": "6179:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6157:3:1"
																		},
																		"nativeSrc": "6157:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6157:27:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6186:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6186:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6150:6:1"
																},
																"nativeSrc": "6150:38:1",
																"nodeType": "YulFunctionCall",
																"src": "6150:38:1"
															},
															"nativeSrc": "6150:38:1",
															"nodeType": "YulExpressionStatement",
															"src": "6150:38:1"
														},
														{
															"nativeSrc": "6197:57:1",
															"nodeType": "YulAssignment",
															"src": "6197:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "6212:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6212:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "6225:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "6225:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6233:2:1",
																								"nodeType": "YulLiteral",
																								"src": "6233:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6221:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6221:3:1"
																						},
																						"nativeSrc": "6221:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6221:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6242:2:1",
																								"nodeType": "YulLiteral",
																								"src": "6242:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "6238:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "6238:3:1"
																						},
																						"nativeSrc": "6238:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "6238:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6217:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6217:3:1"
																				},
																				"nativeSrc": "6217:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6217:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6208:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:1"
																		},
																		"nativeSrc": "6208:39:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:39:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6249:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6249:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6204:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6204:3:1"
																},
																"nativeSrc": "6204:50:1",
																"nodeType": "YulFunctionCall",
																"src": "6204:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6197:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6197:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "5972:288:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5998:5:1",
														"nodeType": "YulTypedName",
														"src": "5998:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6005:3:1",
														"nodeType": "YulTypedName",
														"src": "6005:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6013:3:1",
														"nodeType": "YulTypedName",
														"src": "6013:3:1",
														"type": ""
													}
												],
												"src": "5972:288:1"
											},
											{
												"body": {
													"nativeSrc": "6406:157:1",
													"nodeType": "YulBlock",
													"src": "6406:157:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6423:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6423:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "6448:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6448:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6441:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6441:6:1"
																				},
																				"nativeSrc": "6441:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6441:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6434:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6434:6:1"
																		},
																		"nativeSrc": "6434:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6434:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6416:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:1"
																},
																"nativeSrc": "6416:41:1",
																"nodeType": "YulFunctionCall",
																"src": "6416:41:1"
															},
															"nativeSrc": "6416:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "6416:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6477:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6477:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6488:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6473:3:1"
																		},
																		"nativeSrc": "6473:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6493:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6493:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:1"
																},
																"nativeSrc": "6466:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6466:30:1"
															},
															"nativeSrc": "6466:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6466:30:1"
														},
														{
															"nativeSrc": "6505:52:1",
															"nodeType": "YulAssignment",
															"src": "6505:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6530:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6530:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6542:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6542:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6553:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6553:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6538:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6538:3:1"
																		},
																		"nativeSrc": "6538:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6538:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "6513:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "6513:16:1"
																},
																"nativeSrc": "6513:44:1",
																"nodeType": "YulFunctionCall",
																"src": "6513:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6505:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6505:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6265:298:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6367:9:1",
														"nodeType": "YulTypedName",
														"src": "6367:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6378:6:1",
														"nodeType": "YulTypedName",
														"src": "6378:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6386:6:1",
														"nodeType": "YulTypedName",
														"src": "6386:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6397:4:1",
														"nodeType": "YulTypedName",
														"src": "6397:4:1",
														"type": ""
													}
												],
												"src": "6265:298:1"
											},
											{
												"body": {
													"nativeSrc": "6689:98:1",
													"nodeType": "YulBlock",
													"src": "6689:98:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6706:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6706:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6717:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6717:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6699:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6699:6:1"
																},
																"nativeSrc": "6699:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6699:21:1"
															},
															"nativeSrc": "6699:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6699:21:1"
														},
														{
															"nativeSrc": "6729:52:1",
															"nodeType": "YulAssignment",
															"src": "6729:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6754:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6754:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6777:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6777:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6762:3:1"
																		},
																		"nativeSrc": "6762:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6762:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "6737:16:1",
																	"nodeType": "YulIdentifier",
																	"src": "6737:16:1"
																},
																"nativeSrc": "6737:44:1",
																"nodeType": "YulFunctionCall",
																"src": "6737:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6729:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6729:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6568:219:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6658:9:1",
														"nodeType": "YulTypedName",
														"src": "6658:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6669:6:1",
														"nodeType": "YulTypedName",
														"src": "6669:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6680:4:1",
														"nodeType": "YulTypedName",
														"src": "6680:4:1",
														"type": ""
													}
												],
												"src": "6568:219:1"
											},
											{
												"body": {
													"nativeSrc": "6862:116:1",
													"nodeType": "YulBlock",
													"src": "6862:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6908:16:1",
																"nodeType": "YulBlock",
																"src": "6908:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6917:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6917:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6920:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6920:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6910:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6910:6:1"
																			},
																			"nativeSrc": "6910:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6910:12:1"
																		},
																		"nativeSrc": "6910:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6910:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6883:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6883:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6892:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6892:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6879:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6879:3:1"
																		},
																		"nativeSrc": "6879:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6879:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6904:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6904:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6875:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6875:3:1"
																},
																"nativeSrc": "6875:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6875:32:1"
															},
															"nativeSrc": "6872:52:1",
															"nodeType": "YulIf",
															"src": "6872:52:1"
														},
														{
															"nativeSrc": "6933:39:1",
															"nodeType": "YulAssignment",
															"src": "6933:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6962:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6962:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6943:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "6943:18:1"
																},
																"nativeSrc": "6943:29:1",
																"nodeType": "YulFunctionCall",
																"src": "6943:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6933:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6792:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6828:9:1",
														"nodeType": "YulTypedName",
														"src": "6828:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6839:7:1",
														"nodeType": "YulTypedName",
														"src": "6839:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6851:6:1",
														"nodeType": "YulTypedName",
														"src": "6851:6:1",
														"type": ""
													}
												],
												"src": "6792:186:1"
											},
											{
												"body": {
													"nativeSrc": "7218:310:1",
													"nodeType": "YulBlock",
													"src": "7218:310:1",
													"statements": [
														{
															"nativeSrc": "7228:27:1",
															"nodeType": "YulAssignment",
															"src": "7228:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7240:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7240:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7251:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7251:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7236:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7236:3:1"
																},
																"nativeSrc": "7236:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7236:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7228:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7228:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7271:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7271:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "7296:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7296:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7289:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7289:6:1"
																				},
																				"nativeSrc": "7289:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7289:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7282:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7282:6:1"
																		},
																		"nativeSrc": "7282:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7264:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7264:6:1"
																},
																"nativeSrc": "7264:41:1",
																"nodeType": "YulFunctionCall",
																"src": "7264:41:1"
															},
															"nativeSrc": "7264:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "7264:41:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7325:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7325:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7336:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7336:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7321:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7321:3:1"
																		},
																		"nativeSrc": "7321:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7321:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7341:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7341:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7314:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7314:6:1"
																},
																"nativeSrc": "7314:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7314:34:1"
															},
															"nativeSrc": "7314:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7314:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7368:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7368:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7379:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7379:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7364:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7364:3:1"
																		},
																		"nativeSrc": "7364:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7364:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7384:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7384:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7357:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7357:6:1"
																},
																"nativeSrc": "7357:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7357:34:1"
															},
															"nativeSrc": "7357:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7357:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7411:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7411:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7422:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7422:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7407:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:1"
																		},
																		"nativeSrc": "7407:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7407:18:1"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7427:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7427:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7400:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7400:6:1"
																},
																"nativeSrc": "7400:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7400:34:1"
															},
															"nativeSrc": "7400:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7400:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7454:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7454:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7465:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7465:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7450:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7450:3:1"
																		},
																		"nativeSrc": "7450:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7450:19:1"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "7471:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7471:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7443:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7443:6:1"
																},
																"nativeSrc": "7443:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7443:35:1"
															},
															"nativeSrc": "7443:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "7443:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7498:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7498:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7509:3:1",
																				"nodeType": "YulLiteral",
																				"src": "7509:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7494:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7494:3:1"
																		},
																		"nativeSrc": "7494:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7494:19:1"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "7515:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7515:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7487:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7487:6:1"
																},
																"nativeSrc": "7487:35:1",
																"nodeType": "YulFunctionCall",
																"src": "7487:35:1"
															},
															"nativeSrc": "7487:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "7487:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6983:545:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7147:9:1",
														"nodeType": "YulTypedName",
														"src": "7147:9:1",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7158:6:1",
														"nodeType": "YulTypedName",
														"src": "7158:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7166:6:1",
														"nodeType": "YulTypedName",
														"src": "7166:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7174:6:1",
														"nodeType": "YulTypedName",
														"src": "7174:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7182:6:1",
														"nodeType": "YulTypedName",
														"src": "7182:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7190:6:1",
														"nodeType": "YulTypedName",
														"src": "7190:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7198:6:1",
														"nodeType": "YulTypedName",
														"src": "7198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7209:4:1",
														"nodeType": "YulTypedName",
														"src": "7209:4:1",
														"type": ""
													}
												],
												"src": "6983:545:1"
											},
											{
												"body": {
													"nativeSrc": "7628:92:1",
													"nodeType": "YulBlock",
													"src": "7628:92:1",
													"statements": [
														{
															"nativeSrc": "7638:26:1",
															"nodeType": "YulAssignment",
															"src": "7638:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7650:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7650:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7661:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7646:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7646:3:1"
																},
																"nativeSrc": "7646:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7646:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7638:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7638:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7680:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7680:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "7705:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7705:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7698:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7698:6:1"
																				},
																				"nativeSrc": "7698:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7698:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7691:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7691:6:1"
																		},
																		"nativeSrc": "7691:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7673:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7673:6:1"
																},
																"nativeSrc": "7673:41:1",
																"nodeType": "YulFunctionCall",
																"src": "7673:41:1"
															},
															"nativeSrc": "7673:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "7673:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "7533:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7597:9:1",
														"nodeType": "YulTypedName",
														"src": "7597:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7608:6:1",
														"nodeType": "YulTypedName",
														"src": "7608:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7619:4:1",
														"nodeType": "YulTypedName",
														"src": "7619:4:1",
														"type": ""
													}
												],
												"src": "7533:187:1"
											},
											{
												"body": {
													"nativeSrc": "7767:76:1",
													"nodeType": "YulBlock",
													"src": "7767:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7821:16:1",
																"nodeType": "YulBlock",
																"src": "7821:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7830:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7830:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7833:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7833:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7823:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7823:6:1"
																			},
																			"nativeSrc": "7823:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7823:12:1"
																		},
																		"nativeSrc": "7823:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7823:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7790:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "7790:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7811:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7811:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7804:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "7804:6:1"
																						},
																						"nativeSrc": "7804:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7804:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7797:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "7797:6:1"
																				},
																				"nativeSrc": "7797:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7797:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7787:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7787:2:1"
																		},
																		"nativeSrc": "7787:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7787:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7780:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:1"
																},
																"nativeSrc": "7780:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7780:40:1"
															},
															"nativeSrc": "7777:60:1",
															"nodeType": "YulIf",
															"src": "7777:60:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "7725:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7756:5:1",
														"nodeType": "YulTypedName",
														"src": "7756:5:1",
														"type": ""
													}
												],
												"src": "7725:118:1"
											},
											{
												"body": {
													"nativeSrc": "7932:231:1",
													"nodeType": "YulBlock",
													"src": "7932:231:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7978:16:1",
																"nodeType": "YulBlock",
																"src": "7978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7980:6:1"
																			},
																			"nativeSrc": "7980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7980:12:1"
																		},
																		"nativeSrc": "7980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7949:3:1"
																		},
																		"nativeSrc": "7949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7974:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:1"
																},
																"nativeSrc": "7945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7945:32:1"
															},
															"nativeSrc": "7942:52:1",
															"nodeType": "YulIf",
															"src": "7942:52:1"
														},
														{
															"nativeSrc": "8003:39:1",
															"nodeType": "YulAssignment",
															"src": "8003:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8032:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8032:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8013:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8013:18:1"
																},
																"nativeSrc": "8013:29:1",
																"nodeType": "YulFunctionCall",
																"src": "8013:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:1"
																}
															]
														},
														{
															"nativeSrc": "8051:45:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8051:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8081:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8081:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8092:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8092:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8077:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8077:3:1"
																		},
																		"nativeSrc": "8077:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8077:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8064:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8064:12:1"
																},
																"nativeSrc": "8064:32:1",
																"nodeType": "YulFunctionCall",
																"src": "8064:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8055:5:1",
																	"nodeType": "YulTypedName",
																	"src": "8055:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8127:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8127:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "8105:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "8105:21:1"
																},
																"nativeSrc": "8105:28:1",
																"nodeType": "YulFunctionCall",
																"src": "8105:28:1"
															},
															"nativeSrc": "8105:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "8105:28:1"
														},
														{
															"nativeSrc": "8142:15:1",
															"nodeType": "YulAssignment",
															"src": "8142:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "8152:5:1",
																"nodeType": "YulIdentifier",
																"src": "8152:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8142:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "7848:315:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7890:9:1",
														"nodeType": "YulTypedName",
														"src": "7890:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7901:7:1",
														"nodeType": "YulTypedName",
														"src": "7901:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7913:6:1",
														"nodeType": "YulTypedName",
														"src": "7913:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7921:6:1",
														"nodeType": "YulTypedName",
														"src": "7921:6:1",
														"type": ""
													}
												],
												"src": "7848:315:1"
											},
											{
												"body": {
													"nativeSrc": "8276:101:1",
													"nodeType": "YulBlock",
													"src": "8276:101:1",
													"statements": [
														{
															"nativeSrc": "8286:26:1",
															"nodeType": "YulAssignment",
															"src": "8286:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8298:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8298:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8309:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8309:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8294:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8294:3:1"
																},
																"nativeSrc": "8294:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8294:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8286:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8286:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8328:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8328:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8343:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8343:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8351:18:1",
																				"nodeType": "YulLiteral",
																				"src": "8351:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8339:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8339:3:1"
																		},
																		"nativeSrc": "8339:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8339:31:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8321:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8321:6:1"
																},
																"nativeSrc": "8321:50:1",
																"nodeType": "YulFunctionCall",
																"src": "8321:50:1"
															},
															"nativeSrc": "8321:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "8321:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8168:209:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8245:9:1",
														"nodeType": "YulTypedName",
														"src": "8245:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8256:6:1",
														"nodeType": "YulTypedName",
														"src": "8256:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8267:4:1",
														"nodeType": "YulTypedName",
														"src": "8267:4:1",
														"type": ""
													}
												],
												"src": "8168:209:1"
											},
											{
												"body": {
													"nativeSrc": "8414:95:1",
													"nodeType": "YulBlock",
													"src": "8414:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8431:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8431:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8438:3:1",
																				"nodeType": "YulLiteral",
																				"src": "8438:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8443:10:1",
																				"nodeType": "YulLiteral",
																				"src": "8443:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8434:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8434:3:1"
																		},
																		"nativeSrc": "8434:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8434:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8424:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8424:6:1"
																},
																"nativeSrc": "8424:31:1",
																"nodeType": "YulFunctionCall",
																"src": "8424:31:1"
															},
															"nativeSrc": "8424:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "8424:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8471:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8471:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8474:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8474:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8464:6:1"
																},
																"nativeSrc": "8464:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8464:15:1"
															},
															"nativeSrc": "8464:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8464:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8495:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8495:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8498:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8498:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8488:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8488:6:1"
																},
																"nativeSrc": "8488:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8488:15:1"
															},
															"nativeSrc": "8488:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8488:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8382:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "8382:127:1"
											},
											{
												"body": {
													"nativeSrc": "8561:88:1",
													"nodeType": "YulBlock",
													"src": "8561:88:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8592:22:1",
																"nodeType": "YulBlock",
																"src": "8592:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8594:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8594:16:1"
																			},
																			"nativeSrc": "8594:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8594:18:1"
																		},
																		"nativeSrc": "8594:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8594:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8577:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8577:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8588:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8588:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "8584:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8584:3:1"
																		},
																		"nativeSrc": "8584:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8574:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8574:2:1"
																},
																"nativeSrc": "8574:17:1",
																"nodeType": "YulFunctionCall",
																"src": "8574:17:1"
															},
															"nativeSrc": "8571:43:1",
															"nodeType": "YulIf",
															"src": "8571:43:1"
														},
														{
															"nativeSrc": "8623:20:1",
															"nodeType": "YulAssignment",
															"src": "8623:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8634:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8634:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8641:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8641:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8630:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:1"
																},
																"nativeSrc": "8630:13:1",
																"nodeType": "YulFunctionCall",
																"src": "8630:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "8623:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8623:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "8514:135:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8543:5:1",
														"nodeType": "YulTypedName",
														"src": "8543:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "8553:3:1",
														"nodeType": "YulTypedName",
														"src": "8553:3:1",
														"type": ""
													}
												],
												"src": "8514:135:1"
											},
											{
												"body": {
													"nativeSrc": "8703:79:1",
													"nodeType": "YulBlock",
													"src": "8703:79:1",
													"statements": [
														{
															"nativeSrc": "8713:17:1",
															"nodeType": "YulAssignment",
															"src": "8713:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8725:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8725:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8728:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8728:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8721:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8721:3:1"
																},
																"nativeSrc": "8721:9:1",
																"nodeType": "YulFunctionCall",
																"src": "8721:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8713:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8713:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8754:22:1",
																"nodeType": "YulBlock",
																"src": "8754:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8756:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8756:16:1"
																			},
																			"nativeSrc": "8756:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8756:18:1"
																		},
																		"nativeSrc": "8756:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8756:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8745:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8745:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8751:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "8751:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8742:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8742:2:1"
																},
																"nativeSrc": "8742:11:1",
																"nodeType": "YulFunctionCall",
																"src": "8742:11:1"
															},
															"nativeSrc": "8739:37:1",
															"nodeType": "YulIf",
															"src": "8739:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8654:128:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8685:1:1",
														"nodeType": "YulTypedName",
														"src": "8685:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8688:1:1",
														"nodeType": "YulTypedName",
														"src": "8688:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8694:4:1",
														"nodeType": "YulTypedName",
														"src": "8694:4:1",
														"type": ""
													}
												],
												"src": "8654:128:1"
											},
											{
												"body": {
													"nativeSrc": "8944:162:1",
													"nodeType": "YulBlock",
													"src": "8944:162:1",
													"statements": [
														{
															"nativeSrc": "8954:26:1",
															"nodeType": "YulAssignment",
															"src": "8954:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8966:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8966:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8977:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8977:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8962:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8962:3:1"
																},
																"nativeSrc": "8962:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8962:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8954:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8954:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8996:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8996:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9007:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9007:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8989:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8989:6:1"
																},
																"nativeSrc": "8989:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8989:25:1"
															},
															"nativeSrc": "8989:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "8989:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9034:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9034:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9045:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9045:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9030:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9030:3:1"
																		},
																		"nativeSrc": "9030:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9030:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9050:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9050:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9023:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9023:6:1"
																},
																"nativeSrc": "9023:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9023:34:1"
															},
															"nativeSrc": "9023:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9023:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9077:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9077:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9088:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9088:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9073:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9073:3:1"
																		},
																		"nativeSrc": "9073:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9073:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9093:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9093:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9066:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9066:6:1"
																},
																"nativeSrc": "9066:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9066:34:1"
															},
															"nativeSrc": "9066:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9066:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8787:319:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8897:9:1",
														"nodeType": "YulTypedName",
														"src": "8897:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8908:6:1",
														"nodeType": "YulTypedName",
														"src": "8908:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8916:6:1",
														"nodeType": "YulTypedName",
														"src": "8916:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8924:6:1",
														"nodeType": "YulTypedName",
														"src": "8924:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8935:4:1",
														"nodeType": "YulTypedName",
														"src": "8935:4:1",
														"type": ""
													}
												],
												"src": "8787:319:1"
											},
											{
												"body": {
													"nativeSrc": "9143:95:1",
													"nodeType": "YulBlock",
													"src": "9143:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9160:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9160:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9167:3:1",
																				"nodeType": "YulLiteral",
																				"src": "9167:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9172:10:1",
																				"nodeType": "YulLiteral",
																				"src": "9172:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9163:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9163:3:1"
																		},
																		"nativeSrc": "9163:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9163:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9153:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:1"
																},
																"nativeSrc": "9153:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9153:31:1"
															},
															"nativeSrc": "9153:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9153:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9200:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9200:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9203:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9203:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9193:6:1"
																},
																"nativeSrc": "9193:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9193:15:1"
															},
															"nativeSrc": "9193:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9193:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9224:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9224:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9227:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9227:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9217:6:1"
																},
																"nativeSrc": "9217:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9217:15:1"
															},
															"nativeSrc": "9217:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9217:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9111:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9111:127:1"
											},
											{
												"body": {
													"nativeSrc": "9291:77:1",
													"nodeType": "YulBlock",
													"src": "9291:77:1",
													"statements": [
														{
															"nativeSrc": "9301:16:1",
															"nodeType": "YulAssignment",
															"src": "9301:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9312:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9312:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9315:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9315:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9308:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9308:3:1"
																},
																"nativeSrc": "9308:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9308:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9301:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9301:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9340:22:1",
																"nodeType": "YulBlock",
																"src": "9340:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9342:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9342:16:1"
																			},
																			"nativeSrc": "9342:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9342:18:1"
																		},
																		"nativeSrc": "9342:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9342:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9332:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9332:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9335:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9335:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9329:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9329:2:1"
																},
																"nativeSrc": "9329:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9329:10:1"
															},
															"nativeSrc": "9326:36:1",
															"nodeType": "YulIf",
															"src": "9326:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9243:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9274:1:1",
														"nodeType": "YulTypedName",
														"src": "9274:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9277:1:1",
														"nodeType": "YulTypedName",
														"src": "9277:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9283:3:1",
														"nodeType": "YulTypedName",
														"src": "9283:3:1",
														"type": ""
													}
												],
												"src": "9243:125:1"
											},
											{
												"body": {
													"nativeSrc": "9530:188:1",
													"nodeType": "YulBlock",
													"src": "9530:188:1",
													"statements": [
														{
															"nativeSrc": "9540:26:1",
															"nodeType": "YulAssignment",
															"src": "9540:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9552:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9552:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9563:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9563:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9548:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9548:3:1"
																},
																"nativeSrc": "9548:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9548:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9540:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9540:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9582:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9582:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9597:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9597:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9613:3:1",
																								"nodeType": "YulLiteral",
																								"src": "9613:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9618:1:1",
																								"nodeType": "YulLiteral",
																								"src": "9618:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9609:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9609:3:1"
																						},
																						"nativeSrc": "9609:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9609:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9622:1:1",
																						"nodeType": "YulLiteral",
																						"src": "9622:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9605:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9605:3:1"
																				},
																				"nativeSrc": "9605:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9605:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9593:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9593:3:1"
																		},
																		"nativeSrc": "9593:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9593:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9575:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9575:6:1"
																},
																"nativeSrc": "9575:51:1",
																"nodeType": "YulFunctionCall",
																"src": "9575:51:1"
															},
															"nativeSrc": "9575:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "9575:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9646:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9646:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9657:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9657:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9642:3:1"
																		},
																		"nativeSrc": "9642:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9642:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9662:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9662:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9635:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9635:6:1"
																},
																"nativeSrc": "9635:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9635:34:1"
															},
															"nativeSrc": "9635:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9635:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9689:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9689:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9700:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9700:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9685:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9685:3:1"
																		},
																		"nativeSrc": "9685:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9685:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9705:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9705:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9678:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9678:6:1"
																},
																"nativeSrc": "9678:34:1",
																"nodeType": "YulFunctionCall",
																"src": "9678:34:1"
															},
															"nativeSrc": "9678:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "9678:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9373:345:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9483:9:1",
														"nodeType": "YulTypedName",
														"src": "9483:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9494:6:1",
														"nodeType": "YulTypedName",
														"src": "9494:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9502:6:1",
														"nodeType": "YulTypedName",
														"src": "9502:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9510:6:1",
														"nodeType": "YulTypedName",
														"src": "9510:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9521:4:1",
														"nodeType": "YulTypedName",
														"src": "9521:4:1",
														"type": ""
													}
												],
												"src": "9373:345:1"
											},
											{
												"body": {
													"nativeSrc": "9897:249:1",
													"nodeType": "YulBlock",
													"src": "9897:249:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9914:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9914:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9925:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9925:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9907:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9907:6:1"
																},
																"nativeSrc": "9907:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9907:21:1"
															},
															"nativeSrc": "9907:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9907:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9948:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9948:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9959:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9959:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9944:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9944:3:1"
																		},
																		"nativeSrc": "9944:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9944:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9964:2:1",
																		"type": "",
																		"value": "59"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9937:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:1"
																},
																"nativeSrc": "9937:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9937:30:1"
															},
															"nativeSrc": "9937:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9937:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9987:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9987:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9998:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9998:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9983:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9983:3:1"
																		},
																		"nativeSrc": "9983:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9983:18:1"
																	},
																	{
																		"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d69",
																		"kind": "string",
																		"nativeSrc": "10003:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10003:34:1",
																		"type": "",
																		"value": "This address does not have permi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9976:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9976:6:1"
																},
																"nativeSrc": "9976:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9976:62:1"
															},
															"nativeSrc": "9976:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9976:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10058:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10058:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10069:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10069:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10054:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10054:3:1"
																		},
																		"nativeSrc": "10054:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10054:18:1"
																	},
																	{
																		"hexValue": "7373696f6e20746f2063616c6c20706572666f726d55706b656570",
																		"kind": "string",
																		"nativeSrc": "10074:29:1",
																		"nodeType": "YulLiteral",
																		"src": "10074:29:1",
																		"type": "",
																		"value": "ssion to call performUpkeep"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10047:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10047:6:1"
																},
																"nativeSrc": "10047:57:1",
																"nodeType": "YulFunctionCall",
																"src": "10047:57:1"
															},
															"nativeSrc": "10047:57:1",
															"nodeType": "YulExpressionStatement",
															"src": "10047:57:1"
														},
														{
															"nativeSrc": "10113:27:1",
															"nodeType": "YulAssignment",
															"src": "10113:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10125:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10125:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10136:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10136:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10121:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:1"
																},
																"nativeSrc": "10121:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10121:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10113:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10113:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9723:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9874:9:1",
														"nodeType": "YulTypedName",
														"src": "9874:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9888:4:1",
														"nodeType": "YulTypedName",
														"src": "9888:4:1",
														"type": ""
													}
												],
												"src": "9723:423:1"
											},
											{
												"body": {
													"nativeSrc": "10308:214:1",
													"nodeType": "YulBlock",
													"src": "10308:214:1",
													"statements": [
														{
															"nativeSrc": "10318:26:1",
															"nodeType": "YulAssignment",
															"src": "10318:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10341:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10341:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10326:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10326:3:1"
																},
																"nativeSrc": "10326:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10326:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10318:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10318:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10360:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10360:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10375:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10375:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10391:3:1",
																								"nodeType": "YulLiteral",
																								"src": "10391:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10396:1:1",
																								"nodeType": "YulLiteral",
																								"src": "10396:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10387:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10387:3:1"
																						},
																						"nativeSrc": "10387:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10387:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10400:1:1",
																						"nodeType": "YulLiteral",
																						"src": "10400:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10383:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10383:3:1"
																				},
																				"nativeSrc": "10383:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10383:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10371:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10371:3:1"
																		},
																		"nativeSrc": "10371:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10371:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10353:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10353:6:1"
																},
																"nativeSrc": "10353:51:1",
																"nodeType": "YulFunctionCall",
																"src": "10353:51:1"
															},
															"nativeSrc": "10353:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "10353:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10424:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10424:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10435:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10435:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10420:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10420:3:1"
																		},
																		"nativeSrc": "10420:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10420:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "10444:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10444:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10460:3:1",
																								"nodeType": "YulLiteral",
																								"src": "10460:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10465:1:1",
																								"nodeType": "YulLiteral",
																								"src": "10465:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10456:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10456:3:1"
																						},
																						"nativeSrc": "10456:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10456:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "10469:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10452:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10452:3:1"
																				},
																				"nativeSrc": "10452:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10452:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10440:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10440:3:1"
																		},
																		"nativeSrc": "10440:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10440:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10413:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10413:6:1"
																},
																"nativeSrc": "10413:60:1",
																"nodeType": "YulFunctionCall",
																"src": "10413:60:1"
															},
															"nativeSrc": "10413:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "10413:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10493:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10493:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10504:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10504:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10489:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:1"
																		},
																		"nativeSrc": "10489:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10489:18:1"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "10509:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10509:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10482:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10482:6:1"
																},
																"nativeSrc": "10482:34:1",
																"nodeType": "YulFunctionCall",
																"src": "10482:34:1"
															},
															"nativeSrc": "10482:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "10482:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10151:371:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10261:9:1",
														"nodeType": "YulTypedName",
														"src": "10261:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10272:6:1",
														"nodeType": "YulTypedName",
														"src": "10272:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10280:6:1",
														"nodeType": "YulTypedName",
														"src": "10280:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10288:6:1",
														"nodeType": "YulTypedName",
														"src": "10288:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10299:4:1",
														"nodeType": "YulTypedName",
														"src": "10299:4:1",
														"type": ""
													}
												],
												"src": "10151:371:1"
											},
											{
												"body": {
													"nativeSrc": "10605:167:1",
													"nodeType": "YulBlock",
													"src": "10605:167:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10651:16:1",
																"nodeType": "YulBlock",
																"src": "10651:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10660:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10660:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10653:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10653:6:1"
																			},
																			"nativeSrc": "10653:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10653:12:1"
																		},
																		"nativeSrc": "10653:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10653:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10626:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10626:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10635:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10635:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10622:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10622:3:1"
																		},
																		"nativeSrc": "10622:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10622:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10647:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10647:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10618:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10618:3:1"
																},
																"nativeSrc": "10618:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10618:32:1"
															},
															"nativeSrc": "10615:52:1",
															"nodeType": "YulIf",
															"src": "10615:52:1"
														},
														{
															"nativeSrc": "10676:29:1",
															"nodeType": "YulVariableDeclaration",
															"src": "10676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10695:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10695:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10689:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "10689:5:1"
																},
																"nativeSrc": "10689:16:1",
																"nodeType": "YulFunctionCall",
																"src": "10689:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10680:5:1",
																	"nodeType": "YulTypedName",
																	"src": "10680:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10736:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "10736:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "10714:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "10714:21:1"
																},
																"nativeSrc": "10714:28:1",
																"nodeType": "YulFunctionCall",
																"src": "10714:28:1"
															},
															"nativeSrc": "10714:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "10714:28:1"
														},
														{
															"nativeSrc": "10751:15:1",
															"nodeType": "YulAssignment",
															"src": "10751:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "10761:5:1",
																"nodeType": "YulIdentifier",
																"src": "10761:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10751:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10751:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10527:245:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10571:9:1",
														"nodeType": "YulTypedName",
														"src": "10571:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10582:7:1",
														"nodeType": "YulTypedName",
														"src": "10582:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10594:6:1",
														"nodeType": "YulTypedName",
														"src": "10594:6:1",
														"type": ""
													}
												],
												"src": "10527:245:1"
											},
											{
												"body": {
													"nativeSrc": "10906:145:1",
													"nodeType": "YulBlock",
													"src": "10906:145:1",
													"statements": [
														{
															"nativeSrc": "10916:26:1",
															"nodeType": "YulAssignment",
															"src": "10916:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10928:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10928:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10939:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10939:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10924:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10924:3:1"
																},
																"nativeSrc": "10924:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10924:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10916:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10916:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10958:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10958:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10973:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10973:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10989:3:1",
																								"nodeType": "YulLiteral",
																								"src": "10989:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10994:1:1",
																								"nodeType": "YulLiteral",
																								"src": "10994:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10985:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10985:3:1"
																						},
																						"nativeSrc": "10985:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10985:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10998:1:1",
																						"nodeType": "YulLiteral",
																						"src": "10998:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10981:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10981:3:1"
																				},
																				"nativeSrc": "10981:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10981:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10969:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10969:3:1"
																		},
																		"nativeSrc": "10969:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10969:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10951:6:1"
																},
																"nativeSrc": "10951:51:1",
																"nodeType": "YulFunctionCall",
																"src": "10951:51:1"
															},
															"nativeSrc": "10951:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "10951:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11022:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11022:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11033:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11033:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11018:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11018:3:1"
																		},
																		"nativeSrc": "11018:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11018:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11038:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11038:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:1"
																},
																"nativeSrc": "11011:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11011:34:1"
															},
															"nativeSrc": "11011:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11011:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10777:274:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10867:9:1",
														"nodeType": "YulTypedName",
														"src": "10867:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10878:6:1",
														"nodeType": "YulTypedName",
														"src": "10878:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10886:6:1",
														"nodeType": "YulTypedName",
														"src": "10886:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10897:4:1",
														"nodeType": "YulTypedName",
														"src": "10897:4:1",
														"type": ""
													}
												],
												"src": "10777:274:1"
											},
											{
												"body": {
													"nativeSrc": "11230:181:1",
													"nodeType": "YulBlock",
													"src": "11230:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11247:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11247:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11258:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11258:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11240:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11240:6:1"
																},
																"nativeSrc": "11240:21:1",
																"nodeType": "YulFunctionCall",
																"src": "11240:21:1"
															},
															"nativeSrc": "11240:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "11240:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11281:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11281:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11277:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11277:3:1"
																		},
																		"nativeSrc": "11277:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11277:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11297:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11297:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11270:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11270:6:1"
																},
																"nativeSrc": "11270:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11270:30:1"
															},
															"nativeSrc": "11270:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "11270:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11320:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11320:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11331:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11331:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11316:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11316:3:1"
																		},
																		"nativeSrc": "11316:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11316:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "11336:33:1",
																		"nodeType": "YulLiteral",
																		"src": "11336:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11309:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11309:6:1"
																},
																"nativeSrc": "11309:61:1",
																"nodeType": "YulFunctionCall",
																"src": "11309:61:1"
															},
															"nativeSrc": "11309:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "11309:61:1"
														},
														{
															"nativeSrc": "11379:26:1",
															"nodeType": "YulAssignment",
															"src": "11379:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11391:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11391:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11402:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11402:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11387:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11387:3:1"
																},
																"nativeSrc": "11387:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11387:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11379:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11379:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11056:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11207:9:1",
														"nodeType": "YulTypedName",
														"src": "11207:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11221:4:1",
														"nodeType": "YulTypedName",
														"src": "11221:4:1",
														"type": ""
													}
												],
												"src": "11056:355:1"
											},
											{
												"body": {
													"nativeSrc": "11545:119:1",
													"nodeType": "YulBlock",
													"src": "11545:119:1",
													"statements": [
														{
															"nativeSrc": "11555:26:1",
															"nodeType": "YulAssignment",
															"src": "11555:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11567:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11567:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11578:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11578:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11563:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11563:3:1"
																},
																"nativeSrc": "11563:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11563:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11555:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11555:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11597:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11597:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "11608:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11608:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11590:6:1"
																},
																"nativeSrc": "11590:25:1",
																"nodeType": "YulFunctionCall",
																"src": "11590:25:1"
															},
															"nativeSrc": "11590:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "11590:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11635:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11635:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11646:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11646:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11631:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11631:3:1"
																		},
																		"nativeSrc": "11631:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11631:18:1"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11651:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11651:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11624:6:1"
																},
																"nativeSrc": "11624:34:1",
																"nodeType": "YulFunctionCall",
																"src": "11624:34:1"
															},
															"nativeSrc": "11624:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "11624:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11416:248:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11506:9:1",
														"nodeType": "YulTypedName",
														"src": "11506:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11517:6:1",
														"nodeType": "YulTypedName",
														"src": "11517:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11525:6:1",
														"nodeType": "YulTypedName",
														"src": "11525:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11536:4:1",
														"nodeType": "YulTypedName",
														"src": "11536:4:1",
														"type": ""
													}
												],
												"src": "11416:248:1"
											},
											{
												"body": {
													"nativeSrc": "11798:171:1",
													"nodeType": "YulBlock",
													"src": "11798:171:1",
													"statements": [
														{
															"nativeSrc": "11808:26:1",
															"nodeType": "YulAssignment",
															"src": "11808:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11820:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11820:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11831:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11831:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11816:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11816:3:1"
																},
																"nativeSrc": "11816:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11816:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11808:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11808:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11850:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11850:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11865:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11865:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11881:3:1",
																								"nodeType": "YulLiteral",
																								"src": "11881:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11886:1:1",
																								"nodeType": "YulLiteral",
																								"src": "11886:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11877:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11877:3:1"
																						},
																						"nativeSrc": "11877:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11877:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11890:1:1",
																						"nodeType": "YulLiteral",
																						"src": "11890:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11873:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11873:3:1"
																				},
																				"nativeSrc": "11873:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11873:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11861:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11861:3:1"
																		},
																		"nativeSrc": "11861:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11861:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11843:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11843:6:1"
																},
																"nativeSrc": "11843:51:1",
																"nodeType": "YulFunctionCall",
																"src": "11843:51:1"
															},
															"nativeSrc": "11843:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "11843:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11914:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11914:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11925:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11925:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11910:3:1"
																		},
																		"nativeSrc": "11910:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11910:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11934:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11934:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11950:3:1",
																								"nodeType": "YulLiteral",
																								"src": "11950:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11955:1:1",
																								"nodeType": "YulLiteral",
																								"src": "11955:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11946:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11946:3:1"
																						},
																						"nativeSrc": "11946:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11946:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11959:1:1",
																						"nodeType": "YulLiteral",
																						"src": "11959:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11942:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11942:3:1"
																				},
																				"nativeSrc": "11942:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11942:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11930:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11930:3:1"
																		},
																		"nativeSrc": "11930:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11930:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11903:6:1"
																},
																"nativeSrc": "11903:60:1",
																"nodeType": "YulFunctionCall",
																"src": "11903:60:1"
															},
															"nativeSrc": "11903:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "11903:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "11669:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11759:9:1",
														"nodeType": "YulTypedName",
														"src": "11759:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11770:6:1",
														"nodeType": "YulTypedName",
														"src": "11770:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11778:6:1",
														"nodeType": "YulTypedName",
														"src": "11778:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11789:4:1",
														"nodeType": "YulTypedName",
														"src": "11789:4:1",
														"type": ""
													}
												],
												"src": "11669:300:1"
											},
											{
												"body": {
													"nativeSrc": "12125:230:1",
													"nodeType": "YulBlock",
													"src": "12125:230:1",
													"statements": [
														{
															"nativeSrc": "12135:26:1",
															"nodeType": "YulAssignment",
															"src": "12135:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12147:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12147:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12158:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12158:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12143:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12143:3:1"
																},
																"nativeSrc": "12143:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12143:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12135:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12135:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12177:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12177:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12192:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12192:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12208:3:1",
																								"nodeType": "YulLiteral",
																								"src": "12208:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12213:1:1",
																								"nodeType": "YulLiteral",
																								"src": "12213:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12204:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "12204:3:1"
																						},
																						"nativeSrc": "12204:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "12204:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12217:1:1",
																						"nodeType": "YulLiteral",
																						"src": "12217:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12200:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12200:3:1"
																				},
																				"nativeSrc": "12200:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12200:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12188:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12188:3:1"
																		},
																		"nativeSrc": "12188:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12188:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12170:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12170:6:1"
																},
																"nativeSrc": "12170:51:1",
																"nodeType": "YulFunctionCall",
																"src": "12170:51:1"
															},
															"nativeSrc": "12170:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "12170:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12241:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12241:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12252:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12237:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12237:3:1"
																		},
																		"nativeSrc": "12237:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12237:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "12261:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12261:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12277:3:1",
																								"nodeType": "YulLiteral",
																								"src": "12277:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12282:1:1",
																								"nodeType": "YulLiteral",
																								"src": "12282:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12273:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "12273:3:1"
																						},
																						"nativeSrc": "12273:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "12273:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12286:1:1",
																						"nodeType": "YulLiteral",
																						"src": "12286:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12269:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12269:3:1"
																				},
																				"nativeSrc": "12269:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12269:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12257:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12257:3:1"
																		},
																		"nativeSrc": "12257:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12257:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12230:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12230:6:1"
																},
																"nativeSrc": "12230:60:1",
																"nodeType": "YulFunctionCall",
																"src": "12230:60:1"
															},
															"nativeSrc": "12230:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "12230:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12310:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12310:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12321:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12321:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12306:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12306:3:1"
																		},
																		"nativeSrc": "12306:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12306:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nativeSrc": "12340:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12340:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12333:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "12333:6:1"
																				},
																				"nativeSrc": "12333:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12333:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "12326:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12326:6:1"
																		},
																		"nativeSrc": "12326:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12326:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12299:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12299:6:1"
																},
																"nativeSrc": "12299:50:1",
																"nodeType": "YulFunctionCall",
																"src": "12299:50:1"
															},
															"nativeSrc": "12299:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "12299:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "11974:381:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12078:9:1",
														"nodeType": "YulTypedName",
														"src": "12078:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12089:6:1",
														"nodeType": "YulTypedName",
														"src": "12089:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12097:6:1",
														"nodeType": "YulTypedName",
														"src": "12097:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12105:6:1",
														"nodeType": "YulTypedName",
														"src": "12105:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12116:4:1",
														"nodeType": "YulTypedName",
														"src": "12116:4:1",
														"type": ""
													}
												],
												"src": "11974:381:1"
											},
											{
												"body": {
													"nativeSrc": "12412:116:1",
													"nodeType": "YulBlock",
													"src": "12412:116:1",
													"statements": [
														{
															"nativeSrc": "12422:20:1",
															"nodeType": "YulAssignment",
															"src": "12422:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12437:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12437:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12440:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12440:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12433:3:1"
																},
																"nativeSrc": "12433:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12433:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12422:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "12422:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12500:22:1",
																"nodeType": "YulBlock",
																"src": "12500:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12502:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12502:16:1"
																			},
																			"nativeSrc": "12502:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12502:18:1"
																		},
																		"nativeSrc": "12502:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12502:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12471:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "12471:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12464:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "12464:6:1"
																				},
																				"nativeSrc": "12464:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12464:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12478:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "12478:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12485:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "12485:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12494:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "12494:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12481:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "12481:3:1"
																						},
																						"nativeSrc": "12481:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "12481:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12475:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "12475:2:1"
																				},
																				"nativeSrc": "12475:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12475:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12461:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "12461:2:1"
																		},
																		"nativeSrc": "12461:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12461:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12454:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12454:6:1"
																},
																"nativeSrc": "12454:45:1",
																"nodeType": "YulFunctionCall",
																"src": "12454:45:1"
															},
															"nativeSrc": "12451:71:1",
															"nodeType": "YulIf",
															"src": "12451:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12360:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12391:1:1",
														"nodeType": "YulTypedName",
														"src": "12391:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12394:1:1",
														"nodeType": "YulTypedName",
														"src": "12394:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12400:7:1",
														"nodeType": "YulTypedName",
														"src": "12400:7:1",
														"type": ""
													}
												],
												"src": "12360:168:1"
											},
											{
												"body": {
													"nativeSrc": "12579:171:1",
													"nodeType": "YulBlock",
													"src": "12579:171:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12610:111:1",
																"nodeType": "YulBlock",
																"src": "12610:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12631:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12631:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12638:3:1",
																							"nodeType": "YulLiteral",
																							"src": "12638:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12643:10:1",
																							"nodeType": "YulLiteral",
																							"src": "12643:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "12634:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "12634:3:1"
																					},
																					"nativeSrc": "12634:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12634:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12624:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12624:6:1"
																			},
																			"nativeSrc": "12624:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12624:31:1"
																		},
																		"nativeSrc": "12624:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12624:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12675:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12675:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12678:4:1",
																					"nodeType": "YulLiteral",
																					"src": "12678:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12668:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12668:6:1"
																			},
																			"nativeSrc": "12668:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12668:15:1"
																		},
																		"nativeSrc": "12668:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12668:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12703:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12706:4:1",
																					"nodeType": "YulLiteral",
																					"src": "12706:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12696:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12696:6:1"
																			},
																			"nativeSrc": "12696:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12696:15:1"
																		},
																		"nativeSrc": "12696:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12696:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12599:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12599:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12592:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12592:6:1"
																},
																"nativeSrc": "12592:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12592:9:1"
															},
															"nativeSrc": "12589:132:1",
															"nodeType": "YulIf",
															"src": "12589:132:1"
														},
														{
															"nativeSrc": "12730:14:1",
															"nodeType": "YulAssignment",
															"src": "12730:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12739:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12739:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12742:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12742:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12735:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12735:3:1"
																},
																"nativeSrc": "12735:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12735:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12730:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12730:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12533:217:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12564:1:1",
														"nodeType": "YulTypedName",
														"src": "12564:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12567:1:1",
														"nodeType": "YulTypedName",
														"src": "12567:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12573:1:1",
														"nodeType": "YulTypedName",
														"src": "12573:1:1",
														"type": ""
													}
												],
												"src": "12533:217:1"
											},
											{
												"body": {
													"nativeSrc": "12929:176:1",
													"nodeType": "YulBlock",
													"src": "12929:176:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12946:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12946:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12957:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12957:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12939:6:1"
																},
																"nativeSrc": "12939:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12939:21:1"
															},
															"nativeSrc": "12939:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12939:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12980:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12980:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12991:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12991:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12976:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12976:3:1"
																		},
																		"nativeSrc": "12976:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12976:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12996:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12996:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12969:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12969:6:1"
																},
																"nativeSrc": "12969:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12969:30:1"
															},
															"nativeSrc": "12969:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "12969:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13019:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13019:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13030:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13030:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13015:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13015:3:1"
																		},
																		"nativeSrc": "13015:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13015:18:1"
																	},
																	{
																		"hexValue": "416d6f756e742069732067726561746572207468656e20353025",
																		"kind": "string",
																		"nativeSrc": "13035:28:1",
																		"nodeType": "YulLiteral",
																		"src": "13035:28:1",
																		"type": "",
																		"value": "Amount is greater then 50%"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13008:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13008:6:1"
																},
																"nativeSrc": "13008:56:1",
																"nodeType": "YulFunctionCall",
																"src": "13008:56:1"
															},
															"nativeSrc": "13008:56:1",
															"nodeType": "YulExpressionStatement",
															"src": "13008:56:1"
														},
														{
															"nativeSrc": "13073:26:1",
															"nodeType": "YulAssignment",
															"src": "13073:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13085:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13085:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13096:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13096:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13081:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13081:3:1"
																},
																"nativeSrc": "13081:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13081:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13073:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13073:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12755:350:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12906:9:1",
														"nodeType": "YulTypedName",
														"src": "12906:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12920:4:1",
														"nodeType": "YulTypedName",
														"src": "12920:4:1",
														"type": ""
													}
												],
												"src": "12755:350:1"
											},
											{
												"body": {
													"nativeSrc": "13191:103:1",
													"nodeType": "YulBlock",
													"src": "13191:103:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13237:16:1",
																"nodeType": "YulBlock",
																"src": "13237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13246:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13249:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13239:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13239:6:1"
																			},
																			"nativeSrc": "13239:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13239:12:1"
																		},
																		"nativeSrc": "13239:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13212:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13212:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13221:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13221:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13208:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13208:3:1"
																		},
																		"nativeSrc": "13208:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13208:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13233:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13233:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13204:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13204:3:1"
																},
																"nativeSrc": "13204:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13204:32:1"
															},
															"nativeSrc": "13201:52:1",
															"nodeType": "YulIf",
															"src": "13201:52:1"
														},
														{
															"nativeSrc": "13262:26:1",
															"nodeType": "YulAssignment",
															"src": "13262:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13278:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13278:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13272:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13272:5:1"
																},
																"nativeSrc": "13272:16:1",
																"nodeType": "YulFunctionCall",
																"src": "13272:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "13262:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13262:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "13110:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13157:9:1",
														"nodeType": "YulTypedName",
														"src": "13157:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13168:7:1",
														"nodeType": "YulTypedName",
														"src": "13168:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13180:6:1",
														"nodeType": "YulTypedName",
														"src": "13180:6:1",
														"type": ""
													}
												],
												"src": "13110:184:1"
											},
											{
												"body": {
													"nativeSrc": "13436:164:1",
													"nodeType": "YulBlock",
													"src": "13436:164:1",
													"statements": [
														{
															"nativeSrc": "13446:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13446:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13466:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13466:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13460:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13460:5:1"
																},
																"nativeSrc": "13460:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13460:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13450:6:1",
																	"nodeType": "YulTypedName",
																	"src": "13450:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13488:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13488:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13497:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13497:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13505:4:1",
																				"nodeType": "YulLiteral",
																				"src": "13505:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13493:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13493:3:1"
																		},
																		"nativeSrc": "13493:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13493:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13512:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13512:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13482:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "13482:5:1"
																},
																"nativeSrc": "13482:37:1",
																"nodeType": "YulFunctionCall",
																"src": "13482:37:1"
															},
															"nativeSrc": "13482:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "13482:37:1"
														},
														{
															"nativeSrc": "13528:26:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13528:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13542:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13542:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13547:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13547:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13538:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13538:3:1"
																},
																"nativeSrc": "13538:16:1",
																"nodeType": "YulFunctionCall",
																"src": "13538:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13532:2:1",
																	"nodeType": "YulTypedName",
																	"src": "13532:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13570:2:1",
																		"nodeType": "YulIdentifier",
																		"src": "13570:2:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13574:1:1",
																		"nodeType": "YulLiteral",
																		"src": "13574:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13563:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "13563:6:1"
																},
																"nativeSrc": "13563:13:1",
																"nodeType": "YulFunctionCall",
																"src": "13563:13:1"
															},
															"nativeSrc": "13563:13:1",
															"nodeType": "YulExpressionStatement",
															"src": "13563:13:1"
														},
														{
															"nativeSrc": "13585:9:1",
															"nodeType": "YulAssignment",
															"src": "13585:9:1",
															"value": {
																"name": "_1",
																"nativeSrc": "13592:2:1",
																"nodeType": "YulIdentifier",
																"src": "13592:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13585:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13585:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13299:301:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13412:3:1",
														"nodeType": "YulTypedName",
														"src": "13412:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13417:6:1",
														"nodeType": "YulTypedName",
														"src": "13417:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13428:3:1",
														"nodeType": "YulTypedName",
														"src": "13428:3:1",
														"type": ""
													}
												],
												"src": "13299:301:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IBEP20_$1392__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        value3 := abi_decode_address(add(headStart, 96))\n        value4 := abi_decode_address(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let dst := allocate_memory(array_allocation_size_array_uint256_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(_1, shl(5, length)), 0x20)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 0x20)\n        }\n        value0 := array\n        let offset_1 := calldataload(add(headStart, 0x20))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let array := allocate_memory(add(and(add(length, 0x1f), not(31)), 32))\n        mstore(array, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), length)\n        mstore(add(add(array, length), 32), 0)\n        value1 := array\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"This address does not have permi\")\n        mstore(add(headStart, 96), \"ssion to call performUpkeep\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_bool__to_t_address_t_address_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Amount is greater then 50%\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1174": [
									{
										"length": 32,
										"start": 8492
									},
									{
										"length": 32,
										"start": 8533
									},
									{
										"length": 32,
										"start": 8857
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106102a5575f3560e01c80637547c7a31161016f578063ad8e5ec4116100d8578063d777cc6d11610092578063ed0610671161006d578063ed0610671461086d578063f0664a4f1461088c578063f2fde38b146108ab578063ff3d65d9146108ca575f80fd5b8063d777cc6d1461081b578063d9b998b41461083a578063e9c68e2c14610859575f80fd5b8063ad8e5ec4146106f4578063b47ff95114610713578063b9dac1eb14610728578063bccbc36c14610747578063c7fd5bf0146107c8578063ce356a2414610806575f80fd5b806385f452501161012957806385f45250146105fe5780638da5cb5b1461061d578063947a36fb146106595780639c361e4e1461066e578063a4f67b8b14610683578063ad3cb1cc146106b7575f80fd5b80637547c7a31461054457806378fd078d146105635780637f111e60146105825780637f70c5e7146105a15780637ffe4d93146105c057806383aa9985146105df575f80fd5b806344490ff411610211578063567e98f9116101cb578063567e98f91461049c5780635f17e616146104b15780636626b26d146104d057806367976974146104e45780636e04ff0d14610503578063715018a614610530575f80fd5b806344490ff4146104035780634585e33b146104185780634f1ef286146104375780635256dbbf1461044a57806352d1902d146104695780635462870d1461047d575f80fd5b806330cac9721161026257806330cac9721461037b57806333244c2c1461039057806334107c87146103a557806339518b5e146103c45780633a71a9e4146103d95780633f3b3b27146103ee575f80fd5b806301934a83146102a957806311eac855146102d15780631459457a14610307578063188e07b9146103285780632765df7a1461033d5780633070fbf81461035c575b5f80fd5b3480156102b4575f80fd5b506102be60085481565b6040519081526020015b60405180910390f35b3480156102dc575f80fd5b505f546102ef906001600160a01b031681565b6040516001600160a01b0390911681526020016102c8565b348015610312575f80fd5b50610326610321366004612813565b6108f5565b005b348015610333575f80fd5b506102be60015481565b348015610348575f80fd5b50610326610357366004612874565b610a70565b348015610367575f80fd5b50600e546102ef906001600160a01b031681565b348015610386575f80fd5b506102be600b5481565b34801561039b575f80fd5b506102be60045481565b3480156103b0575f80fd5b506103266103bf366004612964565b610b58565b3480156103cf575f80fd5b506102be600c5481565b3480156103e4575f80fd5b506102be60075481565b3480156103f9575f80fd5b506102be600d5481565b34801561040e575f80fd5b506102be60055481565b348015610423575f80fd5b50610326610432366004612a20565b610d05565b610326610445366004612a8e565b610dfc565b348015610455575f80fd5b50610326610464366004612874565b610e17565b348015610474575f80fd5b506102be610f61565b348015610488575f80fd5b506009546102ef906001600160a01b031681565b3480156104a7575f80fd5b506102be60035481565b3480156104bc575f80fd5b506103266104cb366004612b33565b610f7c565b3480156104db575f80fd5b50610326611064565b3480156104ef575f80fd5b506103266104fe366004612874565b6110ec565b34801561050e575f80fd5b5061052261051d366004612a20565b6112ef565b6040516102c8929190612b81565b34801561053b575f80fd5b5061032661131f565b34801561054f575f80fd5b5061032661055e366004612874565b611332565b34801561056e575f80fd5b5061032661057d366004612874565b611519565b34801561058d575f80fd5b5061032661059c366004612874565b611663565b3480156105ac575f80fd5b506103266105bb366004612874565b6116f4565b3480156105cb575f80fd5b506103266105da366004612874565b611785565b3480156105ea575f80fd5b506010546102ef906001600160a01b031681565b348015610609575f80fd5b50610326610618366004612b33565b6118d4565b348015610628575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b03166102ef565b348015610664575f80fd5b506102be600a5481565b348015610679575f80fd5b506102be60115481565b34801561068e575f80fd5b506102ef61069d366004612874565b60136020525f90815260409020546001600160a01b031681565b3480156106c2575f80fd5b506106e7604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516102c89190612ba3565b3480156106ff575f80fd5b5061032661070e366004612874565b611a0c565b34801561071e575f80fd5b506102be60025481565b348015610733575f80fd5b50610326610742366004612874565b611a9d565b348015610752575f80fd5b50610799610761366004612bb5565b60156020525f908152604090208054600182015460028301546003840154600485015460059095015460ff9094169492939192909186565b6040805196151587526020870195909552938501929092526060840152608083015260a082015260c0016102c8565b3480156107d3575f80fd5b506107f66107e2366004612bb5565b60126020525f908152604090205460ff1681565b60405190151581526020016102c8565b348015610811575f80fd5b506102be60065481565b348015610826575f80fd5b50610326610835366004612bb5565b611b2e565b348015610845575f80fd5b50610326610854366004612bdb565b611bfb565b348015610864575f80fd5b50610326611d55565b348015610878575f80fd5b50610326610887366004612b33565b61202e565b348015610897575f80fd5b50600f546102ef906001600160a01b031681565b3480156108b6575f80fd5b506103266108c5366004612bb5565b6120cb565b3480156108d5575f80fd5b506102be6108e4366004612874565b60146020525f908152604090205481565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561093a5750825b90505f8267ffffffffffffffff1660011480156109565750303b155b905081158015610964575080155b156109825760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109ac57845460ff60401b1916600160401b1785555b6109b58a612108565b6109bd612119565b5f80546001600160a01b03808c166001600160a01b031992831617909255611388600455611d4c6005556105dc6006556103e860075560098054898416908316179055600f80548b841690831617905560108054928a16929091169190911790558315610a6457845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050505050565b600f546001600160a01b03163314801590610a9657506010546001600160a01b03163314155b15610abb57604051631ed6f38b60e31b81523360048201526024015b60405180910390fd5b5f8111610ade5760405163cdbc633560e01b815260048101829052602401610ab2565b601180545f90815260146020526040812083905581549190610aff83612c24565b90915550506011547fe1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f90610b3583612710612c3c565b60408051928352602083019190915281018390526060015b60405180910390a150565b600f546001600160a01b03163314801590610b7e57506010546001600160a01b03163314155b15610b9e57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f825111610bc4578151604051633ddd555760e21b8152600401610ab291815260200190565b5f815111610bea578051604051633a46e2ab60e01b8152600401610ab291815260200190565b8151815114610c0c5760405163512509d360e11b815260040160405180910390fd5b5f5b8251811015610cbc57828181518110610c2957610c29612c4f565b602002602001015160155f848481518110610c4657610c46612c4f565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f206005015f828254610c7e9190612c63565b92505081905550828181518110610c9757610c97612c4f565b602002602001015160035f828254610caf9190612c63565b9091555050600101610c0e565b50815181516040805133815260208101939093528201527f472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6906060015b60405180910390a15050565b600e546001600160a01b03163314610d855760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b65657000000000006064820152608401610ab2565b600a545f03610dad57600a54604051637154000760e01b8152600401610ab291815260200190565b600c544210610ddd57600b54600a81905542600d819055610dce9190612c63565b600c55610dd9611d55565b5050565b600c546040516354593e7560e01b8152600401610ab291815260200190565b610e04612121565b610e0d826121c5565b610dd982826121cd565b600f546001600160a01b03163314801590610e3d57506010546001600160a01b03163314155b15610e5d57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610e80576040516302ff478360e41b815260048101829052602401610ab2565b8060015f828254610e919190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd90610eca90339030908790600401612c76565b6020604051808303815f875af1158015610ee6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f0a9190612c9a565b905080610f2e5760405163d85d3cef60e01b81528115156004820152602401610ab2565b7fa9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404600154604051610cf991815260200190565b5f610f6a61228e565b505f80516020612d1983398151915290565b600f546001600160a01b03163314801590610fa257506010546001600160a01b03163314155b15610fc257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111610fe557604051637154000760e01b815260048101829052602401610ab2565b42821015611009576040516354593e7560e01b815260048101839052602401610ab2565b6110134283612c3c565b600a819055600c83905542600d819055600b8390556040805133815260208101939093528201527f2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a0090606001610cf9565b600f546001600160a01b0316331480159061108a57506010546001600160a01b03163314155b156110aa57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f600a8190556040805133815260208101929092527f3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f910160405180910390a1565b600954600160a01b900460ff16156111465760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610ab2565b6009805460ff60a01b1916600160a01b1790558061117a576040516302ff478360e41b815260048101829052602401610ab2565b335f908152601560205260409020600101548111156111c357335f90815260156020526040908190206001015490516398e712c360e01b81526004810191909152602401610ab2565b335f90815260156020526040812060010180548392906111e4908490612c3c565b9091555050335f908152601560205260408120600201805483929061120a908490612c63565b90915550505f805460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561125d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112819190612c9a565b9050806112a55760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051338152602081018490527f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364910160405180910390a150506009805460ff60a01b19169055565b5f60605f600a54600d54426113049190612c3c565b60408051602081019091525f81529110969095509350505050565b6113276122d7565b6113305f612332565b565b5f8111611355576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff161561139d57335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040812060050180548392906113be908490612c63565b9091555050335f9081526012602052604090205460ff1661142757600880545f90815260136020908152604080832080546001600160a01b03191633908117909155835260129091528120805460ff191660011790558154919061142183612c24565b91905055505b8060035f8282546114389190612c63565b90915550505f80546009546040516323b872dd60e01b81526001600160a01b03928316926323b872dd92611476923392909116908790600401612c76565b6020604051808303815f875af1158015611492573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114b69190612c9a565b9050806114da5760405163d85d3cef60e01b81528115156004820152602401610ab2565b6009546040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab91610cf99133916001600160a01b0316908690612c76565b600f546001600160a01b0316331480159061153f57506010546001600160a01b03163314155b1561155f57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611582576040516302ff478360e41b815260048101829052602401610ab2565b8060025f8282546115939190612c63565b90915550505f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906115cc90339030908790600401612c76565b6020604051808303815f875af11580156115e8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061160c9190612c9a565b9050806116305760405163d85d3cef60e01b81528115156004820152602401610ab2565b7f73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94600254604051610cf991815260200190565b600f546001600160a01b0316331480159061168957506010546001600160a01b03163314155b156116a957604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116116cc5760405163cdbc633560e01b815260048101829052602401610ab2565b600781905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b0316331480159061171a57506010546001600160a01b03163314155b1561173a57604051631ed6f38b60e31b8152336004820152602401610ab2565b5f811161175d5760405163cdbc633560e01b815260048101829052602401610ab2565b600481905560408051338152602081018390525f80516020612d398339815191529101610b4d565b5f81116117a8576040516302ff478360e41b815260048101829052602401610ab2565b335f9081526015602052604090205460ff16156117f057335f90815260156020526040908190205490516301be970f60e61b815260ff90911615156004820152602401610ab2565b335f90815260156020526040902060010154811061182457604051630636dc6b60e31b815260048101829052602401610ab2565b335f9081526015602052604081206001018054839290611845908490612c3c565b9091555050335f908152601560205260408120600501805483929061186b908490612c63565b925050819055508060025f8282546118839190612c63565b925050819055508060035f82825461189b9190612c63565b90915550506040517f14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab90610b4d90339030908590612c76565b5f82116118f7576040516302ff478360e41b815260048101839052602401610ab2565b60115481111561191d5760405163222a50f360e01b815260048101829052602401610ab2565b5f818152601460205260409020546119369083906123a2565b5f80546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061196a90339030908890600401612c76565b6020604051808303815f875af1158015611986573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119aa9190612c9a565b9050806119ce5760405163d85d3cef60e01b81528115156004820152602401610ab2565b60408051848152602081018490527fa89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900910160405180910390a1505050565b600f546001600160a01b03163314801590611a3257506010546001600160a01b03163314155b15611a5257604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611a755760405163cdbc633560e01b815260048101829052602401610ab2565b600681905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611ac357506010546001600160a01b03163314155b15611ae357604051631ed6f38b60e31b8152336004820152602401610ab2565b5f8111611b065760405163cdbc633560e01b815260048101829052602401610ab2565b600581905560408051338152602081018390525f80516020612d398339815191529101610b4d565b600f546001600160a01b03163314801590611b5457506010546001600160a01b03163314155b15611b7457604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038116611ba65760405163e4cfa94d60e01b81526001600160a01b0382166004820152602401610ab2565b600e80546001600160a01b0319166001600160a01b0383169081179091556040805133815260208101929092527f75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a9101610b4d565b600f546001600160a01b03163314801590611c2157506010546001600160a01b03163314155b15611c4157604051631ed6f38b60e31b8152336004820152602401610ab2565b6001600160a01b038216611c735760405163e4cfa94d60e01b81526001600160a01b0383166004820152602401610ab2565b600181151514801590611c8557508015155b15611ca7576040516381ed1ae360e01b81528115156004820152602401610ab2565b801515600103611cd8576001600160a01b0382165f908152601560205260409020805460ff19166001179055611cf8565b6001600160a01b0382165f908152601560205260409020805460ff191690555b6001600160a01b0382165f818152601560209081526040918290205482513381529182019390935260ff9092161515908201527f7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f190606001610cf9565b600e546001600160a01b03163314801590611d7b5750600f546001600160a01b03163314155b8015611d9257506010546001600160a01b03163314155b15611db257604051631ed6f38b60e31b8152336004820152602401610ab2565b600254158015611dc25750600154155b15611def57600254600154604051632fd92d8d60e01b815260048101929092526024820152604401610ab2565b5f805f611dfa612400565b919450925090505f805b600854811015611fe2575f818152601360209081526040808320546001600160a01b03168352601590915290205460ff16611fda576003545f828152601360209081526040808320546001600160a01b031683526015909152812060050154909190611e7290612710612cb5565b611e7c9190612ccc565b90505f611e89868361256d565b90508060025f828254611e9c9190612c3c565b90915550611eac90508185612c63565b93508460015f828254611ebf9190612c3c565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206003018054879290611efa908490612c63565b90915550505f838152601360209081526040808320546001600160a01b03168352601590915281206004018054839290611f35908490612c63565b909155505f9050611f468683612c63565b5f858152601360209081526040808320546001600160a01b031683526015909152812060010180549293508392909190611f81908490612c63565b909155505087851115611fd65760405162461bcd60e51b815260206004820152601a60248201527f416d6f756e742069732067726561746572207468656e203530250000000000006044820152606401610ab2565b5050505b600101611e04565b506002546001546040805133815260208101939093528201527fee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e580209060600160405180910390a150505050565b600f546001600160a01b0316331480159061205457506010546001600160a01b03163314155b1561207457604051631ed6f38b60e31b8152336004820152602401610ab2565b5f81116120975760405163cdbc633560e01b815260048101829052602401610ab2565b5f8281526014602090815260409182902083905581513381529081018390525f80516020612d398339815191529101610cf9565b6120d36122d7565b6001600160a01b0381166120fc57604051631e4fbdf760e01b81525f6004820152602401610ab2565b61210581612332565b50565b6121106125d6565b6121058161261f565b6113306125d6565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806121a757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661219b5f80516020612d19833981519152546001600160a01b031690565b6001600160a01b031614155b156113305760405163703e46dd60e11b815260040160405180910390fd5b6121056122d7565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015612227575060408051601f3d908101601f1916820190925261222491810190612ceb565b60015b61224f57604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610ab2565b5f80516020612d19833981519152811461227f57604051632a87526960e21b815260048101829052602401610ab2565b6122898383612627565b505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146113305760405163703e46dd60e11b815260040160405180910390fd5b336123097f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b0316146113305760405163118cdaa760e01b8152336004820152602401610ab2565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b5f6123af82612710612c3c565b90505f6123bc848361256d565b90505f6123c9858561256d565b90508160025f8282546123dc9190612c63565b925050819055508060015f8282546123f49190612c63565b90915550505050505050565b5f805f8061241260025461138861256d565b90505f6124218260055461256d565b90505f6124308360065461256d565b90505f61243f8460075461256d565b90505f61245060015460045461256d565b90505f6008541161247a57600854604051637ca8d0db60e01b8152600401610ab291815260200190565b5f600854826124899190612ccc565b90506124958385612c63565b60025f8282546124a59190612c3c565b925050819055508360015f8282546124bd9190612c63565b90915550505f805460095460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810187905291169063a9059cbb906044016020604051808303815f875af1158015612514573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906125389190612c9a565b90508061255c5760405163d85d3cef60e01b81528115156004820152602401610ab2565b509498939750939550919350505050565b5f80831161259157604051639b7220af60e01b815260048101849052602401610ab2565b5f82116125b457604051630b015aa760e31b815260048101839052602401610ab2565b5f6127106125c28486612cb5565b6125cc9190612ccc565b9150505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661133057604051631afcd79f60e31b815260040160405180910390fd5b6120d36125d6565b6126308261267c565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a28051156126745761228982826126df565b610dd9612751565b806001600160a01b03163b5f036126b157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610ab2565b5f80516020612d1983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516126fb9190612d02565b5f60405180830381855af49150503d805f8114612733576040519150601f19603f3d011682016040523d82523d5f602084013e612738565b606091505b5091509150612748858383612770565b95945050505050565b34156113305760405163b398979f60e01b815260040160405180910390fd5b60608261278557612780826127cf565b6127c8565b815115801561279c57506001600160a01b0384163b155b156127c557604051639996b31560e01b81526001600160a01b0385166004820152602401610ab2565b50805b9392505050565b8051156127df5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461280e575f80fd5b919050565b5f805f805f60a08688031215612827575f80fd5b612830866127f8565b945061283e602087016127f8565b935061284c604087016127f8565b925061285a606087016127f8565b9150612868608087016127f8565b90509295509295909350565b5f60208284031215612884575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156128c8576128c861288b565b604052919050565b5f67ffffffffffffffff8211156128e9576128e961288b565b5060051b60200190565b5f82601f830112612902575f80fd5b8135612915612910826128d0565b61289f565b8082825260208201915060208360051b860101925085831115612936575f80fd5b602085015b8381101561295a5761294c816127f8565b83526020928301920161293b565b5095945050505050565b5f8060408385031215612975575f80fd5b823567ffffffffffffffff81111561298b575f80fd5b8301601f8101851361299b575f80fd5b80356129a9612910826128d0565b8082825260208201915060208360051b8501019250878311156129ca575f80fd5b6020840193505b828410156129ec5783358252602093840193909101906129d1565b9450505050602083013567ffffffffffffffff811115612a0a575f80fd5b612a16858286016128f3565b9150509250929050565b5f8060208385031215612a31575f80fd5b823567ffffffffffffffff811115612a47575f80fd5b8301601f81018513612a57575f80fd5b803567ffffffffffffffff811115612a6d575f80fd5b856020828401011115612a7e575f80fd5b6020919091019590945092505050565b5f8060408385031215612a9f575f80fd5b612aa8836127f8565b9150602083013567ffffffffffffffff811115612ac3575f80fd5b8301601f81018513612ad3575f80fd5b803567ffffffffffffffff811115612aed57612aed61288b565b612b00601f8201601f191660200161289f565b818152866020838501011115612b14575f80fd5b816020840160208301375f602083830101528093505050509250929050565b5f8060408385031215612b44575f80fd5b50508035926020909101359150565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201525f612b9b6040830184612b53565b949350505050565b602081525f6127c86020830184612b53565b5f60208284031215612bc5575f80fd5b6127c8826127f8565b8015158114612105575f80fd5b5f8060408385031215612bec575f80fd5b612bf5836127f8565b91506020830135612c0581612bce565b809150509250929050565b634e487b7160e01b5f52601160045260245ffd5b5f60018201612c3557612c35612c10565b5060010190565b818103818111156125d0576125d0612c10565b634e487b7160e01b5f52603260045260245ffd5b808201808211156125d0576125d0612c10565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612caa575f80fd5b81516127c881612bce565b80820281158282048414176125d0576125d0612c10565b5f82612ce657634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612cfb575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcb5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9a2646970667358221220287ed1eda293901ad5f23b7e46e50582bc56101813fe50a963b2e23fe45e364064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2A5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0xAD8E5EC4 GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD777CC6D GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xED061067 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xED061067 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0xF0664A4F EQ PUSH2 0x88C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x8AB JUMPI DUP1 PUSH4 0xFF3D65D9 EQ PUSH2 0x8CA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xD777CC6D EQ PUSH2 0x81B JUMPI DUP1 PUSH4 0xD9B998B4 EQ PUSH2 0x83A JUMPI DUP1 PUSH4 0xE9C68E2C EQ PUSH2 0x859 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD8E5EC4 EQ PUSH2 0x6F4 JUMPI DUP1 PUSH4 0xB47FF951 EQ PUSH2 0x713 JUMPI DUP1 PUSH4 0xB9DAC1EB EQ PUSH2 0x728 JUMPI DUP1 PUSH4 0xBCCBC36C EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xC7FD5BF0 EQ PUSH2 0x7C8 JUMPI DUP1 PUSH4 0xCE356A24 EQ PUSH2 0x806 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x85F45250 GT PUSH2 0x129 JUMPI DUP1 PUSH4 0x85F45250 EQ PUSH2 0x5FE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x61D JUMPI DUP1 PUSH4 0x947A36FB EQ PUSH2 0x659 JUMPI DUP1 PUSH4 0x9C361E4E EQ PUSH2 0x66E JUMPI DUP1 PUSH4 0xA4F67B8B EQ PUSH2 0x683 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x6B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x78FD078D EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x7F111E60 EQ PUSH2 0x582 JUMPI DUP1 PUSH4 0x7F70C5E7 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0x7FFE4D93 EQ PUSH2 0x5C0 JUMPI DUP1 PUSH4 0x83AA9985 EQ PUSH2 0x5DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 GT PUSH2 0x211 JUMPI DUP1 PUSH4 0x567E98F9 GT PUSH2 0x1CB JUMPI DUP1 PUSH4 0x567E98F9 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x5F17E616 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0x6626B26D EQ PUSH2 0x4D0 JUMPI DUP1 PUSH4 0x67976974 EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x503 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x44490FF4 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x5256DBBF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x5462870D EQ PUSH2 0x47D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x30CAC972 GT PUSH2 0x262 JUMPI DUP1 PUSH4 0x30CAC972 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x33244C2C EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0x34107C87 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x39518B5E EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x3A71A9E4 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x3EE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1934A83 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x11EAC855 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x1459457A EQ PUSH2 0x307 JUMPI DUP1 PUSH4 0x188E07B9 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x2765DF7A EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x3070FBF8 EQ PUSH2 0x35C JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x312 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x321 CALLDATASIZE PUSH1 0x4 PUSH2 0x2813 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x348 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x357 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xA70 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x3BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2964 JUMP JUMPDEST PUSH2 0xB58 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0xD05 JUMP JUMPDEST PUSH2 0x326 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A8E JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x464 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0xE17 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x474 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0xF61 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4CB CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0xF7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1064 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x10EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x522 PUSH2 0x51D CALLDATASIZE PUSH1 0x4 PUSH2 0x2A20 JUMP JUMPDEST PUSH2 0x12EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2B81 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x131F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1332 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x57D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1663 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x16F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1785 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x609 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x618 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x18D4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x628 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x664 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x679 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x11 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EF PUSH2 0x69D CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C8 SWAP2 SWAP1 PUSH2 0x2BA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x70E CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A0C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x733 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x742 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH2 0x1A9D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x752 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x799 PUSH2 0x761 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x15 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 SWAP1 SWAP6 ADD SLOAD PUSH1 0xFF SWAP1 SWAP5 AND SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP7 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x7F6 PUSH2 0x7E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x811 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x835 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x1B2E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x845 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x854 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x1BFB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x864 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1D55 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x878 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x887 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B33 JUMP JUMPDEST PUSH2 0x202E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x897 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x2EF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x8C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB5 JUMP JUMPDEST PUSH2 0x20CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH2 0x8E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2874 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x93A JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x956 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x964 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9AC JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9B5 DUP11 PUSH2 0x2108 JUMP JUMPDEST PUSH2 0x9BD PUSH2 0x2119 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP13 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH2 0x1388 PUSH1 0x4 SSTORE PUSH2 0x1D4C PUSH1 0x5 SSTORE PUSH2 0x5DC PUSH1 0x6 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x9 DUP1 SLOAD DUP10 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0xF DUP1 SLOAD DUP12 DUP5 AND SWAP1 DUP4 AND OR SWAP1 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0xA64 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xA96 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xABB JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xADE JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0xAFF DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x11 SLOAD PUSH32 0xE1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F SWAP1 PUSH2 0xB35 DUP4 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xB7E JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT PUSH2 0xBC4 JUMPI DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3DDD5557 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD GT PUSH2 0xBEA JUMPI DUP1 MLOAD PUSH1 0x40 MLOAD PUSH4 0x3A46E2AB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MLOAD EQ PUSH2 0xC0C JUMPI PUSH1 0x40 MLOAD PUSH4 0x512509D3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xCBC JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC29 JUMPI PUSH2 0xC29 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x15 PUSH0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xC46 JUMPI PUSH2 0xC46 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC7E SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC97 JUMPI PUSH2 0xC97 PUSH2 0x2C4F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCAF SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 ADD PUSH2 0xC0E JUMP JUMPDEST POP DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x472714A70B748503A00EFA85A1C3081B2A3477CE3BE0227CB140455F82CCAEB6 SWAP1 PUSH1 0x60 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973206164647265737320646F6573206E6F742068617665207065726D69 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH0 SUB PUSH2 0xDAD JUMPI PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD TIMESTAMP LT PUSH2 0xDDD JUMPI PUSH1 0xB SLOAD PUSH1 0xA DUP2 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH2 0xDCE SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0xDD9 PUSH2 0x1D55 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0xE0D DUP3 PUSH2 0x21C5 JUMP JUMPDEST PUSH2 0xDD9 DUP3 DUP3 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xE3D JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xE5D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xECA SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF0A SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0xA9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF6A PUSH2 0x228E JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0xFA2 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0xFC2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xFE5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x71540007 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST TIMESTAMP DUP3 LT ISZERO PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH4 0x54593E75 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x1013 TIMESTAMP DUP4 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE TIMESTAMP PUSH1 0xD DUP2 SWAP1 SSTORE PUSH1 0xB DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0x2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x108A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x10AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1146 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE DUP1 PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 GT ISZERO PUSH2 0x11C3 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 MLOAD PUSH4 0x98E712C3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x11E4 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x120A SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x125D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1281 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH0 PUSH1 0xA SLOAD PUSH1 0xD SLOAD TIMESTAMP PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH0 DUP2 MSTORE SWAP2 LT SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1327 PUSH2 0x22D7 JUMP JUMPDEST PUSH2 0x1330 PUSH0 PUSH2 0x2332 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1355 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x139D JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13BE SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1427 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 SLOAD SWAP2 SWAP1 PUSH2 0x1421 DUP4 PUSH2 0x2C24 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1438 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH2 0x1476 SWAP3 CALLER SWAP3 SWAP1 SWAP2 AND SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1492 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14B6 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x14DA JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP2 PUSH2 0xCF9 SWAP2 CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x153F JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x155F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1593 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x15CC SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x15E8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160C SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1630 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH2 0xCF9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1689 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x171A JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x173A JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x175D JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x17A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x17F0 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x1BE970F PUSH1 0xE6 SHL DUP2 MSTORE PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT PUSH2 0x1824 JUMPI PUSH1 0x40 MLOAD PUSH4 0x636DC6B PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1845 SWAP1 DUP5 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x5 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x186B SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1883 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x189B SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB SWAP1 PUSH2 0xB4D SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP6 SWAP1 PUSH2 0x2C76 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x18F7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2FF4783 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x11 SLOAD DUP2 GT ISZERO PUSH2 0x191D JUMPI PUSH1 0x40 MLOAD PUSH4 0x222A50F3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1936 SWAP1 DUP4 SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x196A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x2C76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1986 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19AA SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x19CE JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1A32 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1A52 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1A75 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1AC3 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AE3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1B06 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1B54 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1B74 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1BA6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH32 0x75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A SWAP2 ADD PUSH2 0xB4D JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1C21 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C73 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE4CFA94D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x1 DUP2 ISZERO ISZERO EQ DUP1 ISZERO SWAP1 PUSH2 0x1C85 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0x1CA7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x81ED1AE3 PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x1CD8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1CF8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x15 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD CALLER DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 DUP3 ADD MSTORE PUSH32 0x7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1 SWAP1 PUSH1 0x60 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x1D7B JUMPI POP PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1D92 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x2 SLOAD ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI POP PUSH1 0x1 SLOAD ISZERO JUMPDEST ISZERO PUSH2 0x1DEF JUMPI PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FD92D8D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x1DFA PUSH2 0x2400 JUMP JUMPDEST SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0x8 SLOAD DUP2 LT ISZERO PUSH2 0x1FE2 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1FDA JUMPI PUSH1 0x3 SLOAD PUSH0 DUP3 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x5 ADD SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x1E72 SWAP1 PUSH2 0x2710 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x1E7C SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1E89 DUP7 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E9C SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1EAC SWAP1 POP DUP2 DUP6 PUSH2 0x2C63 JUMP JUMPDEST SWAP4 POP DUP5 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1EBF SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1EFA SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP4 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x4 ADD DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1F35 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1F46 DUP7 DUP4 PUSH2 0x2C63 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x15 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x1 ADD DUP1 SLOAD SWAP3 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1F81 SWAP1 DUP5 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP8 DUP6 GT ISZERO PUSH2 0x1FD6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742069732067726561746572207468656E20353025000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xAB2 JUMP JUMPDEST POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1E04 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE DUP3 ADD MSTORE PUSH32 0xEE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x2054 JUMPI POP PUSH1 0x10 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO JUMPDEST ISZERO PUSH2 0x2074 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1ED6F38B PUSH1 0xE3 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x2097 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCDBC6335 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE DUP2 MLOAD CALLER DUP2 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D39 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x20D3 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x20FC JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x2332 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2110 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2105 DUP2 PUSH2 0x261F JUMP JUMPDEST PUSH2 0x1330 PUSH2 0x25D6 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x21A7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x219B PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2105 PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x2227 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x2224 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x224F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x227F JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH2 0x2289 DUP4 DUP4 PUSH2 0x2627 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH2 0x2309 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AF DUP3 PUSH2 0x2710 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23BC DUP5 DUP4 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x23C9 DUP6 DUP6 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23DC SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23F4 SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x2412 PUSH1 0x2 SLOAD PUSH2 0x1388 PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2421 DUP3 PUSH1 0x5 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2430 DUP4 PUSH1 0x6 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x243F DUP5 PUSH1 0x7 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2450 PUSH1 0x1 SLOAD PUSH1 0x4 SLOAD PUSH2 0x256D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD GT PUSH2 0x247A JUMPI PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0x7CA8D0DB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAB2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x2489 SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 POP PUSH2 0x2495 DUP4 DUP6 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24A5 SWAP2 SWAP1 PUSH2 0x2C3C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x1 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24BD SWAP2 SWAP1 PUSH2 0x2C63 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2514 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2538 SWAP2 SWAP1 PUSH2 0x2C9A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x255C JUMPI PUSH1 0x40 MLOAD PUSH4 0xD85D3CEF PUSH1 0xE0 SHL DUP2 MSTORE DUP2 ISZERO ISZERO PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP4 SWAP6 POP SWAP2 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 GT PUSH2 0x2591 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9B7220AF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x25B4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB015AA7 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH2 0x25C2 DUP5 DUP7 PUSH2 0x2CB5 JUMP JUMPDEST PUSH2 0x25CC SWAP2 SWAP1 PUSH2 0x2CCC JUMP JUMPDEST SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x20D3 PUSH2 0x25D6 JUMP JUMPDEST PUSH2 0x2630 DUP3 PUSH2 0x267C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x2674 JUMPI PUSH2 0x2289 DUP3 DUP3 PUSH2 0x26DF JUMP JUMPDEST PUSH2 0xDD9 PUSH2 0x2751 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x26B1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2D19 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x26FB SWAP2 SWAP1 PUSH2 0x2D02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2733 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2738 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2748 DUP6 DUP4 DUP4 PUSH2 0x2770 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x1330 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x2785 JUMPI PUSH2 0x2780 DUP3 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x27C8 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x279C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x27C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xAB2 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x27DF JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x280E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2827 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2830 DUP7 PUSH2 0x27F8 JUMP JUMPDEST SWAP5 POP PUSH2 0x283E PUSH1 0x20 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP4 POP PUSH2 0x284C PUSH1 0x40 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP3 POP PUSH2 0x285A PUSH1 0x60 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2868 PUSH1 0x80 DUP8 ADD PUSH2 0x27F8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2884 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x28C8 JUMPI PUSH2 0x28C8 PUSH2 0x288B JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x28E9 JUMPI PUSH2 0x28E9 PUSH2 0x288B JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2902 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2915 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST PUSH2 0x289F JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x2936 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x295A JUMPI PUSH2 0x294C DUP2 PUSH2 0x27F8 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x293B JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2975 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x298B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x299B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29A9 PUSH2 0x2910 DUP3 PUSH2 0x28D0 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x29CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x29EC JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29D1 JUMP JUMPDEST SWAP5 POP POP POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A0A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2A16 DUP6 DUP3 DUP7 ADD PUSH2 0x28F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A31 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A47 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2A57 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A6D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x2A7E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A9F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2AA8 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AC3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2AD3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2AED JUMPI PUSH2 0x2AED PUSH2 0x288B JUMP JUMPDEST PUSH2 0x2B00 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x289F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x2B14 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B44 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2B9B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x27C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2B53 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x27C8 DUP3 PUSH2 0x27F8 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2105 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BEC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2BF5 DUP4 PUSH2 0x27F8 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2C05 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2C35 JUMPI PUSH2 0x2C35 PUSH2 0x2C10 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CAA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x27C8 DUP2 PUSH2 0x2BCE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x25D0 JUMPI PUSH2 0x25D0 PUSH2 0x2C10 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2CE6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CFB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCB5671393C7C6980552E50A BALANCE 0xE7 PUSH25 0x921EB17D764C2E98FBF4D44FFF524712DEF9A2646970667358 0x22 SLT KECCAK256 0x28 PUSH31 0xD1EDA293901AD5F23B7E46E50582BC56101813FE50A963B2E23FE45E364064 PUSH20 0x6F6C634300081A00330000000000000000000000 ",
							"sourceMap": "41720:17073:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42168:24;;;;;;;;;;;;;;;;;;;160:25:1;;;148:2;133:18;42168:24:0;;;;;;;;41834:23;;;;;;;;;;-1:-1:-1;41834:23:0;;;;-1:-1:-1;;;;;41834:23:0;;;;;;-1:-1:-1;;;;;375:32:1;;;357:51;;345:2;330:18;41834:23:0;196:218:1;45116:902:0;;;;;;;;;;-1:-1:-1;45116:902:0;;;;;:::i;:::-;;:::i;:::-;;41868:33;;;;;;;;;;;;;;;;46031:337;;;;;;;;;;-1:-1:-1;46031:337:0;;;;;:::i;:::-;;:::i;42534:33::-;;;;;;;;;;-1:-1:-1;42534:33:0;;;;-1:-1:-1;;;;;42534:33:0;;;42336:27;;;;;;;;;;;;;;;;41986:40;;;;;;;;;;;;;;;;48003:647;;;;;;;;;;-1:-1:-1;48003:647:0;;;;;:::i;:::-;;:::i;42416:27::-;;;;;;;;;;;;;;;;42123:38;;;;;;;;;;;;;;;;42450:28;;;;;;;;;;;;;;;;42032:40;;;;;;;;;;;;;;;;53352:633;;;;;;;;;;-1:-1:-1;53352:633:0;;;;;:::i;:::-;;:::i;36349:214::-;;;;;;:::i;:::-;;:::i;46785:399::-;;;;;;;;;;-1:-1:-1;46785:399:0;;;;;:::i;:::-;;:::i;35896:134::-;;;;;;;;;;;;;:::i;42198:30::-;;;;;;;;;;-1:-1:-1;42198:30:0;;;;-1:-1:-1;;;;;42198:30:0;;;41947:32;;;;;;;;;;;;;;;;53996:542;;;;;;;;;;-1:-1:-1;53996:542:0;;;;;:::i;:::-;;:::i;54544:120::-;;;;;;;;;;;;;:::i;55463:641::-;;;;;;;;;;-1:-1:-1;55463:641:0;;;;;:::i;:::-;;:::i;53106:235::-;;;;;;;;;;-1:-1:-1;53106:235:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13233:101::-;;;;;;;;;;;;;:::i;47190:802::-;;;;;;;;;;-1:-1:-1;47190:802:0;;;;;:::i;:::-;;:::i;46374:401::-;;;;;;;;;;-1:-1:-1;46374:401:0;;;;;:::i;:::-;;:::i;58035:323::-;;;;;;;;;;-1:-1:-1;58035:323:0;;;;;:::i;:::-;;:::i;57024:330::-;;;;;;;;;;-1:-1:-1;57024:330:0;;;;;:::i;:::-;;:::i;48657:678::-;;;;;;;;;;-1:-1:-1;48657:678:0;;;;;:::i;:::-;;:::i;42603:23::-;;;;;;;;;;-1:-1:-1;42603:23:0;;;;-1:-1:-1;;;;;42603:23:0;;;49345:541;;;;;;;;;;-1:-1:-1;49345:541:0;;;;;:::i;:::-;;:::i;12519:144::-;;;;;;;;;;-1:-1:-1;11391:22:0;12648:8;-1:-1:-1;;;;;12648:8:0;12519:144;;42260:23;;;;;;;;;;;;;;;;42865:28;;;;;;;;;;;;;;;;42949:45;;;;;;;;;;-1:-1:-1;42949:45:0;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;42949:45:0;;;34010:58;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;34010:58:0;;;;;;;;;;;;:::i;57704:325::-;;;;;;;;;;-1:-1:-1;57704:325:0;;;;;:::i;:::-;;:::i;41907:34::-;;;;;;;;;;;;;;;;57364:329;;;;;;;;;;-1:-1:-1;57364:329:0;;;;;:::i;:::-;;:::i;43054:56::-;;;;;;;;;;-1:-1:-1;43054:56:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7289:14:1;;7282:22;7264:41;;7336:2;7321:18;;7314:34;;;;7364:18;;;7357:34;;;;7422:2;7407:18;;7400:34;7465:3;7450:19;;7443:35;7509:3;7494:19;;7487:35;7251:3;7236:19;43054:56:0;6983:545:1;42899:44:0;;;;;;;;;;-1:-1:-1;42899:44:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7698:14:1;;7691:22;7673:41;;7661:2;7646:18;42899:44:0;7533:187:1;42078:39:0;;;;;;;;;;;;;;;;54671:318;;;;;;;;;;-1:-1:-1;54671:318:0;;;;;:::i;:::-;;:::i;56110:554::-;;;;;;;;;;-1:-1:-1;56110:554:0;;;;;:::i;:::-;;:::i;50280:1623::-;;;;;;;;;;;;;:::i;56676:342::-;;;;;;;;;;-1:-1:-1;56676:342:0;;;;;:::i;:::-;;:::i;42574:23::-;;;;;;;;;;-1:-1:-1;42574:23:0;;;;-1:-1:-1;;;;;42574:23:0;;;13483:215;;;;;;;;;;-1:-1:-1;13483:215:0;;;;;:::i;:::-;;:::i;43000:48::-;;;;;;;;;;-1:-1:-1;43000:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;45116:902;8947:21;4379:15;;-1:-1:-1;;;4379:15:0;;;;4378:16;;4425:14;;4235:30;4803:16;;:34;;;;;4823:14;4803:34;4783:54;;4847:17;4867:11;:16;;4882:1;4867:16;:50;;;;-1:-1:-1;4895:4:0;4887:25;:30;4867:50;4847:70;;4933:12;4932:13;:30;;;;;4950:12;4949:13;4932:30;4928:91;;;4985:23;;-1:-1:-1;;;4985:23:0;;;;;;;;;;;4928:91;5028:18;;-1:-1:-1;;5028:18:0;5045:1;5028:18;;;5056:67;;;;5090:22;;-1:-1:-1;;;;5090:22:0;-1:-1:-1;;;5090:22:0;;;5056:67;45335:28:::1;45350:12;45335:14;:28::i;:::-;45373:24;:22;:24::i;:::-;45408:9;:32:::0;;-1:-1:-1;;;;;45408:32:0;;::::1;-1:-1:-1::0;;;;;;45408:32:0;;::::1;;::::0;;;45676:4:::1;45648:25;:32:::0;45730:4:::1;45702:25;:32:::0;45796:4:::1;45769:24;:31:::0;45847:4:::1;45821:23;:30:::0;45909:15:::1;:34:::0;;;;::::1;::::0;;::::1;;::::0;;45957:8:::1;:20:::0;;;;::::1;::::0;;::::1;;::::0;;45991:8:::1;:20:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5143:101;;;;5177:23;;-1:-1:-1;;;;5177:23:0;;;5219:14;;-1:-1:-1;8321:50:1;;5219:14:0;;8309:2:1;8294:18;5219:14:0;;;;;;;5143:101;4169:1081;;;;;45116:902;;;;;:::o;46031:337::-;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;;;;;;;;58394:106;46134:1:::1;46117:13;:18;46114:84;;46157:30;::::0;-1:-1:-1;;;46157:30:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;46157:30:0::1;14:177:1::0;46114:84:0::1;46222:13;::::0;;46208:28:::1;::::0;;;:13:::1;:28;::::0;;;;:44;;;46262:15;;;46222:13;46262:15:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;46306:13:0::1;::::0;46294:67:::1;::::0;46323:21:::1;46331:13:::0;46323:5:::1;:21;:::i;:::-;46294:67;::::0;;8989:25:1;;;9045:2;9030:18;;9023:34;;;;9073:18;;9066:34;;;8977:2;8962:18;46294:67:0::1;;;;;;;;46031:337:::0;:::o;48003:647::-;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;48143:1:::1;48125:7;:14;:19;48122:83;;48179:7;:14;48167:27;;-1:-1:-1::0;;;48167:27:0::1;;;;;;160:25:1::0;;148:2;133:18;;14:177;48122:83:0::1;48233:1;48217:5;:12;:17;48214:82;;48272:5;:12;48257:28;;-1:-1:-1::0;;;48257:28:0::1;;;;;;160:25:1::0;;148:2;133:18;;14:177;48214:82:0::1;48326:7;:14;48310:5;:12;:30;48306:89;;48363:21;;-1:-1:-1::0;;;48363:21:0::1;;;;;;;;;;;48306:89;48409:6;48405:165;48423:7;:14;48419:1;:18;48405:165;;;48504:7;48512:1;48504:10;;;;;;;;:::i;:::-;;;;;;;48458:14;:24;48473:5;48479:1;48473:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;48458:24:0::1;-1:-1:-1::0;;;;;48458:24:0::1;;;;;;;;;;;;:42;;;:56;;;;;;;:::i;:::-;;;;;;;;48549:7;48557:1;48549:10;;;;;;;;:::i;:::-;;;;;;;48528:17;;:31;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;48439:3:0::1;;48405:165;;;-1:-1:-1::0;48615:14:0;;48630:12;;48585:58:::1;::::0;;48604:10:::1;9575:51:1::0;;9657:2;9642:18;;9635:34;;;;9685:18;;9678:34;48585:58:0::1;::::0;9563:2:1;9548:18;48585:58:0::1;;;;;;;;48003:647:::0;;:::o;53352:633::-;53471:18;;-1:-1:-1;;;;;53471:18:0;53457:10;:32;53436:138;;;;-1:-1:-1;;;53436:138:0;;9925:2:1;53436:138:0;;;9907:21:1;9964:2;9944:18;;;9937:30;10003:34;9983:18;;;9976:62;10074:29;10054:18;;;10047:57;10121:19;;53436:138:0;9723:423:1;53436:138:0;53596:8;;53608:1;53596:13;53592:73;;53645:8;;53631:23;;-1:-1:-1;;;53631:23:0;;;;;;160:25:1;;148:2;133:18;;14:177;53592:73:0;53706:12;;53687:15;:31;53684:286;;53745:12;;53734:8;:23;;;53787:15;53771:13;:31;;;53831:30;;53745:12;53831:30;:::i;:::-;53816:12;:45;53875:16;:14;:16::i;:::-;53352:633;;:::o;53684:286::-;53946:12;;53936:23;;-1:-1:-1;;;53936:23:0;;;;;;160:25:1;;148:2;133:18;;14:177;36349:214:0;34844:13;:11;:13::i;:::-;36464:36:::1;36482:17;36464;:36::i;:::-;36510:46;36532:17;36551:4;36510:21;:46::i;46785:399::-:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;46877:1:::1;46866:7;:12;46863:68;;46900:20;::::0;-1:-1:-1;;;46900:20:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;46900:20:0::1;14:177:1::0;46863:68:0::1;46963:7;46941:18;;:29;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;46981:12:0::1;46996:9:::0;;:57:::1;::::0;-1:-1:-1;;;46996:57:0;;-1:-1:-1;;;;;46996:9:0;;::::1;::::0;:22:::1;::::0;:57:::1;::::0;47019:10:::1;::::0;47038:4:::1;::::0;47044:7;;46996:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;46981:72;;47067:7;47063:67;;47096:23;::::0;-1:-1:-1;;;47096:23:0;;7698:14:1;;7691:22;47096:23:0::1;::::0;::::1;7673:41:1::0;7646:18;;47096:23:0::1;7533:187:1::0;47063:67:0::1;47145:32;47158:18;;47145:32;;;;160:25:1::0;;148:2;133:18;;14:177;35896:134:0;35965:7;35115:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;35896:134:0;:::o;53996:542::-;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;54124:1:::1;54106:14;:19;54103:84;;54147:29;::::0;-1:-1:-1;;;54147:29:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;54147:29:0::1;14:177:1::0;54103:84:0::1;54224:15;54208:13;:31;54205:91;;;54261:24;::::0;-1:-1:-1;;;54261:24:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;54261:24:0::1;14:177:1::0;54205:91:0::1;54317:31;54333:15;54317:13:::0;:31:::1;:::i;:::-;54306:8;:42:::0;;;54358:12:::1;:28:::0;;;54412:15:::1;54396:13;:31:::0;;;54437:12:::1;:29:::0;;;54482:48:::1;::::0;;54494:10:::1;9575:51:1::0;;9657:2;9642:18;;9635:34;;;;9685:18;;9678:34;54482:48:0::1;::::0;9563:2:1;9548:18;54482:48:0::1;9373:345:1::0;54544:120:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;54608:1:::1;54597:8;:12:::0;;;54624:33:::1;::::0;;54636:10:::1;10951:51:1::0;;11033:2;11018:18;;11011:34;;;;54624:33:0::1;::::0;10924:18:1;54624:33:0::1;;;;;;;54544:120::o:0;55463:641::-;58566:6;;-1:-1:-1;;;58566:6:0;;;;58565:7;58557:51;;;;-1:-1:-1;;;58557:51:0;;11258:2:1;58557:51:0;;;11240:21:1;11297:2;11277:18;;;11270:30;11336:33;11316:18;;;11309:61;11387:18;;58557:51:0;11056:355:1;58557:51:0;58618:6;:13;;-1:-1:-1;;;;58618:13:0;-1:-1:-1;;;58618:13:0;;;55553:12;55550:68:::1;;55587:20;::::0;-1:-1:-1;;;55587:20:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;55587:20:0::1;14:177:1::0;55550:68:0::1;55656:10;55641:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;::::0;55631:51;::::1;55628:145;;;55735:10;55720:26;::::0;;;:14:::1;:26;::::0;;;;;;:41:::1;;::::0;55704:58;;-1:-1:-1;;;55704:58:0;;::::1;::::0;::::1;160:25:1::0;;;;133:18;;55704:58:0::1;14:177:1::0;55628:145:0::1;55798:10;55783:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;:52:::0;;55828:7;;55783:26;:52:::1;::::0;55828:7;;55783:52:::1;:::i;:::-;::::0;;;-1:-1:-1;;55860:10:0::1;55845:26;::::0;;;:14:::1;:26;::::0;;;;:41:::1;;:52:::0;;55890:7;;55845:26;:52:::1;::::0;55890:7;;55845:52:::1;:::i;:::-;::::0;;;-1:-1:-1;;55915:12:0::1;55930:9:::0;;:38:::1;::::0;-1:-1:-1;;;55930:38:0;;55949:10:::1;55930:38;::::0;::::1;10951:51:1::0;11018:18;;;11011:34;;;-1:-1:-1;;;;;55930:9:0;;::::1;::::0;:18:::1;::::0;10924::1;;55930:38:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;55915:53;;55990:7;55986:67;;56019:23;::::0;-1:-1:-1;;;56019:23:0;;7698:14:1;;7691:22;56019:23:0::1;::::0;::::1;7673:41:1::0;7646:18;;56019:23:0::1;7533:187:1::0;55986:67:0::1;56068:29;::::0;;56077:10:::1;10951:51:1::0;;11033:2;11018:18;;11011:34;;;56068:29:0::1;::::0;10924:18:1;56068:29:0::1;;;;;;;-1:-1:-1::0;;58652:6:0;:14;;-1:-1:-1;;;;58652:14:0;;;55463:641::o;53106:235::-;53190:4;53196:12;53230:16;53285:8;;53268:13;;53250:15;:31;;;;:::i;:::-;53324:9;;;;;;;;;-1:-1:-1;53324:9:0;;-1:-1:-1;;;53324:9:0;;-1:-1:-1;53106:235:0;-1:-1:-1;;;;53106:235:0:o;13233:101::-;12412:13;:11;:13::i;:::-;13297:30:::1;13324:1;13297:18;:30::i;:::-;13233:101::o:0;47190:802::-;47271:1;47260:7;:12;47257:68;;47294:20;;-1:-1:-1;;;47294:20:0;;;;;160:25:1;;;133:18;;47294:20:0;14:177:1;47257:68:0;47361:10;47346:26;;;;:14;:26;;;;;:34;;;47343:117;;;47429:10;47414:26;;;;:14;:26;;;;;;;:34;47402:47;;-1:-1:-1;;;47402:47:0;;47414:34;;;;7698:14:1;7691:22;47402:47:0;;;7673:41:1;7646:18;;47402:47:0;7533:187:1;47343:117:0;47485:10;47470:26;;;;:14;:26;;;;;:44;;:55;;47518:7;;47470:26;:55;;47518:7;;47470:55;:::i;:::-;;;;-1:-1:-1;;47560:10:0;47547:24;;;;:12;:24;;;;;;;;47543:171;;47610:9;;;47599:21;;;;:10;:21;;;;;;;;:34;;-1:-1:-1;;;;;;47599:34:0;47623:10;47599:34;;;;;;47647:24;;:12;:24;;;;;:31;;-1:-1:-1;;47647:31:0;47599:34;47647:31;;;47692:11;;;47610:9;47692:11;;;:::i;:::-;;;;;;47543:171;47745:7;47724:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;47763:12:0;47777:9;;47811:15;;47777:58;;-1:-1:-1;;;47777:58:0;;-1:-1:-1;;;;;47777:9:0;;;;:22;;:58;;47800:10;;47811:15;;;;47827:7;;47777:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;47763:72;;47858:7;47854:67;;47887:23;;-1:-1:-1;;;47887:23:0;;7698:14:1;;7691:22;47887:23:0;;;7673:41:1;7646:18;;47887:23:0;7533:187:1;47854:67:0;47959:15;;47936:48;;;;;;47948:10;;-1:-1:-1;;;;;47959:15:0;;47976:7;;47936:48;:::i;46374:401::-;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;46466:1:::1;46455:7;:12;46452:68;;46489:20;::::0;-1:-1:-1;;;46489:20:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;46489:20:0::1;14:177:1::0;46452:68:0::1;46553:7;46530:19;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;46571:12:0::1;46586:9:::0;;:57:::1;::::0;-1:-1:-1;;;46586:57:0;;-1:-1:-1;;;;;46586:9:0;;::::1;::::0;:22:::1;::::0;:57:::1;::::0;46609:10:::1;::::0;46628:4:::1;::::0;46634:7;;46586:57:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;46571:72;;46657:7;46653:67;;46686:23;::::0;-1:-1:-1;;;46686:23:0;;7698:14:1;;7691:22;46686:23:0::1;::::0;::::1;7673:41:1::0;7646:18;;46686:23:0::1;7533:187:1::0;46653:67:0::1;46735:33;46748:19;;46735:33;;;;160:25:1::0;;148:2;133:18;;14:177;58035:323:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;58156:1:::1;58137:15;:20;58134:88;;58179:32;::::0;-1:-1:-1;;;58179:32:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;58179:32:0::1;14:177:1::0;58134:88:0::1;58240:23;:41:::0;;;58297:54:::1;::::0;;58315:10:::1;10951:51:1::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;58297:54:0;10924:18:1;58297:54:0::1;10777:274:1::0;57024:330:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;57147:1:::1;57128:15;:20;57125:88;;57170:32;::::0;-1:-1:-1;;;57170:32:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;57170:32:0::1;14:177:1::0;57125:88:0::1;57231:25;:43:::0;;;57290:56:::1;::::0;;57308:10:::1;10951:51:1::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;57290:56:0;10924:18:1;57290:56:0::1;10777:274:1::0;48657:678:0;48740:1;48729:7;:12;48726:68;;48763:20;;-1:-1:-1;;;48763:20:0;;;;;160:25:1;;;133:18;;48763:20:0;14:177:1;48726:68:0;48829:10;48814:26;;;;:14;:26;;;;;:34;;;48811:117;;;48897:10;48882:26;;;;:14;:26;;;;;;;:34;48870:47;;-1:-1:-1;;;48870:47:0;;48882:34;;;;7698:14:1;7691:22;48870:47:0;;;7673:41:1;7646:18;;48870:47:0;7533:187:1;48811:117:0;48956:10;48941:26;;;;:14;:26;;;;;:41;;;:52;-1:-1:-1;48938:113:0;;49015:25;;-1:-1:-1;;;49015:25:0;;;;;160::1;;;133:18;;49015:25:0;14:177:1;48938:113:0;49076:10;49061:26;;;;:14;:26;;;;;:41;;:52;;49106:7;;49061:26;:52;;49106:7;;49061:52;:::i;:::-;;;;-1:-1:-1;;49138:10:0;49123:26;;;;:14;:26;;;;;:44;;:55;;49171:7;;49123:26;:55;;49171:7;;49123:55;:::i;:::-;;;;;;;;49220:7;49197:19;;:30;;;;;;;:::i;:::-;;;;;;;;49258:7;49237:17;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;49281:46:0;;;;;;49293:10;;49312:4;;49319:7;;49281:46;:::i;49345:541::-;49436:1;49425:7;:12;49422:68;;49459:20;;-1:-1:-1;;;49459:20:0;;;;;160:25:1;;;133:18;;49459:20:0;14:177:1;49422:68:0;49516:13;;49503:10;:26;49500:88;;;49551:26;;-1:-1:-1;;;49551:26:0;;;;;160:25:1;;;133:18;;49551:26:0;14:177:1;49500:88:0;49633:25;;;;:13;:25;;;;;;49610:49;;49624:7;;49610:13;:49::i;:::-;49678:12;49693:9;;:57;;-1:-1:-1;;;49693:57:0;;-1:-1:-1;;;;;49693:9:0;;;;:22;;:57;;49716:10;;49735:4;;49741:7;;49693:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;49678:72;;49764:7;49760:67;;49793:23;;-1:-1:-1;;;49793:23:0;;7698:14:1;;7691:22;49793:23:0;;;7673:41:1;7646:18;;49793:23:0;7533:187:1;49760:67:0;49842:28;;;11590:25:1;;;11646:2;11631:18;;11624:34;;;49842:28:0;;11563:18:1;49842:28:0;;;;;;;49411:475;49345:541;;:::o;57704:325::-;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;57825:1:::1;57806:15;:20;57803:88;;57848:32;::::0;-1:-1:-1;;;57848:32:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;57848:32:0::1;14:177:1::0;57803:88:0::1;57909:24;:42:::0;;;57967:55:::1;::::0;;57985:10:::1;10951:51:1::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;57967:55:0;10924:18:1;57967:55:0::1;10777:274:1::0;57364:329:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;57487:1:::1;57468:15;:20;57465:88;;57510:32;::::0;-1:-1:-1;;;57510:32:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;57510:32:0::1;14:177:1::0;57465:88:0::1;57571:25;:43:::0;;;57630:56:::1;::::0;;57648:10:::1;10951:51:1::0;;11033:2;11018:18;;11011:34;;;-1:-1:-1;;;;;;;;;;;57630:56:0;10924:18:1;57630:56:0::1;10777:274:1::0;54671:318:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;-1:-1:-1;;;;;54767:30:0;::::1;54764:96;;54819:30;::::0;-1:-1:-1;;;54819:30:0;;-1:-1:-1;;;;;375:32:1;;54819:30:0::1;::::0;::::1;357:51:1::0;330:18;;54819:30:0::1;196:218:1::0;54764:96:0::1;54878:18;:37:::0;;-1:-1:-1;;;;;;54878:37:0::1;-1:-1:-1::0;;;;;54878:37:0;::::1;::::0;;::::1;::::0;;;54931:51:::1;::::0;;54951:10:::1;11843:51:1::0;;11925:2;11910:18;;11903:60;;;;54931:51:0::1;::::0;11816:18:1;54931:51:0::1;11669:300:1::0;56110:554:0;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;-1:-1:-1;;;;;56204:26:0;::::1;56201:88;;56252:26;::::0;-1:-1:-1;;;56252:26:0;;-1:-1:-1;;;;;375:32:1;;56252:26:0::1;::::0;::::1;357:51:1::0;330:18;;56252:26:0::1;196:218:1::0;56201:88:0::1;56311:4;56302:13:::0;::::1;;;::::0;::::1;::::0;:31:::1;;-1:-1:-1::0;56319:14:0;::::1;;56302:31;56299:84;;;56355:17;::::0;-1:-1:-1;;;56355:17:0;;7698:14:1;;7691:22;56355:17:0::1;::::0;::::1;7673:41:1::0;7646:18;;56355:17:0::1;7533:187:1::0;56299:84:0::1;56396:13:::0;::::1;;56405:4;56396:13:::0;56393:167:::1;;-1:-1:-1::0;;;;;56425:28:0;::::1;;::::0;;;:14:::1;:28;::::0;;;;:43;;-1:-1:-1;;56425:43:0::1;56464:4;56425:43;::::0;;56393:167:::1;;;-1:-1:-1::0;;;;;56505:28:0;::::1;56544:5;56505:28:::0;;;:14:::1;:28;::::0;;;;:44;;-1:-1:-1;;56505:44:0::1;::::0;;56393:167:::1;-1:-1:-1::0;;;;;56620:28:0;::::1;;::::0;;;:14:::1;:28;::::0;;;;;;;;:36;56583:74;;56595:10:::1;12170:51:1::0;;12237:18;;;12230:60;;;;56620:36:0::1;::::0;;::::1;12333:14:1::0;12326:22;12306:18;;;12299:50;56583:74:0::1;::::0;12158:2:1;12143:18;56583:74:0::1;11974:381:1::0;50280:1623:0;50342:18;;-1:-1:-1;;;;;50342:18:0;50328:10;:32;;;;:58;;-1:-1:-1;50378:8:0;;-1:-1:-1;;;;;50378:8:0;50364:10;:22;;50328:58;:84;;;;-1:-1:-1;50404:8:0;;-1:-1:-1;;;;;50404:8:0;50390:10;:22;;50328:84;50325:142;;;50434:22;;-1:-1:-1;;;50434:22:0;;50445:10;50434:22;;;357:51:1;330:18;;50434:22:0;196:218:1;50325:142:0;50480:19;;:24;;;:51;;-1:-1:-1;50508:18:0;;:23;50480:51;50477:137;;;50564:19;;50584:18;;50553:50;;-1:-1:-1;;;50553:50:0;;;;;11590:25:1;;;;11631:18;;;11624:34;11563:18;;50553:50:0;11416:248:1;50477:137:0;50634:24;50659:33;50694:26;50725:20;:18;:20::i;:::-;50632:113;;-1:-1:-1;50632:113:0;-1:-1:-1;50632:113:0;-1:-1:-1;50772:16:0;;50799:1012;50822:9;;50818:1;:13;50799:1012;;;50856:29;50871:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;50871:13:0;50856:29;;:14;:29;;;;;:37;;;50852:936;;51006:17;;50913:27;50959:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;50959:13:0;50944:29;;:14;:29;;;;;:47;;;50913:27;;51006:17;50944:57;;50995:5;50944:57;:::i;:::-;50943:81;;;;:::i;:::-;50913:111;;51059:22;51084:67;51104:25;51131:19;51084;:67::i;:::-;51059:92;;51192:14;51169:19;;:37;;;;;;;:::i;:::-;;;;-1:-1:-1;51249:26:0;;-1:-1:-1;51261:14:0;51249:26;;:::i;:::-;;;51315:18;51293;;:40;;;;;;;:::i;:::-;;;;-1:-1:-1;;51352:29:0;51367:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;51367:13:0;51352:29;;:14;:29;;;;;:49;;:71;;51405:18;;51352:29;:71;;51405:18;;51352:71;:::i;:::-;;;;-1:-1:-1;;51441:29:0;51456:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;51456:13:0;51441:29;;:14;:29;;;;;:51;;:69;;51496:14;;51441:29;:69;;51496:14;;51441:69;:::i;:::-;;;;-1:-1:-1;51545:23:0;;-1:-1:-1;51571:35:0;51588:18;51571:14;:35;:::i;:::-;51624:29;51639:13;;;:10;:13;;;;;;;;;-1:-1:-1;;;;;51639:13:0;51624:29;;:14;:29;;;;;51639:13;51624:44;:63;;51545:61;;-1:-1:-1;51545:61:0;;51624:44;;:29;:63;;51545:61;;51624:63;:::i;:::-;;;;-1:-1:-1;;51714:28:0;;;;51706:67;;;;-1:-1:-1;;;51706:67:0;;12957:2:1;51706:67:0;;;12939:21:1;12996:2;12976:18;;;12969:30;13035:28;13015:18;;;13008:56;13081:18;;51706:67:0;12755:350:1;51706:67:0;50894:894;;;50852:936;50833:3;;50799:1012;;;-1:-1:-1;51855:19:0;;51876:18;;51826:69;;;51843:10;9575:51:1;;9657:2;9642:18;;9635:34;;;;9685:18;;9678:34;51826:69:0;;9563:2:1;9548:18;51826:69:0;;;;;;;50314:1589;;;;50280:1623::o;56676:342::-;58411:8;;-1:-1:-1;;;;;58411:8:0;58397:10;:22;;;;:48;;-1:-1:-1;58437:8:0;;-1:-1:-1;;;;;58437:8:0;58423:10;:22;;58397:48;58394:106;;;58467:22;;-1:-1:-1;;;58467:22:0;;58478:10;58467:22;;;357:51:1;330:18;;58467:22:0;196:218:1;58394:106:0;56812:1:::1;56793:15;:20;56790:88;;56835:32;::::0;-1:-1:-1;;;56835:32:0;;::::1;::::0;::::1;160:25:1::0;;;133:18;;56835:32:0::1;14:177:1::0;56790:88:0::1;56896:25;::::0;;;:13:::1;:25;::::0;;;;;;;;:43;;;56955:56;;56973:10:::1;10951:51:1::0;;11018:18;;;11011:34;;;-1:-1:-1;;;;;;;;;;;56955:56:0;10924:18:1;56955:56:0::1;10777:274:1::0;13483:215:0;12412:13;:11;:13::i;:::-;-1:-1:-1;;;;;13567:22:0;::::1;13563:91;;13612:31;::::0;-1:-1:-1;;;13612:31:0;;13640:1:::1;13612:31;::::0;::::1;357:51:1::0;330:18;;13612:31:0::1;196:218:1::0;13563:91:0::1;13663:28;13682:8;13663:18;:28::i;:::-;13483:215:::0;:::o;11925:127::-;7008:20;:18;:20::i;:::-;12007:38:::1;12032:12;12007:24;:38::i;35159:67::-:0;7008:20;:18;:20::i;36790:312::-;36870:4;-1:-1:-1;;;;;36879:6:0;36862:23;;;:120;;;36976:6;-1:-1:-1;;;;;36940:42:0;:32;-1:-1:-1;;;;;;;;;;;27678:53:0;-1:-1:-1;;;;;27678:53:0;;27600:138;36940:32;-1:-1:-1;;;;;36940:42:0;;;36862:120;36845:251;;;37056:29;;-1:-1:-1;;;37056:29:0;;;;;;;;;;;58679:112;12412:13;:11;:13::i;38243:538::-;38360:17;-1:-1:-1;;;;;38342:50:0;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;38342:52:0;;;;;;;;-1:-1:-1;;38342:52:0;;;;;;;;;;;;:::i;:::-;;;38338:437;;38704:60;;-1:-1:-1;;;38704:60:0;;-1:-1:-1;;;;;375:32:1;;38704:60:0;;;357:51:1;330:18;;38704:60:0;196:218:1;38338:437:0;-1:-1:-1;;;;;;;;;;;38436:40:0;;38432:120;;38503:34;;-1:-1:-1;;;38503:34:0;;;;;160:25:1;;;133:18;;38503:34:0;14:177:1;38432:120:0;38565:54;38595:17;38614:4;38565:29;:54::i;:::-;38395:235;38243:538;;:::o;37219:213::-;37293:4;-1:-1:-1;;;;;37302:6:0;37285:23;;37281:145;;37386:29;;-1:-1:-1;;;37386:29:0;;;;;;;;;;;12736:162;9935:10;12795:7;11391:22;12648:8;-1:-1:-1;;;;;12648:8:0;;12519:144;12795:7;-1:-1:-1;;;;;12795:23:0;;12791:101;;12841:40;;-1:-1:-1;;;12841:40:0;;9935:10;12841:40;;;357:51:1;330:18;;12841:40:0;196:218:1;13852:248:0;11391:22;14001:8;;-1:-1:-1;;;;;;14019:19:0;;-1:-1:-1;;;;;14019:19:0;;;;;;;;14053:40;;14001:8;;;;;14053:40;;13925:24;;14053:40;13915:185;;13852:248;:::o;49893:379::-;49982:20;50005:21;50013:13;50005:5;:21;:::i;:::-;49982:44;;50036:20;50059:42;50079:7;50088:12;50059:19;:42::i;:::-;50036:65;;50111:19;50133:43;50153:7;50162:13;50133:19;:43::i;:::-;50111:65;;50210:12;50187:19;;:35;;;;;;;:::i;:::-;;;;;;;;50254:11;50232:18;;:33;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;49893:379:0:o;51915:1185::-;51961:7;51970;51978;52006:24;52033:46;52053:19;;52074:4;52033:19;:46::i;:::-;52006:73;;52090:33;52126:64;52146:16;52164:25;;52126:19;:64::i;:::-;52090:100;;52200:36;52239:63;52259:16;52277:24;;52239:19;:63::i;:::-;52200:102;;52312:36;52351:62;52371:16;52389:23;;52351:19;:62::i;:::-;52312:101;;52423:30;52456:66;52476:18;;52496:25;;52456:19;:66::i;:::-;52423:99;;52549:1;52536:9;;:14;52533:70;;52582:9;;52572:20;;-1:-1:-1;;;52572:20:0;;;;;;160:25:1;;148:2;133:18;;14:177;52533:70:0;52621:26;52673:9;;52650:22;:32;;;;:::i;:::-;52621:61;-1:-1:-1;52725:59:0;52756:28;52725;:59;:::i;:::-;52701:19;;:84;;;;;;;:::i;:::-;;;;;;;;52817:28;52795:18;;:50;;;;;;;:::i;:::-;;;;-1:-1:-1;;52856:12:0;52871:9;;52890:15;;52871:65;;-1:-1:-1;;;52871:65:0;;-1:-1:-1;;;;;52890:15:0;;;52871:65;;;10951:51:1;11018:18;;;11011:34;;;52871:9:0;;;:18;;10924::1;;52871:65:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;52856:80;;52950:7;52946:67;;52979:23;;-1:-1:-1;;;52979:23:0;;7698:14:1;;7691:22;52979:23:0;;;7673:41:1;7646:18;;52979:23:0;7533:187:1;52946:67:0;-1:-1:-1;53031:16:0;;53048:25;;-1:-1:-1;53074:18:0;;-1:-1:-1;51915:1185:0;;-1:-1:-1;;;;51915:1185:0:o;54995:457::-;55097:7;55149:1;55128:17;:22;55125:98;;55172:40;;-1:-1:-1;;;55172:40:0;;;;;160:25:1;;;133:18;;55172:40:0;14:177:1;55125:98:0;55255:1;55235:16;:21;55232:91;;55278:34;;-1:-1:-1;;;55278:34:0;;;;;160:25:1;;;133:18;;55278:34:0;14:177:1;55232:91:0;55340:18;55403:5;55361:38;55382:16;55361:17;:38;:::i;:::-;:48;;;;:::i;:::-;55340:69;-1:-1:-1;;54995:457:0;;;;;:::o;7161:141::-;8947:21;8637:40;-1:-1:-1;;;8637:40:0;;;;7223:73;;7268:17;;-1:-1:-1;;;7268:17:0;;;;;;;;;;;12058:235;7008:20;:18;:20::i;28422:335::-;28513:37;28532:17;28513:18;:37::i;:::-;28565:27;;-1:-1:-1;;;;;28565:27:0;;;;;;;;28607:11;;:15;28603:148;;28638:53;28667:17;28686:4;28638:28;:53::i;28603:148::-;28722:18;:16;:18::i;27829:281::-;27906:17;-1:-1:-1;;;;;27906:29:0;;27939:1;27906:34;27902:119;;27963:47;;-1:-1:-1;;;27963:47:0;;-1:-1:-1;;;;;375:32:1;;27963:47:0;;;357:51:1;330:18;;27963:47:0;196:218:1;27902:119:0;-1:-1:-1;;;;;;;;;;;28030:73:0;;-1:-1:-1;;;;;;28030:73:0;-1:-1:-1;;;;;28030:73:0;;;;;;;;;;27829:281::o;19646:253::-;19729:12;19754;19768:23;19795:6;-1:-1:-1;;;;;19795:19:0;19815:4;19795:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19753:67;;;;19837:55;19864:6;19872:7;19881:10;19837:26;:55::i;:::-;19830:62;19646:253;-1:-1:-1;;;;;19646:253:0:o;32241:122::-;32291:9;:13;32287:70;;32327:19;;-1:-1:-1;;;32327:19:0;;;;;;;;;;;20165:582;20309:12;20338:7;20333:408;;20361:19;20369:10;20361:7;:19::i;:::-;20333:408;;;20585:17;;:22;:49;;;;-1:-1:-1;;;;;;20611:18:0;;;:23;20585:49;20581:119;;;20661:24;;-1:-1:-1;;;20661:24:0;;-1:-1:-1;;;;;375:32:1;;20661:24:0;;;357:51:1;330:18;;20661:24:0;196:218:1;20581:119:0;-1:-1:-1;20720:10:0;20333:408;20165:582;;;;;:::o;21283:516::-;21414:17;;:21;21410:383;;21642:10;21636:17;21698:15;21685:10;21681:2;21677:19;21670:44;21410:383;21765:17;;-1:-1:-1;;;21765:17:0;;;;;;;;;;;419:173:1;487:20;;-1:-1:-1;;;;;536:31:1;;526:42;;516:70;;582:1;579;572:12;516:70;419:173;;;:::o;597:484::-;692:6;700;708;716;724;777:3;765:9;756:7;752:23;748:33;745:53;;;794:1;791;784:12;745:53;817:29;836:9;817:29;:::i;:::-;807:39;;865:38;899:2;888:9;884:18;865:38;:::i;:::-;855:48;;922:38;956:2;945:9;941:18;922:38;:::i;:::-;912:48;;979:38;1013:2;1002:9;998:18;979:38;:::i;:::-;969:48;;1036:39;1070:3;1059:9;1055:19;1036:39;:::i;:::-;1026:49;;597:484;;;;;;;;:::o;1086:226::-;1145:6;1198:2;1186:9;1177:7;1173:23;1169:32;1166:52;;;1214:1;1211;1204:12;1166:52;-1:-1:-1;1259:23:1;;1086:226;-1:-1:-1;1086:226:1:o;1525:127::-;1586:10;1581:3;1577:20;1574:1;1567:31;1617:4;1614:1;1607:15;1641:4;1638:1;1631:15;1657:275;1728:2;1722:9;1793:2;1774:13;;-1:-1:-1;;1770:27:1;1758:40;;1828:18;1813:34;;1849:22;;;1810:62;1807:88;;;1875:18;;:::i;:::-;1911:2;1904:22;1657:275;;-1:-1:-1;1657:275:1:o;1937:183::-;1997:4;2030:18;2022:6;2019:30;2016:56;;;2052:18;;:::i;:::-;-1:-1:-1;2097:1:1;2093:14;2109:4;2089:25;;1937:183::o;2125:675::-;2179:5;2232:3;2225:4;2217:6;2213:17;2209:27;2199:55;;2250:1;2247;2240:12;2199:55;2290:6;2277:20;2317:64;2333:47;2373:6;2333:47;:::i;:::-;2317:64;:::i;:::-;2405:3;2429:6;2424:3;2417:19;2461:4;2456:3;2452:14;2445:21;;2522:4;2512:6;2509:1;2505:14;2497:6;2493:27;2489:38;2475:52;;2550:3;2542:6;2539:15;2536:35;;;2567:1;2564;2557:12;2536:35;2603:4;2595:6;2591:17;2617:152;2633:6;2628:3;2625:15;2617:152;;;2701:23;2720:3;2701:23;:::i;:::-;2689:36;;2754:4;2745:14;;;;2650;2617:152;;;-1:-1:-1;2787:7:1;2125:675;-1:-1:-1;;;;;2125:675:1:o;2805:1194::-;2923:6;2931;2984:2;2972:9;2963:7;2959:23;2955:32;2952:52;;;3000:1;2997;2990:12;2952:52;3040:9;3027:23;3073:18;3065:6;3062:30;3059:50;;;3105:1;3102;3095:12;3059:50;3128:22;;3181:4;3173:13;;3169:27;-1:-1:-1;3159:55:1;;3210:1;3207;3200:12;3159:55;3250:2;3237:16;3273:64;3289:47;3329:6;3289:47;:::i;3273:64::-;3359:3;3383:6;3378:3;3371:19;3415:4;3410:3;3406:14;3399:21;;3472:4;3462:6;3459:1;3455:14;3451:2;3447:23;3443:34;3429:48;;3500:7;3492:6;3489:19;3486:39;;;3521:1;3518;3511:12;3486:39;3553:4;3549:2;3545:13;3534:24;;3567:200;3583:6;3578:3;3575:15;3567:200;;;3675:17;;3705:18;;3752:4;3600:14;;;;3743;;;;3567:200;;;3786:5;-1:-1:-1;;;;3844:4:1;3829:20;;3816:34;3875:18;3862:32;;3859:52;;;3907:1;3904;3897:12;3859:52;3930:63;3985:7;3974:8;3963:9;3959:24;3930:63;:::i;:::-;3920:73;;;2805:1194;;;;;:::o;4004:586::-;4074:6;4082;4135:2;4123:9;4114:7;4110:23;4106:32;4103:52;;;4151:1;4148;4141:12;4103:52;4191:9;4178:23;4224:18;4216:6;4213:30;4210:50;;;4256:1;4253;4246:12;4210:50;4279:22;;4332:4;4324:13;;4320:27;-1:-1:-1;4310:55:1;;4361:1;4358;4351:12;4310:55;4401:2;4388:16;4427:18;4419:6;4416:30;4413:50;;;4459:1;4456;4449:12;4413:50;4504:7;4499:2;4490:6;4486:2;4482:15;4478:24;4475:37;4472:57;;;4525:1;4522;4515:12;4472:57;4556:2;4548:11;;;;;4578:6;;-1:-1:-1;4004:586:1;-1:-1:-1;;;4004:586:1:o;4595:839::-;4672:6;4680;4733:2;4721:9;4712:7;4708:23;4704:32;4701:52;;;4749:1;4746;4739:12;4701:52;4772:29;4791:9;4772:29;:::i;:::-;4762:39;;4852:2;4841:9;4837:18;4824:32;4879:18;4871:6;4868:30;4865:50;;;4911:1;4908;4901:12;4865:50;4934:22;;4987:4;4979:13;;4975:27;-1:-1:-1;4965:55:1;;5016:1;5013;5006:12;4965:55;5056:2;5043:16;5082:18;5074:6;5071:30;5068:56;;;5104:18;;:::i;:::-;5146:57;5193:2;5170:17;;-1:-1:-1;;5166:31:1;5199:2;5162:40;5146:57;:::i;:::-;5226:6;5219:5;5212:21;5274:7;5269:2;5260:6;5256:2;5252:15;5248:24;5245:37;5242:57;;;5295:1;5292;5285:12;5242:57;5350:6;5345:2;5341;5337:11;5332:2;5325:5;5321:14;5308:49;5402:1;5397:2;5388:6;5381:5;5377:18;5373:27;5366:38;5423:5;5413:15;;;;;4595:839;;;;;:::o;5621:346::-;5689:6;5697;5750:2;5738:9;5729:7;5725:23;5721:32;5718:52;;;5766:1;5763;5756:12;5718:52;-1:-1:-1;;5811:23:1;;;5931:2;5916:18;;;5903:32;;-1:-1:-1;5621:346:1:o;5972:288::-;6013:3;6051:5;6045:12;6078:6;6073:3;6066:19;6134:6;6127:4;6120:5;6116:16;6109:4;6104:3;6100:14;6094:47;6186:1;6179:4;6170:6;6165:3;6161:16;6157:27;6150:38;6249:4;6242:2;6238:7;6233:2;6225:6;6221:15;6217:29;6212:3;6208:39;6204:50;6197:57;;;5972:288;;;;:::o;6265:298::-;6448:6;6441:14;6434:22;6423:9;6416:41;6493:2;6488;6477:9;6473:18;6466:30;6397:4;6513:44;6553:2;6542:9;6538:18;6530:6;6513:44;:::i;:::-;6505:52;6265:298;-1:-1:-1;;;;6265:298:1:o;6568:219::-;6717:2;6706:9;6699:21;6680:4;6737:44;6777:2;6766:9;6762:18;6754:6;6737:44;:::i;6792:186::-;6851:6;6904:2;6892:9;6883:7;6879:23;6875:32;6872:52;;;6920:1;6917;6910:12;6872:52;6943:29;6962:9;6943:29;:::i;7725:118::-;7811:5;7804:13;7797:21;7790:5;7787:32;7777:60;;7833:1;7830;7823:12;7848:315;7913:6;7921;7974:2;7962:9;7953:7;7949:23;7945:32;7942:52;;;7990:1;7987;7980:12;7942:52;8013:29;8032:9;8013:29;:::i;:::-;8003:39;;8092:2;8081:9;8077:18;8064:32;8105:28;8127:5;8105:28;:::i;:::-;8152:5;8142:15;;;7848:315;;;;;:::o;8382:127::-;8443:10;8438:3;8434:20;8431:1;8424:31;8474:4;8471:1;8464:15;8498:4;8495:1;8488:15;8514:135;8553:3;8574:17;;;8571:43;;8594:18;;:::i;:::-;-1:-1:-1;8641:1:1;8630:13;;8514:135::o;8654:128::-;8721:9;;;8742:11;;;8739:37;;;8756:18;;:::i;9111:127::-;9172:10;9167:3;9163:20;9160:1;9153:31;9203:4;9200:1;9193:15;9227:4;9224:1;9217:15;9243:125;9308:9;;;9329:10;;;9326:36;;;9342:18;;:::i;10151:371::-;-1:-1:-1;;;;;10371:32:1;;;10353:51;;10440:32;;;;10435:2;10420:18;;10413:60;10504:2;10489:18;;10482:34;;;;10341:2;10326:18;;10151:371::o;10527:245::-;10594:6;10647:2;10635:9;10626:7;10622:23;10618:32;10615:52;;;10663:1;10660;10653:12;10615:52;10695:9;10689:16;10714:28;10736:5;10714:28;:::i;12360:168::-;12433:9;;;12464;;12481:15;;;12475:22;;12461:37;12451:71;;12502:18;;:::i;12533:217::-;12573:1;12599;12589:132;;12643:10;12638:3;12634:20;12631:1;12624:31;12678:4;12675:1;12668:15;12706:4;12703:1;12696:15;12589:132;-1:-1:-1;12735:9:1;;12533:217::o;13110:184::-;13180:6;13233:2;13221:9;13212:7;13208:23;13204:32;13201:52;;;13249:1;13246;13239:12;13201:52;-1:-1:-1;13272:16:1;;13110:184;-1:-1:-1;13110:184:1:o;13299:301::-;13428:3;13466:6;13460:13;13512:6;13505:4;13497:6;13493:17;13488:3;13482:37;13574:1;13538:16;;13563:13;;;-1:-1:-1;13538:16:1;13299:301;-1:-1:-1;13299:301:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2332400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addFunds(uint256,uint256)": "infinite",
								"addOwnership(uint256)": "infinite",
								"addProjects(uint256)": "57030",
								"addTreasuery(uint256)": "infinite",
								"alreadyAdded(address)": "2661",
								"blockUser(address,bool)": "33068",
								"checkUpkeep(bytes)": "infinite",
								"flowToTreasuryPercentage()": "2438",
								"initialize(address,address,address,address,address)": "infinite",
								"interval()": "2372",
								"lastTimeStamp()": "2439",
								"maintainceFeePercentage()": "2417",
								"multisigAddress()": "2492",
								"noOfUsers()": "2330",
								"odividentPayoutPercentage()": "2329",
								"off()": "10876",
								"owner()": "2397",
								"ownerOne()": "2424",
								"ownerShipPoolAmount()": "2350",
								"ownerTwo()": "2492",
								"performUpkeep(bytes)": "infinite",
								"proxiableUUID()": "infinite",
								"reStakeTokens(uint256)": "infinite",
								"realInterval()": "2329",
								"renounceOwnership()": "infinite",
								"s_forwarderAddress()": "2493",
								"setForwarderAddress(address)": "30312",
								"setInterval(uint256,uint256)": "94788",
								"setTeasueryPercentages(uint256,uint256)": "infinite",
								"setflowToTreasuryPercentage(uint256)": "infinite",
								"setmaintainceFeePercentage(uint256)": "infinite",
								"setodividentPayoutPercentage(uint256)": "infinite",
								"settdividentPayoutPercentage(uint256)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakeTokensByOwner(uint256[],address[])": "infinite",
								"startingTime()": "2395",
								"tPPercentages(uint256)": "2556",
								"tdividentPayoutPercentage()": "2351",
								"totalProjects()": "2394",
								"totalStakedAmount()": "2328",
								"totalUsers(uint256)": "2607",
								"transferOwnership(address)": "28475",
								"treasuryPoolAmount()": "2396",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usdcToken()": "2404",
								"userRegistered(address)": "13313",
								"userWithdrawAmoount(uint256)": "infinite",
								"weeklyTransfer()": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"calculateFees(uint256,uint256)": "infinite",
								"calculatePercentage(uint256,uint256)": "infinite",
								"perPoolCalculation()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 33362,
									"end": 33366,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 33319,
									"end": 33367,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 33319,
									"end": 33367,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45057,
									"end": 45110,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 45081,
									"end": 45103,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 45081,
									"end": 45101,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 45081,
									"end": 45103,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 45081,
									"end": 45103,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 45081,
									"end": 45103,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7788,
									"end": 8210,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7788,
									"end": 8210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8947,
									"end": 8968,
									"name": "PUSH",
									"source": 0,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "PUSH",
									"source": 0,
									"value": "10000000000000000"
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7977,
									"end": 7992,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7973,
									"end": 8049,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7973,
									"end": 8049,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7973,
									"end": 8049,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8015,
									"end": 8038,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7973,
									"end": 8049,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 7973,
									"end": 8049,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8062,
									"end": 8076,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8062,
									"end": 8076,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8062,
									"end": 8076,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8062,
									"end": 8076,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8062,
									"end": 8076,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8062,
									"end": 8096,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8058,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8058,
									"end": 8204,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8112,
									"end": 8145,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "PUSH",
									"source": 0,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8164,
									"end": 8193,
									"name": "LOG1",
									"source": 0
								},
								{
									"begin": 8058,
									"end": 8204,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 8058,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7837,
									"end": 8210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7788,
									"end": 8210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1174"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41720,
									"end": 58793,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220287ed1eda293901ad5f23b7e46e50582bc56101813fe50a963b2e23fe45e364064736f6c634300081a0033",
									".code": [
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "7547C7A3"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "AD8E5EC4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "D777CC6D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "ED061067"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "ED061067"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "F0664A4F"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "FF3D65D9"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "D777CC6D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "D9B998B4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "E9C68E2C"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "AD8E5EC4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "B47FF951"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "B9DAC1EB"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "BCCBC36C"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "C7FD5BF0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "CE356A24"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "85F45250"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "85F45250"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "947A36FB"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "9C361E4E"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "A4F67B8B"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "AD3CB1CC"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "7547C7A3"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "78FD078D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "7F111E60"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "7F70C5E7"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "7FFE4D93"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "83AA9985"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "44490FF4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "567E98F9"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "567E98F9"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "5F17E616"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "6626B26D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "67976974"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "6E04FF0D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "44490FF4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "4585E33B"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "5256DBBF"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "5462870D"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "30CAC972"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "30CAC972"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "33244C2C"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "34107C87"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "39518B5E"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "3A71A9E4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "3F3B3B27"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "1934A83"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "11EAC855"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "1459457A"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "188E07B9"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "2765DF7A"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "3070FBF8"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41720,
											"end": 58793,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42168,
											"end": 42192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 357,
											"end": 408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41834,
											"end": 41857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 45116,
											"end": 46018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 45116,
											"end": 46018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 41901,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 46031,
											"end": 46368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 46031,
											"end": 46368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42534,
											"end": 42567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42336,
											"end": 42363,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41986,
											"end": 42026,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 48003,
											"end": 48650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48003,
											"end": 48650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42416,
											"end": 42443,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 42161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42032,
											"end": 42072,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 53352,
											"end": 53985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 53352,
											"end": 53985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 36349,
											"end": 36563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36349,
											"end": 36563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 46785,
											"end": 47184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 46785,
											"end": 47184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 35896,
											"end": 36030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42198,
											"end": 42228,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41947,
											"end": 41979,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 53996,
											"end": 54538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 53996,
											"end": 54538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 54544,
											"end": 54664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 55463,
											"end": 56104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55463,
											"end": 56104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 53106,
											"end": 53341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 53106,
											"end": 53341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 53106,
											"end": 53341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13233,
											"end": 13334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 47190,
											"end": 47992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 47190,
											"end": 47992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 46374,
											"end": 46775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 46374,
											"end": 46775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 58035,
											"end": 58358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 58035,
											"end": 58358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 57024,
											"end": 57354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 57024,
											"end": 57354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 48657,
											"end": 49335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 48657,
											"end": 49335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42603,
											"end": 42626,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 49345,
											"end": 49886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 49345,
											"end": 49886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11391,
											"end": 11413,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 12648,
											"end": 12656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12648,
											"end": 12656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42260,
											"end": 42283,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42865,
											"end": 42893,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 42949,
											"end": 42994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42949,
											"end": 42994,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34010,
											"end": 34068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 34010,
											"end": 34068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 57704,
											"end": 58029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 57704,
											"end": 58029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41907,
											"end": 41941,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 57364,
											"end": 57693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 57364,
											"end": 57693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 43054,
											"end": 43110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7289,
											"end": 7303,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7303,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7304,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7305,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7264,
											"end": 7305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7336,
											"end": 7338,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7314,
											"end": 7348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7364,
											"end": 7382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7357,
											"end": 7391,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7407,
											"end": 7425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7400,
											"end": 7434,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7465,
											"end": 7468,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7450,
											"end": 7469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7443,
											"end": 7478,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7512,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7494,
											"end": 7513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7494,
											"end": 7513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7487,
											"end": 7522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7251,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 7236,
											"end": 7255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43054,
											"end": 43110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6983,
											"end": 7528,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 42899,
											"end": 42943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7661,
											"end": 7663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 42899,
											"end": 42943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42078,
											"end": 42117,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 54671,
											"end": 54989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 54671,
											"end": 54989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 56110,
											"end": 56664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56110,
											"end": 56664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 50280,
											"end": 51903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 56676,
											"end": 57018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 56676,
											"end": 57018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42574,
											"end": 42597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13483,
											"end": 13698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 13483,
											"end": 13698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 43000,
											"end": 43048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43000,
											"end": 43048,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8947,
											"end": 8968,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4379,
											"end": 4394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4394,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4394,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4379,
											"end": 4394,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 4379,
											"end": 4394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4425,
											"end": 4439,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4425,
											"end": 4439,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 4803,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4783,
											"end": 4837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4878,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4883,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4883,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4883,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4917,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 4867,
											"end": 4917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4895,
											"end": 4899,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4912,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4887,
											"end": 4917,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4917,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 4867,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4847,
											"end": 4917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4933,
											"end": 4945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4945,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4950,
											"end": 4962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4949,
											"end": 4962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 4932,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 4928,
											"end": 5019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4985,
											"end": 5008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4928,
											"end": 5019,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 4928,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5046,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5028,
											"end": 5046,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5056,
											"end": 5123,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5056,
											"end": 5123,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5056,
											"end": 5123,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5056,
											"end": 5123,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5090,
											"end": 5112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5056,
											"end": 5123,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 5056,
											"end": 5123,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45335,
											"end": 45363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 45350,
											"end": 45362,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 45335,
											"end": 45349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 45335,
											"end": 45363,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45335,
											"end": 45363,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 45335,
											"end": 45363,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45373,
											"end": 45397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 45373,
											"end": 45395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 45373,
											"end": 45397,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45373,
											"end": 45397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 45373,
											"end": 45397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45417,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45408,
											"end": 45440,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45676,
											"end": 45680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1388"
										},
										{
											"begin": 45648,
											"end": 45673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45648,
											"end": 45680,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45730,
											"end": 45734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1D4C"
										},
										{
											"begin": 45702,
											"end": 45727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 45702,
											"end": 45734,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45796,
											"end": 45800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DC"
										},
										{
											"begin": 45769,
											"end": 45793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 45769,
											"end": 45800,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45847,
											"end": 45851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 45821,
											"end": 45844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45821,
											"end": 45851,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45909,
											"end": 45943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45957,
											"end": 45977,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 45999,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45991,
											"end": 46011,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5143,
											"end": 5244,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5143,
											"end": 5244,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5143,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5143,
											"end": 5244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5200,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5200,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5177,
											"end": 5200,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5200,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5177,
											"end": 5200,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8321,
											"end": 8371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8321,
											"end": 8371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "PUSH",
											"source": 0,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8309,
											"end": 8311,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5219,
											"end": 5233,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5143,
											"end": 5244,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 5143,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4169,
											"end": 5250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45116,
											"end": 46018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46134,
											"end": 46135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46117,
											"end": 46130,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46117,
											"end": 46135,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46114,
											"end": 46198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 46114,
											"end": 46198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46157,
											"end": 46187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46157,
											"end": 46187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46157,
											"end": 46187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46157,
											"end": 46187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46157,
											"end": 46187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46157,
											"end": 46187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46157,
											"end": 46187,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46157,
											"end": 46187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46114,
											"end": 46198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 46114,
											"end": 46198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46222,
											"end": 46235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 46222,
											"end": 46235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46222,
											"end": 46235,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 46208,
											"end": 46236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46252,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46208,
											"end": 46252,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46222,
											"end": 46235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 46262,
											"end": 46277,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 46262,
											"end": 46277,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46262,
											"end": 46277,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46306,
											"end": 46319,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 46306,
											"end": 46319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E1976E16ED8CE8E740235978FBE69B27D5EEA683B2E017BB0BD2FABB33294B3F"
										},
										{
											"begin": 46294,
											"end": 46361,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46323,
											"end": 46344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 46331,
											"end": 46344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46323,
											"end": 46328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 46323,
											"end": 46344,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 46323,
											"end": 46344,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46323,
											"end": 46344,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 46323,
											"end": 46344,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46294,
											"end": 46361,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8989,
											"end": 9014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9047,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9057,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9073,
											"end": 9091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9066,
											"end": 9100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46294,
											"end": 46361,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46031,
											"end": 46368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48143,
											"end": 48144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48125,
											"end": 48132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48139,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48125,
											"end": 48144,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48122,
											"end": 48205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 48122,
											"end": 48205,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48179,
											"end": 48186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48179,
											"end": 48193,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3DDD5557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 48167,
											"end": 48194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48122,
											"end": 48205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 48122,
											"end": 48205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48233,
											"end": 48234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48217,
											"end": 48222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48217,
											"end": 48229,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48217,
											"end": 48234,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48214,
											"end": 48296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 48214,
											"end": 48296,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48272,
											"end": 48277,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48272,
											"end": 48284,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A46E2AB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 48257,
											"end": 48285,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48214,
											"end": 48296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 48214,
											"end": 48296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48326,
											"end": 48333,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48326,
											"end": 48340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48310,
											"end": 48315,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48310,
											"end": 48322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48310,
											"end": 48340,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48306,
											"end": 48395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 48306,
											"end": 48395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "512509D3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48363,
											"end": 48384,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48306,
											"end": 48395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 48306,
											"end": 48395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48409,
											"end": 48415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48423,
											"end": 48430,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48423,
											"end": 48437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48419,
											"end": 48420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48419,
											"end": 48437,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48511,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48512,
											"end": 48513,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 48504,
											"end": 48514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48504,
											"end": 48514,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48473,
											"end": 48478,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48479,
											"end": 48480,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 48473,
											"end": 48481,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48473,
											"end": 48481,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48458,
											"end": 48482,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48458,
											"end": 48500,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 48458,
											"end": 48514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 48458,
											"end": 48514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48556,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48557,
											"end": 48558,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 48549,
											"end": 48559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48549,
											"end": 48559,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 48528,
											"end": 48545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 48528,
											"end": 48559,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 48528,
											"end": 48559,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48528,
											"end": 48559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48439,
											"end": 48442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48439,
											"end": 48442,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 48405,
											"end": 48570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 48615,
											"end": 48629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48615,
											"end": 48629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48630,
											"end": 48642,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48630,
											"end": 48642,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48585,
											"end": 48643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48604,
											"end": 48614,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9678,
											"end": 9712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "472714A70B748503A00EFA85A1C3081B2A3477CE3BE0227CB140455F82CCAEB6"
										},
										{
											"begin": 48585,
											"end": 48643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48585,
											"end": 48643,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48003,
											"end": 48650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53471,
											"end": 53489,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 53471,
											"end": 53489,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53471,
											"end": 53489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53457,
											"end": 53467,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53457,
											"end": 53489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9925,
											"end": 9927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9907,
											"end": 9928,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9966,
											"name": "PUSH",
											"source": 1,
											"value": "3B"
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9944,
											"end": 9962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10003,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "54686973206164647265737320646F6573206E6F742068617665207065726D69"
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9983,
											"end": 10001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9976,
											"end": 10038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10074,
											"end": 10103,
											"name": "PUSH",
											"source": 1,
											"value": "7373696F6E20746F2063616C6C20706572666F726D55706B6565700000000000"
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10054,
											"end": 10072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10047,
											"end": 10104,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10121,
											"end": 10140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 9723,
											"end": 10146,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 53436,
											"end": 53574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53596,
											"end": 53604,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53596,
											"end": 53604,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53608,
											"end": 53609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53596,
											"end": 53609,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53592,
											"end": 53665,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 53592,
											"end": 53665,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53645,
											"end": 53653,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53645,
											"end": 53653,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 53631,
											"end": 53654,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53592,
											"end": 53665,
											"name": "tag",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 53592,
											"end": 53665,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53706,
											"end": 53718,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 53706,
											"end": 53718,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53687,
											"end": 53702,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 53687,
											"end": 53718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53684,
											"end": 53970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 53684,
											"end": 53970,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53745,
											"end": 53757,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 53745,
											"end": 53757,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53734,
											"end": 53742,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53734,
											"end": 53757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53734,
											"end": 53757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53734,
											"end": 53757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53787,
											"end": 53802,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 53771,
											"end": 53784,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 53771,
											"end": 53802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53771,
											"end": 53802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53771,
											"end": 53802,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53831,
											"end": 53861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 53831,
											"end": 53861,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53745,
											"end": 53757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53831,
											"end": 53861,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 53831,
											"end": 53861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53831,
											"end": 53861,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 53831,
											"end": 53861,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53816,
											"end": 53828,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 53816,
											"end": 53861,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 53875,
											"end": 53889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 53875,
											"end": 53891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53875,
											"end": 53891,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 53875,
											"end": 53891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53352,
											"end": 53985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53684,
											"end": 53970,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 53684,
											"end": 53970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53946,
											"end": 53958,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 53946,
											"end": 53958,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 53936,
											"end": 53959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 36349,
											"end": 36563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34844,
											"end": 34857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 34844,
											"end": 34855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 34844,
											"end": 34857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34844,
											"end": 34857,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 34844,
											"end": 34857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36464,
											"end": 36500,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 36482,
											"end": 36499,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36464,
											"end": 36481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 36464,
											"end": 36500,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36464,
											"end": 36500,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 36464,
											"end": 36500,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36510,
											"end": 36556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 36532,
											"end": 36549,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36551,
											"end": 36555,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36510,
											"end": 36531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 36510,
											"end": 36556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 46785,
											"end": 47184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46877,
											"end": 46878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46866,
											"end": 46873,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46866,
											"end": 46878,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46863,
											"end": 46931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 46863,
											"end": 46931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46900,
											"end": 46920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46900,
											"end": 46920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46900,
											"end": 46920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46900,
											"end": 46920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46900,
											"end": 46920,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46900,
											"end": 46920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46900,
											"end": 46920,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46900,
											"end": 46920,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46863,
											"end": 46931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 46863,
											"end": 46931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46963,
											"end": 46970,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46941,
											"end": 46959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 46941,
											"end": 46970,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 46941,
											"end": 46970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46941,
											"end": 46970,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46981,
											"end": 46993,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46996,
											"end": 47005,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47005,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46996,
											"end": 47053,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46996,
											"end": 47053,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46996,
											"end": 47005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47005,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47005,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47018,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 46996,
											"end": 47018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 46996,
											"end": 47053,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47019,
											"end": 47029,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47019,
											"end": 47029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47042,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 47038,
											"end": 47042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47044,
											"end": 47051,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47044,
											"end": 47051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 46996,
											"end": 47053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46996,
											"end": 47053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 46996,
											"end": 47053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 46996,
											"end": 47053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46981,
											"end": 47053,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46981,
											"end": 47053,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47067,
											"end": 47074,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47063,
											"end": 47130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 47063,
											"end": 47130,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47096,
											"end": 47119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47096,
											"end": 47119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47096,
											"end": 47119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47096,
											"end": 47119,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 47096,
											"end": 47119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47096,
											"end": 47119,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47096,
											"end": 47119,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47096,
											"end": 47119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47063,
											"end": 47130,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 47063,
											"end": 47130,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47145,
											"end": 47177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9F166643EC132A11638E74E3C3A78D4AE278FCBF92998240E0E97676F54E404"
										},
										{
											"begin": 47158,
											"end": 47176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47158,
											"end": 47176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47145,
											"end": 47177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47145,
											"end": 47177,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47145,
											"end": 47177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 47145,
											"end": 47177,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35965,
											"end": 35972,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35115,
											"end": 35135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35115,
											"end": 35133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 35115,
											"end": 35135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35115,
											"end": 35135,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 35115,
											"end": 35135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 35896,
											"end": 36030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35896,
											"end": 36030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 53996,
											"end": 54538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54124,
											"end": 54125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54106,
											"end": 54120,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54106,
											"end": 54125,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54103,
											"end": 54187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 54103,
											"end": 54187,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54147,
											"end": 54176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54147,
											"end": 54176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "71540007"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54147,
											"end": 54176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54147,
											"end": 54176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54147,
											"end": 54176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54147,
											"end": 54176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54147,
											"end": 54176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54147,
											"end": 54176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54103,
											"end": 54187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 54103,
											"end": 54187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54224,
											"end": 54239,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54221,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54208,
											"end": 54239,
											"modifierDepth": 1,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54296,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54205,
											"end": 54296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 54205,
											"end": 54296,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54261,
											"end": 54285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54261,
											"end": 54285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "54593E75"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54261,
											"end": 54285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54261,
											"end": 54285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54261,
											"end": 54285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54261,
											"end": 54285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54261,
											"end": 54285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54261,
											"end": 54285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54205,
											"end": 54296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 54205,
											"end": 54296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54317,
											"end": 54348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 54333,
											"end": 54348,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 54317,
											"end": 54330,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54317,
											"end": 54348,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 54317,
											"end": 54348,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54317,
											"end": 54348,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 54317,
											"end": 54348,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54306,
											"end": 54314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 54306,
											"end": 54348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54306,
											"end": 54348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54306,
											"end": 54348,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54358,
											"end": 54370,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 54358,
											"end": 54386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54358,
											"end": 54386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54358,
											"end": 54386,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54412,
											"end": 54427,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 54396,
											"end": 54409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 54396,
											"end": 54427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54396,
											"end": 54427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54396,
											"end": 54427,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54437,
											"end": 54449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 54437,
											"end": 54466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54437,
											"end": 54466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54437,
											"end": 54466,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54482,
											"end": 54530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54482,
											"end": 54530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54482,
											"end": 54530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54494,
											"end": 54504,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9678,
											"end": 9712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 54482,
											"end": 54530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2B5090E035D3026F5448298C9ADC68DB8BBC1B26A8AF5C81B2B2A9FC07CA4A00"
										},
										{
											"begin": 54482,
											"end": 54530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54482,
											"end": 54530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 9373,
											"end": 9718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 54544,
											"end": 54664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54608,
											"end": 54609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54597,
											"end": 54605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 54597,
											"end": 54609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54597,
											"end": 54609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54597,
											"end": 54609,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54624,
											"end": 54657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54636,
											"end": 54646,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3B68DC4E210C46D3622293F2B941CDFDE795BB6E17286BB289BA05A6A3B5541F"
										},
										{
											"begin": 54624,
											"end": 54657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54624,
											"end": 54657,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 54544,
											"end": 54664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 55463,
											"end": 56104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58566,
											"end": 58572,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58566,
											"end": 58572,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58566,
											"end": 58572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58566,
											"end": 58572,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 58566,
											"end": 58572,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58566,
											"end": 58572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58565,
											"end": 58572,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11258,
											"end": 11260,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11240,
											"end": 11261,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11297,
											"end": 11299,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11277,
											"end": 11295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11270,
											"end": 11300,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11369,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11316,
											"end": 11334,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11309,
											"end": 11370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11387,
											"end": 11405,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11387,
											"end": 11405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 11056,
											"end": 11411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 58557,
											"end": 58608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58618,
											"end": 58624,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58618,
											"end": 58631,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58618,
											"end": 58631,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58618,
											"end": 58631,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58618,
											"end": 58631,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 58618,
											"end": 58631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58618,
											"end": 58631,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55553,
											"end": 55565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55550,
											"end": 55618,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 55550,
											"end": 55618,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55587,
											"end": 55607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55587,
											"end": 55607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55587,
											"end": 55607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55587,
											"end": 55607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55587,
											"end": 55607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55587,
											"end": 55607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55587,
											"end": 55607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55587,
											"end": 55607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55550,
											"end": 55618,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 55550,
											"end": 55618,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55656,
											"end": 55666,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55641,
											"end": 55667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55667,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55682,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55641,
											"end": 55682,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55641,
											"end": 55682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55631,
											"end": 55682,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55631,
											"end": 55682,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55628,
											"end": 55773,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55628,
											"end": 55773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 55628,
											"end": 55773,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55735,
											"end": 55745,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55720,
											"end": 55746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55761,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55720,
											"end": 55761,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55720,
											"end": 55761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55704,
											"end": 55762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55704,
											"end": 55762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98E712C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55704,
											"end": 55762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55704,
											"end": 55762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55704,
											"end": 55762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55704,
											"end": 55762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55704,
											"end": 55762,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55704,
											"end": 55762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55628,
											"end": 55773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 55628,
											"end": 55773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55798,
											"end": 55808,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55783,
											"end": 55809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55824,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 55783,
											"end": 55824,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55828,
											"end": 55835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55828,
											"end": 55835,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 55783,
											"end": 55835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55828,
											"end": 55835,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55828,
											"end": 55835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 55783,
											"end": 55835,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 55783,
											"end": 55835,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55783,
											"end": 55835,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55860,
											"end": 55870,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55859,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55845,
											"end": 55871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 55845,
											"end": 55886,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55890,
											"end": 55897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55890,
											"end": 55897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 55845,
											"end": 55897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55890,
											"end": 55897,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55890,
											"end": 55897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 55845,
											"end": 55897,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 55845,
											"end": 55897,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55845,
											"end": 55897,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55915,
											"end": 55927,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55930,
											"end": 55939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55939,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55930,
											"end": 55968,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55930,
											"end": 55968,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55949,
											"end": 55959,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55930,
											"end": 55968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55930,
											"end": 55939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55939,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 55930,
											"end": 55948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55930,
											"end": 55968,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 55930,
											"end": 55968,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 55930,
											"end": 55968,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55915,
											"end": 55968,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55915,
											"end": 55968,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55990,
											"end": 55997,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55986,
											"end": 56053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 55986,
											"end": 56053,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56019,
											"end": 56042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56019,
											"end": 56042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56019,
											"end": 56042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56019,
											"end": 56042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 56019,
											"end": 56042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56019,
											"end": 56042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56019,
											"end": 56042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56019,
											"end": 56042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55986,
											"end": 56053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 55986,
											"end": 56053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56068,
											"end": 56097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56077,
											"end": 56087,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "884EDAD9CE6FA2440D8A54CC123490EB96D2768479D49FF9C7366125A9424364"
										},
										{
											"begin": 56068,
											"end": 56097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56097,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58652,
											"end": 58658,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 58652,
											"end": 58666,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58652,
											"end": 58666,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 58652,
											"end": 58666,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58652,
											"end": 58666,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58652,
											"end": 58666,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55463,
											"end": 56104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53190,
											"end": 53194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53196,
											"end": 53208,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53230,
											"end": 53246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53285,
											"end": 53293,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53285,
											"end": 53293,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53268,
											"end": 53281,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 53268,
											"end": 53281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53265,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 53250,
											"end": 53281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 53250,
											"end": 53281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53250,
											"end": 53281,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 53250,
											"end": 53281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP7",
											"source": -1
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53324,
											"end": 53333,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53106,
											"end": 53341,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53106,
											"end": 53341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 13233,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 12412,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 12412,
											"end": 12425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13297,
											"end": 13327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 13324,
											"end": 13325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13297,
											"end": 13315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 13297,
											"end": 13327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13297,
											"end": 13327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 13297,
											"end": 13327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13233,
											"end": 13334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 47190,
											"end": 47992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47271,
											"end": 47272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47260,
											"end": 47267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47260,
											"end": 47272,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47257,
											"end": 47325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 47257,
											"end": 47325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47294,
											"end": 47314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47257,
											"end": 47325,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 47257,
											"end": 47325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47361,
											"end": 47371,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47360,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47372,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47346,
											"end": 47380,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47346,
											"end": 47380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47343,
											"end": 47460,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47343,
											"end": 47460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 47343,
											"end": 47460,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47429,
											"end": 47439,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47428,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BE970F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47414,
											"end": 47448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47448,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47414,
											"end": 47448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47402,
											"end": 47449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47343,
											"end": 47460,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 47343,
											"end": 47460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47485,
											"end": 47495,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47484,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47514,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47470,
											"end": 47514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47518,
											"end": 47525,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47518,
											"end": 47525,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47518,
											"end": 47525,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47518,
											"end": 47525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 47470,
											"end": 47525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47470,
											"end": 47525,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47560,
											"end": 47570,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47559,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47547,
											"end": 47571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47543,
											"end": 47714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 47543,
											"end": 47714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47610,
											"end": 47619,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 47610,
											"end": 47619,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47610,
											"end": 47619,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47609,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47620,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47623,
											"end": 47633,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47659,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47678,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47678,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 47647,
											"end": 47678,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47599,
											"end": 47633,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47647,
											"end": 47678,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47678,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47647,
											"end": 47678,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47610,
											"end": 47619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 47692,
											"end": 47703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47692,
											"end": 47703,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47543,
											"end": 47714,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 47543,
											"end": 47714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47745,
											"end": 47752,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47741,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47724,
											"end": 47741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 47724,
											"end": 47752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47724,
											"end": 47752,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47763,
											"end": 47775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47777,
											"end": 47786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47786,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47811,
											"end": 47826,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 47811,
											"end": 47826,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47777,
											"end": 47786,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47786,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47786,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47786,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47799,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 47777,
											"end": 47799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47800,
											"end": 47810,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47800,
											"end": 47810,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47811,
											"end": 47826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47811,
											"end": 47826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47811,
											"end": 47826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47811,
											"end": 47826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47827,
											"end": 47834,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47827,
											"end": 47834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 47777,
											"end": 47835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "tag",
											"source": 0,
											"value": "419"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 47777,
											"end": 47835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 47777,
											"end": 47835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47835,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47763,
											"end": 47835,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47858,
											"end": 47865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47854,
											"end": 47921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 47854,
											"end": 47921,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 47887,
											"end": 47910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47854,
											"end": 47921,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 47854,
											"end": 47921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47974,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 47959,
											"end": 47974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "PUSH",
											"source": 0,
											"value": "14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB"
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47948,
											"end": 47958,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 47948,
											"end": 47958,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 47959,
											"end": 47974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47976,
											"end": 47983,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47976,
											"end": 47983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47936,
											"end": 47984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 47936,
											"end": 47984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 46374,
											"end": 46775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "427"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46466,
											"end": 46467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46455,
											"end": 46462,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46455,
											"end": 46467,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46452,
											"end": 46520,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 46452,
											"end": 46520,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46489,
											"end": 46509,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46489,
											"end": 46509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46489,
											"end": 46509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46489,
											"end": 46509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46489,
											"end": 46509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46452,
											"end": 46520,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "431"
										},
										{
											"begin": 46452,
											"end": 46520,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46553,
											"end": 46560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46530,
											"end": 46549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 46530,
											"end": 46560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 46530,
											"end": 46560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46530,
											"end": 46560,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46571,
											"end": 46583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46586,
											"end": 46595,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46595,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46586,
											"end": 46643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46586,
											"end": 46643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46586,
											"end": 46595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46595,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46595,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46595,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 46586,
											"end": 46608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 46586,
											"end": 46643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46609,
											"end": 46619,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 46609,
											"end": 46619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46628,
											"end": 46632,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 46628,
											"end": 46632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46641,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46634,
											"end": 46641,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 46586,
											"end": 46643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46586,
											"end": 46643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "436"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 46586,
											"end": 46643,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "437"
										},
										{
											"begin": 46586,
											"end": 46643,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46571,
											"end": 46643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46571,
											"end": 46643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46657,
											"end": 46664,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46653,
											"end": 46720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 46653,
											"end": 46720,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46686,
											"end": 46709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46686,
											"end": 46709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 46686,
											"end": 46709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46686,
											"end": 46709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 46686,
											"end": 46709,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46686,
											"end": 46709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46686,
											"end": 46709,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 46686,
											"end": 46709,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 46653,
											"end": 46720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "438"
										},
										{
											"begin": 46653,
											"end": 46720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46735,
											"end": 46768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "73834E1D1EE73BA659470A3603B888903853D3A3C9FDA34E71C093A0E35CAB94"
										},
										{
											"begin": 46748,
											"end": 46767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46748,
											"end": 46767,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46735,
											"end": 46768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46735,
											"end": 46768,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46735,
											"end": 46768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 46735,
											"end": 46768,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 58035,
											"end": 58358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "442"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58156,
											"end": 58157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58137,
											"end": 58152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58137,
											"end": 58157,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 58134,
											"end": 58222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 58134,
											"end": 58222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58179,
											"end": 58211,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58179,
											"end": 58211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58211,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58179,
											"end": 58211,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58211,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58179,
											"end": 58211,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58134,
											"end": 58222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "446"
										},
										{
											"begin": 58134,
											"end": 58222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58240,
											"end": 58263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58240,
											"end": 58281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58240,
											"end": 58281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58240,
											"end": 58281,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58297,
											"end": 58351,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58297,
											"end": 58351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58297,
											"end": 58351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58315,
											"end": 58325,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 58297,
											"end": 58351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58297,
											"end": 58351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 57024,
											"end": 57354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57147,
											"end": 57148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57128,
											"end": 57143,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57128,
											"end": 57148,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57125,
											"end": 57213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 57125,
											"end": 57213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57170,
											"end": 57202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57170,
											"end": 57202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57170,
											"end": 57202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57170,
											"end": 57202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57170,
											"end": 57202,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57170,
											"end": 57202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57170,
											"end": 57202,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57170,
											"end": 57202,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57125,
											"end": 57213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 57125,
											"end": 57213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57231,
											"end": 57256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57231,
											"end": 57274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57231,
											"end": 57274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57231,
											"end": 57274,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57290,
											"end": 57346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57290,
											"end": 57346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57308,
											"end": 57318,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 57290,
											"end": 57346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57290,
											"end": 57346,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 48657,
											"end": 49335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48740,
											"end": 48741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48729,
											"end": 48736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48729,
											"end": 48741,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 48726,
											"end": 48794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 48726,
											"end": 48794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 48763,
											"end": 48783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48726,
											"end": 48794,
											"name": "tag",
											"source": 0,
											"value": "458"
										},
										{
											"begin": 48726,
											"end": 48794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48829,
											"end": 48839,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48828,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48848,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48814,
											"end": 48848,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 48814,
											"end": 48848,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48811,
											"end": 48928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48811,
											"end": 48928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 48811,
											"end": 48928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48897,
											"end": 48907,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48896,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48916,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BE970F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E6"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48916,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 48882,
											"end": 48916,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48916,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48882,
											"end": 48916,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 48870,
											"end": 48917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48811,
											"end": 48928,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 48811,
											"end": 48928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48956,
											"end": 48966,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48955,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48982,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 48941,
											"end": 48982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48982,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 48941,
											"end": 48993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 48938,
											"end": 49051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 48938,
											"end": 49051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "636DC6B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49015,
											"end": 49040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 48938,
											"end": 49051,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 48938,
											"end": 49051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49076,
											"end": 49086,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49075,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49061,
											"end": 49102,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49106,
											"end": 49113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49106,
											"end": 49113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49106,
											"end": 49113,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49106,
											"end": 49113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 49061,
											"end": 49113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "tag",
											"source": 0,
											"value": "464"
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49061,
											"end": 49113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49138,
											"end": 49148,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49137,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49167,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 49123,
											"end": 49167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49171,
											"end": 49178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49171,
											"end": 49178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49171,
											"end": 49178,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49171,
											"end": 49178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 49123,
											"end": 49178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49123,
											"end": 49178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49220,
											"end": 49227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49216,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 49197,
											"end": 49216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 49197,
											"end": 49227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "tag",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49197,
											"end": 49227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49258,
											"end": 49265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49254,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 49237,
											"end": 49254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 49237,
											"end": 49265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49237,
											"end": 49265,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "PUSH",
											"source": 0,
											"value": "14EE34C24635186D212F515353DADAE9C226529EDEF2D1FCF5504CB33B5C25AB"
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49293,
											"end": 49303,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 49293,
											"end": 49303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49312,
											"end": 49316,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 49312,
											"end": 49316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49319,
											"end": 49326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49319,
											"end": 49326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49281,
											"end": 49327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 49281,
											"end": 49327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49436,
											"end": 49437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49425,
											"end": 49432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49425,
											"end": 49437,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49422,
											"end": 49490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 49422,
											"end": 49490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FF4783"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49459,
											"end": 49479,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49422,
											"end": 49490,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 49422,
											"end": 49490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49516,
											"end": 49529,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 49516,
											"end": 49529,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49503,
											"end": 49513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49503,
											"end": 49529,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 49500,
											"end": 49588,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49500,
											"end": 49588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 49500,
											"end": 49588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "222A50F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49551,
											"end": 49577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49500,
											"end": 49588,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 49500,
											"end": 49588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49646,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49633,
											"end": 49658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49610,
											"end": 49659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 49610,
											"end": 49659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49624,
											"end": 49631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49624,
											"end": 49631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49610,
											"end": 49623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 49610,
											"end": 49659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49610,
											"end": 49659,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 49610,
											"end": 49659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49678,
											"end": 49690,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49693,
											"end": 49702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 49693,
											"end": 49702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49715,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 49693,
											"end": 49715,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49716,
											"end": 49726,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 49716,
											"end": 49726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49735,
											"end": 49739,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 49735,
											"end": 49739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49741,
											"end": 49748,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 49741,
											"end": 49748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 49693,
											"end": 49750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 49693,
											"end": 49750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 49693,
											"end": 49750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49678,
											"end": 49750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49678,
											"end": 49750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49764,
											"end": 49771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49760,
											"end": 49827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 49760,
											"end": 49827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49793,
											"end": 49816,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 49760,
											"end": 49827,
											"name": "tag",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 49760,
											"end": 49827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11646,
											"end": 11648,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "PUSH",
											"source": 0,
											"value": "A89B69C5958EC1CCF0DF0DE746A8708F5B6A6B429430129F16F46F44B319C900"
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49842,
											"end": 49870,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 49411,
											"end": 49886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49345,
											"end": 49886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 57704,
											"end": 58029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "488"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57825,
											"end": 57826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57806,
											"end": 57821,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57806,
											"end": 57826,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57803,
											"end": 57891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 57803,
											"end": 57891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57848,
											"end": 57880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57848,
											"end": 57880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57848,
											"end": 57880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57848,
											"end": 57880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57848,
											"end": 57880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57848,
											"end": 57880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57848,
											"end": 57880,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57848,
											"end": 57880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57803,
											"end": 57891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 57803,
											"end": 57891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57909,
											"end": 57933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57909,
											"end": 57951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57909,
											"end": 57951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57909,
											"end": 57951,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57967,
											"end": 58022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57967,
											"end": 58022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57967,
											"end": 58022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57985,
											"end": 57995,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 57967,
											"end": 58022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57967,
											"end": 58022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 57364,
											"end": 57693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "496"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57487,
											"end": 57488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57468,
											"end": 57483,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57468,
											"end": 57488,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57465,
											"end": 57553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 57465,
											"end": 57553,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57510,
											"end": 57542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57510,
											"end": 57542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57510,
											"end": 57542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57510,
											"end": 57542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57510,
											"end": 57542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57510,
											"end": 57542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57510,
											"end": 57542,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57510,
											"end": 57542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 57465,
											"end": 57553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 57465,
											"end": 57553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57571,
											"end": 57614,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57614,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57571,
											"end": 57614,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57630,
											"end": 57686,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57630,
											"end": 57686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57630,
											"end": 57686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57648,
											"end": 57658,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11033,
											"end": 11035,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 57630,
											"end": 57686,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57630,
											"end": 57686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 54671,
											"end": 54989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "505"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54767,
											"end": 54797,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54767,
											"end": 54797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54764,
											"end": 54860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 54764,
											"end": 54860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 54849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54819,
											"end": 54849,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CFA94D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 54819,
											"end": 54849,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 54849,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 54819,
											"end": 54849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54819,
											"end": 54849,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54819,
											"end": 54849,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54819,
											"end": 54849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54764,
											"end": 54860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 54764,
											"end": 54860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54878,
											"end": 54915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54878,
											"end": 54915,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54931,
											"end": 54982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54931,
											"end": 54982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54931,
											"end": 54982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54951,
											"end": 54961,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11843,
											"end": 11894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11843,
											"end": 11894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 11927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11910,
											"end": 11928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 54931,
											"end": 54982,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "75F91F3CECB8C46F20150F60F77A6E1F0DE00776627692DB82EF1960AF84C33A"
										},
										{
											"begin": 54931,
											"end": 54982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11816,
											"end": 11834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54931,
											"end": 54982,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 11669,
											"end": 11969,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56110,
											"end": 56664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56204,
											"end": 56230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56204,
											"end": 56230,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56201,
											"end": 56289,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 56201,
											"end": 56289,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56252,
											"end": 56278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56252,
											"end": 56278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4CFA94D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56252,
											"end": 56278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56252,
											"end": 56278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 56252,
											"end": 56278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56252,
											"end": 56278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56252,
											"end": 56278,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56252,
											"end": 56278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56201,
											"end": 56289,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 56201,
											"end": 56289,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56311,
											"end": 56315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56302,
											"end": 56315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56315,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56315,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56315,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56315,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 56302,
											"end": 56333,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56319,
											"end": 56333,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56319,
											"end": 56333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56319,
											"end": 56333,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56333,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 56302,
											"end": 56333,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56299,
											"end": 56383,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56299,
											"end": 56383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 56299,
											"end": 56383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56355,
											"end": 56372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56355,
											"end": 56372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81ED1AE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56355,
											"end": 56372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56355,
											"end": 56372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 56355,
											"end": 56372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56355,
											"end": 56372,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56355,
											"end": 56372,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56355,
											"end": 56372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56299,
											"end": 56383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "520"
										},
										{
											"begin": 56299,
											"end": 56383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56396,
											"end": 56409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56396,
											"end": 56409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56396,
											"end": 56409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56405,
											"end": 56409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56396,
											"end": 56409,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56453,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56425,
											"end": 56453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56468,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56425,
											"end": 56468,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56464,
											"end": 56468,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56425,
											"end": 56468,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56468,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56425,
											"end": 56468,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "522"
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56533,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56544,
											"end": 56549,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56505,
											"end": 56533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56533,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56505,
											"end": 56549,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56505,
											"end": 56549,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 56393,
											"end": 56560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 56620,
											"end": 56648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56583,
											"end": 56657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56583,
											"end": 56657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56595,
											"end": 56605,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12170,
											"end": 12221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12170,
											"end": 12221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56620,
											"end": 56656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 56620,
											"end": 56656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56656,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56620,
											"end": 56656,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12333,
											"end": 12347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12326,
											"end": 12348,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12299,
											"end": 12349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56583,
											"end": 56657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7A1655BC3160D3413BF1D5235E55BE12E01B7E8BC2436A9BFF09C3B4FA2421F1"
										},
										{
											"begin": 56583,
											"end": 56657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12158,
											"end": 12160,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56583,
											"end": 56657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 11974,
											"end": 12355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 50280,
											"end": 51903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50342,
											"end": 50360,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 50342,
											"end": 50360,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50342,
											"end": 50360,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50338,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50360,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50386,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 50328,
											"end": 50386,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50378,
											"end": 50386,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 50378,
											"end": 50386,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50378,
											"end": 50386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50364,
											"end": 50374,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50364,
											"end": 50386,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50364,
											"end": 50386,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50386,
											"name": "tag",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 50328,
											"end": 50386,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 50328,
											"end": 50412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50404,
											"end": 50412,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50404,
											"end": 50412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50404,
											"end": 50412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50390,
											"end": 50400,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50390,
											"end": 50412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50390,
											"end": 50412,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50328,
											"end": 50412,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 50328,
											"end": 50412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50325,
											"end": 50467,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50325,
											"end": 50467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 50325,
											"end": 50467,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50445,
											"end": 50455,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50434,
											"end": 50456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50325,
											"end": 50467,
											"name": "tag",
											"source": 0,
											"value": "529"
										},
										{
											"begin": 50325,
											"end": 50467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50480,
											"end": 50499,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50480,
											"end": 50499,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50480,
											"end": 50504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50480,
											"end": 50504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50480,
											"end": 50504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50480,
											"end": 50531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 50480,
											"end": 50531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50508,
											"end": 50526,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50508,
											"end": 50526,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50508,
											"end": 50531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50480,
											"end": 50531,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 50480,
											"end": 50531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50477,
											"end": 50614,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50477,
											"end": 50614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 50477,
											"end": 50614,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50564,
											"end": 50583,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50564,
											"end": 50583,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50584,
											"end": 50602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50584,
											"end": 50602,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2FD92D8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11590,
											"end": 11615,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11631,
											"end": 11649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11624,
											"end": 11658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11563,
											"end": 11581,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50553,
											"end": 50603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 11416,
											"end": 11664,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 50477,
											"end": 50614,
											"name": "tag",
											"source": 0,
											"value": "532"
										},
										{
											"begin": 50477,
											"end": 50614,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50634,
											"end": 50658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50659,
											"end": 50692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50694,
											"end": 50720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50725,
											"end": 50745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 50725,
											"end": 50743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 50725,
											"end": 50745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50725,
											"end": 50745,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 50725,
											"end": 50745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50632,
											"end": 50745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50632,
											"end": 50745,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50632,
											"end": 50745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50632,
											"end": 50745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50772,
											"end": 50788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50772,
											"end": 50788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50822,
											"end": 50831,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50822,
											"end": 50831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 50819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50818,
											"end": 50831,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50881,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50871,
											"end": 50884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50870,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50856,
											"end": 50893,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 50856,
											"end": 50893,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50852,
											"end": 51788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 50852,
											"end": 51788,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51006,
											"end": 51023,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51006,
											"end": 51023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50913,
											"end": 50940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50969,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50959,
											"end": 50972,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50958,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50973,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50991,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50944,
											"end": 50991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 50991,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50913,
											"end": 50940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50913,
											"end": 50940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51006,
											"end": 51023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 51001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 50944,
											"end": 51001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50995,
											"end": 51000,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 50944,
											"end": 51001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 50944,
											"end": 51001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50944,
											"end": 51001,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 50944,
											"end": 51001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50943,
											"end": 51024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 50943,
											"end": 51024,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50943,
											"end": 51024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50943,
											"end": 51024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 50943,
											"end": 51024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50943,
											"end": 51024,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 50943,
											"end": 51024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50913,
											"end": 51024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50913,
											"end": 51024,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51059,
											"end": 51081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51084,
											"end": 51151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 51104,
											"end": 51129,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51131,
											"end": 51150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51084,
											"end": 51103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 51084,
											"end": 51151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51084,
											"end": 51151,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 51084,
											"end": 51151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51059,
											"end": 51151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51059,
											"end": 51151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51192,
											"end": 51206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51188,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51169,
											"end": 51188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 51169,
											"end": 51206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "tag",
											"source": 0,
											"value": "546"
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51169,
											"end": 51206,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51261,
											"end": 51275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51249,
											"end": 51275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51249,
											"end": 51275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51315,
											"end": 51333,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51311,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51293,
											"end": 51311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 51293,
											"end": 51333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "tag",
											"source": 0,
											"value": "548"
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51293,
											"end": 51333,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51377,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51367,
											"end": 51380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51366,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51401,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51352,
											"end": 51401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51405,
											"end": 51423,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51405,
											"end": 51423,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51405,
											"end": 51423,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51405,
											"end": 51423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51352,
											"end": 51423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51423,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51466,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51456,
											"end": 51469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51455,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51441,
											"end": 51492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51496,
											"end": 51510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51496,
											"end": 51510,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51496,
											"end": 51510,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51496,
											"end": 51510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51441,
											"end": 51510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51441,
											"end": 51510,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51545,
											"end": 51568,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51545,
											"end": 51568,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51571,
											"end": 51606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 51588,
											"end": 51606,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51571,
											"end": 51585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51571,
											"end": 51606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51571,
											"end": 51606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51571,
											"end": 51606,
											"name": "tag",
											"source": 0,
											"value": "551"
										},
										{
											"begin": 51571,
											"end": 51606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51649,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51638,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51652,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51624,
											"end": 51668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51545,
											"end": 51606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51545,
											"end": 51606,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51545,
											"end": 51606,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51545,
											"end": 51606,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51545,
											"end": 51606,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51545,
											"end": 51606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 51624,
											"end": 51687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "tag",
											"source": 0,
											"value": "552"
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51624,
											"end": 51687,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51714,
											"end": 51742,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51714,
											"end": 51742,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51714,
											"end": 51742,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 51714,
											"end": 51742,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12957,
											"end": 12959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12939,
											"end": 12960,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12976,
											"end": 12994,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 12999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13035,
											"end": 13063,
											"name": "PUSH",
											"source": 1,
											"value": "416D6F756E742069732067726561746572207468656E20353025000000000000"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13015,
											"end": 13033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13081,
											"end": 13099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 12755,
											"end": 13105,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "tag",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 51706,
											"end": 51773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50894,
											"end": 51788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50894,
											"end": 51788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50894,
											"end": 51788,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50852,
											"end": 51788,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 50852,
											"end": 51788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50833,
											"end": 50836,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50833,
											"end": 50836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 50799,
											"end": 51811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51855,
											"end": 51874,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 51855,
											"end": 51874,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51876,
											"end": 51894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51876,
											"end": 51894,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51843,
											"end": 51853,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9575,
											"end": 9626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9659,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9642,
											"end": 9660,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9635,
											"end": 9669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9678,
											"end": 9712,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "PUSH",
											"source": 0,
											"value": "EE826440768329B0C72F81331212EE31FCDAC1EA79A248D24821E40C34E58020"
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9563,
											"end": 9565,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9548,
											"end": 9566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51826,
											"end": 51895,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 50314,
											"end": 51903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50314,
											"end": 51903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50314,
											"end": 51903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50314,
											"end": 51903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50280,
											"end": 51903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 56676,
											"end": 57018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58411,
											"end": 58419,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58407,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58437,
											"end": 58445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58433,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58423,
											"end": 58445,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "tag",
											"source": 0,
											"value": "558"
										},
										{
											"begin": 58397,
											"end": 58445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1ED6F38B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58478,
											"end": 58488,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58467,
											"end": 58489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "tag",
											"source": 0,
											"value": "559"
										},
										{
											"begin": 58394,
											"end": 58500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56812,
											"end": 56813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56793,
											"end": 56808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56793,
											"end": 56813,
											"modifierDepth": 1,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56790,
											"end": 56878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 56790,
											"end": 56878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56835,
											"end": 56867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56835,
											"end": 56867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDBC6335"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56835,
											"end": 56867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56835,
											"end": 56867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56835,
											"end": 56867,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56835,
											"end": 56867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56835,
											"end": 56867,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56835,
											"end": 56867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 56790,
											"end": 56878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 56790,
											"end": 56878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56909,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 56896,
											"end": 56921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56921,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56896,
											"end": 56939,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56955,
											"end": 57011,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56955,
											"end": 57011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56973,
											"end": 56983,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 56955,
											"end": 57011,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56955,
											"end": 57011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "324"
										},
										{
											"begin": 10777,
											"end": 11051,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 12412,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 12412,
											"end": 12425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "tag",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13567,
											"end": 13589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13567,
											"end": 13589,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13563,
											"end": 13654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 13563,
											"end": 13654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13612,
											"end": 13643,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13612,
											"end": 13643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13640,
											"end": 13641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13612,
											"end": 13643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13612,
											"end": 13643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13612,
											"end": 13643,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13612,
											"end": 13643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13563,
											"end": 13654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "568"
										},
										{
											"begin": 13563,
											"end": 13654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13663,
											"end": 13691,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 13682,
											"end": 13690,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13663,
											"end": 13681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 13663,
											"end": 13691,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13663,
											"end": 13691,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 13663,
											"end": 13691,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13483,
											"end": 13698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11925,
											"end": 12052,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 11925,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 7008,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7028,
											"name": "tag",
											"source": 0,
											"value": "573"
										},
										{
											"begin": 7008,
											"end": 7028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12007,
											"end": 12045,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 12032,
											"end": 12044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12007,
											"end": 12031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 12007,
											"end": 12045,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35159,
											"end": 35226,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 35159,
											"end": 35226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 7008,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36790,
											"end": 37102,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 36790,
											"end": 37102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36870,
											"end": 36874,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36879,
											"end": 36885,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1174"
										},
										{
											"begin": 36862,
											"end": 36885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36885,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 36862,
											"end": 36982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36976,
											"end": 36982,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36940,
											"end": 36982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36940,
											"end": 36972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "583"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 27678,
											"end": 27731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27678,
											"end": 27731,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27678,
											"end": 27731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27600,
											"end": 27738,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36940,
											"end": 36972,
											"name": "tag",
											"source": 0,
											"value": "583"
										},
										{
											"begin": 36940,
											"end": 36972,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36940,
											"end": 36982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36940,
											"end": 36982,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36940,
											"end": 36982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36862,
											"end": 36982,
											"name": "tag",
											"source": 0,
											"value": "582"
										},
										{
											"begin": 36862,
											"end": 36982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36845,
											"end": 37096,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36845,
											"end": 37096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 36845,
											"end": 37096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37056,
											"end": 37085,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58679,
											"end": 58791,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 58679,
											"end": 58791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12412,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "570"
										},
										{
											"begin": 12412,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 12412,
											"end": 12425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38243,
											"end": 38781,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 38243,
											"end": 38781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38360,
											"end": 38377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 38342,
											"end": 38392,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38392,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "592"
										},
										{
											"begin": 38342,
											"end": 38394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "tag",
											"source": 0,
											"value": "591"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "tag",
											"source": 0,
											"value": "590"
										},
										{
											"begin": 38342,
											"end": 38394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38338,
											"end": 38775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 38338,
											"end": 38775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38704,
											"end": 38764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38338,
											"end": 38775,
											"name": "tag",
											"source": 0,
											"value": "593"
										},
										{
											"begin": 38338,
											"end": 38775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 38436,
											"end": 38476,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38436,
											"end": 38476,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 38432,
											"end": 38552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 38432,
											"end": 38552,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38503,
											"end": 38537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 38432,
											"end": 38552,
											"name": "tag",
											"source": 0,
											"value": "599"
										},
										{
											"begin": 38432,
											"end": 38552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 38595,
											"end": 38612,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38614,
											"end": 38618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 38565,
											"end": 38619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38565,
											"end": 38619,
											"name": "tag",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 38565,
											"end": 38619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38395,
											"end": 38630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38243,
											"end": 38781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38243,
											"end": 38781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38243,
											"end": 38781,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37219,
											"end": 37432,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 37219,
											"end": 37432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37293,
											"end": 37297,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37302,
											"end": 37308,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1174"
										},
										{
											"begin": 37285,
											"end": 37308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37285,
											"end": 37308,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37281,
											"end": 37426,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 37281,
											"end": 37426,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37386,
											"end": 37415,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12736,
											"end": 12898,
											"name": "tag",
											"source": 0,
											"value": "406"
										},
										{
											"begin": 12736,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12795,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 11391,
											"end": 11413,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 12648,
											"end": 12656,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12648,
											"end": 12656,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12648,
											"end": 12656,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12519,
											"end": 12663,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12795,
											"end": 12802,
											"name": "tag",
											"source": 0,
											"value": "608"
										},
										{
											"begin": 12795,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12795,
											"end": 12818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12795,
											"end": 12818,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12791,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 12791,
											"end": 12892,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13852,
											"end": 14100,
											"name": "tag",
											"source": 0,
											"value": "409"
										},
										{
											"begin": 13852,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11391,
											"end": 11413,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14019,
											"end": 14038,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14053,
											"end": 14093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14001,
											"end": 14009,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14093,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 14053,
											"end": 14093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13925,
											"end": 13949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13925,
											"end": 13949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14053,
											"end": 14093,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13915,
											"end": 14100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13915,
											"end": 14100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 14100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13852,
											"end": 14100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49893,
											"end": 50272,
											"name": "tag",
											"source": 0,
											"value": "475"
										},
										{
											"begin": 49893,
											"end": 50272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49982,
											"end": 50002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50005,
											"end": 50026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 50013,
											"end": 50026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50005,
											"end": 50010,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 50005,
											"end": 50026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 50005,
											"end": 50026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50005,
											"end": 50026,
											"name": "tag",
											"source": 0,
											"value": "615"
										},
										{
											"begin": 50005,
											"end": 50026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49982,
											"end": 50026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49982,
											"end": 50026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50036,
											"end": 50056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50059,
											"end": 50101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 50079,
											"end": 50086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50088,
											"end": 50100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50059,
											"end": 50078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 50059,
											"end": 50101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50059,
											"end": 50101,
											"name": "tag",
											"source": 0,
											"value": "616"
										},
										{
											"begin": 50059,
											"end": 50101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50036,
											"end": 50101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50036,
											"end": 50101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50111,
											"end": 50130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50133,
											"end": 50176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 50153,
											"end": 50160,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50162,
											"end": 50175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50133,
											"end": 50152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 50133,
											"end": 50176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50133,
											"end": 50176,
											"name": "tag",
											"source": 0,
											"value": "617"
										},
										{
											"begin": 50133,
											"end": 50176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50111,
											"end": 50176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50111,
											"end": 50176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50210,
											"end": 50222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50206,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50187,
											"end": 50206,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 50187,
											"end": 50222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "tag",
											"source": 0,
											"value": "618"
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50187,
											"end": 50222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50254,
											"end": 50265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50232,
											"end": 50250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 50232,
											"end": 50265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "tag",
											"source": 0,
											"value": "619"
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50232,
											"end": 50265,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 49893,
											"end": 50272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51915,
											"end": 53100,
											"name": "tag",
											"source": 0,
											"value": "535"
										},
										{
											"begin": 51915,
											"end": 53100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51961,
											"end": 51968,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51970,
											"end": 51977,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51978,
											"end": 51985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52006,
											"end": 52030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52033,
											"end": 52079,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 52053,
											"end": 52072,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52053,
											"end": 52072,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52078,
											"name": "PUSH",
											"source": 0,
											"value": "1388"
										},
										{
											"begin": 52033,
											"end": 52052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 52033,
											"end": 52079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52033,
											"end": 52079,
											"name": "tag",
											"source": 0,
											"value": "622"
										},
										{
											"begin": 52033,
											"end": 52079,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52006,
											"end": 52079,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52006,
											"end": 52079,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52090,
											"end": 52123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52126,
											"end": 52190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 52146,
											"end": 52162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52164,
											"end": 52189,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 52164,
											"end": 52189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52126,
											"end": 52145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 52126,
											"end": 52190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52126,
											"end": 52190,
											"name": "tag",
											"source": 0,
											"value": "623"
										},
										{
											"begin": 52126,
											"end": 52190,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52090,
											"end": 52190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52090,
											"end": 52190,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52200,
											"end": 52236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52239,
											"end": 52302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 52259,
											"end": 52275,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52277,
											"end": 52301,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 52277,
											"end": 52301,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52239,
											"end": 52258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 52239,
											"end": 52302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52239,
											"end": 52302,
											"name": "tag",
											"source": 0,
											"value": "624"
										},
										{
											"begin": 52239,
											"end": 52302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52200,
											"end": 52302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52200,
											"end": 52302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52312,
											"end": 52348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52351,
											"end": 52413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 52371,
											"end": 52387,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52389,
											"end": 52412,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 52389,
											"end": 52412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52351,
											"end": 52370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 52351,
											"end": 52413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52351,
											"end": 52413,
											"name": "tag",
											"source": 0,
											"value": "625"
										},
										{
											"begin": 52351,
											"end": 52413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52312,
											"end": 52413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52312,
											"end": 52413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52423,
											"end": 52453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52456,
											"end": 52522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 52476,
											"end": 52494,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52476,
											"end": 52494,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52496,
											"end": 52521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52456,
											"end": 52475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 52456,
											"end": 52522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52456,
											"end": 52522,
											"name": "tag",
											"source": 0,
											"value": "626"
										},
										{
											"begin": 52456,
											"end": 52522,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52423,
											"end": 52522,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52423,
											"end": 52522,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52549,
											"end": 52550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52536,
											"end": 52545,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52536,
											"end": 52545,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52536,
											"end": 52550,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 52533,
											"end": 52603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 52533,
											"end": 52603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52582,
											"end": 52591,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52582,
											"end": 52591,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7CA8D0DB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 52572,
											"end": 52592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52533,
											"end": 52603,
											"name": "tag",
											"source": 0,
											"value": "627"
										},
										{
											"begin": 52533,
											"end": 52603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52621,
											"end": 52647,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52673,
											"end": 52682,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52673,
											"end": 52682,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52650,
											"end": 52672,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52650,
											"end": 52682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 52650,
											"end": 52682,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52650,
											"end": 52682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52650,
											"end": 52682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 52650,
											"end": 52682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52650,
											"end": 52682,
											"name": "tag",
											"source": 0,
											"value": "629"
										},
										{
											"begin": 52650,
											"end": 52682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52621,
											"end": 52682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52725,
											"end": 52784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 52756,
											"end": 52784,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52753,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 52725,
											"end": 52784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52725,
											"end": 52784,
											"name": "tag",
											"source": 0,
											"value": "630"
										},
										{
											"begin": 52725,
											"end": 52784,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52720,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 52701,
											"end": 52720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 52701,
											"end": 52785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "tag",
											"source": 0,
											"value": "631"
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52701,
											"end": 52785,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52817,
											"end": 52845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52795,
											"end": 52813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 52795,
											"end": 52845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "tag",
											"source": 0,
											"value": "632"
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52795,
											"end": 52845,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52856,
											"end": 52868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52871,
											"end": 52880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52880,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52890,
											"end": 52905,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52890,
											"end": 52905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52890,
											"end": 52905,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52890,
											"end": 52905,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52890,
											"end": 52905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10951,
											"end": 11002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11018,
											"end": 11036,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11011,
											"end": 11045,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 52871,
											"end": 52880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52889,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 52871,
											"end": 52889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10924,
											"end": 10942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "tag",
											"source": 0,
											"value": "635"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 52871,
											"end": 52936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "tag",
											"source": 0,
											"value": "636"
										},
										{
											"begin": 52871,
											"end": 52936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52856,
											"end": 52936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52856,
											"end": 52936,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52950,
											"end": 52957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 52946,
											"end": 53013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D85D3CEF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7712,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7691,
											"end": 7713,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7673,
											"end": 7714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7646,
											"end": 7664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52979,
											"end": 53002,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 7533,
											"end": 7720,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52946,
											"end": 53013,
											"name": "tag",
											"source": 0,
											"value": "637"
										},
										{
											"begin": 52946,
											"end": 53013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53031,
											"end": 53047,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53031,
											"end": 53047,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 53048,
											"end": 53073,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53048,
											"end": 53073,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53074,
											"end": 53092,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53074,
											"end": 53092,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51915,
											"end": 53100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51915,
											"end": 53100,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51915,
											"end": 53100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55097,
											"end": 55104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55149,
											"end": 55150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55128,
											"end": 55145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55128,
											"end": 55150,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55125,
											"end": 55223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 55125,
											"end": 55223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B7220AF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55172,
											"end": 55212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55125,
											"end": 55223,
											"name": "tag",
											"source": 0,
											"value": "640"
										},
										{
											"begin": 55125,
											"end": 55223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55255,
											"end": 55256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55235,
											"end": 55251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55235,
											"end": 55256,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 55232,
											"end": 55323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 55232,
											"end": 55323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B015AA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55278,
											"end": 55312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55232,
											"end": 55323,
											"name": "tag",
											"source": 0,
											"value": "642"
										},
										{
											"begin": 55232,
											"end": 55323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55340,
											"end": 55358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55403,
											"end": 55408,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 55361,
											"end": 55399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 55382,
											"end": 55398,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55378,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 55361,
											"end": 55399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55399,
											"name": "tag",
											"source": 0,
											"value": "644"
										},
										{
											"begin": 55361,
											"end": 55399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 55361,
											"end": 55409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "543"
										},
										{
											"begin": 55361,
											"end": 55409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55361,
											"end": 55409,
											"name": "tag",
											"source": 0,
											"value": "645"
										},
										{
											"begin": 55361,
											"end": 55409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55340,
											"end": 55409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "tag",
											"source": 0,
											"value": "639"
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54995,
											"end": 55452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54995,
											"end": 55452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7302,
											"name": "tag",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 7161,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8947,
											"end": 8968,
											"name": "PUSH",
											"source": 0,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8637,
											"end": 8677,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8637,
											"end": 8677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8677,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8677,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8637,
											"end": 8677,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7223,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 7223,
											"end": 7296,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7268,
											"end": 7285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12058,
											"end": 12293,
											"name": "tag",
											"source": 0,
											"value": "577"
										},
										{
											"begin": 12058,
											"end": 12293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7008,
											"end": 7028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "566"
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "574"
										},
										{
											"begin": 7008,
											"end": 7028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28422,
											"end": 28757,
											"name": "tag",
											"source": 0,
											"value": "602"
										},
										{
											"begin": 28422,
											"end": 28757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28513,
											"end": 28550,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 28532,
											"end": 28549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28513,
											"end": 28531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 28513,
											"end": 28550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28513,
											"end": 28550,
											"name": "tag",
											"source": 0,
											"value": "660"
										},
										{
											"begin": 28513,
											"end": 28550,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "PUSH",
											"source": 0,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28565,
											"end": 28592,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 28607,
											"end": 28618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28607,
											"end": 28618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28607,
											"end": 28622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 28751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 28603,
											"end": 28751,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28638,
											"end": 28691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "601"
										},
										{
											"begin": 28667,
											"end": 28684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28686,
											"end": 28690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28638,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 28638,
											"end": 28691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28603,
											"end": 28751,
											"name": "tag",
											"source": 0,
											"value": "662"
										},
										{
											"begin": 28603,
											"end": 28751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28722,
											"end": 28740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 28722,
											"end": 28738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 28722,
											"end": 28740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27829,
											"end": 28110,
											"name": "tag",
											"source": 0,
											"value": "661"
										},
										{
											"begin": 27829,
											"end": 28110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27906,
											"end": 27923,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27906,
											"end": 27935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27906,
											"end": 27935,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 27939,
											"end": 27940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27906,
											"end": 27940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27902,
											"end": 28021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "673"
										},
										{
											"begin": 27902,
											"end": 28021,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27963,
											"end": 28010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27902,
											"end": 28021,
											"name": "tag",
											"source": 0,
											"value": "673"
										},
										{
											"begin": 27902,
											"end": 28021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28030,
											"end": 28103,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 27829,
											"end": 28110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19646,
											"end": 19899,
											"name": "tag",
											"source": 0,
											"value": "664"
										},
										{
											"begin": 19646,
											"end": 19899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19729,
											"end": 19741,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19754,
											"end": 19766,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19768,
											"end": 19791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19795,
											"end": 19814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19815,
											"end": 19819,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "678"
										},
										{
											"begin": 19795,
											"end": 19820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "tag",
											"source": 0,
											"value": "677"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "681"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "tag",
											"source": 0,
											"value": "681"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "tag",
											"source": 0,
											"value": "680"
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19753,
											"end": 19820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19753,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19753,
											"end": 19820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19753,
											"end": 19820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "682"
										},
										{
											"begin": 19864,
											"end": 19870,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19872,
											"end": 19879,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19881,
											"end": 19891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "683"
										},
										{
											"begin": 19837,
											"end": 19892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19837,
											"end": 19892,
											"name": "tag",
											"source": 0,
											"value": "682"
										},
										{
											"begin": 19837,
											"end": 19892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19830,
											"end": 19892,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 19646,
											"end": 19899,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19646,
											"end": 19899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32241,
											"end": 32363,
											"name": "tag",
											"source": 0,
											"value": "667"
										},
										{
											"begin": 32241,
											"end": 32363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32300,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 32291,
											"end": 32304,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32287,
											"end": 32357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 32287,
											"end": 32357,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32327,
											"end": 32346,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "tag",
											"source": 0,
											"value": "683"
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20309,
											"end": 20321,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20338,
											"end": 20345,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 20369,
											"end": 20379,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 20361,
											"end": 20380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20380,
											"name": "tag",
											"source": 0,
											"value": "688"
										},
										{
											"begin": 20361,
											"end": 20380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "687"
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20602,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 20585,
											"end": 20634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20611,
											"end": 20629,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20611,
											"end": 20629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20611,
											"end": 20629,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 20611,
											"end": 20634,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20585,
											"end": 20634,
											"name": "tag",
											"source": 0,
											"value": "691"
										},
										{
											"begin": 20585,
											"end": 20634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20581,
											"end": 20700,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20581,
											"end": 20700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 20581,
											"end": 20700,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 375,
											"end": 407,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 357,
											"end": 408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20661,
											"end": 20685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 196,
											"end": 414,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20581,
											"end": 20700,
											"name": "tag",
											"source": 0,
											"value": "692"
										},
										{
											"begin": 20581,
											"end": 20700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20720,
											"end": 20730,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "tag",
											"source": 0,
											"value": "690"
										},
										{
											"begin": 20333,
											"end": 20741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20165,
											"end": 20747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21283,
											"end": 21799,
											"name": "tag",
											"source": 0,
											"value": "689"
										},
										{
											"begin": 21283,
											"end": 21799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21431,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21431,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21435,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21410,
											"end": 21793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 21410,
											"end": 21793,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21642,
											"end": 21652,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21636,
											"end": 21653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21698,
											"end": 21713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21685,
											"end": 21695,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21683,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21677,
											"end": 21696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21670,
											"end": 21714,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21410,
											"end": 21793,
											"name": "tag",
											"source": 0,
											"value": "695"
										},
										{
											"begin": 21410,
											"end": 21793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21765,
											"end": 21782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 419,
											"end": 592,
											"name": "tag",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 419,
											"end": 592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 487,
											"end": 507,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 536,
											"end": 567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 536,
											"end": 567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 526,
											"end": 568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 526,
											"end": 568,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 516,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 516,
											"end": 586,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 582,
											"end": 583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 579,
											"end": 580,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 572,
											"end": 584,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 516,
											"end": 586,
											"name": "tag",
											"source": 1,
											"value": "709"
										},
										{
											"begin": 516,
											"end": 586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 692,
											"end": 698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 700,
											"end": 706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 708,
											"end": 714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 724,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 777,
											"end": 780,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 765,
											"end": 774,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 756,
											"end": 763,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 752,
											"end": 775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 748,
											"end": 781,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 798,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 745,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 745,
											"end": 798,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 794,
											"end": 795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 791,
											"end": 792,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 784,
											"end": 796,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 745,
											"end": 798,
											"name": "tag",
											"source": 1,
											"value": "711"
										},
										{
											"begin": 745,
											"end": 798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 817,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 817,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 817,
											"end": 846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 817,
											"end": 846,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 817,
											"end": 846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 807,
											"end": 846,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 807,
											"end": 846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 865,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 888,
											"end": 897,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 884,
											"end": 902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 865,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 865,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 865,
											"end": 903,
											"name": "tag",
											"source": 1,
											"value": "713"
										},
										{
											"begin": 865,
											"end": 903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 855,
											"end": 903,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 855,
											"end": 903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 922,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 956,
											"end": 958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 945,
											"end": 954,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 941,
											"end": 959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 922,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 922,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 922,
											"end": 960,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 922,
											"end": 960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 912,
											"end": 960,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 912,
											"end": 960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 1013,
											"end": 1015,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1002,
											"end": 1011,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 979,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "715"
										},
										{
											"begin": 979,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1017,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 969,
											"end": 1017,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1059,
											"end": 1068,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 1036,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "tag",
											"source": 1,
											"value": "716"
										},
										{
											"begin": 1036,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1075,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 597,
											"end": 1081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1312,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 1086,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1145,
											"end": 1151,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1200,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1186,
											"end": 1195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1196,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1201,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1216,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "tag",
											"source": 1,
											"value": "718"
										},
										{
											"begin": 1166,
											"end": 1218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1086,
											"end": 1312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1652,
											"name": "tag",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 1525,
											"end": 1652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1596,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1581,
											"end": 1584,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1577,
											"end": 1597,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1598,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1617,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1607,
											"end": 1622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1641,
											"end": 1645,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1631,
											"end": 1646,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1722,
											"end": 1731,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1793,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1770,
											"end": 1797,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1846,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1847,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1849,
											"end": 1871,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1872,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 1807,
											"end": 1895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 1875,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "tag",
											"source": 1,
											"value": "723"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1913,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1904,
											"end": 1926,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1657,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 1937,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2022,
											"end": 2028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2049,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 2016,
											"end": 2072,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 2052,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "tag",
											"source": 1,
											"value": "726"
										},
										{
											"begin": 2052,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2093,
											"end": 2107,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2089,
											"end": 2114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1937,
											"end": 2120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2800,
											"name": "tag",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 2125,
											"end": 2800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2232,
											"end": 2235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2229,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2217,
											"end": 2223,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2236,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "tag",
											"source": 1,
											"value": "728"
										},
										{
											"begin": 2199,
											"end": 2254,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2290,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2297,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 2373,
											"end": 2379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 2333,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "tag",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 2333,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 2317,
											"end": 2381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "tag",
											"source": 1,
											"value": "729"
										},
										{
											"begin": 2317,
											"end": 2381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2405,
											"end": 2408,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2429,
											"end": 2435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2417,
											"end": 2436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2512,
											"end": 2518,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2505,
											"end": 2519,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2475,
											"end": 2527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2553,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2542,
											"end": 2548,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2554,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2567,
											"end": 2568,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2564,
											"end": 2565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2569,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "tag",
											"source": 1,
											"value": "731"
										},
										{
											"begin": 2536,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2603,
											"end": 2607,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2601,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2608,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "tag",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2628,
											"end": 2631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2625,
											"end": 2640,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 2720,
											"end": 2723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 2701,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "tag",
											"source": 1,
											"value": "735"
										},
										{
											"begin": 2701,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2754,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2759,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "732"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "tag",
											"source": 1,
											"value": "734"
										},
										{
											"begin": 2617,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2800,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2125,
											"end": 2800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 2986,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2972,
											"end": 2981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2970,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2982,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2955,
											"end": 2987,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3000,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 2998,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3002,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "tag",
											"source": 1,
											"value": "737"
										},
										{
											"begin": 2952,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3040,
											"end": 3049,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3027,
											"end": 3050,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3073,
											"end": 3091,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3065,
											"end": 3071,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3092,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3103,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3095,
											"end": 3107,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "738"
										},
										{
											"begin": 3059,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3150,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3185,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3196,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3207,
											"end": 3208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3200,
											"end": 3212,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "tag",
											"source": 1,
											"value": "739"
										},
										{
											"begin": 3159,
											"end": 3214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3253,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 3289,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "730"
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3289,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "700"
										},
										{
											"begin": 3289,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3337,
											"name": "tag",
											"source": 1,
											"value": "740"
										},
										{
											"begin": 3273,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3359,
											"end": 3362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3383,
											"end": 3389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3378,
											"end": 3381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3419,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3410,
											"end": 3413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3460,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3455,
											"end": 3469,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3451,
											"end": 3453,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3477,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3507,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3489,
											"end": 3508,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "742"
										},
										{
											"begin": 3486,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3549,
											"end": 3551,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3558,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "tag",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3581,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3575,
											"end": 3590,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3600,
											"end": 3614,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "743"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "tag",
											"source": 1,
											"value": "745"
										},
										{
											"begin": 3567,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3791,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3844,
											"end": 3848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3829,
											"end": 3849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3829,
											"end": 3849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3850,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3862,
											"end": 3894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 3894,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3907,
											"end": 3908,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3904,
											"end": 3905,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3909,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "746"
										},
										{
											"begin": 3859,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 3985,
											"end": 3992,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3963,
											"end": 3972,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 3983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "701"
										},
										{
											"begin": 3930,
											"end": 3993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "tag",
											"source": 1,
											"value": "747"
										},
										{
											"begin": 3930,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3993,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 3999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4590,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 4004,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4123,
											"end": 4132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4121,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4133,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4138,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "tag",
											"source": 1,
											"value": "749"
										},
										{
											"begin": 4103,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4201,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4224,
											"end": 4242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4216,
											"end": 4222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4243,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4256,
											"end": 4257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4253,
											"end": 4254,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4246,
											"end": 4258,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "tag",
											"source": 1,
											"value": "750"
										},
										{
											"begin": 4210,
											"end": 4260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4337,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4361,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "tag",
											"source": 1,
											"value": "751"
										},
										{
											"begin": 4310,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4388,
											"end": 4404,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4445,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4419,
											"end": 4425,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4446,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4459,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4456,
											"end": 4457,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4461,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "tag",
											"source": 1,
											"value": "752"
										},
										{
											"begin": 4413,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4504,
											"end": 4511,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4501,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4490,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4502,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4512,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4527,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "tag",
											"source": 1,
											"value": "753"
										},
										{
											"begin": 4472,
											"end": 4529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4559,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4578,
											"end": 4584,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4590,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4733,
											"end": 4735,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4719,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4731,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4736,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "tag",
											"source": 1,
											"value": "755"
										},
										{
											"begin": 4701,
											"end": 4753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 4791,
											"end": 4800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 4772,
											"end": 4801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "tag",
											"source": 1,
											"value": "756"
										},
										{
											"begin": 4772,
											"end": 4801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4852,
											"end": 4854,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4855,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4856,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4871,
											"end": 4877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4898,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4901,
											"end": 4913,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "tag",
											"source": 1,
											"value": "757"
										},
										{
											"begin": 4865,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4956,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 4991,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4979,
											"end": 4992,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 4992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 5002,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5006,
											"end": 5018,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "tag",
											"source": 1,
											"value": "758"
										},
										{
											"begin": 4965,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5056,
											"end": 5058,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5059,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5100,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5074,
											"end": 5080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5101,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 5068,
											"end": 5124,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "698"
										},
										{
											"begin": 5104,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "760"
										},
										{
											"begin": 5104,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 5193,
											"end": 5195,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5170,
											"end": 5187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5166,
											"end": 5197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5162,
											"end": 5202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 5146,
											"end": 5203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "tag",
											"source": 1,
											"value": "761"
										},
										{
											"begin": 5146,
											"end": 5203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5226,
											"end": 5232,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5212,
											"end": 5233,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5274,
											"end": 5281,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5269,
											"end": 5271,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5260,
											"end": 5266,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5258,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5248,
											"end": 5272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5282,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5292,
											"end": 5293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5297,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "tag",
											"source": 1,
											"value": "762"
										},
										{
											"begin": 5242,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5356,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5341,
											"end": 5343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5334,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5321,
											"end": 5335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5308,
											"end": 5357,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5397,
											"end": 5399,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5388,
											"end": 5394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5377,
											"end": 5395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5366,
											"end": 5404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4595,
											"end": 5434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5621,
											"end": 5967,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5621,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5750,
											"end": 5752,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5738,
											"end": 5747,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5729,
											"end": 5736,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5748,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5753,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5768,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "tag",
											"source": 1,
											"value": "765"
										},
										{
											"begin": 5718,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5811,
											"end": 5834,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5931,
											"end": 5933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5621,
											"end": 5967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6016,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6045,
											"end": 6057,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6084,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6076,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6085,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6134,
											"end": 6140,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6127,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6120,
											"end": 6125,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6109,
											"end": 6113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6107,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6141,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6170,
											"end": 6176,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6165,
											"end": 6168,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6161,
											"end": 6177,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6157,
											"end": 6184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6242,
											"end": 6244,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6235,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6225,
											"end": 6231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6246,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6212,
											"end": 6215,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6254,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 6260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6563,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 6265,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6432,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6416,
											"end": 6457,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6493,
											"end": 6495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6490,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6496,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 6553,
											"end": 6555,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6542,
											"end": 6551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6538,
											"end": 6556,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6530,
											"end": 6536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 6513,
											"end": 6557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "tag",
											"source": 1,
											"value": "768"
										},
										{
											"begin": 6513,
											"end": 6557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6557,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6563,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6265,
											"end": 6563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6568,
											"end": 6787,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6568,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6717,
											"end": 6719,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6706,
											"end": 6715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6720,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6737,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 6777,
											"end": 6779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6762,
											"end": 6780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6754,
											"end": 6760,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 6737,
											"end": 6781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6792,
											"end": 6978,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6792,
											"end": 6978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6904,
											"end": 6906,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6892,
											"end": 6901,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6879,
											"end": 6902,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6875,
											"end": 6907,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6920,
											"end": 6921,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6917,
											"end": 6918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6910,
											"end": 6922,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "tag",
											"source": 1,
											"value": "772"
										},
										{
											"begin": 6872,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 6962,
											"end": 6971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 6943,
											"end": 6972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7725,
											"end": 7843,
											"name": "tag",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 7725,
											"end": 7843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7816,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7817,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7797,
											"end": 7818,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7819,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7777,
											"end": 7837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 7777,
											"end": 7837,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 7834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7830,
											"end": 7831,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7835,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7913,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7974,
											"end": 7976,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 7971,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7953,
											"end": 7960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7949,
											"end": 7972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 7977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 7992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "tag",
											"source": 1,
											"value": "779"
										},
										{
											"begin": 7942,
											"end": 7994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 8032,
											"end": 8041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "697"
										},
										{
											"begin": 8013,
											"end": 8042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "tag",
											"source": 1,
											"value": "780"
										},
										{
											"begin": 8013,
											"end": 8042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8003,
											"end": 8042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8092,
											"end": 8094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8081,
											"end": 8090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8077,
											"end": 8095,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8064,
											"end": 8096,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 8127,
											"end": 8132,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 8105,
											"end": 8133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "tag",
											"source": 1,
											"value": "781"
										},
										{
											"begin": 8105,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8382,
											"end": 8509,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 8382,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8443,
											"end": 8453,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8438,
											"end": 8441,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8434,
											"end": 8454,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8431,
											"end": 8432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8424,
											"end": 8455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 8471,
											"end": 8472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8464,
											"end": 8479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8495,
											"end": 8496,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8488,
											"end": 8503,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8649,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 8514,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8556,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8574,
											"end": 8591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 8571,
											"end": 8614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 8594,
											"end": 8612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "tag",
											"source": 1,
											"value": "786"
										},
										{
											"begin": 8594,
											"end": 8612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8642,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8630,
											"end": 8643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8630,
											"end": 8643,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8514,
											"end": 8649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8654,
											"end": 8782,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 8654,
											"end": 8782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8742,
											"end": 8753,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 8739,
											"end": 8776,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 8756,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 8756,
											"end": 8774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9111,
											"end": 9238,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 9111,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9172,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9167,
											"end": 9170,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9163,
											"end": 9183,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9161,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9153,
											"end": 9184,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9207,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9193,
											"end": 9208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9231,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9232,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9243,
											"end": 9368,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 9243,
											"end": 9368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9339,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9362,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9326,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 9326,
											"end": 9362,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 9342,
											"end": 9360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 9342,
											"end": 9360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10522,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 10151,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10353,
											"end": 10404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10440,
											"end": 10472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10435,
											"end": 10437,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10504,
											"end": 10506,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10489,
											"end": 10507,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10482,
											"end": 10516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10527,
											"end": 10772,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 10527,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10647,
											"end": 10649,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10633,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10622,
											"end": 10645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10650,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10663,
											"end": 10664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10660,
											"end": 10661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10653,
											"end": 10665,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "tag",
											"source": 1,
											"value": "799"
										},
										{
											"begin": 10615,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 10704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10689,
											"end": 10705,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 10736,
											"end": 10741,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10714,
											"end": 10742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "703"
										},
										{
											"begin": 10714,
											"end": 10742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12528,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 12360,
											"end": 12528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12433,
											"end": 12442,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12464,
											"end": 12473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12481,
											"end": 12496,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12475,
											"end": 12497,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 12498,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 12451,
											"end": 12522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "639"
										},
										{
											"begin": 12502,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 12502,
											"end": 12520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12750,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 12533,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12599,
											"end": 12600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12643,
											"end": 12653,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12638,
											"end": 12641,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12634,
											"end": 12654,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12631,
											"end": 12632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12678,
											"end": 12682,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 12675,
											"end": 12676,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12668,
											"end": 12683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12710,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12703,
											"end": 12704,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12696,
											"end": 12711,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "tag",
											"source": 1,
											"value": "810"
										},
										{
											"begin": 12589,
											"end": 12721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12735,
											"end": 12744,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12744,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12533,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13294,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 13110,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13233,
											"end": 13235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13221,
											"end": 13230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13212,
											"end": 13219,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13231,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13204,
											"end": 13236,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13246,
											"end": 13247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13239,
											"end": 13251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "tag",
											"source": 1,
											"value": "813"
										},
										{
											"begin": 13201,
											"end": 13253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13272,
											"end": 13288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13272,
											"end": 13288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13110,
											"end": 13294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13110,
											"end": 13294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13299,
											"end": 13600,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 13299,
											"end": 13600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13466,
											"end": 13472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13460,
											"end": 13473,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13512,
											"end": 13518,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13505,
											"end": 13509,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13497,
											"end": 13503,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13493,
											"end": 13510,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13488,
											"end": 13491,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13482,
											"end": 13519,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 13574,
											"end": 13575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13538,
											"end": 13554,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13538,
											"end": 13554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13563,
											"end": 13576,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13563,
											"end": 13576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13563,
											"end": 13576,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13538,
											"end": 13554,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13299,
											"end": 13600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13299,
											"end": 13600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"D85598D6EA860439B48FC265883A1CAC638FF64DCA5391FE12B46F27076E26FE": "b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9"
									}
								}
							},
							"sourceList": [
								"DripWarrior/poolContract_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addFunds(uint256,uint256)": "85f45250",
							"addOwnership(uint256)": "78fd078d",
							"addProjects(uint256)": "2765df7a",
							"addTreasuery(uint256)": "5256dbbf",
							"alreadyAdded(address)": "c7fd5bf0",
							"blockUser(address,bool)": "d9b998b4",
							"checkUpkeep(bytes)": "6e04ff0d",
							"flowToTreasuryPercentage()": "ce356a24",
							"initialize(address,address,address,address,address)": "1459457a",
							"interval()": "947a36fb",
							"lastTimeStamp()": "3f3b3b27",
							"maintainceFeePercentage()": "3a71a9e4",
							"multisigAddress()": "5462870d",
							"noOfUsers()": "01934a83",
							"odividentPayoutPercentage()": "44490ff4",
							"off()": "6626b26d",
							"owner()": "8da5cb5b",
							"ownerOne()": "f0664a4f",
							"ownerShipPoolAmount()": "b47ff951",
							"ownerTwo()": "83aa9985",
							"performUpkeep(bytes)": "4585e33b",
							"proxiableUUID()": "52d1902d",
							"reStakeTokens(uint256)": "7ffe4d93",
							"realInterval()": "30cac972",
							"renounceOwnership()": "715018a6",
							"s_forwarderAddress()": "3070fbf8",
							"setForwarderAddress(address)": "d777cc6d",
							"setInterval(uint256,uint256)": "5f17e616",
							"setTeasueryPercentages(uint256,uint256)": "ed061067",
							"setflowToTreasuryPercentage(uint256)": "ad8e5ec4",
							"setmaintainceFeePercentage(uint256)": "7f111e60",
							"setodividentPayoutPercentage(uint256)": "b9dac1eb",
							"settdividentPayoutPercentage(uint256)": "7f70c5e7",
							"stakeTokens(uint256)": "7547c7a3",
							"stakeTokensByOwner(uint256[],address[])": "34107c87",
							"startingTime()": "39518b5e",
							"tPPercentages(uint256)": "ff3d65d9",
							"tdividentPayoutPercentage()": "33244c2c",
							"totalProjects()": "9c361e4e",
							"totalStakedAmount()": "567e98f9",
							"totalUsers(uint256)": "a4f67b8b",
							"transferOwnership(address)": "f2fde38b",
							"treasuryPoolAmount()": "188e07b9",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usdcToken()": "11eac855",
							"userRegistered(address)": "bccbc36c",
							"userWithdrawAmoount(uint256)": "67976974",
							"weeklyTransfer()": "e9c68e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ArrayLengthMismatch\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addressLength\",\"type\":\"uint256\"}],\"name\":\"emptyAddresses\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountLength\",\"type\":\"uint256\"}],\"name\":\"emptyAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ownerShipPoolAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"emptyPools\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balanceAmount\",\"type\":\"uint256\"}],\"name\":\"notEnoughAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notEnoughBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"transfered\",\"type\":\"bool\"}],\"name\":\"transferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"userBlocked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wrongAddress\",\"type\":\"address\"}],\"name\":\"wrongAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"wrongAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"wrongInterval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"wrongOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentageNumber\",\"type\":\"uint256\"}],\"name\":\"wrongPerceentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"percentage\",\"type\":\"uint256\"}],\"name\":\"wrongPercentage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalStakeAmount\",\"type\":\"uint256\"}],\"name\":\"wrongPercentageAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"projectNO\",\"type\":\"uint256\"}],\"name\":\"wrongProjectNo\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"wrongTime\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"wrongValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"noOfUsers\",\"type\":\"uint256\"}],\"name\":\"zeroUsers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_projectNo\",\"type\":\"uint256\"}],\"name\":\"AddFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_ownerShipPoolAmount\",\"type\":\"uint256\"}],\"name\":\"AddOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"projectId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"OpPercentage\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tpPercentage\",\"type\":\"uint256\"}],\"name\":\"AddProject\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"AddTreasuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newPercentage\",\"type\":\"uint256\"}],\"name\":\"PercentageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_s_forwarderAddress\",\"type\":\"address\"}],\"name\":\"SetForwarderAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lastTimeStamp\",\"type\":\"uint256\"}],\"name\":\"SetInterval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recepient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"StakeTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"blockUserAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"}],\"name\":\"UserBlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ownerShipPoolAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"treasuryPoolAmount\",\"type\":\"uint256\"}],\"name\":\"WeeklyTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdcAmount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amountLength\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usersLength\",\"type\":\"uint256\"}],\"name\":\"multipleUserAddeed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_interval\",\"type\":\"uint256\"}],\"name\":\"offInterval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"}],\"name\":\"singleUserAddeed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_projectNo\",\"type\":\"uint256\"}],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tPPercentage\",\"type\":\"uint256\"}],\"name\":\"addProjects\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"addTreasuery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"alreadyAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"blockUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flowToTreasuryPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownerOne\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ownerTwo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multisigAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maintainceFeePercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multisigAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"noOfUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"odividentPayoutPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"off\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerOne\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerShipPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerTwo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reStakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"realInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_forwarderAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarderAddress\",\"type\":\"address\"}],\"name\":\"setForwarderAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updateInterval\",\"type\":\"uint256\"}],\"name\":\"setInterval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_projectId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setTeasueryPercentages\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setflowToTreasuryPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setmaintainceFeePercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"setodividentPayoutPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerccentage\",\"type\":\"uint256\"}],\"name\":\"settdividentPayoutPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amount\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"}],\"name\":\"stakeTokensByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tPPercentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tdividentPayoutPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalProjects\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStakedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryPoolAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"blocked\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiveFromTreasury\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receiveFromOwneerShip\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalStakedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"userWithdrawAmoount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weeklyTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"PoolContrcat\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1403,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "usdcToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IBEP20)1392"
							},
							{
								"astId": 1405,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "treasuryPoolAmount",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1407,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "ownerShipPoolAmount",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1409,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "totalStakedAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1411,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "tdividentPayoutPercentage",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1413,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "odividentPayoutPercentage",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1415,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "flowToTreasuryPercentage",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1417,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "maintainceFeePercentage",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1419,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "noOfUsers",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1421,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "multisigAddress",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1423,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "locked",
								"offset": 20,
								"slot": "9",
								"type": "t_bool"
							},
							{
								"astId": 1425,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "interval",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1427,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "realInterval",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1429,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "startingTime",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1431,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "lastTimeStamp",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1433,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "s_forwarderAddress",
								"offset": 0,
								"slot": "14",
								"type": "t_address"
							},
							{
								"astId": 1435,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "ownerOne",
								"offset": 0,
								"slot": "15",
								"type": "t_address"
							},
							{
								"astId": 1437,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "ownerTwo",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							},
							{
								"astId": 1452,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "totalProjects",
								"offset": 0,
								"slot": "17",
								"type": "t_uint256"
							},
							{
								"astId": 1456,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "alreadyAdded",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1460,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "totalUsers",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1464,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "tPPercentages",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1469,
								"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
								"label": "userRegistered",
								"offset": 0,
								"slot": "21",
								"type": "t_mapping(t_address,t_struct(UserRegistered)1450_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IBEP20)1392": {
								"encoding": "inplace",
								"label": "contract IBEP20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(UserRegistered)1450_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PoolContrcat.UserRegistered)",
								"numberOfBytes": "32",
								"value": "t_struct(UserRegistered)1450_storage"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(UserRegistered)1450_storage": {
								"encoding": "inplace",
								"label": "struct PoolContrcat.UserRegistered",
								"members": [
									{
										"astId": 1439,
										"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
										"label": "blocked",
										"offset": 0,
										"slot": "0",
										"type": "t_bool"
									},
									{
										"astId": 1441,
										"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
										"label": "receivedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1443,
										"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
										"label": "withdrawAmount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1445,
										"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
										"label": "receiveFromTreasury",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1447,
										"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
										"label": "receiveFromOwneerShip",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1449,
										"contract": "DripWarrior/poolContract_flattened.sol:PoolContrcat",
										"label": "totalStakedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DripWarrior/poolContract_flattened.sol\":23073:25758  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"DripWarrior/poolContract_flattened.sol\":23073:25758  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207a29bf63034752fe2b42d9c1e44aa49a273ca627a254f7e9b8fd0e04c4bf552d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207a29bf63034752fe2b42d9c1e44aa49a273ca627a254f7e9b8fd0e04c4bf552d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x29BF63034752FE2B42D9C1E44AA49A273CA627A254F7E9B8FD0E04 0xC4 0xBF SSTORE 0x2D PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "23073:2685:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;23073:2685:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212207a29bf63034752fe2b42d9c1e44aa49a273ca627a254f7e9b8fd0e04c4bf552d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x29BF63034752FE2B42D9C1E44AA49A273CA627A254F7E9B8FD0E04 0xC4 0xBF SSTORE 0x2D PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "23073:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23073,
									"end": 25758,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207a29bf63034752fe2b42d9c1e44aa49a273ca627a254f7e9b8fd0e04c4bf552d64736f6c634300081a0033",
									".code": [
										{
											"begin": 23073,
											"end": 25758,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23073,
											"end": 25758,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"DripWarrior/poolContract_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DripWarrior/poolContract_flattened.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"DripWarrior/poolContract_flattened.sol\":{\"keccak256\":\"0x651b4a6f18e2f2117213d53fa4b5616f1cd8ede36757d192a45dbc46b954ecd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743146e2b22d1ce3e9bd27fd75a515e79e46e487c113af8a35ce36917a9eb4dc\",\"dweb:/ipfs/QmeXN22bGfEJq3TSjovX23ojZNC38NeyapYVteaqt1kkSn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"DripWarrior/poolContract_flattened.sol": {
				"ast": {
					"absolutePath": "DripWarrior/poolContract_flattened.sol",
					"exportedSymbols": {
						"Address": [
							756
						],
						"AutomationCompatibleInterface": [
							1354
						],
						"ContextUpgradeable": [
							296
						],
						"ERC1967Utils": [
							1161
						],
						"IBEP20": [
							1392
						],
						"IBeacon": [
							504
						],
						"IERC1822Proxiable": [
							495
						],
						"Initializable": [
							253
						],
						"OwnableUpgradeable": [
							486
						],
						"PoolContrcat": [
							2974
						],
						"StorageSlot": [
							865
						],
						"UUPSUpgradeable": [
							1336
						]
					},
					"id": 2975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "190:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "216:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 253,
							"linearizedBaseContracts": [
								253
							],
							"name": "Initializable",
							"nameLocation": "2444:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2464:293:0",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 10,
									"members": [
										{
											"constant": false,
											"id": 6,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2897:12:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "2890:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 5,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2890:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "3032:13:0",
											"nodeType": "VariableDeclaration",
											"scope": 10,
											"src": "3027:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 8,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3027:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2769:20:0",
									"nodeType": "StructDefinition",
									"scope": 253,
									"src": "2762:290:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 13,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3200:21:0",
									"nodeType": "VariableDeclaration",
									"scope": 253,
									"src": "3175:115:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 11,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3175:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3224:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "3297:60:0",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 16,
									"name": "InvalidInitialization",
									"nameLocation": "3368:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3389:2:0"
									},
									"src": "3362:30:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "3398:57:0",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 19,
									"name": "NotInitializing",
									"nameLocation": "3466:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:2:0"
									},
									"src": "3460:24:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "3490:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 24,
									"name": "Initialized",
									"nameLocation": "3591:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "3603:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 21,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3603:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:16:0"
									},
									"src": "3585:34:0"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "4169:1081:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4264:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4235:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 28,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 27,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4235:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "4235:20:0"
															},
															"referencedDeclaration": 10,
															"src": "4235:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 32,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 30,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "4268:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 31,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4268:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4235:59:0"
											},
											{
												"assignments": [
													34
												],
												"declarations": [
													{
														"constant": false,
														"id": 34,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4361:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4356:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 33,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4356:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 38,
												"initialValue": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4378:16:0",
													"subExpression": {
														"expression": {
															"id": 35,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4379:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4381:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "4379:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4356:38:0"
											},
											{
												"assignments": [
													40
												],
												"declarations": [
													{
														"constant": false,
														"id": 40,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4411:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4404:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 39,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 43,
												"initialValue": {
													"expression": {
														"id": 41,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "4425:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4427:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "4425:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4404:35:0"
											},
											{
												"assignments": [
													45
												],
												"declarations": [
													{
														"constant": false,
														"id": 45,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4788:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4783:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 44,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4783:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 51,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 48,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 46,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4803:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4818:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4803:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 49,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "4823:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4803:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4783:54:0"
											},
											{
												"assignments": [
													53
												],
												"declarations": [
													{
														"constant": false,
														"id": 53,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4852:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 106,
														"src": "4847:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 52,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4847:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 54,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "4867:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4882:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4867:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 64,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 59,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4895:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$253",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 57,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4887:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 60,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4887:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4901:4:0",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4887:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4906:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4887:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4916:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4887:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4867:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4847:70:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4932:13:0",
														"subExpression": {
															"id": 67,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4933:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4949:13:0",
														"subExpression": {
															"id": 69,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "4950:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4932:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 76,
												"nodeType": "IfStatement",
												"src": "4928:91:0",
												"trueBody": {
													"id": 75,
													"nodeType": "Block",
													"src": "4964:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 72,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4985:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4985:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 74,
															"nodeType": "RevertStatement",
															"src": "4978:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 77,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "5028:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5030:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "5028:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5045:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5028:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "5028:18:0"
											},
											{
												"condition": {
													"id": 83,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5060:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 91,
												"nodeType": "IfStatement",
												"src": "5056:67:0",
												"trueBody": {
													"id": 90,
													"nodeType": "Block",
													"src": "5076:47:0",
													"statements": [
														{
															"expression": {
																"id": 88,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 84,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5090:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 86,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5092:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5090:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 87,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5108:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5090:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 89,
															"nodeType": "ExpressionStatement",
															"src": "5090:22:0"
														}
													]
												}
											},
											{
												"id": 92,
												"nodeType": "PlaceholderStatement",
												"src": "5132:1:0"
											},
											{
												"condition": {
													"id": 93,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 34,
													"src": "5147:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "IfStatement",
												"src": "5143:101:0",
												"trueBody": {
													"id": 104,
													"nodeType": "Block",
													"src": "5163:81:0",
													"statements": [
														{
															"expression": {
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 94,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 29,
																		"src": "5177:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 96,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5179:13:0",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "5177:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5195:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5177:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 99,
															"nodeType": "ExpressionStatement",
															"src": "5177:23:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5231:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 100,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "5219:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5219:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 103,
															"nodeType": "EmitStatement",
															"src": "5214:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3625:516:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 107,
									"name": "initializer",
									"nameLocation": "4155:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4166:2:0"
									},
									"src": "4146:1104:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "6368:392:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6463:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 153,
														"src": "6434:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 113,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 112,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6434:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "6434:20:0"
															},
															"referencedDeclaration": 10,
															"src": "6434:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 117,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 115,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6467:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6434:59:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 118,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6508:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6510:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6508:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 120,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "6527:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 121,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6529:12:0",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "6527:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 122,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6545:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6527:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6508:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "6504:105:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "6554:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 125,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "6575:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6575:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 127,
															"nodeType": "RevertStatement",
															"src": "6568:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 130,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6618:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 132,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "6618:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 133,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 110,
														"src": "6635:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6618:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6618:24:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 136,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6652:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6654:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6652:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6670:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6652:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "6652:22:0"
											},
											{
												"id": 142,
												"nodeType": "PlaceholderStatement",
												"src": "6684:1:0"
											},
											{
												"expression": {
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 143,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "6695:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6697:13:0",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "6695:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6695:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "6695:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 150,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "6745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 149,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "6733:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6733:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "6728:25:0"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "5256:1068:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 154,
									"name": "reinitializer",
									"nameLocation": "6338:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6359:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "6352:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 109,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6352:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6351:16:0"
									},
									"src": "6329:431:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "6998:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 157,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "7008:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7008:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "7008:20:0"
											},
											{
												"id": 160,
												"nodeType": "PlaceholderStatement",
												"src": "7038:1:0"
											}
										]
									},
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "6766:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 162,
									"name": "onlyInitializing",
									"nameLocation": "6979:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6995:2:0"
									},
									"src": "6970:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "7213:89:0",
										"statements": [
											{
												"condition": {
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7227:18:0",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 166,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7228:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 167,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7228:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 173,
												"nodeType": "IfStatement",
												"src": "7223:73:0",
												"trueBody": {
													"id": 172,
													"nodeType": "Block",
													"src": "7247:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "7268:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7268:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 171,
															"nodeType": "RevertStatement",
															"src": "7261:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "7052:104:0",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7170:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7188:2:0"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7213:0:0"
									},
									"scope": 253,
									"src": "7161:141:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "7837:373:0",
										"statements": [
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7932:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "7903:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 180,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 179,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7903:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 10,
																"src": "7903:20:0"
															},
															"referencedDeclaration": 10,
															"src": "7903:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 182,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "7936:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7936:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7903:59:0"
											},
											{
												"condition": {
													"expression": {
														"id": 185,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "7977:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7979:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "7977:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "IfStatement",
												"src": "7973:76:0",
												"trueBody": {
													"id": 190,
													"nodeType": "Block",
													"src": "7994:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8015:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8015:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 189,
															"nodeType": "RevertStatement",
															"src": "8008:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 192,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "8062:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8064:12:0",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 6,
														"src": "8062:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8085:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 195,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8085:6:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 194,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8080:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8080:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8093:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8080:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "8062:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "8058:146:0",
												"trueBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "8098:106:0",
													"statements": [
														{
															"expression": {
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 200,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "8112:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8114:12:0",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 6,
																	"src": "8112:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 205,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8134:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 204,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8134:6:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 203,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8129:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8129:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8142:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8129:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8112:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 209,
															"nodeType": "ExpressionStatement",
															"src": "8112:33:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8181:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 212,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8181:6:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 211,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8176:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8176:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8189:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8176:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 210,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 24,
																	"src": "8164:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8164:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 217,
															"nodeType": "EmitStatement",
															"src": "8159:34:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "7308:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7797:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7817:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7837:0:0"
									},
									"scope": 253,
									"src": "7788:422:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "8385:63:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 227,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8402:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8402:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8429:12:0",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 6,
													"src": "8402:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 226,
												"id": 230,
												"nodeType": "Return",
												"src": "8395:46:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "8216:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8329:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8351:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "8377:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 224,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8377:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8376:8:0"
									},
									"scope": 253,
									"src": "8320:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "8620:64:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 238,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "8637:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$10_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8637:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8664:13:0",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 9,
													"src": "8637:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 237,
												"id": 241,
												"nodeType": "Return",
												"src": "8630:47:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "8454:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8573:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8588:2:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 243,
												"src": "8614:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8614:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8613:6:0"
									},
									"scope": 253,
									"src": "8564:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "8904:80:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8923:55:0",
													"nodeType": "YulBlock",
													"src": "8923:55:0",
													"statements": [
														{
															"nativeSrc": "8937:31:0",
															"nodeType": "YulAssignment",
															"src": "8937:31:0",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8947:21:0",
																"nodeType": "YulIdentifier",
																"src": "8947:21:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8937:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "8937:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 248,
														"isOffset": false,
														"isSlot": true,
														"src": "8937:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 13,
														"isOffset": false,
														"isSlot": false,
														"src": "8947:21:0",
														"valueSize": 1
													}
												],
												"id": 250,
												"nodeType": "InlineAssembly",
												"src": "8914:64:0"
											}
										]
									},
									"documentation": {
										"id": 244,
										"nodeType": "StructuredDocumentation",
										"src": "8690:67:0",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8823:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8847:2:0"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8901:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "8872:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 246,
														"name": "InitializableStorage",
														"nameLocations": [
															"8872:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8872:20:0"
													},
													"referencedDeclaration": 10,
													"src": "8872:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$10_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8871:32:0"
									},
									"scope": 253,
									"src": "8814:170:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2975,
							"src": "2426:6560:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						},
						{
							"id": 254,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "9133:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 256,
										"name": "Initializable",
										"nameLocations": [
											"9697:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "9697:13:0"
									},
									"id": 257,
									"nodeType": "InheritanceSpecifier",
									"src": "9697:13:0"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 255,
								"nodeType": "StructuredDocumentation",
								"src": "9160:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								253
							],
							"name": "ContextUpgradeable",
							"nameLocation": "9675:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "9769:7:0",
										"statements": []
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 260,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 259,
												"name": "onlyInitializing",
												"nameLocations": [
													"9752:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "9752:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9752:16:0"
										}
									],
									"name": "__Context_init",
									"nameLocation": "9726:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9740:2:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9769:0:0"
									},
									"scope": 296,
									"src": "9717:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "9844:7:0",
										"statements": []
									},
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 265,
												"name": "onlyInitializing",
												"nameLocations": [
													"9827:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "9827:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9827:16:0"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "9791:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9815:2:0"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9844:0:0"
									},
									"scope": 296,
									"src": "9782:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "9918:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 274,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9935:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "9939:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9935:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 273,
												"id": 276,
												"nodeType": "Return",
												"src": "9928:17:0"
											}
										]
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "9865:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9875:2:0"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "9909:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9909:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9908:9:0"
									},
									"scope": 296,
									"src": "9856:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "10025:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 283,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "10042:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "10046:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "10042:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 282,
												"id": 285,
												"nodeType": "Return",
												"src": "10035:15:0"
											}
										]
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "9967:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9975:2:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "10009:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 280,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10009:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10008:16:0"
									},
									"scope": 296,
									"src": "9958:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "10135:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10152:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "10145:8:0"
											}
										]
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "10072:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10092:2:0"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "10126:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10125:9:0"
									},
									"scope": 296,
									"src": "10063:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2975,
							"src": "9657:505:0",
							"usedErrors": [
								16,
								19
							],
							"usedEvents": [
								24
							]
						},
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10311:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 299,
										"name": "Initializable",
										"nameLocations": [
											"10867:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "10867:13:0"
									},
									"id": 300,
									"nodeType": "InheritanceSpecifier",
									"src": "10867:13:0"
								},
								{
									"baseName": {
										"id": 301,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"10882:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "10882:18:0"
									},
									"id": 302,
									"nodeType": "InheritanceSpecifier",
									"src": "10882:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "10339:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 486,
							"linearizedBaseContracts": [
								486,
								296,
								253
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "10845:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "10907:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 306,
									"members": [
										{
											"constant": false,
											"id": 305,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "11017:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 306,
											"src": "11009:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 304,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11009:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "10984:14:0",
									"nodeType": "StructDefinition",
									"scope": 486,
									"src": "10977:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 309,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "11172:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 486,
									"src": "11147:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 307,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "11147:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 308,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "11197:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "11348:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "11367:56:0",
													"nodeType": "YulBlock",
													"src": "11367:56:0",
													"statements": [
														{
															"nativeSrc": "11381:32:0",
															"nodeType": "YulAssignment",
															"src": "11381:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "11391:22:0",
																"nodeType": "YulIdentifier",
																"src": "11391:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "11381:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "11381:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 313,
														"isOffset": false,
														"isSlot": true,
														"src": "11381:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 309,
														"isOffset": false,
														"isSlot": false,
														"src": "11391:22:0",
														"valueSize": 1
													}
												],
												"id": 315,
												"nodeType": "InlineAssembly",
												"src": "11358:65:0"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "11279:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11297:2:0"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "11345:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "11322:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 311,
														"name": "OwnableStorage",
														"nameLocations": [
															"11322:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 306,
														"src": "11322:14:0"
													},
													"referencedDeclaration": 306,
													"src": "11322:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11321:26:0"
									},
									"scope": 486,
									"src": "11270:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "11435:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 322,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "11531:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "11558:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11558:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:17:0"
									},
									"src": "11525:50:0"
								},
								{
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "11581:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 327,
									"name": "OwnableInvalidOwner",
									"nameLocation": "11674:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11702:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "11694:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11693:15:0"
									},
									"src": "11668:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 333,
									"name": "OwnershipTransferred",
									"nameLocation": "11721:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "11758:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "11742:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11742:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "11789:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "11773:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11741:57:0"
									},
									"src": "11715:84:0"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "11997:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 342,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "12032:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 341,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "12007:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12007:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "12007:38:0"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "11805:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 338,
												"name": "onlyInitializing",
												"nameLocations": [
													"11980:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "11980:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11980:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "11934:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "11957:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "11949:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 335,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11949:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11948:22:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11997:0:0"
									},
									"scope": 486,
									"src": "11925:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "12140:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 353,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "12154:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12170:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 354,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12170:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12170:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12154:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 367,
												"nodeType": "IfStatement",
												"src": "12150:95:0",
												"trueBody": {
													"id": 366,
													"nodeType": "Block",
													"src": "12182:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12231:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12223:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 360,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12223:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12223:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 359,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "12203:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12203:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 365,
															"nodeType": "RevertStatement",
															"src": "12196:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "12273:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 368,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "12254:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12254:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "12254:32:0"
											}
										]
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 351,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 350,
												"name": "onlyInitializing",
												"nameLocations": [
													"12123:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "12123:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12123:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "12067:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "12100:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "12092:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12091:22:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12140:0:0"
									},
									"scope": 486,
									"src": "12058:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "12402:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 376,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "12412:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12412:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "12412:13:0"
											},
											{
												"id": 379,
												"nodeType": "PlaceholderStatement",
												"src": "12435:1:0"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "12299:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 381,
									"name": "onlyOwner",
									"nameLocation": "12390:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12399:2:0"
									},
									"src": "12381:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "12574:89:0",
										"statements": [
											{
												"assignments": [
													389
												],
												"declarations": [
													{
														"constant": false,
														"id": 389,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "12607:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 396,
														"src": "12584:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 388,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 387,
																"name": "OwnableStorage",
																"nameLocations": [
																	"12584:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 306,
																"src": "12584:14:0"
															},
															"referencedDeclaration": 306,
															"src": "12584:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 392,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 390,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "12611:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$306_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12611:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12584:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 393,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 389,
														"src": "12648:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12650:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 305,
													"src": "12648:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 386,
												"id": 395,
												"nodeType": "Return",
												"src": "12641:15:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "12449:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "12528:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12533:2:0"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "12565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12565:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12564:9:0"
									},
									"scope": 486,
									"src": "12519:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "12781:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "12795:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12795:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 403,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 278,
															"src": "12806:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12806:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12795:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 412,
												"nodeType": "IfStatement",
												"src": "12791:101:0",
												"trueBody": {
													"id": 411,
													"nodeType": "Block",
													"src": "12820:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 407,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 278,
																			"src": "12868:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 408,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12868:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 406,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "12841:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12841:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 410,
															"nodeType": "RevertStatement",
															"src": "12834:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "12669:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "12745:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12756:2:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12781:0:0"
									},
									"scope": 486,
									"src": "12736:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "13287:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13324:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 421,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13316:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13316:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 420,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "13297:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13297:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "13297:30:0"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "12904:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 417,
												"name": "onlyOwner",
												"nameLocations": [
													"13277:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 381,
												"src": "13277:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13277:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "13242:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13259:2:0"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13287:0:0"
									},
									"scope": 486,
									"src": "13233:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "13553:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 436,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "13567:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13587:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13579:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 437,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "13579:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13579:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13567:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "13563:91:0",
												"trueBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "13591:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13640:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "13632:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 443,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "13632:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13632:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 442,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "13612:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13612:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 448,
															"nodeType": "RevertStatement",
															"src": "13605:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 452,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "13682:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 451,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "13663:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13663:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "13663:28:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "13340:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 434,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 433,
												"name": "onlyOwner",
												"nameLocations": [
													"13543:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 381,
												"src": "13543:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13543:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "13492:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "13518:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "13510:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13509:18:0"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13553:0:0"
									},
									"scope": 486,
									"src": "13483:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "13915:185:0",
										"statements": [
											{
												"assignments": [
													464
												],
												"declarations": [
													{
														"constant": false,
														"id": 464,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "13948:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "13925:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 463,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 462,
																"name": "OwnableStorage",
																"nameLocations": [
																	"13925:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 306,
																"src": "13925:14:0"
															},
															"referencedDeclaration": 306,
															"src": "13925:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 467,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 465,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "13952:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$306_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13952:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13925:47:0"
											},
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "13990:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "13982:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 468,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "13982:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"expression": {
														"id": 470,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "14001:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14003:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 305,
													"src": "14001:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13982:27:0"
											},
											{
												"expression": {
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 473,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "14019:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$306_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14021:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 305,
														"src": "14019:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 476,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "14030:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14019:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "14019:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 480,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "14074:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 481,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "14084:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 479,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "14053:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14053:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 483,
												"nodeType": "EmitStatement",
												"src": "14048:45:0"
											}
										]
									},
									"documentation": {
										"id": 457,
										"nodeType": "StructuredDocumentation",
										"src": "13704:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "13861:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "13888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "13880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13879:18:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13915:0:0"
									},
									"scope": 486,
									"src": "13852:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2975,
							"src": "10827:3275:0",
							"usedErrors": [
								16,
								19,
								322,
								327
							],
							"usedEvents": [
								24,
								333
							]
						},
						{
							"id": 487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "14250:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 488,
								"nodeType": "StructuredDocumentation",
								"src": "14276:203:0",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 495,
							"linearizedBaseContracts": [
								495
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "14490:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "14514:438:0",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "14966:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14979:2:0"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "15005:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 491,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15004:9:0"
									},
									"scope": 495,
									"src": "14957:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2975,
							"src": "14480:536:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 496,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "15154:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 497,
								"nodeType": "StructuredDocumentation",
								"src": "15180:79:0",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 504,
							"linearizedBaseContracts": [
								504
							],
							"name": "IBeacon",
							"nameLocation": "15270:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "15284:168:0",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 503,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "15466:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15480:2:0"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "15506:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15505:9:0"
									},
									"scope": 504,
									"src": "15457:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2975,
							"src": "15260:257:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 505,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "15641:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 506,
								"nodeType": "StructuredDocumentation",
								"src": "15667:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 756,
							"linearizedBaseContracts": [
								756
							],
							"name": "Address",
							"nameLocation": "15743:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "15757:94:0",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 511,
									"name": "AddressInsufficientBalance",
									"nameLocation": "15862:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15897:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "15889:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15888:17:0"
									},
									"src": "15856:50:0"
								},
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "15912:75:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 516,
									"name": "AddressEmptyCode",
									"nameLocation": "15998:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16023:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "16015:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16015:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16014:16:0"
									},
									"src": "15992:39:0"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "16037:89:0",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 519,
									"name": "FailedInnerCall",
									"nameLocation": "16137:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16152:2:0"
									},
									"src": "16131:24:0"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "17142:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 529,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17164:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$756",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$756",
																		"typeString": "library Address"
																	}
																],
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17156:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 527,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17156:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17156:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17170:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "17156:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 532,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "17180:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17156:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 542,
												"nodeType": "IfStatement",
												"src": "17152:109:0",
												"trueBody": {
													"id": 541,
													"nodeType": "Block",
													"src": "17188:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 537,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "17244:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$756",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$756",
																					"typeString": "library Address"
																				}
																			],
																			"id": 536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "17236:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 535,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "17236:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17236:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 534,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "17209:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17209:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 540,
															"nodeType": "RevertStatement",
															"src": "17202:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													544,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17277:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 559,
														"src": "17272:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17272:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 551,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17320:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 545,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "17290:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17300:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "17290:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 547,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "17312:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "17290:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17290:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17271:52:0"
											},
											{
												"condition": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "17337:8:0",
													"subExpression": {
														"id": 552,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "17338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "17333:63:0",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "17347:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 554,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "17368:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17368:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 556,
															"nodeType": "RevertStatement",
															"src": "17361:24:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "16161:905:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "17080:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17106:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "17090:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17090:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17125:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "17117:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17089:43:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17142:0:0"
									},
									"scope": 756,
									"src": "17071:331:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "18334:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 571,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "18373:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "18381:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18387:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 570,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 623,
														"src": "18351:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18351:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 569,
												"id": 575,
												"nodeType": "Return",
												"src": "18344:45:0"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "17408:832:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "18254:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "18275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "18267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18296:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "18283:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18283:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18266:35:0"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "18320:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 567,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18320:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18319:14:0"
									},
									"scope": 756,
									"src": "18245:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "18833:279:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 591,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$756",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$756",
																		"typeString": "library Address"
																	}
																],
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18847:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18847:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "18861:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "18847:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 594,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "18871:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18847:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "18843:108:0",
												"trueBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "18878:73:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 599,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "18934:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$756",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$756",
																					"typeString": "library Address"
																				}
																			],
																			"id": 598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18926:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 597,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18926:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18926:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 596,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "18899:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18899:41:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 602,
															"nodeType": "RevertStatement",
															"src": "18892:48:0"
														}
													]
												}
											},
											{
												"assignments": [
													606,
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "18966:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "18961:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 605,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "18961:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "18988:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "18975:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 607,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "18975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 615,
												"initialValue": {
													"arguments": [
														{
															"id": 613,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "19028:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 609,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 580,
																"src": "19002:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "19009:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "19002:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 611,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "19021:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "19002:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19002:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18960:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 617,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 580,
															"src": "19077:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "19085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 619,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "19094:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 616,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "19050:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19050:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 588,
												"id": 621,
												"nodeType": "Return",
												"src": "19043:62:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "18402:313:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "18729:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "18759:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "18751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18780:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "18767:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18767:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18794:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "18786:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18750:50:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "18819:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18819:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18818:14:0"
									},
									"scope": 756,
									"src": "18720:392:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "19351:154:0",
										"statements": [
											{
												"assignments": [
													634,
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "19367:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "19362:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 633,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19362:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19389:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 648,
														"src": "19376:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 635,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19376:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 641,
												"initialValue": {
													"arguments": [
														{
															"id": 639,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "19421:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 637,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "19403:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19410:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "19403:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19403:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19361:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "19470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "19478:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 645,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "19487:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 642,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "19443:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19443:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 632,
												"id": 647,
												"nodeType": "Return",
												"src": "19436:62:0"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "19118:128:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "19260:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19287:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "19279:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19308:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "19295:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 627,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19295:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19278:35:0"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "19337:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19336:14:0"
									},
									"scope": 756,
									"src": "19251:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "19743:156:0",
										"statements": [
											{
												"assignments": [
													660,
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 660,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "19759:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "19754:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 659,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "19754:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "19781:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 674,
														"src": "19768:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 661,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "19768:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 667,
												"initialValue": {
													"arguments": [
														{
															"id": 665,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "19815:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 663,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "19795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "19802:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "19795:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19795:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19753:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 669,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "19864:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "19872:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 671,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "19881:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 668,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "19837:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19837:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 658,
												"id": 673,
												"nodeType": "Return",
												"src": "19830:62:0"
											}
										]
									},
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "19511:130:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "19655:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "19684:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19692:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 653,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19692:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19675:35:0"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "19729:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 656,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19729:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19728:14:0"
									},
									"scope": 756,
									"src": "19646:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "20323:424:0",
										"statements": [
											{
												"condition": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "20337:8:0",
													"subExpression": {
														"id": 687,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "20338:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "20397:344:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 694,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "20585:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20596:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "20585:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 696,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20606:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "20585:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 698,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 678,
																				"src": "20611:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "20618:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "20611:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "20623:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "20611:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20633:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "20611:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "20585:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 709,
															"nodeType": "IfStatement",
															"src": "20581:119:0",
															"trueBody": {
																"id": 708,
																"nodeType": "Block",
																"src": "20636:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 705,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "20678:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 704,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "20661:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20661:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 707,
																		"nodeType": "RevertStatement",
																		"src": "20654:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 710,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 682,
																"src": "20720:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 686,
															"id": 711,
															"nodeType": "Return",
															"src": "20713:17:0"
														}
													]
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "20333:408:0",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "20347:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 690,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 682,
																		"src": "20369:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 689,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "20361:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20361:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 692,
															"nodeType": "ExpressionStatement",
															"src": "20361:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "19905:255:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "20174:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "20218:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "20210:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20210:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "20239:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "20234:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 679,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "20269:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "20256:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 681,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20200:85:0"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "20309:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 684,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20308:14:0"
									},
									"scope": 756,
									"src": "20165:582:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "21049:122:0",
										"statements": [
											{
												"condition": {
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "21063:8:0",
													"subExpression": {
														"id": 725,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "21064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 734,
													"nodeType": "Block",
													"src": "21123:42:0",
													"statements": [
														{
															"expression": {
																"id": 732,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "21144:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 724,
															"id": 733,
															"nodeType": "Return",
															"src": "21137:17:0"
														}
													]
												},
												"id": 735,
												"nodeType": "IfStatement",
												"src": "21059:106:0",
												"trueBody": {
													"id": 731,
													"nodeType": "Block",
													"src": "21073:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 728,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "21095:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 727,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "21087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21087:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 730,
															"nodeType": "ExpressionStatement",
															"src": "21087:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "20753:189:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "20956:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "20978:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "20973:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 717,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "21000:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "20987:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20987:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20972:39:0"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "21035:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21035:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21034:14:0"
									},
									"scope": 756,
									"src": "20947:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "21338:461:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 743,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 740,
															"src": "21414:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21425:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "21414:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21414:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 752,
													"nodeType": "Block",
													"src": "21744:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 749,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "21765:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21765:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 751,
															"nodeType": "RevertStatement",
															"src": "21758:24:0"
														}
													]
												},
												"id": 753,
												"nodeType": "IfStatement",
												"src": "21410:383:0",
												"trueBody": {
													"id": 748,
													"nodeType": "Block",
													"src": "21437:301:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "21595:133:0",
																"nodeType": "YulBlock",
																"src": "21595:133:0",
																"statements": [
																	{
																		"nativeSrc": "21613:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "21613:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "21642:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "21642:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "21636:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "21636:5:0"
																			},
																			"nativeSrc": "21636:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "21636:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "21617:15:0",
																				"nodeType": "YulTypedName",
																				"src": "21617:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "21681:2:0",
																							"nodeType": "YulLiteral",
																							"src": "21681:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "21685:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "21685:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "21677:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "21677:3:0"
																					},
																					"nativeSrc": "21677:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "21677:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "21698:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "21698:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "21670:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "21670:6:0"
																			},
																			"nativeSrc": "21670:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "21670:44:0"
																		},
																		"nativeSrc": "21670:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "21670:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 740,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "21642:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 740,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "21685:10:0",
																	"valueSize": 1
																}
															],
															"id": 747,
															"nodeType": "InlineAssembly",
															"src": "21586:142:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "21177:101:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "21292:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "21313:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "21300:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "21300:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21299:25:0"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21338:0:0"
									},
									"scope": 756,
									"src": "21283:516:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2975,
							"src": "15735:6066:0",
							"usedErrors": [
								511,
								516,
								519
							],
							"usedEvents": []
						},
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22021:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "22047:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 865,
							"linearizedBaseContracts": [
								865
							],
							"name": "StorageSlot",
							"nameLocation": "23081:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 761,
									"members": [
										{
											"constant": false,
											"id": 760,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23136:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 761,
											"src": "23128:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 759,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "23128:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "23106:11:0",
									"nodeType": "StructDefinition",
									"scope": 865,
									"src": "23099:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 764,
									"members": [
										{
											"constant": false,
											"id": 763,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23188:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 764,
											"src": "23183:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 762,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "23183:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "23161:11:0",
									"nodeType": "StructDefinition",
									"scope": 865,
									"src": "23154:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 767,
									"members": [
										{
											"constant": false,
											"id": 766,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23243:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 767,
											"src": "23235:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 765,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "23235:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "23213:11:0",
									"nodeType": "StructDefinition",
									"scope": 865,
									"src": "23206:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 770,
									"members": [
										{
											"constant": false,
											"id": 769,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23298:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 770,
											"src": "23290:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 768,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23290:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "23268:11:0",
									"nodeType": "StructDefinition",
									"scope": 865,
									"src": "23261:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 773,
									"members": [
										{
											"constant": false,
											"id": 772,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23351:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 773,
											"src": "23344:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 771,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "23344:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "23323:10:0",
									"nodeType": "StructDefinition",
									"scope": 865,
									"src": "23316:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 776,
									"members": [
										{
											"constant": false,
											"id": 775,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23402:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 776,
											"src": "23396:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 774,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "23396:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "23376:9:0",
									"nodeType": "StructDefinition",
									"scope": 865,
									"src": "23369:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 786,
										"nodeType": "Block",
										"src": "23596:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "23658:38:0",
													"nodeType": "YulBlock",
													"src": "23658:38:0",
													"statements": [
														{
															"nativeSrc": "23672:14:0",
															"nodeType": "YulAssignment",
															"src": "23672:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "23682:4:0",
																"nodeType": "YulIdentifier",
																"src": "23682:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "23672:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "23672:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 783,
														"isOffset": false,
														"isSlot": true,
														"src": "23672:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 779,
														"isOffset": false,
														"isSlot": false,
														"src": "23682:4:0",
														"valueSize": 1
													}
												],
												"id": 785,
												"nodeType": "InlineAssembly",
												"src": "23649:47:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "23420:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "23521:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "23544:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "23536:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 778,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23535:14:0"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "23593:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "23573:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 782,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 781,
														"name": "AddressSlot",
														"nameLocations": [
															"23573:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 761,
														"src": "23573:11:0"
													},
													"referencedDeclaration": 761,
													"src": "23573:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23572:23:0"
									},
									"scope": 865,
									"src": "23512:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "23884:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "23946:38:0",
													"nodeType": "YulBlock",
													"src": "23946:38:0",
													"statements": [
														{
															"nativeSrc": "23960:14:0",
															"nodeType": "YulAssignment",
															"src": "23960:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "23970:4:0",
																"nodeType": "YulIdentifier",
																"src": "23970:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "23960:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "23960:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 794,
														"isOffset": false,
														"isSlot": true,
														"src": "23960:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 790,
														"isOffset": false,
														"isSlot": false,
														"src": "23970:4:0",
														"valueSize": 1
													}
												],
												"id": 796,
												"nodeType": "InlineAssembly",
												"src": "23937:47:0"
											}
										]
									},
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "23708:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "23809:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "23832:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23824:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 789,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23823:14:0"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "23881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "23861:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$764_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 793,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 792,
														"name": "BooleanSlot",
														"nameLocations": [
															"23861:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 764,
														"src": "23861:11:0"
													},
													"referencedDeclaration": 764,
													"src": "23861:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$764_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23860:23:0"
									},
									"scope": 865,
									"src": "23800:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "24172:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "24234:38:0",
													"nodeType": "YulBlock",
													"src": "24234:38:0",
													"statements": [
														{
															"nativeSrc": "24248:14:0",
															"nodeType": "YulAssignment",
															"src": "24248:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "24258:4:0",
																"nodeType": "YulIdentifier",
																"src": "24258:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "24248:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "24248:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 805,
														"isOffset": false,
														"isSlot": true,
														"src": "24248:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 801,
														"isOffset": false,
														"isSlot": false,
														"src": "24258:4:0",
														"valueSize": 1
													}
												],
												"id": 807,
												"nodeType": "InlineAssembly",
												"src": "24225:47:0"
											}
										]
									},
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "23996:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "24097:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "24120:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "24112:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 800,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24112:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24111:14:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24169:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "24149:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$767_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 804,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 803,
														"name": "Bytes32Slot",
														"nameLocations": [
															"24149:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 767,
														"src": "24149:11:0"
													},
													"referencedDeclaration": 767,
													"src": "24149:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$767_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24148:23:0"
									},
									"scope": 865,
									"src": "24088:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "24460:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "24522:38:0",
													"nodeType": "YulBlock",
													"src": "24522:38:0",
													"statements": [
														{
															"nativeSrc": "24536:14:0",
															"nodeType": "YulAssignment",
															"src": "24536:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "24546:4:0",
																"nodeType": "YulIdentifier",
																"src": "24546:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "24536:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "24536:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 816,
														"isOffset": false,
														"isSlot": true,
														"src": "24536:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 812,
														"isOffset": false,
														"isSlot": false,
														"src": "24546:4:0",
														"valueSize": 1
													}
												],
												"id": 818,
												"nodeType": "InlineAssembly",
												"src": "24513:47:0"
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "24284:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "24385:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "24408:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24400:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 811,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24399:14:0"
									},
									"returnParameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24457:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "24437:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$770_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 814,
														"name": "Uint256Slot",
														"nameLocations": [
															"24437:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 770,
														"src": "24437:11:0"
													},
													"referencedDeclaration": 770,
													"src": "24437:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$770_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24436:23:0"
									},
									"scope": 865,
									"src": "24376:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "24745:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "24807:38:0",
													"nodeType": "YulBlock",
													"src": "24807:38:0",
													"statements": [
														{
															"nativeSrc": "24821:14:0",
															"nodeType": "YulAssignment",
															"src": "24821:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "24831:4:0",
																"nodeType": "YulIdentifier",
																"src": "24831:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "24821:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "24821:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 827,
														"isOffset": false,
														"isSlot": true,
														"src": "24821:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 823,
														"isOffset": false,
														"isSlot": false,
														"src": "24831:4:0",
														"valueSize": 1
													}
												],
												"id": 829,
												"nodeType": "InlineAssembly",
												"src": "24798:47:0"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "24572:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "24672:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "24694:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24686:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 822,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24685:14:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24742:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "24723:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$773_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 826,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 825,
														"name": "StringSlot",
														"nameLocations": [
															"24723:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 773,
														"src": "24723:10:0"
													},
													"referencedDeclaration": 773,
													"src": "24723:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$773_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24722:22:0"
									},
									"scope": 865,
									"src": "24663:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "25053:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "25115:44:0",
													"nodeType": "YulBlock",
													"src": "25115:44:0",
													"statements": [
														{
															"nativeSrc": "25129:20:0",
															"nodeType": "YulAssignment",
															"src": "25129:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "25139:10:0",
																"nodeType": "YulIdentifier",
																"src": "25139:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "25129:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "25129:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 838,
														"isOffset": false,
														"isSlot": true,
														"src": "25129:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 834,
														"isOffset": false,
														"isSlot": true,
														"src": "25139:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 840,
												"nodeType": "InlineAssembly",
												"src": "25106:53:0"
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "24857:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "24972:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "25001:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "24986:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 833,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24986:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24985:22:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "25050:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "25031:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$773_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 837,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 836,
														"name": "StringSlot",
														"nameLocations": [
															"25031:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 773,
														"src": "25031:10:0"
													},
													"referencedDeclaration": 773,
													"src": "25031:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$773_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25030:22:0"
									},
									"scope": 865,
									"src": "24963:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "25341:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "25403:38:0",
													"nodeType": "YulBlock",
													"src": "25403:38:0",
													"statements": [
														{
															"nativeSrc": "25417:14:0",
															"nodeType": "YulAssignment",
															"src": "25417:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "25427:4:0",
																"nodeType": "YulIdentifier",
																"src": "25427:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "25417:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "25417:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 849,
														"isOffset": false,
														"isSlot": true,
														"src": "25417:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 845,
														"isOffset": false,
														"isSlot": false,
														"src": "25427:4:0",
														"valueSize": 1
													}
												],
												"id": 851,
												"nodeType": "InlineAssembly",
												"src": "25394:47:0"
											}
										]
									},
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "25171:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "25270:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "25291:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "25283:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 844,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25282:14:0"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "25338:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "25320:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$776_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 848,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 847,
														"name": "BytesSlot",
														"nameLocations": [
															"25320:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 776,
														"src": "25320:9:0"
													},
													"referencedDeclaration": 776,
													"src": "25320:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$776_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25319:21:0"
									},
									"scope": 865,
									"src": "25261:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 863,
										"nodeType": "Block",
										"src": "25644:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "25706:44:0",
													"nodeType": "YulBlock",
													"src": "25706:44:0",
													"statements": [
														{
															"nativeSrc": "25720:20:0",
															"nodeType": "YulAssignment",
															"src": "25720:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "25730:10:0",
																"nodeType": "YulIdentifier",
																"src": "25730:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "25720:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "25720:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": true,
														"src": "25720:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 856,
														"isOffset": false,
														"isSlot": true,
														"src": "25730:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 862,
												"nodeType": "InlineAssembly",
												"src": "25697:53:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "25453:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "25566:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "25593:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "25579:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 855,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25579:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25578:21:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "25641:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "25623:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$776_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 859,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 858,
														"name": "BytesSlot",
														"nameLocations": [
															"25623:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 776,
														"src": "25623:9:0"
													},
													"referencedDeclaration": 776,
													"src": "25623:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$776_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25622:21:0"
									},
									"scope": 865,
									"src": "25557:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2975,
							"src": "23073:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 866,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25908:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 867,
								"nodeType": "StructuredDocumentation",
								"src": "25937:154:0",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1161,
							"linearizedBaseContracts": [
								1161
							],
							"name": "ERC1967Utils",
							"nameLocation": "26100:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "26303:68:0",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 872,
									"name": "Upgraded",
									"nameLocation": "26382:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "26407:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "26391:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26391:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26390:32:0"
									},
									"src": "26376:47:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "26429:67:0",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 879,
									"name": "AdminChanged",
									"nameLocation": "26507:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "26528:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "26520:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "26551:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "26543:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26519:41:0"
									},
									"src": "26501:60:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "26567:59:0",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 884,
									"name": "BeaconUpgraded",
									"nameLocation": "26637:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "26668:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "26652:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26651:24:0"
									},
									"src": "26631:45:0"
								},
								{
									"constant": true,
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "26682:170:0",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 888,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "26948:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 1161,
									"src": "26922:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 886,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "26922:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 887,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "26970:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "27043:69:0",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 893,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "27123:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "27160:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "27152:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27151:24:0"
									},
									"src": "27117:59:0"
								},
								{
									"documentation": {
										"id": 894,
										"nodeType": "StructuredDocumentation",
										"src": "27182:60:0",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 898,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "27253:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "27281:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "27273:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27272:15:0"
									},
									"src": "27247:41:0"
								},
								{
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "27294:61:0",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 903,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "27366:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "27395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "27387:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27386:16:0"
									},
									"src": "27360:43:0"
								},
								{
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "27409:82:0",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 906,
									"name": "ERC1967NonPayable",
									"nameLocation": "27502:17:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27519:2:0"
									},
									"src": "27496:26:0"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "27661:77:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 914,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 888,
																"src": "27705:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 912,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "27678:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$865_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27690:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 787,
															"src": "27678:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$761_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27678:47:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "27726:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 760,
													"src": "27678:53:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 911,
												"id": 917,
												"nodeType": "Return",
												"src": "27671:60:0"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "27528:67:0",
										"text": " @dev Returns the current implementation address."
									},
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "27609:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27626:2:0"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "27652:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27651:9:0"
									},
									"scope": 1161,
									"src": "27600:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "27892:218:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 925,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 922,
																"src": "27906:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27924:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "27906:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27929:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27906:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27939:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "27906:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 935,
												"nodeType": "IfStatement",
												"src": "27902:119:0",
												"trueBody": {
													"id": 934,
													"nodeType": "Block",
													"src": "27942:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 931,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "27992:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 930,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "27963:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27963:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 933,
															"nodeType": "RevertStatement",
															"src": "27956:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 939,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "28057:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 936,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "28030:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$865_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "28042:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "28030:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$761_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28030:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 941,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "28078:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "28030:53:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 942,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 922,
														"src": "28086:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28030:73:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 944,
												"nodeType": "ExpressionStatement",
												"src": "28030:73:0"
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "27744:80:0",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "27838:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "27865:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "27857:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27856:27:0"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27892:0:0"
									},
									"scope": 1161,
									"src": "27829:281:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "28503:254:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "28532:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 954,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "28513:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28513:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "28513:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 959,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "28574:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 958,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "28565:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28565:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "EmitStatement",
												"src": "28560:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 962,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "28607:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28612:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "28607:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "28621:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "28607:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "28708:43:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 974,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "28722:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28722:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "28722:18:0"
														}
													]
												},
												"id": 978,
												"nodeType": "IfStatement",
												"src": "28603:148:0",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "28624:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 969,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 949,
																		"src": "28667:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 970,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "28686:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 966,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "28638:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$756_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "28646:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 675,
																	"src": "28638:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28638:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 972,
															"nodeType": "ExpressionStatement",
															"src": "28638:53:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "28116:301:0",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "28431:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "28456:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "28448:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28448:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "28475:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 950,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28475:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28447:46:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28503:0:0"
									},
									"scope": 1161,
									"src": "28422:335:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "28763:145:0",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 984,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "29004:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1161,
									"src": "28978:105:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 982,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "28978:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 983,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "29017:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "29487:68:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 992,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "29531:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 990,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "29504:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$865_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29516:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 787,
															"src": "29504:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$761_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29504:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "29543:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 760,
													"src": "29504:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 989,
												"id": 995,
												"nodeType": "Return",
												"src": "29497:51:0"
											}
										]
									},
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "29090:340:0",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "29444:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29452:2:0"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "29478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29477:9:0"
									},
									"scope": 1161,
									"src": "29435:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1027,
										"nodeType": "Block",
										"src": "29682:172:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1003,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "29696:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1004,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29708:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29708:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29696:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1017,
												"nodeType": "IfStatement",
												"src": "29692:91:0",
												"trueBody": {
													"id": 1016,
													"nodeType": "Block",
													"src": "29720:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "29769:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "29761:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1010,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "29761:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "29761:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1009,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 898,
																	"src": "29741:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29741:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1015,
															"nodeType": "RevertStatement",
															"src": "29734:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1021,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "29819:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1018,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "29792:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$865_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29804:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "29792:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$761_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29792:38:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "29831:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "29792:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1024,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1000,
														"src": "29839:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29792:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "29792:55:0"
											}
										]
									},
									"documentation": {
										"id": 998,
										"nodeType": "StructuredDocumentation",
										"src": "29561:71:0",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "29646:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "29664:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "29656:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 999,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29655:18:0"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29682:0:0"
									},
									"scope": 1161,
									"src": "29637:217:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "30022:85:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1035,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "30050:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30050:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "30062:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1034,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "30037:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30037:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "EmitStatement",
												"src": "30032:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1041,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "30091:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1040,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "30081:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30081:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "ExpressionStatement",
												"src": "30081:19:0"
											}
										]
									},
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "29860:109:0",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "29983:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "30003:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "29995:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29995:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29994:18:0"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30022:0:0"
									},
									"scope": 1161,
									"src": "29974:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1046,
										"nodeType": "StructuredDocumentation",
										"src": "30113:201:0",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1049,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "30410:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1161,
									"src": "30384:106:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1047,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "30384:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "30424:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "30606:69:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1057,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "30650:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1055,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "30623:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$865_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30635:14:0",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 787,
															"src": "30623:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$761_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30623:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "30663:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 760,
													"src": "30623:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1060,
												"nodeType": "Return",
												"src": "30616:52:0"
											}
										]
									},
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "30497:51:0",
										"text": " @dev Returns the current beacon."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "30562:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30571:2:0"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "30597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30596:9:0"
									},
									"scope": 1161,
									"src": "30553:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "30804:390:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1068,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "30818:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "30828:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "30818:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "30833:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "30818:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "30843:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "30818:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "30814:95:0",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "30846:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1074,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "30888:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1073,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 903,
																	"src": "30867:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30867:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1076,
															"nodeType": "RevertStatement",
															"src": "30860:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1082,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "30946:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1079,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "30919:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$865_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30931:14:0",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 787,
																"src": "30919:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$761_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30919:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$761_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1084,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "30959:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 760,
														"src": "30919:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1085,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "30967:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30919:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "30919:57:0"
											},
											{
												"assignments": [
													1089
												],
												"declarations": [
													{
														"constant": false,
														"id": 1089,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "30995:20:0",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "30987:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1088,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30987:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1091,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "31026:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1090,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 504,
																"src": "31018:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$504_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31018:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$504",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31037:14:0",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 503,
														"src": "31018:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31018:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30987:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1096,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "31067:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "31088:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "31067:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31093:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31067:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31103:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31067:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "31063:125:0",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "31106:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1102,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1089,
																		"src": "31156:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1101,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "31127:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31127:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1104,
															"nodeType": "RevertStatement",
															"src": "31120:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "30681:71:0",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "30766:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "30785:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "30777:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30776:19:0"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30804:0:0"
									},
									"scope": 1161,
									"src": "30757:437:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "31798:254:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1117,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "31819:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1116,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "31808:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31808:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1119,
												"nodeType": "ExpressionStatement",
												"src": "31808:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1121,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "31859:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1120,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "31844:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31844:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "EmitStatement",
												"src": "31839:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1124,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "31884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31889:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31884:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31898:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "31884:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "32003:43:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1140,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1160,
																	"src": "32017:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32017:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1142,
															"nodeType": "ExpressionStatement",
															"src": "32017:18:0"
														}
													]
												},
												"id": 1144,
												"nodeType": "IfStatement",
												"src": "31880:166:0",
												"trueBody": {
													"id": 1139,
													"nodeType": "Block",
													"src": "31901:96:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1132,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1111,
																						"src": "31952:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1131,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "31944:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$504_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1133,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "31944:18:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$504",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "31963:14:0",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 503,
																			"src": "31944:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31944:35:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "31981:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1128,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "31915:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$756_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1130,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "31923:20:0",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 675,
																	"src": "31915:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31915:71:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1138,
															"nodeType": "ExpressionStatement",
															"src": "31915:71:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "31200:514:0",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "31728:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "31759:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "31751:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "31783:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "31770:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31750:38:0"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31798:0:0"
									},
									"scope": 1161,
									"src": "31719:333:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "32277:86:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1150,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "32291:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "32295:5:0",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "32291:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32303:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32291:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1158,
												"nodeType": "IfStatement",
												"src": "32287:70:0",
												"trueBody": {
													"id": 1157,
													"nodeType": "Block",
													"src": "32306:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1154,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "32327:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32327:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1156,
															"nodeType": "RevertStatement",
															"src": "32320:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "32058:178:0",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "32250:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32266:2:0"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32277:0:0"
									},
									"scope": 1161,
									"src": "32241:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2975,
							"src": "26092:6273:0",
							"usedErrors": [
								893,
								898,
								903,
								906
							],
							"usedEvents": [
								872,
								879,
								884
							]
						},
						{
							"id": 1162,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32529:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1164,
										"name": "Initializable",
										"nameLocations": [
											"33214:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "33214:13:0"
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "33214:13:0"
								},
								{
									"baseName": {
										"id": 1166,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"33229:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 495,
										"src": "33229:17:0"
									},
									"id": 1167,
									"nodeType": "InheritanceSpecifier",
									"src": "33229:17:0"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1163,
								"nodeType": "StructuredDocumentation",
								"src": "32558:618:0",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 1336,
							"linearizedBaseContracts": [
								1336,
								495,
								253
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "33195:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "33253:61:0",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 1174,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "33345:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "33319:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1169,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "33319:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1172,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "33362:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1336",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1336",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 1171,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "33354:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1170,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "33354:7:0",
												"typeDescriptions": {}
											}
										},
										"id": 1173,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "33354:13:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "33374:631:0",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 1178,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "34033:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 1336,
									"src": "34010:58:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1176,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "34010:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 1177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "34061:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "34075:65:0",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 1181,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "34151:27:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34178:2:0"
									},
									"src": "34145:36:0"
								},
								{
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "34187:68:0",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 1186,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "34266:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "34303:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "34295:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34294:14:0"
									},
									"src": "34260:49:0"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "34834:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1189,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1268,
														"src": "34844:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34844:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "34844:13:0"
											},
											{
												"id": 1192,
												"nodeType": "PlaceholderStatement",
												"src": "34867:1:0"
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "34315:493:0",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 1194,
									"name": "onlyProxy",
									"nameLocation": "34822:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34831:2:0"
									},
									"src": "34813:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "35105:48:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1197,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "35115:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35115:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "35115:20:0"
											},
											{
												"id": 1200,
												"nodeType": "PlaceholderStatement",
												"src": "35145:1:0"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "34881:195:0",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 1202,
									"name": "notDelegated",
									"nameLocation": "35090:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35102:2:0"
									},
									"src": "35081:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "35219:7:0",
										"statements": []
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1204,
												"name": "onlyInitializing",
												"nameLocations": [
													"35202:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "35202:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35202:16:0"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "35168:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35190:2:0"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35219:0:0"
									},
									"scope": 1336,
									"src": "35159:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "35302:7:0",
										"statements": []
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1211,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1210,
												"name": "onlyInitializing",
												"nameLocations": [
													"35285:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 162,
												"src": "35285:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35285:16:0"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "35241:32:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35273:2:0"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35302:0:0"
									},
									"scope": 1336,
									"src": "35232:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										494
									],
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "35974:56:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1222,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "35991:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1161_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "36004:19:0",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 888,
													"src": "35991:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1221,
												"id": 1224,
												"nodeType": "Return",
												"src": "35984:39:0"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "35314:577:0",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1218,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1217,
												"name": "notDelegated",
												"nameLocations": [
													"35943:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1202,
												"src": "35943:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35943:12:0"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "35905:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35918:2:0"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1226,
												"src": "35965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35964:9:0"
									},
									"scope": 1336,
									"src": "35896:134:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "36454:109:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1237,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "36482:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1236,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1290,
														"src": "36464:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36464:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "36464:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1241,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "36532:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1242,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1231,
															"src": "36551:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1240,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "36510:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36510:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "36510:46:0"
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "36036:308:0",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1233,
												"name": "onlyProxy",
												"nameLocations": [
													"36444:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1194,
												"src": "36444:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36444:9:0"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "36358:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "36383:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "36375:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "36415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "36402:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "36402:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36374:46:0"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36454:0:0"
									},
									"scope": 1336,
									"src": "36349:214:0",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1267,
										"nodeType": "Block",
										"src": "36835:267:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1252,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "36870:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$1336",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$1336",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36862:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1250,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36862:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36862:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1254,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "36879:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36862:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1256,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "36940:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1161_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "36953:17:0",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 919,
																"src": "36940:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36940:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1259,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "36976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36940:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36862:120:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "36845:251:0",
												"trueBody": {
													"id": 1265,
													"nodeType": "Block",
													"src": "37035:61:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1262,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "37056:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37056:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1264,
															"nodeType": "RevertStatement",
															"src": "37049:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1247,
										"nodeType": "StructuredDocumentation",
										"src": "36569:216:0",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 1268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "36799:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36810:2:0"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36835:0:0"
									},
									"scope": 1336,
									"src": "36790:312:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "37271:161:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1274,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "37293:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$1336",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$1336",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "37285:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1272,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "37285:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37285:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1276,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "37302:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37285:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"nodeType": "IfStatement",
												"src": "37281:145:0",
												"trueBody": {
													"id": 1281,
													"nodeType": "Block",
													"src": "37310:116:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1278,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1181,
																	"src": "37386:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37386:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1280,
															"nodeType": "RevertStatement",
															"src": "37379:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1269,
										"nodeType": "StructuredDocumentation",
										"src": "37108:106:0",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "37228:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37246:2:0"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37271:0:0"
									},
									"scope": 1336,
									"src": "37219:213:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "37438:372:0",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 1290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "37824:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "37850:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "37842:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37842:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37841:27:0"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37885:0:0"
									},
									"scope": 1336,
									"src": "37815:71:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "38328:453:0",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1323,
															"nodeType": "Block",
															"src": "38418:212:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1306,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1304,
																			"src": "38436:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 1307,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "38444:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1161_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 1308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "38457:19:0",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 888,
																			"src": "38444:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "38436:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1315,
																	"nodeType": "IfStatement",
																	"src": "38432:120:0",
																	"trueBody": {
																		"id": 1314,
																		"nodeType": "Block",
																		"src": "38478:74:0",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 1311,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1304,
																							"src": "38532:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1310,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1186,
																						"src": "38503:28:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 1312,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38503:34:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 1313,
																				"nodeType": "RevertStatement",
																				"src": "38496:41:0"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1319,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "38595:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1320,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1295,
																				"src": "38614:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 1316,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "38565:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1161_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 1318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "38578:16:0",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 980,
																			"src": "38565:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38565:54:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1322,
																	"nodeType": "ExpressionStatement",
																	"src": "38565:54:0"
																}
															]
														},
														"errorName": "",
														"id": 1324,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1305,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1304,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "38412:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1324,
																	"src": "38404:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1303,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "38404:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "38403:14:0"
														},
														"src": "38395:235:0"
													},
													{
														"block": {
															"id": 1331,
															"nodeType": "Block",
															"src": "38637:138:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1328,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "38746:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1325,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "38704:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1161_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 1327,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "38717:28:0",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 893,
																			"src": "38704:41:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "38704:60:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1330,
																	"nodeType": "RevertStatement",
																	"src": "38697:67:0"
																}
															]
														},
														"errorName": "",
														"id": 1332,
														"nodeType": "TryCatchClause",
														"src": "38631:144:0"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "38360:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1298,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "38342:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$495_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38342:36:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$495",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38379:13:0",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 494,
														"src": "38342:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38342:52:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1333,
												"nodeType": "TryStatement",
												"src": "38338:437:0"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "37892:346:0",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "38252:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "38282:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "38274:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38274:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38314:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "38301:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1294,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38301:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38273:46:0"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38328:0:0"
									},
									"scope": 1336,
									"src": "38243:538:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2975,
							"src": "33177:5606:0",
							"usedErrors": [
								16,
								19,
								516,
								519,
								893,
								906,
								1181,
								1186
							],
							"usedEvents": [
								24,
								872
							]
						},
						{
							"id": 1337,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38882:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1354,
							"linearizedBaseContracts": [
								1354
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "38970:29:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "39004:985:0",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "40001:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "40028:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "40013:24:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40013:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40012:26:0"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "40062:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "40057:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40057:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "40089:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "40076:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40076:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40056:45:0"
									},
									"scope": 1354,
									"src": "39992:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "40106:1003:0",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "41121:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "41150:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "41135:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1349,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "41135:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41134:28:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41171:0:0"
									},
									"scope": 1354,
									"src": "41112:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2975,
							"src": "38960:2214:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1355,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41265:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBEP20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1392,
							"linearizedBaseContracts": [
								1392
							],
							"name": "IBEP20",
							"nameLocation": "41352:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 1362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "41387:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "41405:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "41397:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41397:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41396:17:0"
									},
									"returnParameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "41437:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41437:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41436:9:0"
									},
									"scope": 1392,
									"src": "41378:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "41460:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41477:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "41469:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41496:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "41488:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41468:35:0"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "41522:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41521:6:0"
									},
									"scope": 1392,
									"src": "41451:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1380,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "41542:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41560:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "41552:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "41575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "41567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41551:32:0"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "41607:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41606:9:0"
									},
									"scope": 1392,
									"src": "41533:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "41630:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "41651:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "41643:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41643:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "41666:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "41658:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "41684:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "41676:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41642:49:0"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "41710:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41710:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41709:6:0"
									},
									"scope": 1392,
									"src": "41621:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2975,
							"src": "41342:376:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1393,
										"name": "Initializable",
										"nameLocations": [
											"41745:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 253,
										"src": "41745:13:0"
									},
									"id": 1394,
									"nodeType": "InheritanceSpecifier",
									"src": "41745:13:0"
								},
								{
									"baseName": {
										"id": 1395,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"41760:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 486,
										"src": "41760:18:0"
									},
									"id": 1396,
									"nodeType": "InheritanceSpecifier",
									"src": "41760:18:0"
								},
								{
									"baseName": {
										"id": 1397,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"41780:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "41780:15:0"
									},
									"id": 1398,
									"nodeType": "InheritanceSpecifier",
									"src": "41780:15:0"
								},
								{
									"baseName": {
										"id": 1399,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"41797:29:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1354,
										"src": "41797:29:0"
									},
									"id": 1400,
									"nodeType": "InheritanceSpecifier",
									"src": "41797:29:0"
								}
							],
							"canonicalName": "PoolContrcat",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2974,
							"linearizedBaseContracts": [
								2974,
								1354,
								1336,
								495,
								486,
								296,
								253
							],
							"name": "PoolContrcat",
							"nameLocation": "41729:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "11eac855",
									"id": 1403,
									"mutability": "mutable",
									"name": "usdcToken",
									"nameLocation": "41848:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "41834:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IBEP20_$1392",
										"typeString": "contract IBEP20"
									},
									"typeName": {
										"id": 1402,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1401,
											"name": "IBEP20",
											"nameLocations": [
												"41834:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1392,
											"src": "41834:6:0"
										},
										"referencedDeclaration": 1392,
										"src": "41834:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IBEP20_$1392",
											"typeString": "contract IBEP20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "188e07b9",
									"id": 1405,
									"mutability": "mutable",
									"name": "treasuryPoolAmount",
									"nameLocation": "41883:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "41868:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1404,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "41868:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b47ff951",
									"id": 1407,
									"mutability": "mutable",
									"name": "ownerShipPoolAmount",
									"nameLocation": "41922:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "41907:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1406,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "41907:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "567e98f9",
									"id": 1409,
									"mutability": "mutable",
									"name": "totalStakedAmount",
									"nameLocation": "41962:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "41947:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1408,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "41947:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "33244c2c",
									"id": 1411,
									"mutability": "mutable",
									"name": "tdividentPayoutPercentage",
									"nameLocation": "42001:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "41986:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1410,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "41986:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "44490ff4",
									"id": 1413,
									"mutability": "mutable",
									"name": "odividentPayoutPercentage",
									"nameLocation": "42047:25:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42032:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1412,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42032:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ce356a24",
									"id": 1415,
									"mutability": "mutable",
									"name": "flowToTreasuryPercentage",
									"nameLocation": "42093:24:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42078:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1414,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42078:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a71a9e4",
									"id": 1417,
									"mutability": "mutable",
									"name": "maintainceFeePercentage",
									"nameLocation": "42138:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42123:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1416,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42123:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "01934a83",
									"id": 1419,
									"mutability": "mutable",
									"name": "noOfUsers",
									"nameLocation": "42183:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42168:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1418,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42168:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5462870d",
									"id": 1421,
									"mutability": "mutable",
									"name": "multisigAddress",
									"nameLocation": "42213:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42198:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1420,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "42198:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1423,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "42248:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42235:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1422,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "42235:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "947a36fb",
									"id": 1425,
									"mutability": "mutable",
									"name": "interval",
									"nameLocation": "42275:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42260:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42260:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "30cac972",
									"id": 1427,
									"mutability": "mutable",
									"name": "realInterval",
									"nameLocation": "42351:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42336:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1426,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42336:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39518b5e",
									"id": 1429,
									"mutability": "mutable",
									"name": "startingTime",
									"nameLocation": "42431:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42416:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1428,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42416:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f3b3b27",
									"id": 1431,
									"mutability": "mutable",
									"name": "lastTimeStamp",
									"nameLocation": "42465:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42450:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1430,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42450:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3070fbf8",
									"id": 1433,
									"mutability": "mutable",
									"name": "s_forwarderAddress",
									"nameLocation": "42549:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42534:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1432,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "42534:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f0664a4f",
									"id": 1435,
									"mutability": "mutable",
									"name": "ownerOne",
									"nameLocation": "42589:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42574:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1434,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "42574:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "83aa9985",
									"id": 1437,
									"mutability": "mutable",
									"name": "ownerTwo",
									"nameLocation": "42618:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42603:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1436,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "42603:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "PoolContrcat.UserRegistered",
									"id": 1450,
									"members": [
										{
											"constant": false,
											"id": 1439,
											"mutability": "mutable",
											"name": "blocked",
											"nameLocation": "42670:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "42665:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1438,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "42665:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1441,
											"mutability": "mutable",
											"name": "receivedAmount",
											"nameLocation": "42695:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "42687:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1440,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42687:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1443,
											"mutability": "mutable",
											"name": "withdrawAmount",
											"nameLocation": "42727:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "42719:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1442,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42719:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "receiveFromTreasury",
											"nameLocation": "42759:19:0",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "42751:27:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1444,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42751:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1447,
											"mutability": "mutable",
											"name": "receiveFromOwneerShip",
											"nameLocation": "42796:21:0",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "42788:29:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1446,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42788:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "totalStakedAmount",
											"nameLocation": "42835:17:0",
											"nodeType": "VariableDeclaration",
											"scope": 1450,
											"src": "42827:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1448,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42827:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserRegistered",
									"nameLocation": "42640:14:0",
									"nodeType": "StructDefinition",
									"scope": 2974,
									"src": "42633:226:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c361e4e",
									"id": 1452,
									"mutability": "mutable",
									"name": "totalProjects",
									"nameLocation": "42880:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42865:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1451,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "42865:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c7fd5bf0",
									"id": 1456,
									"mutability": "mutable",
									"name": "alreadyAdded",
									"nameLocation": "42931:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42899:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1455,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1453,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "42907:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "42899:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1454,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "42918:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a4f67b8b",
									"id": 1460,
									"mutability": "mutable",
									"name": "totalUsers",
									"nameLocation": "42984:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "42949:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1459,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1457,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "42957:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "42949:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1458,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "42968:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ff3d65d9",
									"id": 1464,
									"mutability": "mutable",
									"name": "tPPercentages",
									"nameLocation": "43035:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "43000:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1463,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1461,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "43008:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "43000:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1462,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "43019:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bccbc36c",
									"id": 1469,
									"mutability": "mutable",
									"name": "userRegistered",
									"nameLocation": "43096:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2974,
									"src": "43054:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
										"typeString": "mapping(address => struct PoolContrcat.UserRegistered)"
									},
									"typeName": {
										"id": 1468,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1465,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "43062:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "43054:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
											"typeString": "mapping(address => struct PoolContrcat.UserRegistered)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1467,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1466,
												"name": "UserRegistered",
												"nameLocations": [
													"43073:14:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1450,
												"src": "43073:14:0"
											},
											"referencedDeclaration": 1450,
											"src": "43073:14:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserRegistered_$1450_storage_ptr",
												"typeString": "struct PoolContrcat.UserRegistered"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a9f166643ec132a11638e74e3c3a78d4ae278fcbf92998240e0e97676f54e404",
									"id": 1473,
									"name": "AddTreasuery",
									"nameLocation": "43123:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"indexed": false,
												"mutability": "mutable",
												"name": "_treasuryPoolAmount",
												"nameLocation": "43144:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "43136:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43135:29:0"
									},
									"src": "43117:48:0"
								},
								{
									"anonymous": false,
									"eventSelector": "73834e1d1ee73ba659470a3603b888903853d3a3c9fda34e71c093a0e35cab94",
									"id": 1477,
									"name": "AddOwnership",
									"nameLocation": "43176:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1475,
												"indexed": false,
												"mutability": "mutable",
												"name": "_ownerShipPoolAmount",
												"nameLocation": "43197:20:0",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "43189:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43188:30:0"
									},
									"src": "43170:49:0"
								},
								{
									"anonymous": false,
									"eventSelector": "a89b69c5958ec1ccf0df0de746a8708f5b6a6b429430129f16f46f44b319c900",
									"id": 1483,
									"name": "AddFunds",
									"nameLocation": "43230:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "43247:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "43239:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"indexed": false,
												"mutability": "mutable",
												"name": "_projectNo",
												"nameLocation": "43264:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1483,
												"src": "43256:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43238:37:0"
									},
									"src": "43224:52:0"
								},
								{
									"anonymous": false,
									"eventSelector": "3b68dc4e210c46d3622293f2b941cdfde795bb6e17286bb289ba05a6a3b5541f",
									"id": 1489,
									"name": "offInterval",
									"nameLocation": "43287:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "43307:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "43299:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interval",
												"nameLocation": "43323:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "43315:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43298:35:0"
									},
									"src": "43281:53:0"
								},
								{
									"anonymous": false,
									"eventSelector": "884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364",
									"id": 1495,
									"name": "Withdraw",
									"nameLocation": "43345:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "43363:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "43355:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "43382:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "43374:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43354:39:0"
									},
									"src": "43339:55:0"
								},
								{
									"anonymous": false,
									"eventSelector": "b5671393c7c6980552e50a31e778921eb17d764c2e98fbf4d44fff524712def9",
									"id": 1501,
									"name": "PercentageChanged",
									"nameLocation": "43405:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "43431:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "43423:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43423:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"indexed": false,
												"mutability": "mutable",
												"name": "_newPercentage",
												"nameLocation": "43447:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "43439:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43422:40:0"
									},
									"src": "43399:64:0"
								},
								{
									"anonymous": false,
									"eventSelector": "75f91f3cecb8c46f20150f60f77a6e1f0de00776627692db82ef1960af84c33a",
									"id": 1507,
									"name": "SetForwarderAddress",
									"nameLocation": "43474:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "43502:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "43494:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"indexed": false,
												"mutability": "mutable",
												"name": "_s_forwarderAddress",
												"nameLocation": "43518:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "43510:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43493:45:0"
									},
									"src": "43468:71:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7a1655bc3160d3413bf1d5235e55be12e01b7e8bc2436a9bff09c3b4fa2421f1",
									"id": 1515,
									"name": "UserBlocked",
									"nameLocation": "43550:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43570:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "43562:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1511,
												"indexed": false,
												"mutability": "mutable",
												"name": "blockUserAddress",
												"nameLocation": "43584:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "43576:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"indexed": false,
												"mutability": "mutable",
												"name": "blocked",
												"nameLocation": "43607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "43602:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43602:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43561:54:0"
									},
									"src": "43544:72:0"
								},
								{
									"anonymous": false,
									"eventSelector": "14ee34c24635186d212f515353dadae9c226529edef2d1fcf5504cb33b5c25ab",
									"id": 1523,
									"name": "StakeTokens",
									"nameLocation": "43627:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "43648:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "43640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1519,
												"indexed": false,
												"mutability": "mutable",
												"name": "recepient",
												"nameLocation": "43664:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "43656:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdcAmount",
												"nameLocation": "43682:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "43674:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43639:54:0"
									},
									"src": "43621:73:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ae69b6b07596923fbb836fe40924ed537f2035f0f44e37f42440b0939253d167",
									"id": 1531,
									"name": "singleUserAddeed",
									"nameLocation": "43705:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43730:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "43722:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43722:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1527,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "43744:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "43736:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43736:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"indexed": false,
												"mutability": "mutable",
												"name": "userAddress",
												"nameLocation": "43761:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1531,
												"src": "43753:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43721:52:0"
									},
									"src": "43699:75:0"
								},
								{
									"anonymous": false,
									"eventSelector": "2b5090e035d3026f5448298c9adc68db8bbc1b26a8af5c81b2b2a9fc07ca4a00",
									"id": 1539,
									"name": "SetInterval",
									"nameLocation": "43785:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"indexed": false,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "43805:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "43797:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43797:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1535,
												"indexed": false,
												"mutability": "mutable",
												"name": "_interval",
												"nameLocation": "43821:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "43813:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lastTimeStamp",
												"nameLocation": "43840:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "43832:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43796:59:0"
									},
									"src": "43779:77:0"
								},
								{
									"anonymous": false,
									"eventSelector": "e1976e16ed8ce8e740235978fbe69b27d5eea683b2e017bb0bd2fabb33294b3f",
									"id": 1547,
									"name": "AddProject",
									"nameLocation": "43867:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"indexed": false,
												"mutability": "mutable",
												"name": "projectId",
												"nameLocation": "43886:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "43878:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"indexed": false,
												"mutability": "mutable",
												"name": "OpPercentage",
												"nameLocation": "43905:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "43897:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"indexed": false,
												"mutability": "mutable",
												"name": "tpPercentage",
												"nameLocation": "43926:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "43918:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43877:62:0"
									},
									"src": "43861:79:0"
								},
								{
									"anonymous": false,
									"eventSelector": "472714a70b748503a00efa85a1c3081b2a3477ce3be0227cb140455f82ccaeb6",
									"id": 1555,
									"name": "multipleUserAddeed",
									"nameLocation": "43951:18:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "43978:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "43970:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"indexed": false,
												"mutability": "mutable",
												"name": "_amountLength",
												"nameLocation": "43992:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "43984:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43984:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"indexed": false,
												"mutability": "mutable",
												"name": "usersLength",
												"nameLocation": "44015:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "44007:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43969:58:0"
									},
									"src": "43945:83:0"
								},
								{
									"anonymous": false,
									"eventSelector": "ee826440768329b0c72f81331212ee31fcdac1ea79a248d24821e40c34e58020",
									"id": 1563,
									"name": "WeeklyTransfered",
									"nameLocation": "44039:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"indexed": false,
												"mutability": "mutable",
												"name": "caller",
												"nameLocation": "44064:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "44056:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44056:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"indexed": false,
												"mutability": "mutable",
												"name": "ownerShipPoolAmount",
												"nameLocation": "44080:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "44071:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1561,
												"indexed": false,
												"mutability": "mutable",
												"name": "treasuryPoolAmount",
												"nameLocation": "44110:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "44101:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44055:74:0"
									},
									"src": "44033:97:0"
								},
								{
									"errorSelector": "a24a13a6",
									"id": 1565,
									"name": "ArrayLengthMismatch",
									"nameLocation": "44142:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44161:2:0"
									},
									"src": "44136:28:0"
								},
								{
									"errorSelector": "81ed1ae3",
									"id": 1569,
									"name": "wrongValue",
									"nameLocation": "44175:10:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "44191:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "44186:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1566,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44186:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44185:12:0"
									},
									"src": "44169:29:0"
								},
								{
									"errorSelector": "54593e75",
									"id": 1573,
									"name": "wrongTime",
									"nameLocation": "44209:9:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "44227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "44219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44218:14:0"
									},
									"src": "44203:30:0"
								},
								{
									"errorSelector": "6fa5c3c0",
									"id": 1577,
									"name": "userBlocked",
									"nameLocation": "44244:11:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "blocked",
												"nameLocation": "44261:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "44256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44255:14:0"
									},
									"src": "44238:32:0"
								},
								{
									"errorSelector": "f6b79c58",
									"id": 1581,
									"name": "wrongOwner",
									"nameLocation": "44281:10:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "44292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44291:15:0"
									},
									"src": "44275:32:0"
								},
								{
									"errorSelector": "2ff47830",
									"id": 1585,
									"name": "wrongAmount",
									"nameLocation": "44318:11:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "44338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "44330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44329:16:0"
									},
									"src": "44312:34:0"
								},
								{
									"errorSelector": "7ca8d0db",
									"id": 1589,
									"name": "zeroUsers",
									"nameLocation": "44357:9:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "noOfUsers",
												"nameLocation": "44375:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "44367:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44366:19:0"
									},
									"src": "44351:35:0"
								},
								{
									"errorSelector": "d85d3cef",
									"id": 1593,
									"name": "transferFailed",
									"nameLocation": "44397:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "transfered",
												"nameLocation": "44417:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "44412:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44412:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44411:17:0"
									},
									"src": "44391:38:0"
								},
								{
									"errorSelector": "31b6e358",
									"id": 1597,
									"name": "notEnoughBalance",
									"nameLocation": "44440:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "44465:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1597,
												"src": "44457:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44457:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44456:16:0"
									},
									"src": "44434:39:0"
								},
								{
									"errorSelector": "f775555c",
									"id": 1601,
									"name": "emptyAmount",
									"nameLocation": "44484:11:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "amountLength",
												"nameLocation": "44504:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1601,
												"src": "44496:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44495:22:0"
									},
									"src": "44478:40:0"
								},
								{
									"errorSelector": "222a50f3",
									"id": 1605,
									"name": "wrongProjectNo",
									"nameLocation": "44529:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "projectNO",
												"nameLocation": "44552:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "44544:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44543:19:0"
									},
									"src": "44523:40:0"
								},
								{
									"errorSelector": "e4cfa94d",
									"id": 1609,
									"name": "wrongAddress",
									"nameLocation": "44574:12:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "wrongAddress",
												"nameLocation": "44595:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "44587:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44586:22:0"
									},
									"src": "44568:41:0"
								},
								{
									"errorSelector": "cdbc6335",
									"id": 1613,
									"name": "wrongPercentage",
									"nameLocation": "44620:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "percentage",
												"nameLocation": "44644:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "44636:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44636:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44635:20:0"
									},
									"src": "44614:42:0"
								},
								{
									"errorSelector": "3a46e2ab",
									"id": 1617,
									"name": "emptyAddresses",
									"nameLocation": "44667:14:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "addressLength",
												"nameLocation": "44690:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1617,
												"src": "44682:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44681:23:0"
									},
									"src": "44661:44:0"
								},
								{
									"errorSelector": "71540007",
									"id": 1621,
									"name": "wrongInterval",
									"nameLocation": "44716:13:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "44738:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "44730:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44729:24:0"
									},
									"src": "44710:44:0"
								},
								{
									"errorSelector": "98e712c3",
									"id": 1625,
									"name": "notEnoughAmount",
									"nameLocation": "44765:15:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "balanceAmount",
												"nameLocation": "44789:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1625,
												"src": "44781:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44780:23:0"
									},
									"src": "44759:45:0"
								},
								{
									"errorSelector": "580ad538",
									"id": 1629,
									"name": "wrongPerceentage",
									"nameLocation": "44816:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "percentageNumber",
												"nameLocation": "44841:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "44833:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44832:26:0"
									},
									"src": "44809:50:0"
								},
								{
									"errorSelector": "9b7220af",
									"id": 1633,
									"name": "wrongPercentageAmount",
									"nameLocation": "44870:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "_totalStakeAmount",
												"nameLocation": "44900:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "44892:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44891:27:0"
									},
									"src": "44864:55:0"
								},
								{
									"errorSelector": "2fd92d8d",
									"id": 1639,
									"name": "emptyPools",
									"nameLocation": "44930:10:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "ownerShipPoolAmount",
												"nameLocation": "44949:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "44941:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "treasuryPoolAmount",
												"nameLocation": "44978:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "44970:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44940:57:0"
									},
									"src": "44924:74:0"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "45071:39:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1643,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "45081:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45081:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "45081:22:0"
											}
										]
									},
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "45004:48:0",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1647,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45068:2:0"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45071:0:0"
									},
									"scope": 2974,
									"src": "45057:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "45316:702:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1663,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "45350:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1662,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "45335:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45335:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "45335:28:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1666,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1208,
														"src": "45373:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45373:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "45373:24:0"
											},
											{
												"expression": {
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1669,
														"name": "usdcToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "45408:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1392",
															"typeString": "contract IBEP20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1671,
																"name": "_usdcAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "45427:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1670,
															"name": "IBEP20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "45420:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IBEP20_$1392_$",
																"typeString": "type(contract IBEP20)"
															}
														},
														"id": 1672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45420:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IBEP20_$1392",
															"typeString": "contract IBEP20"
														}
													},
													"src": "45408:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IBEP20_$1392",
														"typeString": "contract IBEP20"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "45408:32:0"
											},
											{
												"expression": {
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1675,
														"name": "tdividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "45648:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "35303030",
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45676:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_5000_by_1",
															"typeString": "int_const 5000"
														},
														"value": "5000"
													},
													"src": "45648:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1678,
												"nodeType": "ExpressionStatement",
												"src": "45648:32:0"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1679,
														"name": "odividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "45702:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "37353030",
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45730:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_7500_by_1",
															"typeString": "int_const 7500"
														},
														"value": "7500"
													},
													"src": "45702:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "45702:32:0"
											},
											{
												"expression": {
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1683,
														"name": "flowToTreasuryPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "45769:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31353030",
														"id": 1684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45796:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1500_by_1",
															"typeString": "int_const 1500"
														},
														"value": "1500"
													},
													"src": "45769:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "45769:31:0"
											},
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1687,
														"name": "maintainceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "45821:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45847:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "45821:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "45821:30:0"
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1691,
														"name": "multisigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "45909:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1692,
														"name": "_multisigAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "45927:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45909:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "45909:34:0"
											},
											{
												"expression": {
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1695,
														"name": "ownerOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1435,
														"src": "45957:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1696,
														"name": "_ownerOne",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1653,
														"src": "45968:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45957:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "45957:20:0"
											},
											{
												"expression": {
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1699,
														"name": "ownerTwo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "45991:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1700,
														"name": "_ownerTwo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "46002:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "45991:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "45991:20:0"
											}
										]
									},
									"functionSelector": "1459457a",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1660,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1659,
												"name": "initializer",
												"nameLocations": [
													"45293:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 107,
												"src": "45293:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "45293:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "45125:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "45153:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "45145:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "_usdcAddress",
												"nameLocation": "45183:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "45175:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "_ownerOne",
												"nameLocation": "45213:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "45205:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_ownerTwo",
												"nameLocation": "45240:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "45232:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45232:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "_multisigAddress",
												"nameLocation": "45267:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "45259:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45135:149:0"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45316:0:0"
									},
									"scope": 2974,
									"src": "45116:902:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "46095:273:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1711,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "46117:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "46117:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1719,
												"nodeType": "IfStatement",
												"src": "46114:84:0",
												"trueBody": {
													"id": 1718,
													"nodeType": "Block",
													"src": "46136:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1715,
																		"name": "_tPPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "46173:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1714,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "46157:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46157:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1717,
															"nodeType": "RevertStatement",
															"src": "46150:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1720,
															"name": "tPPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "46208:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1722,
														"indexExpression": {
															"id": 1721,
															"name": "totalProjects",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "46222:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "46208:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1723,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1706,
														"src": "46239:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46208:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "46208:44:0"
											},
											{
												"expression": {
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "46262:15:0",
													"subExpression": {
														"id": 1726,
														"name": "totalProjects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "46262:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1728,
												"nodeType": "ExpressionStatement",
												"src": "46262:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"components": [
																{
																	"id": 1730,
																	"name": "totalProjects",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1452,
																	"src": "46306:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1731,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46305:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130303030",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "46323:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10000_by_1",
																			"typeString": "int_const 10000"
																		},
																		"value": "10000"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1733,
																		"name": "_tPPercentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "46331:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "46323:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1735,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46322:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1736,
															"name": "_tPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "46347:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1729,
														"name": "AddProject",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "46294:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46294:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "EmitStatement",
												"src": "46289:72:0"
											}
										]
									},
									"functionSelector": "2765df7a",
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1708,
												"name": "bothOwner",
												"nameLocations": [
													"46084:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "46084:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46084:11:0"
										}
									],
									"name": "addProjects",
									"nameLocation": "46040:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "_tPPercentage",
												"nameLocation": "46060:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "46052:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46052:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46051:23:0"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46095:0:0"
									},
									"scope": 2974,
									"src": "46031:337:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "46433:342:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1747,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "46455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1748,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46466:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "46455:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1755,
												"nodeType": "IfStatement",
												"src": "46452:68:0",
												"trueBody": {
													"id": 1754,
													"nodeType": "Block",
													"src": "46468:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1751,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1742,
																		"src": "46501:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1750,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "46489:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46489:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1753,
															"nodeType": "RevertStatement",
															"src": "46482:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1756,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "46530:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1757,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1742,
														"src": "46553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46530:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "46530:30:0"
											},
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "46576:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1785,
														"src": "46571:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1760,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "46571:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1764,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "46609:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "46613:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "46609:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1768,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "46628:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "46620:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1766,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "46620:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46620:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1770,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1742,
															"src": "46634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1762,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "46586:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1392",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46596:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "46586:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46586:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46571:72:0"
											},
											{
												"condition": {
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "46656:8:0",
													"subExpression": {
														"id": 1773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "46657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "46653:67:0",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "46665:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1776,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "46701:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1775,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "46686:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46686:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1778,
															"nodeType": "RevertStatement",
															"src": "46679:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1782,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "46748:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1781,
														"name": "AddOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "46735:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46735:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "EmitStatement",
												"src": "46730:38:0"
											}
										]
									},
									"functionSelector": "78fd078d",
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1745,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1744,
												"name": "bothOwner",
												"nameLocations": [
													"46422:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "46422:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46422:11:0"
										}
									],
									"name": "addOwnership",
									"nameLocation": "46383:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "46404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "46396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46395:17:0"
									},
									"returnParameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46433:0:0"
									},
									"scope": 2974,
									"src": "46374:401:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "46844:340:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1793,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "46866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46877:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "46866:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "46863:68:0",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "46879:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1797,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1788,
																		"src": "46912:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1796,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "46900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46900:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1799,
															"nodeType": "RevertStatement",
															"src": "46893:27:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1802,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "46941:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1803,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "46963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46941:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "46941:29:0"
											},
											{
												"assignments": [
													1807
												],
												"declarations": [
													{
														"constant": false,
														"id": 1807,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "46986:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1831,
														"src": "46981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1806,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "46981:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1818,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "47019:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47023:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "47019:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "47038:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47030:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47030:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47030:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1816,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "47044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1808,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "46996:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1392",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47006:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "46996:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46996:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46981:72:0"
											},
											{
												"condition": {
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "47066:8:0",
													"subExpression": {
														"id": 1819,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "47067:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1826,
												"nodeType": "IfStatement",
												"src": "47063:67:0",
												"trueBody": {
													"id": 1825,
													"nodeType": "Block",
													"src": "47075:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1822,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1807,
																		"src": "47111:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1821,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "47096:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47096:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1824,
															"nodeType": "RevertStatement",
															"src": "47089:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1828,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "47158:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1827,
														"name": "AddTreasuery",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "47145:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47145:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "EmitStatement",
												"src": "47140:37:0"
											}
										]
									},
									"functionSelector": "5256dbbf",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1791,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1790,
												"name": "bothOwner",
												"nameLocations": [
													"46833:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "46833:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46833:11:0"
										}
									],
									"name": "addTreasuery",
									"nameLocation": "46794:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "46815:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "46807:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46806:17:0"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46844:0:0"
									},
									"scope": 2974,
									"src": "46785:399:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "47238:754:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1837,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "47260:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47271:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "47260:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1845,
												"nodeType": "IfStatement",
												"src": "47257:68:0",
												"trueBody": {
													"id": 1844,
													"nodeType": "Block",
													"src": "47273:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1841,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1834,
																		"src": "47306:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1840,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "47294:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47294:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1843,
															"nodeType": "RevertStatement",
															"src": "47287:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1846,
															"name": "userRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "47346:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
															}
														},
														"id": 1849,
														"indexExpression": {
															"expression": {
																"id": 1847,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "47361:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47365:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "47361:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "47346:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
															"typeString": "struct PoolContrcat.UserRegistered storage ref"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "47373:7:0",
													"memberName": "blocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1439,
													"src": "47346:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1860,
												"nodeType": "IfStatement",
												"src": "47343:117:0",
												"trueBody": {
													"id": 1859,
													"nodeType": "Block",
													"src": "47381:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1852,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1469,
																				"src": "47414:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 1855,
																			"indexExpression": {
																				"expression": {
																					"id": 1853,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "47429:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "47433:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "47429:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "47414:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 1856,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "47441:7:0",
																		"memberName": "blocked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1439,
																		"src": "47414:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1851,
																	"name": "userBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "47402:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47402:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1858,
															"nodeType": "RevertStatement",
															"src": "47395:54:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1861,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "47470:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 1864,
															"indexExpression": {
																"expression": {
																	"id": 1862,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "47485:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "47489:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "47485:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "47470:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "47497:17:0",
														"memberName": "totalStakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1449,
														"src": "47470:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1866,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "47518:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47470:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "47470:55:0"
											},
											{
												"condition": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "47546:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 1869,
															"name": "alreadyAdded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "47547:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1872,
														"indexExpression": {
															"expression": {
																"id": 1870,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "47560:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47564:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "47560:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "47547:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "47543:171:0",
												"trueBody": {
													"id": 1891,
													"nodeType": "Block",
													"src": "47572:142:0",
													"statements": [
														{
															"expression": {
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1874,
																		"name": "totalUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1460,
																		"src": "47599:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 1876,
																	"indexExpression": {
																		"id": 1875,
																		"name": "noOfUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "47610:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "47599:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1877,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "47623:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47627:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "47623:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "47599:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1880,
															"nodeType": "ExpressionStatement",
															"src": "47599:34:0"
														},
														{
															"expression": {
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1881,
																		"name": "alreadyAdded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1456,
																		"src": "47647:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 1884,
																	"indexExpression": {
																		"expression": {
																			"id": 1882,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "47660:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "47664:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "47660:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "47647:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47674:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "47647:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1887,
															"nodeType": "ExpressionStatement",
															"src": "47647:31:0"
														},
														{
															"expression": {
																"id": 1889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "47692:11:0",
																"subExpression": {
																	"id": 1888,
																	"name": "noOfUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "47692:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1890,
															"nodeType": "ExpressionStatement",
															"src": "47692:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1893,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "47724:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1894,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "47745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47724:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "47724:28:0"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "47768:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1922,
														"src": "47763:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1897,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "47763:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1906,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1901,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "47800:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47804:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "47800:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1903,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "47811:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1904,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "47827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1899,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "47777:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1392",
																"typeString": "contract IBEP20"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47787:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "47777:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47777:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47763:72:0"
											},
											{
												"condition": {
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "47857:8:0",
													"subExpression": {
														"id": 1907,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "47858:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1914,
												"nodeType": "IfStatement",
												"src": "47854:67:0",
												"trueBody": {
													"id": 1913,
													"nodeType": "Block",
													"src": "47866:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1910,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "47902:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1909,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "47887:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47887:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1912,
															"nodeType": "RevertStatement",
															"src": "47880:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1916,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "47948:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "47952:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "47948:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1918,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "47959:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1919,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "47976:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1915,
														"name": "StakeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "47936:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47936:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1921,
												"nodeType": "EmitStatement",
												"src": "47931:53:0"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 1923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeTokens",
									"nameLocation": "47199:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "47219:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1923,
												"src": "47211:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47210:17:0"
									},
									"returnParameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47238:0:0"
									},
									"scope": 2974,
									"src": "47190:802:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2005,
										"nodeType": "Block",
										"src": "48102:548:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1934,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "48125:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48133:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48125:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48143:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "48125:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1944,
												"nodeType": "IfStatement",
												"src": "48122:83:0",
												"trueBody": {
													"id": 1943,
													"nodeType": "Block",
													"src": "48145:60:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1939,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1926,
																			"src": "48179:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "48187:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "48179:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1938,
																	"name": "emptyAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "48167:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48167:27:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1942,
															"nodeType": "RevertStatement",
															"src": "48160:34:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1945,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "48217:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48223:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48217:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48233:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "48217:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1955,
												"nodeType": "IfStatement",
												"src": "48214:82:0",
												"trueBody": {
													"id": 1954,
													"nodeType": "Block",
													"src": "48235:61:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1950,
																			"name": "users",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1929,
																			"src": "48272:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "48278:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "48272:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1949,
																	"name": "emptyAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "48257:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48257:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1953,
															"nodeType": "RevertStatement",
															"src": "48250:35:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1956,
															"name": "users",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "48310:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1957,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48316:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48310:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1958,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "48326:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48334:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48326:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48310:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1965,
												"nodeType": "IfStatement",
												"src": "48306:89:0",
												"trueBody": {
													"id": 1964,
													"nodeType": "Block",
													"src": "48342:53:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1961,
																	"name": "ArrayLengthMismatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1565,
																	"src": "48363:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48363:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1963,
															"nodeType": "RevertStatement",
															"src": "48356:28:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 1994,
													"nodeType": "Block",
													"src": "48443:127:0",
													"statements": [
														{
															"expression": {
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1977,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "48458:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 1981,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1978,
																				"name": "users",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1929,
																				"src": "48473:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 1980,
																			"indexExpression": {
																				"id": 1979,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1967,
																				"src": "48479:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "48473:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "48458:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "48483:17:0",
																	"memberName": "totalStakedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1449,
																	"src": "48458:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1983,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "48504:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1985,
																	"indexExpression": {
																		"id": 1984,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "48512:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "48504:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48458:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1987,
															"nodeType": "ExpressionStatement",
															"src": "48458:56:0"
														},
														{
															"expression": {
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1988,
																	"name": "totalStakedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "48528:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1989,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1926,
																		"src": "48549:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1991,
																	"indexExpression": {
																		"id": 1990,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1967,
																		"src": "48557:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "48549:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48528:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "48528:31:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1970,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "48419:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1971,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1926,
															"src": "48423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48431:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48423:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48419:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1995,
												"initializationExpression": {
													"assignments": [
														1967
													],
													"declarations": [
														{
															"constant": false,
															"id": 1967,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "48414:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1995,
															"src": "48409:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1966,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "48409:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1969,
													"initialValue": {
														"hexValue": "30",
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48416:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "48409:8:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "48439:3:0",
														"subExpression": {
															"id": 1974,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "48439:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1976,
													"nodeType": "ExpressionStatement",
													"src": "48439:3:0"
												},
												"nodeType": "ForStatement",
												"src": "48405:165:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1997,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "48604:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "48608:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "48604:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1999,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1926,
																"src": "48615:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "48623:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "48615:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2001,
																"name": "users",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1929,
																"src": "48630:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "48636:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "48630:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1996,
														"name": "multipleUserAddeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "48585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48585:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2004,
												"nodeType": "EmitStatement",
												"src": "48580:63:0"
											}
										]
									},
									"functionSelector": "34107c87",
									"id": 2006,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 1932,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1931,
												"name": "bothOwner",
												"nameLocations": [
													"48090:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "48090:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "48090:11:0"
										}
									],
									"name": "stakeTokensByOwner",
									"nameLocation": "48012:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "48048:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "48031:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1924,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "48031:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1925,
													"nodeType": "ArrayTypeName",
													"src": "48031:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "users",
												"nameLocation": "48074:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "48057:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1927,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "48057:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1928,
													"nodeType": "ArrayTypeName",
													"src": "48057:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48030:50:0"
									},
									"returnParameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48102:0:0"
									},
									"scope": 2974,
									"src": "48003:647:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2082,
										"nodeType": "Block",
										"src": "48707:628:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2011,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "48729:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48740:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "48729:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2019,
												"nodeType": "IfStatement",
												"src": "48726:68:0",
												"trueBody": {
													"id": 2018,
													"nodeType": "Block",
													"src": "48742:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2015,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "48775:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2014,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "48763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48763:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2017,
															"nodeType": "RevertStatement",
															"src": "48756:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 2020,
															"name": "userRegistered",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "48814:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
															}
														},
														"id": 2023,
														"indexExpression": {
															"expression": {
																"id": 2021,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "48829:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "48833:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "48829:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "48814:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
															"typeString": "struct PoolContrcat.UserRegistered storage ref"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "48841:7:0",
													"memberName": "blocked",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1439,
													"src": "48814:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2034,
												"nodeType": "IfStatement",
												"src": "48811:117:0",
												"trueBody": {
													"id": 2033,
													"nodeType": "Block",
													"src": "48849:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2026,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1469,
																				"src": "48882:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 2029,
																			"indexExpression": {
																				"expression": {
																					"id": 2027,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "48897:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "48901:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "48897:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "48882:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 2030,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "48909:7:0",
																		"memberName": "blocked",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1439,
																		"src": "48882:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2025,
																	"name": "userBlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "48870:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48870:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2032,
															"nodeType": "RevertStatement",
															"src": "48863:54:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 2035,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "48941:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2038,
															"indexExpression": {
																"expression": {
																	"id": 2036,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "48956:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "48960:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "48956:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "48941:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2039,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48968:14:0",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "48941:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 2040,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "48986:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48941:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2047,
												"nodeType": "IfStatement",
												"src": "48938:113:0",
												"trueBody": {
													"id": 2046,
													"nodeType": "Block",
													"src": "48994:57:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2043,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2008,
																		"src": "49032:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2042,
																	"name": "notEnoughBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "49015:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49015:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2045,
															"nodeType": "RevertStatement",
															"src": "49008:32:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2048,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "49061:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2051,
															"indexExpression": {
																"expression": {
																	"id": 2049,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "49076:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "49080:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "49076:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "49061:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2052,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "49088:14:0",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "49061:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2053,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "49106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49061:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "49061:52:0"
											},
											{
												"expression": {
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2056,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "49123:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2059,
															"indexExpression": {
																"expression": {
																	"id": 2057,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "49138:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "49142:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "49138:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "49123:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2060,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "49150:17:0",
														"memberName": "totalStakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1449,
														"src": "49123:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2061,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "49171:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49123:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "49123:55:0"
											},
											{
												"expression": {
													"id": 2066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2064,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "49197:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2065,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "49220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49197:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2067,
												"nodeType": "ExpressionStatement",
												"src": "49197:30:0"
											},
											{
												"expression": {
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2068,
														"name": "totalStakedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "49237:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2069,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "49258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49237:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "49237:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2073,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "49293:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "49297:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "49293:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2077,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "49312:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 2076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49304:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2075,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49304:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49304:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2079,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "49319:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2072,
														"name": "StakeTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "49281:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49281:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2081,
												"nodeType": "EmitStatement",
												"src": "49276:51:0"
											}
										]
									},
									"functionSelector": "7ffe4d93",
									"id": 2083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reStakeTokens",
									"nameLocation": "48666:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "48688:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2083,
												"src": "48680:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48679:17:0"
									},
									"returnParameters": {
										"id": 2010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48707:0:0"
									},
									"scope": 2974,
									"src": "48657:678:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "49411:475:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2090,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "49425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49436:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "49425:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2098,
												"nodeType": "IfStatement",
												"src": "49422:68:0",
												"trueBody": {
													"id": 2097,
													"nodeType": "Block",
													"src": "49438:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2094,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2085,
																		"src": "49471:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2093,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "49459:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49459:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2096,
															"nodeType": "RevertStatement",
															"src": "49452:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2099,
														"name": "_projectNo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2087,
														"src": "49503:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2100,
														"name": "totalProjects",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "49516:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49503:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2107,
												"nodeType": "IfStatement",
												"src": "49500:88:0",
												"trueBody": {
													"id": 2106,
													"nodeType": "Block",
													"src": "49530:58:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2103,
																		"name": "_projectNo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2087,
																		"src": "49566:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2102,
																	"name": "wrongProjectNo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1605,
																	"src": "49551:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49551:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2105,
															"nodeType": "RevertStatement",
															"src": "49544:33:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2109,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "49624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 2110,
																"name": "tPPercentages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "49633:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2112,
															"indexExpression": {
																"id": 2111,
																"name": "_projectNo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2087,
																"src": "49647:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "49633:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2108,
														"name": "calculateFees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2178,
														"src": "49610:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49610:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2114,
												"nodeType": "ExpressionStatement",
												"src": "49610:49:0"
											},
											{
												"assignments": [
													2116
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "49683:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2141,
														"src": "49678:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2115,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "49678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2127,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2119,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "49716:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "49720:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "49716:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2123,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "49735:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PoolContrcat_$2974",
																		"typeString": "contract PoolContrcat"
																	}
																],
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49727:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2121,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49727:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49727:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2125,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "49741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2117,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "49693:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1392",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49703:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1391,
														"src": "49693:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49693:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49678:72:0"
											},
											{
												"condition": {
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "49763:8:0",
													"subExpression": {
														"id": 2128,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "49764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2135,
												"nodeType": "IfStatement",
												"src": "49760:67:0",
												"trueBody": {
													"id": 2134,
													"nodeType": "Block",
													"src": "49772:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2131,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "49808:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2130,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "49793:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49793:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2133,
															"nodeType": "RevertStatement",
															"src": "49786:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2137,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2085,
															"src": "49851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2138,
															"name": "_projectNo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2087,
															"src": "49859:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2136,
														"name": "AddFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1483,
														"src": "49842:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49842:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "EmitStatement",
												"src": "49837:33:0"
											}
										]
									},
									"functionSelector": "85f45250",
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addFunds",
									"nameLocation": "49354:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "49371:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "49363:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "_projectNo",
												"nameLocation": "49388:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2142,
												"src": "49380:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49362:37:0"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49411:0:0"
									},
									"scope": 2974,
									"src": "49345:541:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2177,
										"nodeType": "Block",
										"src": "49964:308:0",
										"statements": [
											{
												"assignments": [
													2150
												],
												"declarations": [
													{
														"constant": false,
														"id": 2150,
														"mutability": "mutable",
														"name": "oPPercentage",
														"nameLocation": "49990:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "49982:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2149,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "49982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2154,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130303030",
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50005:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2152,
														"name": "_tPPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2146,
														"src": "50013:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50005:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49982:44:0"
											},
											{
												"assignments": [
													2156
												],
												"declarations": [
													{
														"constant": false,
														"id": 2156,
														"mutability": "mutable",
														"name": "ownerShipFee",
														"nameLocation": "50044:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "50036:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2161,
												"initialValue": {
													"arguments": [
														{
															"id": 2158,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "50079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2159,
															"name": "oPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2150,
															"src": "50088:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2157,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "50059:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50059:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50036:65:0"
											},
											{
												"assignments": [
													2163
												],
												"declarations": [
													{
														"constant": false,
														"id": 2163,
														"mutability": "mutable",
														"name": "treasuryFee",
														"nameLocation": "50119:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2177,
														"src": "50111:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2162,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50111:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2168,
												"initialValue": {
													"arguments": [
														{
															"id": 2165,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2144,
															"src": "50153:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2166,
															"name": "_tPPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2146,
															"src": "50162:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2164,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "50133:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50133:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50111:65:0"
											},
											{
												"expression": {
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2169,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "50187:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2170,
														"name": "ownerShipFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2156,
														"src": "50210:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50187:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2172,
												"nodeType": "ExpressionStatement",
												"src": "50187:35:0"
											},
											{
												"expression": {
													"id": 2175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2173,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "50232:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2174,
														"name": "treasuryFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2163,
														"src": "50254:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50232:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2176,
												"nodeType": "ExpressionStatement",
												"src": "50232:33:0"
											}
										]
									},
									"id": 2178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateFees",
									"nameLocation": "49902:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2144,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "49924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "49916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"mutability": "mutable",
												"name": "_tPPercentage",
												"nameLocation": "49941:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2178,
												"src": "49933:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49915:40:0"
									},
									"returnParameters": {
										"id": 2148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49964:0:0"
									},
									"scope": 2974,
									"src": "49893:379:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "50314:1589:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2181,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "50328:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "50332:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "50328:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2183,
																"name": "s_forwarderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "50342:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "50328:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2185,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "50364:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "50368:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "50364:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2187,
																"name": "ownerOne",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1435,
																"src": "50378:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "50364:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "50328:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2190,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "50390:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "50394:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "50390:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2192,
															"name": "ownerTwo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "50404:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50390:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "50328:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "IfStatement",
												"src": "50325:142:0",
												"trueBody": {
													"id": 2200,
													"nodeType": "Block",
													"src": "50413:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2196,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "50445:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "50449:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "50445:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2195,
																	"name": "wrongOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "50434:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50434:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2199,
															"nodeType": "RevertStatement",
															"src": "50427:29:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2202,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "50480:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50503:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "50480:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2205,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "50508:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "50530:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "50508:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "50480:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2215,
												"nodeType": "IfStatement",
												"src": "50477:137:0",
												"trueBody": {
													"id": 2214,
													"nodeType": "Block",
													"src": "50532:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2210,
																		"name": "ownerShipPoolAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "50564:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2211,
																		"name": "treasuryPoolAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "50584:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2209,
																	"name": "emptyPools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "50553:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50553:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2213,
															"nodeType": "RevertStatement",
															"src": "50546:57:0"
														}
													]
												}
											},
											{
												"assignments": [
													2217,
													2219,
													2221
												],
												"declarations": [
													{
														"constant": false,
														"id": 2217,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "50642:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "50634:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2216,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50634:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2219,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "50667:25:0",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "50659:33:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2218,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50659:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2221,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "50702:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "50694:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2220,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50694:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2224,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2222,
														"name": "perPoolCalculation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2424,
														"src": "50725:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
															"typeString": "function () returns (uint256,uint256,uint256)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50725:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50632:113:0"
											},
											{
												"assignments": [
													2226
												],
												"declarations": [
													{
														"constant": false,
														"id": 2226,
														"mutability": "mutable",
														"name": "maxlimit",
														"nameLocation": "50780:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "50772:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50772:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2227,
												"nodeType": "VariableDeclarationStatement",
												"src": "50772:16:0"
											},
											{
												"body": {
													"id": 2322,
													"nodeType": "Block",
													"src": "50837:974:0",
													"statements": [
														{
															"condition": {
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "50855:38:0",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2238,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "50856:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2242,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2239,
																				"name": "totalUsers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1460,
																				"src": "50871:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																					"typeString": "mapping(uint256 => address)"
																				}
																			},
																			"id": 2241,
																			"indexExpression": {
																				"id": 2240,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2229,
																				"src": "50882:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "50871:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "50856:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "50886:7:0",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1439,
																	"src": "50856:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2321,
															"nodeType": "IfStatement",
															"src": "50852:936:0",
															"trueBody": {
																"id": 2320,
																"nodeType": "Block",
																"src": "50894:894:0",
																"statements": [
																	{
																		"assignments": [
																			2246
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2246,
																				"mutability": "mutable",
																				"name": "eachSharePercentage",
																				"nameLocation": "50921:19:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2320,
																				"src": "50913:27:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2245,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "50913:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2260,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2255,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"baseExpression": {
																									"id": 2247,
																									"name": "userRegistered",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1469,
																									"src": "50944:14:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																										"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																									}
																								},
																								"id": 2251,
																								"indexExpression": {
																									"baseExpression": {
																										"id": 2248,
																										"name": "totalUsers",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1460,
																										"src": "50959:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																											"typeString": "mapping(uint256 => address)"
																										}
																									},
																									"id": 2250,
																									"indexExpression": {
																										"id": 2249,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2229,
																										"src": "50970:1:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "50959:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "50944:29:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																									"typeString": "struct PoolContrcat.UserRegistered storage ref"
																								}
																							},
																							"id": 2252,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "50974:17:0",
																							"memberName": "totalStakedAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1449,
																							"src": "50944:47:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"components": [
																								{
																									"hexValue": "3130303030",
																									"id": 2253,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "50995:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_10000_by_1",
																										"typeString": "int_const 10000"
																									},
																									"value": "10000"
																								}
																							],
																							"id": 2254,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "50994:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_10000_by_1",
																								"typeString": "int_const 10000"
																							}
																						},
																						"src": "50944:57:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2256,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "50943:59:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"components": [
																					{
																						"id": 2257,
																						"name": "totalStakedAmount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1409,
																						"src": "51006:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2258,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "51005:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "50943:81:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "50913:111:0"
																	},
																	{
																		"assignments": [
																			2262
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2262,
																				"mutability": "mutable",
																				"name": "eachSendAmount",
																				"nameLocation": "51067:14:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2320,
																				"src": "51059:22:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2261,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "51059:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2267,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 2264,
																					"name": "dividentPayoutOPoolAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2219,
																					"src": "51104:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2265,
																					"name": "eachSharePercentage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2246,
																					"src": "51131:19:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2263,
																				"name": "calculatePercentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2647,
																				"src": "51084:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2266,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51084:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "51059:92:0"
																	},
																	{
																		"expression": {
																			"id": 2270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2268,
																				"name": "ownerShipPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1407,
																				"src": "51169:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2269,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "51192:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51169:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2271,
																		"nodeType": "ExpressionStatement",
																		"src": "51169:37:0"
																	},
																	{
																		"expression": {
																			"id": 2274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2272,
																				"name": "maxlimit",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2226,
																				"src": "51249:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2273,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "51261:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51249:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2275,
																		"nodeType": "ExpressionStatement",
																		"src": "51249:26:0"
																	},
																	{
																		"expression": {
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2276,
																				"name": "treasuryPoolAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1405,
																				"src": "51293:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2277,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2221,
																				"src": "51315:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51293:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2279,
																		"nodeType": "ExpressionStatement",
																		"src": "51293:40:0"
																	},
																	{
																		"expression": {
																			"id": 2287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2280,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1469,
																						"src": "51352:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2284,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2281,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1460,
																							"src": "51367:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2283,
																						"indexExpression": {
																							"id": 2282,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2229,
																							"src": "51378:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "51367:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "51352:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2285,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "51382:19:0",
																				"memberName": "receiveFromTreasury",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1445,
																				"src": "51352:49:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2286,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2221,
																				"src": "51405:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51352:71:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2288,
																		"nodeType": "ExpressionStatement",
																		"src": "51352:71:0"
																	},
																	{
																		"expression": {
																			"id": 2296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2289,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1469,
																						"src": "51441:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2293,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2290,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1460,
																							"src": "51456:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2292,
																						"indexExpression": {
																							"id": 2291,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2229,
																							"src": "51467:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "51456:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "51441:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2294,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "51471:21:0",
																				"memberName": "receiveFromOwneerShip",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1447,
																				"src": "51441:51:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2295,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "51496:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51441:69:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2297,
																		"nodeType": "ExpressionStatement",
																		"src": "51441:69:0"
																	},
																	{
																		"assignments": [
																			2299
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2299,
																				"mutability": "mutable",
																				"name": "totalSendAmount",
																				"nameLocation": "51553:15:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2320,
																				"src": "51545:23:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2298,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "51545:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2303,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2300,
																				"name": "eachSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2262,
																				"src": "51571:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2301,
																				"name": "perPersonFromTPool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2221,
																				"src": "51588:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51571:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "51545:61:0"
																	},
																	{
																		"expression": {
																			"id": 2311,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2304,
																						"name": "userRegistered",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1469,
																						"src": "51624:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																							"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																						}
																					},
																					"id": 2308,
																					"indexExpression": {
																						"baseExpression": {
																							"id": 2305,
																							"name": "totalUsers",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1460,
																							"src": "51639:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																								"typeString": "mapping(uint256 => address)"
																							}
																						},
																						"id": 2307,
																						"indexExpression": {
																							"id": 2306,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2229,
																							"src": "51650:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "51639:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "51624:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																						"typeString": "struct PoolContrcat.UserRegistered storage ref"
																					}
																				},
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "51654:14:0",
																				"memberName": "receivedAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1441,
																				"src": "51624:44:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2310,
																				"name": "totalSendAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2299,
																				"src": "51672:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "51624:63:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2312,
																		"nodeType": "ExpressionStatement",
																		"src": "51624:63:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2314,
																						"name": "maxlimit",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2226,
																						"src": "51714:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"id": 2315,
																						"name": "remainFiftyOPool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2217,
																						"src": "51726:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "51714:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416d6f756e742069732067726561746572207468656e20353025",
																					"id": 2317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "51744:28:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7",
																						"typeString": "literal_string \"Amount is greater then 50%\""
																					},
																					"value": "Amount is greater then 50%"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_daaf22ee48ba14ce5532421d554d114832ad11cacc0a90889b6df539cd8418d7",
																						"typeString": "literal_string \"Amount is greater then 50%\""
																					}
																				],
																				"id": 2313,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "51706:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51706:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2319,
																		"nodeType": "ExpressionStatement",
																		"src": "51706:67:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2232,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "50818:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2233,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "50822:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50818:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2323,
												"initializationExpression": {
													"assignments": [
														2229
													],
													"declarations": [
														{
															"constant": false,
															"id": 2229,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "50811:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2323,
															"src": "50803:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2228,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "50803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2231,
													"initialValue": {
														"hexValue": "30",
														"id": 2230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50815:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "50803:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "50833:3:0",
														"subExpression": {
															"id": 2235,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "50833:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2237,
													"nodeType": "ExpressionStatement",
													"src": "50833:3:0"
												},
												"nodeType": "ForStatement",
												"src": "50799:1012:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2325,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "51843:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "51847:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "51843:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2327,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "51855:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2328,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "51876:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2324,
														"name": "WeeklyTransfered",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1563,
														"src": "51826:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51826:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2330,
												"nodeType": "EmitStatement",
												"src": "51821:74:0"
											}
										]
									},
									"functionSelector": "e9c68e2c",
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weeklyTransfer",
									"nameLocation": "50289:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50303:2:0"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50314:0:0"
									},
									"scope": 2974,
									"src": "50280:1623:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "51986:1114:0",
										"statements": [
											{
												"assignments": [
													2342
												],
												"declarations": [
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "remainFiftyOPool",
														"nameLocation": "52014:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52006:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2341,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2347,
												"initialValue": {
													"arguments": [
														{
															"id": 2344,
															"name": "ownerShipPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "52053:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "35303030",
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52074:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															},
															"value": "5000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_5000_by_1",
																"typeString": "int_const 5000"
															}
														],
														"id": 2343,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "52033:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52033:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52006:73:0"
											},
											{
												"assignments": [
													2349
												],
												"declarations": [
													{
														"constant": false,
														"id": 2349,
														"mutability": "mutable",
														"name": "dividentPayoutOPoolAmount",
														"nameLocation": "52098:25:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52090:33:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2348,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2354,
												"initialValue": {
													"arguments": [
														{
															"id": 2351,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "52146:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2352,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "52164:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2350,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "52126:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52126:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52090:100:0"
											},
											{
												"assignments": [
													2356
												],
												"declarations": [
													{
														"constant": false,
														"id": 2356,
														"mutability": "mutable",
														"name": "fifteenPercenntToTPoolAmount",
														"nameLocation": "52208:28:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52200:36:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52200:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2361,
												"initialValue": {
													"arguments": [
														{
															"id": 2358,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "52259:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2359,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "52277:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2357,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "52239:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52239:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52200:102:0"
											},
											{
												"assignments": [
													2363
												],
												"declarations": [
													{
														"constant": false,
														"id": 2363,
														"mutability": "mutable",
														"name": "tenPercenntToMaintenceAmount",
														"nameLocation": "52320:28:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52312:36:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2362,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2368,
												"initialValue": {
													"arguments": [
														{
															"id": 2365,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "52371:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2366,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "52389:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2364,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "52351:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52351:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52312:101:0"
											},
											{
												"assignments": [
													2370
												],
												"declarations": [
													{
														"constant": false,
														"id": 2370,
														"mutability": "mutable",
														"name": "remainFiftyTPoolAmount",
														"nameLocation": "52431:22:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52423:30:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2369,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2375,
												"initialValue": {
													"arguments": [
														{
															"id": 2372,
															"name": "treasuryPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "52476:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2373,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "52496:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2371,
														"name": "calculatePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "52456:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52456:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52423:99:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2376,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "52536:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52549:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "52536:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2384,
												"nodeType": "IfStatement",
												"src": "52533:70:0",
												"trueBody": {
													"id": 2383,
													"nodeType": "Block",
													"src": "52551:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2380,
																		"name": "noOfUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1419,
																		"src": "52582:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2379,
																	"name": "zeroUsers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "52572:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52572:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2382,
															"nodeType": "RevertStatement",
															"src": "52565:27:0"
														}
													]
												}
											},
											{
												"assignments": [
													2386
												],
												"declarations": [
													{
														"constant": false,
														"id": 2386,
														"mutability": "mutable",
														"name": "perPersonFromTPool",
														"nameLocation": "52629:18:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52621:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "52621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2390,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2387,
														"name": "remainFiftyTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2370,
														"src": "52650:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2388,
														"name": "noOfUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "52673:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52650:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52621:61:0"
											},
											{
												"expression": {
													"id": 2396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2391,
														"name": "ownerShipPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "52701:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2392,
																	"name": "fifteenPercenntToTPoolAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2356,
																	"src": "52725:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 2393,
																	"name": "tenPercenntToMaintenceAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2363,
																	"src": "52756:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52725:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2395,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "52724:61:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52701:84:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2397,
												"nodeType": "ExpressionStatement",
												"src": "52701:84:0"
											},
											{
												"expression": {
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2398,
														"name": "treasuryPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1405,
														"src": "52795:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2399,
														"name": "fifteenPercenntToTPoolAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2356,
														"src": "52817:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52795:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "52795:50:0"
											},
											{
												"assignments": [
													2403
												],
												"declarations": [
													{
														"constant": false,
														"id": 2403,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "52861:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2423,
														"src": "52856:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2402,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "52856:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2409,
												"initialValue": {
													"arguments": [
														{
															"id": 2406,
															"name": "multisigAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "52890:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2407,
															"name": "tenPercenntToMaintenceAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2363,
															"src": "52907:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2404,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "52871:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1392",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "52881:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1371,
														"src": "52871:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52871:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52856:80:0"
											},
											{
												"condition": {
													"id": 2411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "52949:8:0",
													"subExpression": {
														"id": 2410,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "52950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2417,
												"nodeType": "IfStatement",
												"src": "52946:67:0",
												"trueBody": {
													"id": 2416,
													"nodeType": "Block",
													"src": "52958:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2413,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2403,
																		"src": "52994:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2412,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "52979:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52979:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2415,
															"nodeType": "RevertStatement",
															"src": "52972:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 2418,
															"name": "remainFiftyOPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "53031:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2419,
															"name": "dividentPayoutOPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2349,
															"src": "53048:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2420,
															"name": "perPersonFromTPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2386,
															"src": "53074:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2421,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "53030:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 2340,
												"id": 2422,
												"nodeType": "Return",
												"src": "53023:70:0"
											}
										]
									},
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "perPoolCalculation",
									"nameLocation": "51924:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51942:2:0"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "51961:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "51970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "51978:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51960:26:0"
									},
									"scope": 2974,
									"src": "51915:1185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 2451,
										"nodeType": "Block",
										"src": "53210:131:0",
										"statements": [
											{
												"assignments": [
													2435
												],
												"declarations": [
													{
														"constant": false,
														"id": 2435,
														"mutability": "mutable",
														"name": "needsUpkeep",
														"nameLocation": "53235:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2451,
														"src": "53230:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2434,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "53230:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2443,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2436,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "53250:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "53256:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "53250:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2438,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "53268:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53250:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2440,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "53249:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2441,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "53285:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53249:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53230:63:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2444,
															"name": "needsUpkeep",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2435,
															"src": "53311:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53330:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53324:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2445,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "53324:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53324:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 2449,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "53310:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 2433,
												"id": 2450,
												"nodeType": "Return",
												"src": "53303:31:0"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 2452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "53115:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2428,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53166:8:0"
									},
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "53127:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53127:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53126:30:0"
									},
									"returnParameters": {
										"id": 2433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "53190:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2452,
												"src": "53196:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53196:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53189:20:0"
									},
									"scope": 2974,
									"src": "53106:235:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 2504,
										"nodeType": "Block",
										"src": "53417:568:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2458,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "53457:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "53461:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "53457:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2460,
																"name": "s_forwarderAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "53471:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "53457:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973206164647265737320646f6573206e6f742068617665207065726d697373696f6e20746f2063616c6c20706572666f726d55706b656570",
															"id": 2462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "53503:61:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															},
															"value": "This address does not have permission to call performUpkeep"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68cba729d2654f12d705abf296d8d9210236461b655b4893509657b14ef0fa1f",
																"typeString": "literal_string \"This address does not have permission to call performUpkeep\""
															}
														],
														"id": 2457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53436:138:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2464,
												"nodeType": "ExpressionStatement",
												"src": "53436:138:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2465,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "53596:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53608:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "53596:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2473,
												"nodeType": "IfStatement",
												"src": "53592:73:0",
												"trueBody": {
													"id": 2472,
													"nodeType": "Block",
													"src": "53610:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2469,
																		"name": "interval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "53645:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2468,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "53631:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53631:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2471,
															"nodeType": "RevertStatement",
															"src": "53624:30:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2474,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "53687:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "53693:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "53687:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 2476,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "53706:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53687:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2502,
													"nodeType": "Block",
													"src": "53915:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2499,
																		"name": "startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1429,
																		"src": "53946:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2498,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "53936:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53936:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2501,
															"nodeType": "RevertStatement",
															"src": "53929:30:0"
														}
													]
												},
												"id": 2503,
												"nodeType": "IfStatement",
												"src": "53684:286:0",
												"trueBody": {
													"id": 2497,
													"nodeType": "Block",
													"src": "53719:183:0",
													"statements": [
														{
															"expression": {
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2478,
																	"name": "interval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "53734:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2479,
																	"name": "realInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "53745:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53734:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2481,
															"nodeType": "ExpressionStatement",
															"src": "53734:23:0"
														},
														{
															"expression": {
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2482,
																	"name": "lastTimeStamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "53771:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2483,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "53787:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "53793:9:0",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "53787:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53771:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2486,
															"nodeType": "ExpressionStatement",
															"src": "53771:31:0"
														},
														{
															"expression": {
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2487,
																	"name": "startingTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1429,
																	"src": "53816:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2488,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "53831:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "53837:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "53831:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2490,
																		"name": "realInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1427,
																		"src": "53849:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "53831:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53816:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2493,
															"nodeType": "ExpressionStatement",
															"src": "53816:45:0"
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2494,
																	"name": "weeklyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "53875:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53875:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2496,
															"nodeType": "ExpressionStatement",
															"src": "53875:16:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 2505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "53361:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2505,
												"src": "53375:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2453,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53375:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53374:32:0"
									},
									"returnParameters": {
										"id": 2456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53417:0:0"
									},
									"scope": 2974,
									"src": "53352:633:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2560,
										"nodeType": "Block",
										"src": "54084:454:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2514,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "54106:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54124:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54106:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2522,
												"nodeType": "IfStatement",
												"src": "54103:84:0",
												"trueBody": {
													"id": 2521,
													"nodeType": "Block",
													"src": "54126:61:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2518,
																		"name": "updateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2509,
																		"src": "54161:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2517,
																	"name": "wrongInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "54147:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54147:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2520,
															"nodeType": "RevertStatement",
															"src": "54140:36:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2523,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "54208:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2524,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "54224:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54230:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "54224:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54208:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2532,
												"nodeType": "IfStatement",
												"src": "54205:91:0",
												"trueBody": {
													"id": 2531,
													"nodeType": "Block",
													"src": "54240:56:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2528,
																		"name": "_startingTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2507,
																		"src": "54271:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2527,
																	"name": "wrongTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "54261:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54261:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2530,
															"nodeType": "RevertStatement",
															"src": "54254:31:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2533,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "54306:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2534,
															"name": "_startingTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2507,
															"src": "54317:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"expression": {
																"id": 2535,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "54333:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54339:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "54333:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "54317:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54306:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2539,
												"nodeType": "ExpressionStatement",
												"src": "54306:42:0"
											},
											{
												"expression": {
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2540,
														"name": "startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "54358:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2541,
														"name": "_startingTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2507,
														"src": "54373:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54358:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2543,
												"nodeType": "ExpressionStatement",
												"src": "54358:28:0"
											},
											{
												"expression": {
													"id": 2547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2544,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "54396:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2545,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "54412:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54418:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "54412:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54396:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2548,
												"nodeType": "ExpressionStatement",
												"src": "54396:31:0"
											},
											{
												"expression": {
													"id": 2551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2549,
														"name": "realInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1427,
														"src": "54437:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2550,
														"name": "updateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2509,
														"src": "54452:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "54437:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2552,
												"nodeType": "ExpressionStatement",
												"src": "54437:29:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54494:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54498:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54494:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2556,
															"name": "interval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "54506:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2557,
															"name": "lastTimeStamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "54516:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2553,
														"name": "SetInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1539,
														"src": "54482:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54482:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2559,
												"nodeType": "EmitStatement",
												"src": "54477:53:0"
											}
										]
									},
									"functionSelector": "5f17e616",
									"id": 2561,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2511,
												"name": "bothOwner",
												"nameLocations": [
													"54075:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "54075:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "54075:9:0"
										}
									],
									"name": "setInterval",
									"nameLocation": "54005:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2507,
												"mutability": "mutable",
												"name": "_startingTime",
												"nameLocation": "54026:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "54018:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2509,
												"mutability": "mutable",
												"name": "updateInterval",
												"nameLocation": "54049:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2561,
												"src": "54041:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54017:47:0"
									},
									"returnParameters": {
										"id": 2513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54084:0:0"
									},
									"scope": 2974,
									"src": "53996:542:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "54579:85:0",
										"statements": [
											{
												"expression": {
													"id": 2568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2566,
														"name": "interval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "54597:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2567,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54608:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54597:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2569,
												"nodeType": "ExpressionStatement",
												"src": "54597:12:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2571,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54636:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2572,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54640:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54636:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2573,
															"name": "interval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "54648:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2570,
														"name": "offInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "54624:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54624:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "EmitStatement",
												"src": "54619:38:0"
											}
										]
									},
									"functionSelector": "6626b26d",
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2563,
												"name": "bothOwner",
												"nameLocations": [
													"54570:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "54570:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "54570:9:0"
										}
									],
									"name": "off",
									"nameLocation": "54553:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54557:2:0"
									},
									"returnParameters": {
										"id": 2565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54579:0:0"
									},
									"scope": 2974,
									"src": "54544:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2606,
										"nodeType": "Block",
										"src": "54745:244:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2584,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "54767:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54795:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54787:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2585,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54787:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54787:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54767:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2595,
												"nodeType": "IfStatement",
												"src": "54764:96:0",
												"trueBody": {
													"id": 2594,
													"nodeType": "Block",
													"src": "54798:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2591,
																		"name": "forwarderAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2579,
																		"src": "54832:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2590,
																	"name": "wrongAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "54819:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54819:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2593,
															"nodeType": "RevertStatement",
															"src": "54812:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2596,
														"name": "s_forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "54878:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2597,
														"name": "forwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2579,
														"src": "54899:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54878:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2599,
												"nodeType": "ExpressionStatement",
												"src": "54878:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2601,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "54951:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54955:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "54951:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2603,
															"name": "s_forwarderAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "54963:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2600,
														"name": "SetForwarderAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "54931:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54931:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2605,
												"nodeType": "EmitStatement",
												"src": "54926:56:0"
											}
										]
									},
									"functionSelector": "d777cc6d",
									"id": 2607,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2581,
												"name": "bothOwner",
												"nameLocations": [
													"54735:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "54735:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "54735:9:0"
										}
									],
									"name": "setForwarderAddress",
									"nameLocation": "54680:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2579,
												"mutability": "mutable",
												"name": "forwarderAddress",
												"nameLocation": "54708:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2607,
												"src": "54700:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54699:26:0"
									},
									"returnParameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54745:0:0"
									},
									"scope": 2974,
									"src": "54671:318:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "55106:346:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2616,
														"name": "_totalStakeAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2609,
														"src": "55128:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2617,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55149:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55128:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2624,
												"nodeType": "IfStatement",
												"src": "55125:98:0",
												"trueBody": {
													"id": 2623,
													"nodeType": "Block",
													"src": "55151:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2620,
																		"name": "_totalStakeAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2609,
																		"src": "55194:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2619,
																	"name": "wrongPercentageAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1633,
																	"src": "55172:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55172:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2622,
															"nodeType": "RevertStatement",
															"src": "55165:47:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2625,
														"name": "percentageNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2611,
														"src": "55235:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55255:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55235:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2633,
												"nodeType": "IfStatement",
												"src": "55232:91:0",
												"trueBody": {
													"id": 2632,
													"nodeType": "Block",
													"src": "55257:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2629,
																		"name": "percentageNumber",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2611,
																		"src": "55295:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2628,
																	"name": "wrongPerceentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "55278:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55278:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2631,
															"nodeType": "RevertStatement",
															"src": "55271:41:0"
														}
													]
												}
											},
											{
												"assignments": [
													2635
												],
												"declarations": [
													{
														"constant": false,
														"id": 2635,
														"mutability": "mutable",
														"name": "serviceFee",
														"nameLocation": "55348:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 2646,
														"src": "55340:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2634,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2643,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2636,
															"name": "_totalStakeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2609,
															"src": "55361:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"components": [
																{
																	"id": 2637,
																	"name": "percentageNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2611,
																	"src": "55382:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2638,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "55381:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55361:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "3130303030",
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55403:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															}
														],
														"id": 2641,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "55402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														}
													},
													"src": "55361:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55340:69:0"
											},
											{
												"expression": {
													"id": 2644,
													"name": "serviceFee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2635,
													"src": "55435:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2615,
												"id": 2645,
												"nodeType": "Return",
												"src": "55428:17:0"
											}
										]
									},
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePercentage",
									"nameLocation": "55004:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "_totalStakeAmount",
												"nameLocation": "55032:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55024:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "percentageNumber",
												"nameLocation": "55058:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55050:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55023:52:0"
									},
									"returnParameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "55097:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55096:9:0"
									},
									"scope": 2974,
									"src": "54995:457:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "55531:573:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2654,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "55553:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55564:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55553:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2662,
												"nodeType": "IfStatement",
												"src": "55550:68:0",
												"trueBody": {
													"id": 2661,
													"nodeType": "Block",
													"src": "55566:52:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2658,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2649,
																		"src": "55599:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2657,
																	"name": "wrongAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1585,
																	"src": "55587:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2659,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55587:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2660,
															"nodeType": "RevertStatement",
															"src": "55580:27:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2663,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "55631:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2664,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "55641:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2667,
															"indexExpression": {
																"expression": {
																	"id": 2665,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "55656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55660:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "55656:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55641:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55668:14:0",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "55641:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55631:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2679,
												"nodeType": "IfStatement",
												"src": "55628:145:0",
												"trueBody": {
													"id": 2678,
													"nodeType": "Block",
													"src": "55683:90:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 2671,
																				"name": "userRegistered",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1469,
																				"src": "55720:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																					"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																				}
																			},
																			"id": 2674,
																			"indexExpression": {
																				"expression": {
																					"id": 2672,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "55735:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "55739:6:0",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "55735:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "55720:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																				"typeString": "struct PoolContrcat.UserRegistered storage ref"
																			}
																		},
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "55747:14:0",
																		"memberName": "receivedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1441,
																		"src": "55720:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2670,
																	"name": "notEnoughAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "55704:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55704:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2677,
															"nodeType": "RevertStatement",
															"src": "55697:65:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2680,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "55783:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2683,
															"indexExpression": {
																"expression": {
																	"id": 2681,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "55798:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55802:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "55798:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55783:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2684,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "55810:14:0",
														"memberName": "receivedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1441,
														"src": "55783:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2685,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "55828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55783:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2687,
												"nodeType": "ExpressionStatement",
												"src": "55783:52:0"
											},
											{
												"expression": {
													"id": 2694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2688,
																"name": "userRegistered",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "55845:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																	"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																}
															},
															"id": 2691,
															"indexExpression": {
																"expression": {
																	"id": 2689,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "55860:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "55864:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "55860:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55845:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																"typeString": "struct PoolContrcat.UserRegistered storage ref"
															}
														},
														"id": 2692,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "55872:14:0",
														"memberName": "withdrawAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1443,
														"src": "55845:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2693,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "55890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "55845:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2695,
												"nodeType": "ExpressionStatement",
												"src": "55845:52:0"
											},
											{
												"assignments": [
													2697
												],
												"declarations": [
													{
														"constant": false,
														"id": 2697,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "55920:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2719,
														"src": "55915:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2696,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "55915:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2704,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2700,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "55949:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55953:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "55949:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2702,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "55960:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2698,
															"name": "usdcToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "55930:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBEP20_$1392",
																"typeString": "contract IBEP20"
															}
														},
														"id": 2699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55940:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1371,
														"src": "55930:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55930:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55915:53:0"
											},
											{
												"condition": {
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "55989:8:0",
													"subExpression": {
														"id": 2705,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2697,
														"src": "55990:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2712,
												"nodeType": "IfStatement",
												"src": "55986:67:0",
												"trueBody": {
													"id": 2711,
													"nodeType": "Block",
													"src": "55998:55:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2708,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2697,
																		"src": "56034:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2707,
																	"name": "transferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "56019:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56019:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2710,
															"nodeType": "RevertStatement",
															"src": "56012:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2714,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56077:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56081:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56077:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2716,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "56089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2713,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "56068:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56068:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2718,
												"nodeType": "EmitStatement",
												"src": "56063:34:0"
											}
										]
									},
									"functionSelector": "67976974",
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2651,
												"name": "nonReentrant",
												"nameLocations": [
													"55518:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2964,
												"src": "55518:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55518:12:0"
										}
									],
									"name": "userWithdrawAmoount",
									"nameLocation": "55472:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "55500:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "55492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55491:17:0"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55531:0:0"
									},
									"scope": 2974,
									"src": "55463:641:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2784,
										"nodeType": "Block",
										"src": "56182:482:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2729,
														"name": "_userAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2722,
														"src": "56204:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "56220:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2730,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "56220:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56220:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "56204:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2740,
												"nodeType": "IfStatement",
												"src": "56201:88:0",
												"trueBody": {
													"id": 2739,
													"nodeType": "Block",
													"src": "56231:58:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2736,
																		"name": "_userAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2722,
																		"src": "56265:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2735,
																	"name": "wrongAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1609,
																	"src": "56252:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56252:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2738,
															"nodeType": "RevertStatement",
															"src": "56245:33:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2741,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "56302:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "74727565",
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"src": "56302:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2744,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2724,
															"src": "56319:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "66616c7365",
															"id": 2745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														"src": "56319:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "56302:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2753,
												"nodeType": "IfStatement",
												"src": "56299:84:0",
												"trueBody": {
													"id": 2752,
													"nodeType": "Block",
													"src": "56334:49:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2749,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2724,
																		"src": "56366:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2748,
																	"name": "wrongValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "56355:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_bool_$returns$_t_error_$",
																		"typeString": "function (bool) pure returns (error)"
																	}
																},
																"id": 2750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56355:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2751,
															"nodeType": "RevertStatement",
															"src": "56348:24:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2754,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2724,
														"src": "56396:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 2755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56405:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "56396:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2772,
													"nodeType": "Block",
													"src": "56483:77:0",
													"statements": [
														{
															"expression": {
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2765,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "56505:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2767,
																		"indexExpression": {
																			"id": 2766,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "56520:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "56505:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "56534:7:0",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1439,
																	"src": "56505:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56544:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "56505:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2771,
															"nodeType": "ExpressionStatement",
															"src": "56505:44:0"
														}
													]
												},
												"id": 2773,
												"nodeType": "IfStatement",
												"src": "56393:167:0",
												"trueBody": {
													"id": 2764,
													"nodeType": "Block",
													"src": "56410:69:0",
													"statements": [
														{
															"expression": {
																"id": 2762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 2757,
																			"name": "userRegistered",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1469,
																			"src": "56425:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																				"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																			}
																		},
																		"id": 2759,
																		"indexExpression": {
																			"id": 2758,
																			"name": "_userAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2722,
																			"src": "56440:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "56425:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																			"typeString": "struct PoolContrcat.UserRegistered storage ref"
																		}
																	},
																	"id": 2760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "56454:7:0",
																	"memberName": "blocked",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1439,
																	"src": "56425:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 2761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56464:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "56425:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2763,
															"nodeType": "ExpressionStatement",
															"src": "56425:43:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2775,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56595:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56599:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2777,
															"name": "_userAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2722,
															"src": "56606:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 2778,
																	"name": "userRegistered",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1469,
																	"src": "56620:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserRegistered_$1450_storage_$",
																		"typeString": "mapping(address => struct PoolContrcat.UserRegistered storage ref)"
																	}
																},
																"id": 2780,
																"indexExpression": {
																	"id": 2779,
																	"name": "_userAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2722,
																	"src": "56635:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "56620:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserRegistered_$1450_storage",
																	"typeString": "struct PoolContrcat.UserRegistered storage ref"
																}
															},
															"id": 2781,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56649:7:0",
															"memberName": "blocked",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1439,
															"src": "56620:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2774,
														"name": "UserBlocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "56583:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56583:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2783,
												"nodeType": "EmitStatement",
												"src": "56578:79:0"
											}
										]
									},
									"functionSelector": "d9b998b4",
									"id": 2785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2726,
												"name": "bothOwner",
												"nameLocations": [
													"56172:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "56172:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56172:9:0"
										}
									],
									"name": "blockUser",
									"nameLocation": "56119:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2722,
												"mutability": "mutable",
												"name": "_userAddress",
												"nameLocation": "56137:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "56129:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2724,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "56156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2785,
												"src": "56151:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56151:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56128:34:0"
									},
									"returnParameters": {
										"id": 2728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56182:0:0"
									},
									"scope": 2974,
									"src": "56110:554:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2817,
										"nodeType": "Block",
										"src": "56771:247:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2794,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "56793:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2795,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56812:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56793:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2802,
												"nodeType": "IfStatement",
												"src": "56790:88:0",
												"trueBody": {
													"id": 2801,
													"nodeType": "Block",
													"src": "56814:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2798,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "56851:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2797,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "56835:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56835:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2800,
															"nodeType": "RevertStatement",
															"src": "56828:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2803,
															"name": "tPPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "56896:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2805,
														"indexExpression": {
															"id": 2804,
															"name": "_projectId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2787,
															"src": "56910:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "56896:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2806,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2789,
														"src": "56924:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56896:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2808,
												"nodeType": "ExpressionStatement",
												"src": "56896:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2810,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56973:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56977:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56973:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 2812,
																"name": "tPPercentages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "56985:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 2814,
															"indexExpression": {
																"id": 2813,
																"name": "_projectId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2787,
																"src": "56999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "56985:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2809,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "56955:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56955:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2816,
												"nodeType": "EmitStatement",
												"src": "56950:61:0"
											}
										]
									},
									"functionSelector": "ed061067",
									"id": 2818,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2792,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2791,
												"name": "bothOwner",
												"nameLocations": [
													"56761:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "56761:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56761:9:0"
										}
									],
									"name": "setTeasueryPercentages",
									"nameLocation": "56685:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "_projectId",
												"nameLocation": "56716:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "56708:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2786,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "56735:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2818,
												"src": "56727:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56707:44:0"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56771:0:0"
									},
									"scope": 2974,
									"src": "56676:342:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2844,
										"nodeType": "Block",
										"src": "57106:248:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2825,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2820,
														"src": "57128:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57147:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57128:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2833,
												"nodeType": "IfStatement",
												"src": "57125:88:0",
												"trueBody": {
													"id": 2832,
													"nodeType": "Block",
													"src": "57149:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2829,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2820,
																		"src": "57186:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2828,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "57170:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57170:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2831,
															"nodeType": "RevertStatement",
															"src": "57163:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2834,
														"name": "tdividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "57231:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2835,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2820,
														"src": "57259:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57231:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2837,
												"nodeType": "ExpressionStatement",
												"src": "57231:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2839,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57308:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57312:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57308:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2841,
															"name": "tdividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "57320:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2838,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "57290:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57290:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2843,
												"nodeType": "EmitStatement",
												"src": "57285:61:0"
											}
										]
									},
									"functionSelector": "7f70c5e7",
									"id": 2845,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2823,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2822,
												"name": "bothOwner",
												"nameLocations": [
													"57096:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "57096:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57096:9:0"
										}
									],
									"name": "settdividentPayoutPercentage",
									"nameLocation": "57033:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2820,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "57070:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "57062:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57061:25:0"
									},
									"returnParameters": {
										"id": 2824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57106:0:0"
									},
									"scope": 2974,
									"src": "57024:330:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2871,
										"nodeType": "Block",
										"src": "57446:247:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2852,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "57468:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2853,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57468:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2860,
												"nodeType": "IfStatement",
												"src": "57465:88:0",
												"trueBody": {
													"id": 2859,
													"nodeType": "Block",
													"src": "57489:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2856,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2847,
																		"src": "57526:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2855,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "57510:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2857,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57510:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2858,
															"nodeType": "RevertStatement",
															"src": "57503:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2861,
														"name": "odividentPayoutPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "57571:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2862,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "57599:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57571:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2864,
												"nodeType": "ExpressionStatement",
												"src": "57571:43:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2866,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57648:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57652:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57648:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2868,
															"name": "odividentPayoutPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "57660:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2865,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "57630:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57630:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2870,
												"nodeType": "EmitStatement",
												"src": "57625:61:0"
											}
										]
									},
									"functionSelector": "b9dac1eb",
									"id": 2872,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2850,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2849,
												"name": "bothOwner",
												"nameLocations": [
													"57436:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "57436:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57436:9:0"
										}
									],
									"name": "setodividentPayoutPercentage",
									"nameLocation": "57373:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "57410:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "57402:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57401:25:0"
									},
									"returnParameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57446:0:0"
									},
									"scope": 2974,
									"src": "57364:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "57785:244:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2879,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2874,
														"src": "57806:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57806:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2887,
												"nodeType": "IfStatement",
												"src": "57803:88:0",
												"trueBody": {
													"id": 2886,
													"nodeType": "Block",
													"src": "57827:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2883,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2874,
																		"src": "57864:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2882,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "57848:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57848:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2885,
															"nodeType": "RevertStatement",
															"src": "57841:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2888,
														"name": "flowToTreasuryPercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "57909:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2889,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2874,
														"src": "57936:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57909:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2891,
												"nodeType": "ExpressionStatement",
												"src": "57909:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2893,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "57985:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57989:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "57985:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2895,
															"name": "flowToTreasuryPercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "57997:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2892,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "57967:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57967:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2897,
												"nodeType": "EmitStatement",
												"src": "57962:60:0"
											}
										]
									},
									"functionSelector": "ad8e5ec4",
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2877,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2876,
												"name": "bothOwner",
												"nameLocations": [
													"57775:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "57775:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57775:9:0"
										}
									],
									"name": "setflowToTreasuryPercentage",
									"nameLocation": "57713:27:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2874,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "57749:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "57741:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57740:25:0"
									},
									"returnParameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57785:0:0"
									},
									"scope": 2974,
									"src": "57704:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2925,
										"nodeType": "Block",
										"src": "58115:243:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2906,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "58137:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2907,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58156:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58137:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2914,
												"nodeType": "IfStatement",
												"src": "58134:88:0",
												"trueBody": {
													"id": 2913,
													"nodeType": "Block",
													"src": "58158:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2910,
																		"name": "_newPerccentage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "58195:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2909,
																	"name": "wrongPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1613,
																	"src": "58179:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58179:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2912,
															"nodeType": "RevertStatement",
															"src": "58172:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2915,
														"name": "maintainceFeePercentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1417,
														"src": "58240:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2916,
														"name": "_newPerccentage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2901,
														"src": "58266:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58240:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2918,
												"nodeType": "ExpressionStatement",
												"src": "58240:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2920,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58315:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58319:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58315:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2922,
															"name": "maintainceFeePercentage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "58327:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2919,
														"name": "PercentageChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "58297:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58297:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2924,
												"nodeType": "EmitStatement",
												"src": "58292:59:0"
											}
										]
									},
									"functionSelector": "7f111e60",
									"id": 2926,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2904,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2903,
												"name": "bothOwner",
												"nameLocations": [
													"58105:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2946,
												"src": "58105:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58105:9:0"
										}
									],
									"name": "setmaintainceFeePercentage",
									"nameLocation": "58044:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2901,
												"mutability": "mutable",
												"name": "_newPerccentage",
												"nameLocation": "58079:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 2926,
												"src": "58071:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58070:25:0"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58115:0:0"
									},
									"scope": 2974,
									"src": "58035:323:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "58384:133:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2928,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58397:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58401:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58397:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2930,
															"name": "ownerOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "58411:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "58397:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2932,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58423:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58427:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58423:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2934,
															"name": "ownerTwo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "58437:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "58423:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "58397:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2943,
												"nodeType": "IfStatement",
												"src": "58394:106:0",
												"trueBody": {
													"id": 2942,
													"nodeType": "Block",
													"src": "58446:54:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2938,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "58478:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "58482:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "58478:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2937,
																	"name": "wrongOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1581,
																	"src": "58467:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58467:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2941,
															"nodeType": "RevertStatement",
															"src": "58460:29:0"
														}
													]
												}
											},
											{
												"id": 2944,
												"nodeType": "PlaceholderStatement",
												"src": "58509:1:0"
											}
										]
									},
									"id": 2946,
									"name": "bothOwner",
									"nameLocation": "58373:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58382:2:0"
									},
									"src": "58364:153:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2963,
										"nodeType": "Block",
										"src": "58547:126:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "58565:7:0",
															"subExpression": {
																"id": 2949,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "58566:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58574:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 2948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58557:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2953,
												"nodeType": "ExpressionStatement",
												"src": "58557:51:0"
											},
											{
												"expression": {
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2954,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "58618:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2955,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58627:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "58618:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2957,
												"nodeType": "ExpressionStatement",
												"src": "58618:13:0"
											},
											{
												"id": 2958,
												"nodeType": "PlaceholderStatement",
												"src": "58641:1:0"
											},
											{
												"expression": {
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2959,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "58652:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58661:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "58652:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2962,
												"nodeType": "ExpressionStatement",
												"src": "58652:14:0"
											}
										]
									},
									"id": 2964,
									"name": "nonReentrant",
									"nameLocation": "58532:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58544:2:0"
									},
									"src": "58523:150:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1290
									],
									"body": {
										"id": 2972,
										"nodeType": "Block",
										"src": "58789:2:0",
										"statements": []
									},
									"id": 2973,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2969,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2968,
												"name": "onlyOwner",
												"nameLocations": [
													"58758:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 381,
												"src": "58758:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58758:9:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "58688:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2970,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "58776:8:0"
									},
									"parameters": {
										"id": 2967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2966,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "58714:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 2973,
												"src": "58706:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58705:27:0"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58789:0:0"
									},
									"scope": 2974,
									"src": "58679:112:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2975,
							"src": "41720:17073:0",
							"usedErrors": [
								16,
								19,
								322,
								327,
								516,
								519,
								893,
								906,
								1181,
								1186,
								1565,
								1569,
								1573,
								1577,
								1581,
								1585,
								1589,
								1593,
								1597,
								1601,
								1605,
								1609,
								1613,
								1617,
								1621,
								1625,
								1629,
								1633,
								1639
							],
							"usedEvents": [
								24,
								333,
								872,
								1473,
								1477,
								1483,
								1489,
								1495,
								1501,
								1507,
								1515,
								1523,
								1531,
								1539,
								1547,
								1555,
								1563
							]
						}
					],
					"src": "190:58650:0"
				},
				"id": 0
			}
		}
	}
}