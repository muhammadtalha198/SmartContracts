{
	"id": "18e569b02d78da06de620cb7e9e12f27",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"SmartContractsInterview/Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract Token is\n    IERC20Metadata,\n    Pausable,\n    ReentrancyGuard,\n    KeeperCompatible,\n    Ownable\n{\n    using SafeMath for uint256;\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    uint256 public constant PERCENTAGE_DENOMINATOR = 10000;\n    uint256 public constant TOKEN_DECIMALS = 1e18;\n    uint256 public constant TOKEN_public_DECIMALS = 1e24;\n\n    string public override name;\n    string public override symbol;\n    uint256 private _decimals;\n\n    uint256 private tSupply;\n    uint256 public excludeDebasingSupply;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private treasuryBalance;\n    address public treasuryWallet;\n\n    uint256 public sellTaxRate;\n    uint256 public debaseRate;\n\n    uint256 public tokenScalingFactor;\n    uint256 public debaseDuration;\n\n    uint256 public holdingLimit;\n\n    mapping(address => bool) public lpPools;\n    mapping(address => bool) public isExcludedFromDebasing;\n    mapping(address => bool) public isExcludedFromHoldingLimit;\n\n    mapping(address => bool) public treasuryOperator;\n\n    uint256 public lastTimeStamp;\n\n    event Burn(address indexed from, uint256 amount);\n    event Mint(address indexed to, uint256 amount);\n\n    modifier onlyTreasuryOperator() {\n        require(treasuryOperator[msg.sender] || msg.sender == owner());\n        _;\n    }\n\n    constructor(\n        string memory _tokenName,\n        string memory _tokenSymbol,\n        uint256 _tSupply,\n        address _tokenOwner,\n        uint256 _sellTaxRate,\n        uint256 _debaseRate,\n        address _treasuryWallet\n    ) Ownable(msg.sender){\n        name = _tokenName;\n        symbol = _tokenSymbol;\n        _decimals = 18;\n\n        tSupply = _tSupply * TOKEN_DECIMALS;\n        excludeDebasingSupply = tSupply;\n\n        holdingLimit = (tSupply * 100) / PERCENTAGE_DENOMINATOR;\n\n        sellTaxRate = _sellTaxRate;\n        debaseRate = _debaseRate;\n\n        tokenScalingFactor = TOKEN_DECIMALS;\n        debaseDuration = 86400;\n        treasuryBalance = 0;\n\n        lastTimeStamp = block.timestamp;\n\n        treasuryWallet = _treasuryWallet;\n\n        _excludedFromDebasing(_tokenOwner, true);\n        _excludedFromHoldingLimit(_tokenOwner, true);\n        _excludedFromDebasing(treasuryWallet, true);\n        _excludedFromHoldingLimit(treasuryWallet, true);\n\n        _balances[_tokenOwner] = _fragmentToDebaseToken(tSupply);\n\n        pause();\n\n        emit Transfer(address(0), _tokenOwner, tSupply);\n        transferOwnership(_tokenOwner);\n    }\n\n    receive() external payable {}\n\n    function withdrawETH(address _to) external onlyOwner {\n        require(_to != address(0), \"Invalid address: zero address\");\n        (bool success, ) = payable(_to).call{value: address(this).balance}(\"\");\n        if(!success) {\n            revert(\"Transfer Failed\");\n        }\n    }\n\n    function totalSupply() public view override returns (uint256) {\n        return tSupply + treasuryBalance;\n    }\n\n    function decimals() external view override returns (uint8) {\n        return uint8(_decimals);\n    }\n\n    function balanceOf(\n        address _account\n    ) public view override returns (uint256) {\n        if (isExcludedFromDebasing[_account]) {\n            if (_account == treasuryWallet) {\n                return _treasuryBalanceOf();\n            }\n            return _debaseTokenToFragment(_balances[_account]);\n        }\n        return _debaseTokenToFragment(_balances[_account]);\n    }\n\n    function balanceOfUnderlying(address _account) public view returns (uint256) {\n        return _balances[_account];\n    }\n\n    function transfer(address _recipient,uint256 _amount) public override returns (bool) {\n        _transfer(msg.sender, _recipient, _amount);\n        return true;\n    }\n\n    function allowance(\n        address _holder,\n        address _spender\n    ) public view override returns (uint256) {\n        return _allowances[_holder][_spender];\n    }\n\n    function approve(\n        address _spender,\n        uint256 _amount\n    ) public override returns (bool) {\n        _approve(msg.sender, _spender, _amount);\n        return true;\n    }\n\n    function transferFrom(\n        address _sender,\n        address _recipient,\n        uint256 _amount\n    ) public override returns (bool) {\n        _transfer(_sender, _recipient, _amount);\n        _approve(_sender,\n            msg.sender,\n            _allowances[_sender][msg.sender].sub(\n                _amount,\n                \"ERC20: transfer amount exceeds allowance\"\n            )\n        );\n        return true;\n    }\n\n    function increaseAllowance(\n        address _spender,\n        uint256 _addedValue\n    ) public virtual returns (bool) {\n        _approve(\n            msg.sender,\n            _spender,\n            _allowances[msg.sender][_spender].add(_addedValue)\n        );\n        return true;\n    }\n\n    function decreaseAllowance(address _spender,uint256 _subtractedValue) public virtual returns (bool) {\n        _approve(msg.sender, _spender,_allowances[msg.sender][_spender].sub(_subtractedValue,\"ERC20: decreased allowance below zero\")\n        );\n        return true;\n    }\n\n    function _approve(\n        address _holder,\n        address _spender,\n        uint256 _amount\n    ) public virtual {\n        require(_holder != address(0), \"ERC20: approve from the zero address\");\n        require(_spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[_holder][_spender] = _amount;\n        emit Approval(_holder, _spender, _amount);\n    }\n\n    function _mint(address _to, uint256 _amount) public {\n        require(_to != address(0), \"ERC20: mint to the zero address\");\n\n        tSupply += _amount;\n\n        uint256 debaseTokenAmount = _fragmentToDebaseToken(_amount);\n        if (isExcludedFromDebasing[_to]) {\n            excludeDebasingSupply += _amount;\n            debaseTokenAmount = _fragmentToDebaseToken(_amount);\n        }\n\n        _balances[_to] += debaseTokenAmount;\n\n        emit Mint(_to, _amount);\n        if (_to != treasuryWallet) {\n            emit Transfer(address(0), _to, _amount);\n        }\n    }\n\n    function _burn(address _from, uint256 _amount) public {\n        require(_from != address(0), \"ERC20: burn from the zero address\");\n\n        tSupply -= _amount;\n\n        uint256 debaseTokenAmount = _fragmentToDebaseToken(_amount);\n        if (isExcludedFromDebasing[_from]) {\n            excludeDebasingSupply -= _amount;\n            debaseTokenAmount = _fragmentToDebaseToken(_amount);\n        }\n\n        _balances[_from] -= debaseTokenAmount;\n\n        emit Burn(_from, _amount);\n        emit Transfer(_from, address(0), _amount);\n    }\n\n    function _transfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) public whenNotPaused {\n        require(_from != address(0), \"ERC20: transfer from the zero address\");\n        require(_to != address(0), \"ERC20: transfer to the zero address\");\n\n        if (balanceOf(_from) < _amount) {\n            revert(\"Insufficient Funds For Transfer\");\n        }\n\n        if (\n            balanceOf(_to) >= holdingLimit && !isExcludedFromHoldingLimit[_to]\n        ) {\n            revert(\"Holding Tokens exceeded!\");\n        }\n\n        uint256 amount = _amount;\n\n        if (\n            !isExcludedFromHoldingLimit[_to] &&\n            balanceOf(_to) + amount > holdingLimit\n        ) {\n            amount = amount - (balanceOf(_to) + amount - holdingLimit);\n        }\n\n        uint256 debaseToken = _fragmentToDebaseToken(amount);\n        if (isExcludedFromDebasing[_from]) {\n            debaseToken = _fragmentToDebaseToken(amount);\n        }\n\n        uint256 sellTax = 0;\n\n        if (_from != owner() && lpPools[_to]) {\n            sellTax = (amount * sellTaxRate) / PERCENTAGE_DENOMINATOR;\n        }\n\n        uint256 amountAfterTax = amount - sellTax;\n        uint256 debaseTokenAfterTax = _fragmentToDebaseToken(amountAfterTax);\n        uint256 adjustedBalance = isExcludedFromDebasing[_to]\n            ? _fragmentToDebaseToken(amountAfterTax)\n            : debaseTokenAfterTax;\n\n        _balances[_from] -= debaseToken;\n\n        if (isExcludedFromDebasing[_to]) {\n            _balances[_to] += adjustedBalance;\n        } else {\n            _balances[_to] += debaseTokenAfterTax;\n        }\n\n        treasuryBalance += sellTax;\n        tSupply -= sellTax;\n\n        emit Transfer(_from, _to, amountAfterTax);\n\n        if (sellTax > 0) {\n            emit Transfer(_from, treasuryWallet, sellTax);\n        }\n\n        // Tracking of excluded Debasing\n        if (!isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to]) {\n            excludeDebasingSupply += amountAfterTax;\n        } else if (isExcludedFromDebasing[_from] && !isExcludedFromDebasing[_to]) {\n            excludeDebasingSupply -= amountAfterTax;\n        } else if (isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to]) {\n            // If both are excluded, no need to adjust excludeDebasingSupply\n        } else {\n            // If both are not excluded, no need to adjust excludeDebasingSupply\n        }\n\n        if (treasuryBalance > 0) {\n            _sendTokensTreasuryWallet(treasuryBalance, treasuryWallet);\n        }\n    }\n\n    function _sendTokensTreasuryWallet(uint256 _amount, address _to) public {\n        require(treasuryBalance >= _amount, \"Insufficient Balance to claim\");\n        treasuryBalance -= _amount;\n        _mint(_to, _amount);\n    }\n\n    function claimFromTreasury(\n        address _to,\n        uint256 _amount\n    ) external whenNotPaused onlyTreasuryOperator {\n        if (treasuryBalance > 0) {\n            _sendTokensTreasuryWallet(treasuryBalance, treasuryWallet);\n        }\n\n        if (isExcludedFromDebasing[_to]) {\n            _balances[_to] += _fragmentToDebaseToken(_amount);\n        } else {\n            _balances[_to] += _fragmentToDebaseToken(_amount);\n            // adjusting the debasing supply.\n            excludeDebasingSupply -= _amount;\n        }\n\n        _balances[treasuryWallet] -= _fragmentToDebaseToken(_amount);\n\n        emit Transfer(treasuryWallet, _to, _amount);\n    }\n\n    function checkUpkeep(\n        bytes calldata checkData\n    )\n        external\n        view\n        override\n        returns (bool upkeepNeeded, bytes memory performData)\n    {\n        upkeepNeeded = (block.timestamp - lastTimeStamp) > debaseDuration;\n        performData = checkData;\n\n        return (upkeepNeeded, performData);\n    }\n\n    function performUpkeep(bytes calldata /* performData */) external override {\n        //We highly recommend revalidating the upkeep in the performUpkeep function\n        require(\n            (block.timestamp - lastTimeStamp) > debaseDuration,\n            \"KeepUp requirement is not met!\"\n        );\n\n        require(tSupply >= excludeDebasingSupply, \"tSupply must be greater than or equal to excludeDebasingSupply\");\n\n         _debase();\n\n        lastTimeStamp = block.timestamp;\n    }\n\n    function _debase() private whenNotPaused {\n        \n        uint256 ratio = (debaseRate * TOKEN_DECIMALS) / PERCENTAGE_DENOMINATOR;\n\n        uint256 preDebasingSupply = tSupply - excludeDebasingSupply;\n\n        tokenScalingFactor =\n            (tokenScalingFactor * (TOKEN_DECIMALS - ratio)) /\n            TOKEN_DECIMALS;\n        uint256 debasingSupply = (preDebasingSupply *\n            (TOKEN_DECIMALS - ratio)) / TOKEN_DECIMALS;\n\n        uint256 debasedTokenAmount = preDebasingSupply - debasingSupply;\n\n        treasuryBalance += debasedTokenAmount;\n        tSupply -= debasedTokenAmount;\n    }\n\n    // 10^24 --> 10^18\n    function _debaseTokenToFragment(uint256 _debaseToken) public view returns (uint256) {\n        return _debaseToken.mul(tokenScalingFactor).div(TOKEN_public_DECIMALS);\n    }\n    \n    function _fragmentToDebaseToken(uint256 _value) public pure returns (uint256) {\n        return _value.mul(TOKEN_public_DECIMALS).div(TOKEN_DECIMALS);\n    }\n\n    /*\n     * Contract Owner Settings\n     */\n\n    function updateSellTaxRate(uint256 _sellTaxRate) external onlyOwner {\n        // 100 : 1%\n        require(\n            _sellTaxRate <= 5000,\n            \"Rate should be less than PERCENTAGE_DENOMINATOR\"\n        );\n        sellTaxRate = _sellTaxRate;\n    }\n\n    function updateHoldingLimit(uint256 _holdingLimit) external onlyOwner {\n        holdingLimit = _holdingLimit;\n    }\n\n    function updateDebaseRate(uint256 _debaseRate) external onlyOwner {\n        // 100 : 1%\n        require(_debaseRate <= PERCENTAGE_DENOMINATOR,\"Rate should be less than PERCENTAGE_DENOMINATOR\");\n        debaseRate = _debaseRate;\n    }\n\n    function updateDebaseDuration(uint256 _debaseDuration) external onlyOwner {\n        debaseDuration = _debaseDuration;\n    }\n\n    function updateLPPool(address _lpPool, bool _isLPPool) external onlyOwner {\n        require(_lpPool != address(0), \"LP Pool address shouldn't be zero!\");\n        lpPools[_lpPool] = _isLPPool;\n        _excludedFromDebasing(_lpPool, _isLPPool);\n        _excludedFromHoldingLimit(_lpPool, _isLPPool);\n    }\n\n    function updateTreasuryOperator( address _addr,  bool _isOperator) external onlyOwner {\n        require(_addr != address(0), \"Operator shouldn't be zero.\");\n        treasuryOperator[_addr] = _isOperator;\n    }\n\n    function _excludedFromDebasing(address _account,bool _isExcluded) public {\n        \n        require(_account != address(0), \"Account shouldn't be zero.\");\n        bool prevIsExcluded = isExcludedFromDebasing[_account];\n        uint256 prevBalance = balanceOf(_account);\n\n        \n        if (prevIsExcluded != _isExcluded) {\n            isExcludedFromDebasing[_account] = _isExcluded;\n    \n            if (!prevIsExcluded && _isExcluded) {\n  \n                excludeDebasingSupply += prevBalance;\n                \n            } else if (prevIsExcluded && !_isExcluded) {\n\n                excludeDebasingSupply -= prevBalance;\n            }\n        }\n    }\n\n    function multiExcludedFromDebasing(\n        address[] memory _accounts,\n        bool _isExcluded\n    ) public onlyOwner {\n        for (uint i = 0; i < _accounts.length; ++i) {\n            require(_accounts[i] != treasuryWallet, \"Treasury wallet cannot be included in debasing\");\n            _excludedFromDebasing(_accounts[i], _isExcluded);\n        }\n    }\n\n    function _excludedFromHoldingLimit(address _account,bool _isExcluded) public {\n        \n        require(_account != address(0), \"Account shouldn't be zero.\");\n        isExcludedFromHoldingLimit[_account] = _isExcluded;\n    }\n\n    function multiExcludedFromHoldingLimit(address[] memory _accounts, bool _isExcluded) public onlyOwner {\n        \n        for (uint i = 0; i < _accounts.length; ++i) {\n            _excludedFromHoldingLimit(_accounts[i], _isExcluded);\n        }\n    }\n\n    function multiAirdropTokenRequested(\n        address[] memory _airdroppers,\n        uint256[] memory _amounts\n    ) external nonReentrant whenNotPaused {\n        require(_airdroppers.length == _amounts.length, \"Arrays length mismatch\");\n\n        uint256 totalAmount = 0;\n        for (uint256 i = 0; i < _amounts.length; ++i) {\n            totalAmount += _amounts[i];\n        }\n    \n        require(balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\");\n\n        for (uint256 i = 0; i < _airdroppers.length; ++i) {\n            if (balanceOf(msg.sender) > _amounts[i]) {\n                if (isExcludedFromDebasing[msg.sender]) {\n                    _balances[msg.sender] -= _fragmentToDebaseToken(\n                        _amounts[i]\n                    );\n                    excludeDebasingSupply -= _amounts[i];\n                } else {\n                    _balances[msg.sender] -= _fragmentToDebaseToken(\n                        _amounts[i]\n                    );\n                }\n\n                if (isExcludedFromDebasing[_airdroppers[i]]) {\n                    _balances[\n                        _airdroppers[i]\n                    ] += _fragmentToDebaseToken(_amounts[i]);\n                    excludeDebasingSupply += _amounts[i];\n                } else {\n                    _balances[_airdroppers[i]] += _fragmentToDebaseToken(\n                        _amounts[i]\n                    );\n                }\n\n                emit Transfer(msg.sender, _airdroppers[i], _amounts[i]);\n            }\n        }\n    }\n\n    function setLastTime() external onlyOwner {\n        require(lastTimeStamp <= block.timestamp);\n        lastTimeStamp = block.timestamp;\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    /*\n     * View functions\n     */\n    function getOwner() external view returns (address) {\n        return owner();\n    }\n\n    function _treasuryBalanceOf() public view returns (uint256) {\n        uint256 realBalance = _debaseTokenToFragment(\n            _balances[treasuryWallet]\n        );\n        return treasuryBalance + realBalance;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol": {
				"content": "// SPDX-License-Identifier: MIT\n/**\n * @notice This is a deprecated interface. Please use AutomationCompatible directly.\n */\npragma solidity ^0.8.0;\n// solhint-disable-next-line no-unused-import\nimport {AutomationCompatible as KeeperCompatible} from \"./AutomationCompatible.sol\";\n// solhint-disable-next-line no-unused-import\nimport {AutomationBase as KeeperBase} from \"./AutomationBase.sol\";\n// solhint-disable-next-line no-unused-import\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position is the index of the value in the `values` array plus 1.\n        // Position 0 is used to mean a value is not in the set.\n        mapping(bytes32 value => uint256) _positions;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._positions[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We cache the value's position to prevent multiple reads from the same storage slot\n        uint256 position = set._positions[value];\n\n        if (position != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 valueIndex = position - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (valueIndex != lastIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the lastValue to the index where the value to delete is\n                set._values[valueIndex] = lastValue;\n                // Update the tracked position of the lastValue (that was just moved)\n                set._positions[lastValue] = position;\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the tracked position for the deleted slot\n            delete set._positions[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._positions[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function _preventExecution() internal view {\n    // solhint-disable-next-line avoid-tx-origin\n    if (tx.origin != address(0) && tx.origin != address(0x1111111111111111111111111111111111111111)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    _preventExecution();\n    _;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport {AutomationBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"AutomationBase": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":57:691  contract AutomationBase {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":57:691  contract AutomationBase {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122083eb6c71a58a0f3d35b744d5d4c67d77f521a1a41e44d247436bc8a12f656cda64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea264697066735822122083eb6c71a58a0f3d35b744d5d4c67d77f521a1a41e44d247436bc8a12f656cda64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xEB PUSH13 0x71A58A0F3D35B744D5D4C67D77 CREATE2 0x21 LOG1 LOG4 0x1E PREVRANDAO 0xD2 SELFBALANCE NUMBER PUSH12 0xC8A12F656CDA64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:634:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea264697066735822122083eb6c71a58a0f3d35b744d5d4c67d77f521a1a41e44d247436bc8a12f656cda64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xEB PUSH13 0x71A58A0F3D35B744D5D4C67D77 CREATE2 0x21 LOG1 LOG4 0x1E PREVRANDAO 0xD2 SELFBALANCE NUMBER PUSH12 0xC8A12F656CDA64736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "57:634:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							},
							"internal": {
								"_preventExecution()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57,
									"end": 691,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57,
									"end": 691,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083eb6c71a58a0f3d35b744d5d4c67d77f521a1a41e44d247436bc8a12f656cda64736f6c634300081a0033",
									".code": [
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57,
											"end": 691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57,
											"end": 691,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57,
											"end": 691,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"SmartContractsInterview/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"AutomationCompatible": {
					"abi": [
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"AutomationCompatibleInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"performUpkeep(bytes)": {
								"details": "The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.",
								"params": {
									"performData": "is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"checkUpkeep(bytes)": "6e04ff0d",
							"performUpkeep(bytes)": "4585e33b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							},
							"performUpkeep(bytes)": {
								"notice": "method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."
							}
						},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 84,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 241,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 342,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD EQ TSTORE SAR 0x22 PUSH24 0x2CF1B55E46313DE1B6C23FCFACF215042DAA6F051E691E04 SLOAD 0xAE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "482:6210:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD EQ TSTORE SAR 0x22 PUSH24 0x2CF1B55E46313DE1B6C23FCFACF215042DAA6F051E691E04 SLOAD 0xAE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "482:6210:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001145d1d22772cf1b55e46313de1b6c23fcfacf215042daa6f051e691e0454ae64736f6c634300081a0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"SmartContractsInterview/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":1330:12970  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d4d34df0be7845998f58b6b0d3b2b015d0c4c5d760a7f4ce187bb95d1cdb591364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d4d34df0be7845998f58b6b0d3b2b015d0c4c5d760a7f4ce187bb95d1cdb591364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD3 0x4D CREATE 0xBE PUSH25 0x45998F58B6B0D3B2B015D0C4C5D760A7F4CE187BB95D1CDB59 SGT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1330:11640:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1330:11640:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d4d34df0be7845998f58b6b0d3b2b015d0c4c5d760a7f4ce187bb95d1cdb591364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 0xD3 0x4D CREATE 0xBE PUSH25 0x45998F58B6B0D3B2B015D0C4C5D760A7F4CE187BB95D1CDB59 SGT PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "1330:11640:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1330,
									"end": 12970,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d4d34df0be7845998f58b6b0d3b2b015d0c4c5d760a7f4ce187bb95d1cdb591364736f6c634300081a0033",
									".code": [
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 12970,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"SmartContractsInterview/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"SmartContractsInterview/Token.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_tokenSymbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_tSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_tokenOwner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_sellTaxRate",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_debaseRate",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_treasuryWallet",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "OnlySimulatedBackend",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "PERCENTAGE_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN_DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN_public_DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "_approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "_burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_debaseToken",
									"type": "uint256"
								}
							],
							"name": "_debaseTokenToFragment",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isExcluded",
									"type": "bool"
								}
							],
							"name": "_excludedFromDebasing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isExcluded",
									"type": "bool"
								}
							],
							"name": "_excludedFromHoldingLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"name": "_fragmentToDebaseToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "_mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "_sendTokensTreasuryWallet",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "_transfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_treasuryBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_account",
									"type": "address"
								}
							],
							"name": "balanceOfUnderlying",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "checkData",
									"type": "bytes"
								}
							],
							"name": "checkUpkeep",
							"outputs": [
								{
									"internalType": "bool",
									"name": "upkeepNeeded",
									"type": "bool"
								},
								{
									"internalType": "bytes",
									"name": "performData",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "claimFromTreasury",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debaseDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "debaseRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "excludeDebasingSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "holdingLimit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromDebasing",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isExcludedFromHoldingLimit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeStamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lpPools",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_airdroppers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "multiAirdropTokenRequested",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_accounts",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_isExcluded",
									"type": "bool"
								}
							],
							"name": "multiExcludedFromDebasing",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_accounts",
									"type": "address[]"
								},
								{
									"internalType": "bool",
									"name": "_isExcluded",
									"type": "bool"
								}
							],
							"name": "multiExcludedFromHoldingLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "performUpkeep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sellTaxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "setLastTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenScalingFactor",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "treasuryOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_debaseDuration",
									"type": "uint256"
								}
							],
							"name": "updateDebaseDuration",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_debaseRate",
									"type": "uint256"
								}
							],
							"name": "updateDebaseRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_holdingLimit",
									"type": "uint256"
								}
							],
							"name": "updateHoldingLimit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lpPool",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isLPPool",
									"type": "bool"
								}
							],
							"name": "updateLPPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_sellTaxRate",
									"type": "uint256"
								}
							],
							"name": "updateSellTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isOperator",
									"type": "bool"
								}
							],
							"name": "updateTreasuryOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"checkUpkeep(bytes)": {
								"details": "To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.",
								"params": {
									"checkData": "specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."
								},
								"returns": {
									"performData": "bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.",
									"upkeepNeeded": "boolean to indicate whether the keeper should call performUpkeep or not."
								}
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"name": {
								"details": "Returns the name of the token."
							},
							"symbol": {
								"details": "Returns the symbol of the token."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"SmartContractsInterview/Token.sol\":559:17443  contract Token is... */\n  mstore(0x40, 0x80)\n    /* \"SmartContractsInterview/Token.sol\":1968:3125  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2211:2221  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2271:2322   */\n  mstore\n    /* \"#utility.yul\":2244:2262   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_14:\n  pop\n    /* \"SmartContractsInterview/Token.sol\":2232:2236  name */\n  0x03\n    /* \"SmartContractsInterview/Token.sol\":2232:2249  name = _tokenName */\n  tag_17\n    /* \"SmartContractsInterview/Token.sol\":2239:2249  _tokenName */\n  dup9\n    /* \"SmartContractsInterview/Token.sol\":2232:2236  name */\n  dup3\n    /* \"SmartContractsInterview/Token.sol\":2232:2249  name = _tokenName */\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n    /* \"SmartContractsInterview/Token.sol\":2259:2265  symbol */\n  0x04\n    /* \"SmartContractsInterview/Token.sol\":2259:2280  symbol = _tokenSymbol */\n  tag_19\n    /* \"SmartContractsInterview/Token.sol\":2268:2280  _tokenSymbol */\n  dup8\n    /* \"SmartContractsInterview/Token.sol\":2259:2265  symbol */\n  dup3\n    /* \"SmartContractsInterview/Token.sol\":2259:2280  symbol = _tokenSymbol */\n  tag_18\n  jump\t// in\ntag_19:\n  pop\n    /* \"SmartContractsInterview/Token.sol\":2302:2304  18 */\n  0x12\n    /* \"SmartContractsInterview/Token.sol\":2290:2299  _decimals */\n  0x05\n    /* \"SmartContractsInterview/Token.sol\":2290:2304  _decimals = 18 */\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2325:2350  _tSupply * TOKEN_DECIMALS */\n  tag_20\n    /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n  0x0de0b6b3a7640000\n    /* \"SmartContractsInterview/Token.sol\":2325:2333  _tSupply */\n  dup7\n    /* \"SmartContractsInterview/Token.sol\":2325:2350  _tSupply * TOKEN_DECIMALS */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"SmartContractsInterview/Token.sol\":2315:2322  tSupply */\n  0x06\n    /* \"SmartContractsInterview/Token.sol\":2315:2350  tSupply = _tSupply * TOKEN_DECIMALS */\n  dup2\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2360:2381  excludeDebasingSupply */\n  0x07\n    /* \"SmartContractsInterview/Token.sol\":2360:2391  excludeDebasingSupply = tSupply */\n  dup2\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":808:813  10000 */\n  0x2710\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":2418:2431  tSupply * 100 */\n  tag_22\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":2428:2431  100 */\n  0x64\n    /* \"SmartContractsInterview/Token.sol\":2418:2431  tSupply * 100 */\n  tag_21\n  jump\t// in\ntag_22:\n    /* \"SmartContractsInterview/Token.sol\":2417:2457  (tSupply * 100) / PERCENTAGE_DENOMINATOR */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"SmartContractsInterview/Token.sol\":2402:2414  holdingLimit */\n  0x10\n    /* \"SmartContractsInterview/Token.sol\":2402:2457  holdingLimit = (tSupply * 100) / PERCENTAGE_DENOMINATOR */\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2468:2479  sellTaxRate */\n  0x0c\n    /* \"SmartContractsInterview/Token.sol\":2468:2494  sellTaxRate = _sellTaxRate */\n  dup4\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2504:2514  debaseRate */\n  0x0d\n    /* \"SmartContractsInterview/Token.sol\":2504:2528  debaseRate = _debaseRate */\n  dup3\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n  0x0de0b6b3a7640000\n    /* \"SmartContractsInterview/Token.sol\":2539:2557  tokenScalingFactor */\n  0x0e\n    /* \"SmartContractsInterview/Token.sol\":2539:2574  tokenScalingFactor = TOKEN_DECIMALS */\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2601:2606  86400 */\n  0x015180\n    /* \"SmartContractsInterview/Token.sol\":2584:2598  debaseDuration */\n  0x0f\n    /* \"SmartContractsInterview/Token.sol\":2584:2606  debaseDuration = 86400 */\n  sstore\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":2616:2631  treasuryBalance */\n  0x0a\n    /* \"SmartContractsInterview/Token.sol\":2616:2635  treasuryBalance = 0 */\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2662:2677  block.timestamp */\n  timestamp\n    /* \"SmartContractsInterview/Token.sol\":2646:2659  lastTimeStamp */\n  0x15\n    /* \"SmartContractsInterview/Token.sol\":2646:2677  lastTimeStamp = block.timestamp */\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2688:2702  treasuryWallet */\n  0x0b\n    /* \"SmartContractsInterview/Token.sol\":2688:2720  treasuryWallet = _treasuryWallet */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  or\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":2731:2771  _excludedFromDebasing(_tokenOwner, true) */\n  tag_25\n    /* \"SmartContractsInterview/Token.sol\":2753:2764  _tokenOwner */\n  dup5\n  0x01\n    /* \"SmartContractsInterview/Token.sol\":2731:2752  _excludedFromDebasing */\n  tag_26\n    /* \"SmartContractsInterview/Token.sol\":2731:2771  _excludedFromDebasing(_tokenOwner, true) */\n  jump\t// in\ntag_25:\n    /* \"SmartContractsInterview/Token.sol\":2781:2825  _excludedFromHoldingLimit(_tokenOwner, true) */\n  tag_27\n    /* \"SmartContractsInterview/Token.sol\":2807:2818  _tokenOwner */\n  dup5\n    /* \"SmartContractsInterview/Token.sol\":2820:2824  true */\n  0x01\n    /* \"SmartContractsInterview/Token.sol\":2781:2806  _excludedFromHoldingLimit */\n  tag_28\n    /* \"SmartContractsInterview/Token.sol\":2781:2825  _excludedFromHoldingLimit(_tokenOwner, true) */\n  jump\t// in\ntag_27:\n    /* \"SmartContractsInterview/Token.sol\":2857:2871  treasuryWallet */\n  sload(0x0b)\n    /* \"SmartContractsInterview/Token.sol\":2835:2878  _excludedFromDebasing(treasuryWallet, true) */\n  tag_29\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":2857:2871  treasuryWallet */\n  and\n  0x01\n    /* \"SmartContractsInterview/Token.sol\":2835:2856  _excludedFromDebasing */\n  tag_26\n    /* \"SmartContractsInterview/Token.sol\":2835:2878  _excludedFromDebasing(treasuryWallet, true) */\n  jump\t// in\ntag_29:\n    /* \"SmartContractsInterview/Token.sol\":2914:2928  treasuryWallet */\n  sload(0x0b)\n    /* \"SmartContractsInterview/Token.sol\":2888:2935  _excludedFromHoldingLimit(treasuryWallet, true) */\n  tag_30\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":2914:2928  treasuryWallet */\n  and\n  0x01\n    /* \"SmartContractsInterview/Token.sol\":2888:2913  _excludedFromHoldingLimit */\n  tag_28\n    /* \"SmartContractsInterview/Token.sol\":2888:2935  _excludedFromHoldingLimit(treasuryWallet, true) */\n  jump\t// in\ntag_30:\n    /* \"SmartContractsInterview/Token.sol\":2994:3001  tSupply */\n  sload(0x06)\n    /* \"SmartContractsInterview/Token.sol\":2971:3002  _fragmentToDebaseToken(tSupply) */\n  tag_31\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":2971:2993  _fragmentToDebaseToken */\n  tag_32\n    /* \"SmartContractsInterview/Token.sol\":2971:3002  _fragmentToDebaseToken(tSupply) */\n  jump\t// in\ntag_31:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":2946:2968  _balances[_tokenOwner] */\n  dup6\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":2946:2955  _balances */\n  0x09\n    /* \"SmartContractsInterview/Token.sol\":2946:2968  _balances[_tokenOwner] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"SmartContractsInterview/Token.sol\":2946:3002  _balances[_tokenOwner] = _fragmentToDebaseToken(tSupply) */\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":3013:3020  pause() */\n  tag_33\n    /* \"SmartContractsInterview/Token.sol\":3013:3018  pause */\n  tag_34\n    /* \"SmartContractsInterview/Token.sol\":3013:3020  pause() */\n  jump\t// in\ntag_33:\n    /* \"SmartContractsInterview/Token.sol\":3057:3068  _tokenOwner */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":3036:3078  Transfer(address(0), _tokenOwner, tSupply) */\n  and\n    /* \"SmartContractsInterview/Token.sol\":3053:3054  0 */\n  0x00\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":3036:3078  Transfer(address(0), _tokenOwner, tSupply) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"SmartContractsInterview/Token.sol\":3070:3077  tSupply */\n  sload(0x06)\n    /* \"SmartContractsInterview/Token.sol\":3036:3078  Transfer(address(0), _tokenOwner, tSupply) */\n  mload(0x40)\n  tag_35\n  swap2\n    /* \"#utility.yul\":5515:5540   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5503:5505   */\n  0x20\n    /* \"#utility.yul\":5488:5506   */\n  add\n  swap1\n    /* \"#utility.yul\":5369:5546   */\n  jump\n    /* \"SmartContractsInterview/Token.sol\":3036:3078  Transfer(address(0), _tokenOwner, tSupply) */\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"SmartContractsInterview/Token.sol\":3088:3118  transferOwnership(_tokenOwner) */\n  tag_37\n    /* \"SmartContractsInterview/Token.sol\":3106:3117  _tokenOwner */\n  dup5\n    /* \"SmartContractsInterview/Token.sol\":3088:3105  transferOwnership */\n  tag_38\n    /* \"SmartContractsInterview/Token.sol\":3088:3118  transferOwnership(_tokenOwner) */\n  jump\t// in\ntag_37:\n    /* \"SmartContractsInterview/Token.sol\":1968:3125  constructor(... */\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"SmartContractsInterview/Token.sol\":559:17443  contract Token is... */\n  jump(tag_126)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x02\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  and\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":13779:14434  function _excludedFromDebasing(address _account,bool _isExcluded) public {... */\ntag_26:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":13879:13901  _account != address(0) */\n  dup3\n  and\n    /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n  tag_42\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5753:5755   */\n  0x20\n    /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5735:5756   */\n  mstore\n    /* \"#utility.yul\":5792:5794   */\n  0x1a\n    /* \"#utility.yul\":5772:5790   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5765:5795   */\n  mstore\n    /* \"#utility.yul\":5831:5859   */\n  0x4163636f756e742073686f756c646e2774206265207a65726f2e000000000000\n    /* \"#utility.yul\":5811:5829   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5804:5860   */\n  mstore\n    /* \"#utility.yul\":5877:5895   */\n  0x64\n  add\n    /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n  tag_12\n    /* \"#utility.yul\":5551:5901   */\n  jump\n    /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":13964:13996  isExcludedFromDebasing[_account] */\n  dup3\n  and\n    /* \"SmartContractsInterview/Token.sol\":13942:13961  bool prevIsExcluded */\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":13964:13996  isExcludedFromDebasing[_account] */\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":13964:13986  isExcludedFromDebasing */\n  0x12\n    /* \"SmartContractsInterview/Token.sol\":13964:13996  isExcludedFromDebasing[_account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":14028:14047  balanceOf(_account) */\n  tag_45\n    /* \"SmartContractsInterview/Token.sol\":13987:13995  _account */\n  dup5\n    /* \"SmartContractsInterview/Token.sol\":14028:14037  balanceOf */\n  tag_46\n    /* \"SmartContractsInterview/Token.sol\":14028:14047  balanceOf(_account) */\n  jump\t// in\ntag_45:\n    /* \"SmartContractsInterview/Token.sol\":14006:14047  uint256 prevBalance = balanceOf(_account) */\n  swap1\n  pop\n    /* \"SmartContractsInterview/Token.sol\":14089:14100  _isExcluded */\n  dup3\n    /* \"SmartContractsInterview/Token.sol\":14071:14100  prevIsExcluded != _isExcluded */\n  iszero\n  iszero\n    /* \"SmartContractsInterview/Token.sol\":14071:14085  prevIsExcluded */\n  dup3\n    /* \"SmartContractsInterview/Token.sol\":14071:14100  prevIsExcluded != _isExcluded */\n  iszero\n  iszero\n  eq\n    /* \"SmartContractsInterview/Token.sol\":14067:14428  if (prevIsExcluded != _isExcluded) {... */\n  tag_54\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":14116:14148  isExcludedFromDebasing[_account] */\n  dup5\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":14116:14138  isExcludedFromDebasing */\n  0x12\n    /* \"SmartContractsInterview/Token.sol\":14116:14148  isExcludedFromDebasing[_account] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"SmartContractsInterview/Token.sol\":14116:14162  isExcludedFromDebasing[_account] = _isExcluded */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup5\n  iszero\n  iszero\n  or\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":14185:14200  !prevIsExcluded */\n  dup2\n  iszero\n    /* \"SmartContractsInterview/Token.sol\":14185:14215  !prevIsExcluded && _isExcluded */\n  dup1\n  iszero\n  tag_48\n  jumpi\n  pop\n    /* \"SmartContractsInterview/Token.sol\":14204:14215  _isExcluded */\n  dup3\n    /* \"SmartContractsInterview/Token.sol\":14185:14215  !prevIsExcluded && _isExcluded */\ntag_48:\n    /* \"SmartContractsInterview/Token.sol\":14181:14418  if (!prevIsExcluded && _isExcluded) {... */\n  iszero\n  tag_49\n  jumpi\n    /* \"SmartContractsInterview/Token.sol\":14263:14274  prevBalance */\n  dup1\n    /* \"SmartContractsInterview/Token.sol\":14238:14259  excludeDebasingSupply */\n  0x07\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":14238:14274  excludeDebasingSupply += prevBalance */\n  dup3\n  dup3\n  sload\n  tag_50\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_50:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"SmartContractsInterview/Token.sol\":14181:14418  if (!prevIsExcluded && _isExcluded) {... */\n  tag_54\n  swap1\n  pop\n  jump\ntag_49:\n    /* \"SmartContractsInterview/Token.sol\":14316:14330  prevIsExcluded */\n  dup2\n    /* \"SmartContractsInterview/Token.sol\":14316:14346  prevIsExcluded && !_isExcluded */\n  dup1\n  iszero\n  tag_53\n  jumpi\n  pop\n    /* \"SmartContractsInterview/Token.sol\":14335:14346  _isExcluded */\n  dup3\n    /* \"SmartContractsInterview/Token.sol\":14334:14346  !_isExcluded */\n  iszero\n    /* \"SmartContractsInterview/Token.sol\":14316:14346  prevIsExcluded && !_isExcluded */\ntag_53:\n    /* \"SmartContractsInterview/Token.sol\":14312:14418  if (prevIsExcluded && !_isExcluded) {... */\n  iszero\n  tag_54\n  jumpi\n    /* \"SmartContractsInterview/Token.sol\":14392:14403  prevBalance */\n  dup1\n    /* \"SmartContractsInterview/Token.sol\":14367:14388  excludeDebasingSupply */\n  0x07\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":14367:14403  excludeDebasingSupply -= prevBalance */\n  dup3\n  dup3\n  sload\n  tag_55\n  swap2\n  swap1\n  tag_56\n  jump\t// in\ntag_55:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"SmartContractsInterview/Token.sol\":14312:14418  if (prevIsExcluded && !_isExcluded) {... */\ntag_54:\n    /* \"SmartContractsInterview/Token.sol\":13852:14434  {... */\n  pop\n  pop\n    /* \"SmartContractsInterview/Token.sol\":13779:14434  function _excludedFromDebasing(address _account,bool _isExcluded) public {... */\n  pop\n  pop\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":14802:15026  function _excludedFromHoldingLimit(address _account,bool _isExcluded) public {... */\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":14906:14928  _account != address(0) */\n  dup3\n  and\n    /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n  tag_58\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5753:5755   */\n  0x20\n    /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5735:5756   */\n  mstore\n    /* \"#utility.yul\":5792:5794   */\n  0x1a\n    /* \"#utility.yul\":5772:5790   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5765:5795   */\n  mstore\n    /* \"#utility.yul\":5831:5859   */\n  0x4163636f756e742073686f756c646e2774206265207a65726f2e000000000000\n    /* \"#utility.yul\":5811:5829   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5804:5860   */\n  mstore\n    /* \"#utility.yul\":5877:5895   */\n  0x64\n  add\n    /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n  tag_12\n    /* \"#utility.yul\":5551:5901   */\n  jump\n    /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\ntag_58:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":14969:15005  isExcludedFromHoldingLimit[_account] */\n  swap2\n  swap1\n  swap2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":14969:14995  isExcludedFromHoldingLimit */\n  0x13\n    /* \"SmartContractsInterview/Token.sol\":14969:15005  isExcludedFromHoldingLimit[_account] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"SmartContractsInterview/Token.sol\":14969:15019  isExcludedFromHoldingLimit[_account] = _isExcluded */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap2\n  iszero\n  iszero\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"SmartContractsInterview/Token.sol\":14802:15026  function _excludedFromHoldingLimit(address _account,bool _isExcluded) public {... */\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":12297:12452  function _fragmentToDebaseToken(uint256 _value) public pure returns (uint256) {... */\ntag_32:\n    /* \"SmartContractsInterview/Token.sol\":12366:12373  uint256 */\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":12392:12445  _value.mul(TOKEN_public_DECIMALS).div(TOKEN_DECIMALS) */\n  tag_61\n    /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n  0x0de0b6b3a7640000\n    /* \"SmartContractsInterview/Token.sol\":12392:12425  _value.mul(TOKEN_public_DECIMALS) */\n  tag_62\n    /* \"SmartContractsInterview/Token.sol\":12392:12398  _value */\n  dup5\n    /* \"SmartContractsInterview/Token.sol\":918:922  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"SmartContractsInterview/Token.sol\":12392:12402  _value.mul */\n  tag_63\n    /* \"SmartContractsInterview/Token.sol\":12392:12425  _value.mul(TOKEN_public_DECIMALS) */\n  jump\t// in\ntag_62:\n    /* \"SmartContractsInterview/Token.sol\":12392:12429  _value.mul(TOKEN_public_DECIMALS).div */\n  swap1\n  tag_64\n    /* \"SmartContractsInterview/Token.sol\":12392:12445  _value.mul(TOKEN_public_DECIMALS).div(TOKEN_DECIMALS) */\n  jump\t// in\ntag_61:\n    /* \"SmartContractsInterview/Token.sol\":12385:12445  return _value.mul(TOKEN_public_DECIMALS).div(TOKEN_DECIMALS) */\n  swap3\n    /* \"SmartContractsInterview/Token.sol\":12297:12452  function _fragmentToDebaseToken(uint256 _value) public pure returns (uint256) {... */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":16965:17024  function pause() public onlyOwner {... */\ntag_34:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_66\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  tag_67\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  jump\t// in\ntag_66:\n    /* \"SmartContractsInterview/Token.sol\":17009:17017  _pause() */\n  tag_69\n    /* \"SmartContractsInterview/Token.sol\":17009:17015  _pause */\n  tag_70\n    /* \"SmartContractsInterview/Token.sol\":17009:17017  _pause() */\n  jump\t// in\ntag_69:\n    /* \"SmartContractsInterview/Token.sol\":16965:17024  function pause() public onlyOwner {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\ntag_38:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  tag_72\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n  tag_67\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n  jump\t// in\ntag_72:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n  tag_74\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2271:2322   */\n  mstore\n    /* \"#utility.yul\":2244:2262   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n  tag_12\n    /* \"#utility.yul\":2125:2328   */\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\ntag_74:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  tag_76\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n  jump\t// in\ntag_76:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n  pop\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":3675:4059  function balanceOf(... */\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":3779:3811  isExcludedFromDebasing[_account] */\n  dup2\n  and\n    /* \"SmartContractsInterview/Token.sol\":3756:3763  uint256 */\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":3779:3811  isExcludedFromDebasing[_account] */\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":3779:3801  isExcludedFromDebasing */\n  0x12\n    /* \"SmartContractsInterview/Token.sol\":3779:3811  isExcludedFromDebasing[_account] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"SmartContractsInterview/Token.sol\":3775:3993  if (isExcludedFromDebasing[_account]) {... */\n  iszero\n  tag_79\n  jumpi\n    /* \"SmartContractsInterview/Token.sol\":3843:3857  treasuryWallet */\n  sload(0x0b)\n  sub(shl(0xa0, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"SmartContractsInterview/Token.sol\":3831:3857  _account == treasuryWallet */\n  swap1\n  dup4\n  and\n  sub\n    /* \"SmartContractsInterview/Token.sol\":3827:3919  if (_account == treasuryWallet) {... */\n  tag_79\n  jumpi\n    /* \"SmartContractsInterview/Token.sol\":3884:3904  _treasuryBalanceOf() */\n  tag_61\n    /* \"SmartContractsInterview/Token.sol\":3884:3902  _treasuryBalanceOf */\n  tag_81\n    /* \"SmartContractsInterview/Token.sol\":3884:3904  _treasuryBalanceOf() */\n  jump\t// in\n    /* \"SmartContractsInterview/Token.sol\":3827:3919  if (_account == treasuryWallet) {... */\ntag_79:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"SmartContractsInterview/Token.sol\":3962:3981  _balances[_account] */\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":3962:3971  _balances */\n  0x09\n    /* \"SmartContractsInterview/Token.sol\":3962:3981  _balances[_account] */\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"SmartContractsInterview/Token.sol\":3939:3982  _debaseTokenToFragment(_balances[_account]) */\n  tag_61\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":3939:3961  _debaseTokenToFragment */\n  tag_83\n    /* \"SmartContractsInterview/Token.sol\":3939:3982  _debaseTokenToFragment(_balances[_account]) */\n  jump\t// in\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_63:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n  tag_86\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n  tag_21\n  jump\t// in\ntag_86:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n  swap4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_64:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_86\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n  dup5\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n  tag_24\n  jump\t// in\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\ntag_67:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n  eq\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n  tag_69\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  mload(0x40)\n  shl(0xe0, 0x118cdaa7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2271:2322   */\n  mstore\n    /* \"#utility.yul\":2244:2262   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n  tag_12\n    /* \"#utility.yul\":2125:2328   */\n  jump\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\ntag_70:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  tag_98\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n  tag_99\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  jump\t// in\ntag_98:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n  0x01\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n  tag_101\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\ntag_101:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2289:2321   */\n  swap1\n  swap2\n  and\n    /* \"#utility.yul\":2271:2322   */\n  dup2\n  mstore\n    /* \"#utility.yul\":2259:2261   */\n  0x20\n    /* \"#utility.yul\":2244:2262   */\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":17225:17441  function _treasuryBalanceOf() public view returns (uint256) {... */\ntag_81:\n    /* \"SmartContractsInterview/Token.sol\":17363:17377  treasuryWallet */\n  and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n    /* \"SmartContractsInterview/Token.sol\":17276:17283  uint256 */\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":17353:17378  _balances[treasuryWallet] */\n  swap1\n  dup2\n  mstore\n    /* \"SmartContractsInterview/Token.sol\":17353:17362  _balances */\n  0x09\n    /* \"SmartContractsInterview/Token.sol\":17353:17378  _balances[treasuryWallet] */\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  sload\n    /* \"SmartContractsInterview/Token.sol\":17276:17283  uint256 */\n  dup2\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":17317:17388  _debaseTokenToFragment(... */\n  tag_104\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":17317:17339  _debaseTokenToFragment */\n  tag_83\n    /* \"SmartContractsInterview/Token.sol\":17317:17388  _debaseTokenToFragment(... */\n  jump\t// in\ntag_104:\n    /* \"SmartContractsInterview/Token.sol\":17295:17388  uint256 realBalance = _debaseTokenToFragment(... */\n  swap1\n  pop\n    /* \"SmartContractsInterview/Token.sol\":17423:17434  realBalance */\n  dup1\n    /* \"SmartContractsInterview/Token.sol\":17405:17420  treasuryBalance */\n  sload(0x0a)\n    /* \"SmartContractsInterview/Token.sol\":17405:17434  treasuryBalance + realBalance */\n  tag_105\n  swap2\n  swap1\n  tag_51\n  jump\t// in\ntag_105:\n    /* \"SmartContractsInterview/Token.sol\":17398:17434  return treasuryBalance + realBalance */\n  swap2\n  pop\n  pop\n    /* \"SmartContractsInterview/Token.sol\":17225:17441  function _treasuryBalanceOf() public view returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"SmartContractsInterview/Token.sol\":12116:12287  function _debaseTokenToFragment(uint256 _debaseToken) public view returns (uint256) {... */\ntag_83:\n    /* \"SmartContractsInterview/Token.sol\":12191:12198  uint256 */\n  0x00\n    /* \"SmartContractsInterview/Token.sol\":12217:12280  _debaseToken.mul(tokenScalingFactor).div(TOKEN_public_DECIMALS) */\n  tag_61\n    /* \"SmartContractsInterview/Token.sol\":918:922  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"SmartContractsInterview/Token.sol\":12217:12253  _debaseToken.mul(tokenScalingFactor) */\n  tag_62\n    /* \"SmartContractsInterview/Token.sol\":12234:12252  tokenScalingFactor */\n  sload(0x0e)\n    /* \"SmartContractsInterview/Token.sol\":12217:12229  _debaseToken */\n  dup6\n    /* \"SmartContractsInterview/Token.sol\":12217:12233  _debaseToken.mul */\n  shl(0x20, tag_63)\n  swap1\n    /* \"SmartContractsInterview/Token.sol\":12217:12253  _debaseToken.mul(tokenScalingFactor) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\ntag_99:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_69\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":6371:6373   */\n  0x20\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":6353:6374   */\n  mstore\n    /* \"#utility.yul\":6410:6412   */\n  0x10\n    /* \"#utility.yul\":6390:6408   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":6383:6413   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":6429:6447   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":6422:6468   */\n  mstore\n    /* \"#utility.yul\":6485:6503   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_12\n    /* \"#utility.yul\":6169:6509   */\n  jump\n    /* \"#utility.yul\":14:141   */\ntag_118:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_119:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_129\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_129:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_131\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_131\n  tag_118\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_133\n  tag_118\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_134:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1051   */\ntag_120:\n    /* \"#utility.yul\":953:966   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":995:1026   */\n  dup2\n  and\n    /* \"#utility.yul\":985:1027   */\n  dup2\n  eq\n    /* \"#utility.yul\":975:1045   */\n  tag_136\n  jumpi\n    /* \"#utility.yul\":1041:1042   */\n  0x00\n    /* \"#utility.yul\":1038:1039   */\n  dup1\n    /* \"#utility.yul\":1031:1043   */\n  revert\n    /* \"#utility.yul\":975:1045   */\ntag_136:\n    /* \"#utility.yul\":874:1051   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:2120   */\ntag_3:\n    /* \"#utility.yul\":1200:1206   */\n  0x00\n    /* \"#utility.yul\":1208:1214   */\n  dup1\n    /* \"#utility.yul\":1216:1222   */\n  0x00\n    /* \"#utility.yul\":1224:1230   */\n  dup1\n    /* \"#utility.yul\":1232:1238   */\n  0x00\n    /* \"#utility.yul\":1240:1246   */\n  dup1\n    /* \"#utility.yul\":1248:1254   */\n  0x00\n    /* \"#utility.yul\":1301:1304   */\n  0xe0\n    /* \"#utility.yul\":1289:1298   */\n  dup9\n    /* \"#utility.yul\":1280:1287   */\n  dup11\n    /* \"#utility.yul\":1276:1299   */\n  sub\n    /* \"#utility.yul\":1272:1305   */\n  slt\n    /* \"#utility.yul\":1269:1322   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":1318:1319   */\n  0x00\n    /* \"#utility.yul\":1315:1316   */\n  dup1\n    /* \"#utility.yul\":1308:1320   */\n  revert\n    /* \"#utility.yul\":1269:1322   */\ntag_138:\n    /* \"#utility.yul\":1345:1361   */\n  dup8\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1373:1403   */\n  dup2\n  gt\n    /* \"#utility.yul\":1370:1420   */\n  iszero\n  tag_139\n  jumpi\n    /* \"#utility.yul\":1416:1417   */\n  0x00\n    /* \"#utility.yul\":1413:1414   */\n  dup1\n    /* \"#utility.yul\":1406:1418   */\n  revert\n    /* \"#utility.yul\":1370:1420   */\ntag_139:\n    /* \"#utility.yul\":1439:1500   */\n  tag_140\n    /* \"#utility.yul\":1492:1499   */\n  dup11\n    /* \"#utility.yul\":1483:1489   */\n  dup3\n    /* \"#utility.yul\":1472:1481   */\n  dup12\n    /* \"#utility.yul\":1468:1490   */\n  add\n    /* \"#utility.yul\":1439:1500   */\n  tag_119\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":1546:1548   */\n  0x20\n    /* \"#utility.yul\":1531:1549   */\n  dup11\n  add\n    /* \"#utility.yul\":1525:1550   */\n  mload\n    /* \"#utility.yul\":1429:1500   */\n  swap1\n  swap9\n  pop\n    /* \"#utility.yul\":1525:1550   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1562:1594   */\n  dup2\n  gt\n    /* \"#utility.yul\":1559:1611   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":1607:1608   */\n  0x00\n    /* \"#utility.yul\":1604:1605   */\n  dup1\n    /* \"#utility.yul\":1597:1609   */\n  revert\n    /* \"#utility.yul\":1559:1611   */\ntag_141:\n    /* \"#utility.yul\":1630:1693   */\n  tag_142\n    /* \"#utility.yul\":1685:1692   */\n  dup11\n    /* \"#utility.yul\":1674:1682   */\n  dup3\n    /* \"#utility.yul\":1663:1672   */\n  dup12\n    /* \"#utility.yul\":1659:1683   */\n  add\n    /* \"#utility.yul\":1630:1693   */\n  tag_119\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":1755:1757   */\n  0x40\n    /* \"#utility.yul\":1740:1758   */\n  dup11\n  add\n    /* \"#utility.yul\":1734:1759   */\n  mload\n    /* \"#utility.yul\":1620:1693   */\n  swap1\n  swap8\n  pop\n    /* \"#utility.yul\":1734:1759   */\n  swap6\n  pop\n    /* \"#utility.yul\":1802:1851   */\n  tag_143\n  swap1\n  pop\n    /* \"#utility.yul\":1847:1849   */\n  0x60\n    /* \"#utility.yul\":1832:1850   */\n  dup10\n  add\n    /* \"#utility.yul\":1802:1851   */\n  tag_120\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":1917:1920   */\n  0x80\n    /* \"#utility.yul\":1902:1921   */\n  dup10\n  add\n    /* \"#utility.yul\":1896:1922   */\n  mload\n    /* \"#utility.yul\":2014:2017   */\n  0xa0\n    /* \"#utility.yul\":1999:2018   */\n  dup11\n  add\n    /* \"#utility.yul\":1993:2019   */\n  mload\n    /* \"#utility.yul\":1792:1851   */\n  swap2\n  swap6\n  pop\n    /* \"#utility.yul\":1896:1922   */\n  swap4\n  pop\n    /* \"#utility.yul\":1993:2019   */\n  swap2\n  pop\n    /* \"#utility.yul\":2064:2114   */\n  tag_144\n    /* \"#utility.yul\":2109:2112   */\n  0xc0\n    /* \"#utility.yul\":2094:2113   */\n  dup10\n  add\n    /* \"#utility.yul\":2064:2114   */\n  tag_120\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":2054:2114   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:2120   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2333:2713   */\ntag_121:\n    /* \"#utility.yul\":2412:2413   */\n  0x01\n    /* \"#utility.yul\":2408:2420   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2455:2467   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2476:2537   */\n  tag_147\n  jumpi\n    /* \"#utility.yul\":2530:2534   */\n  0x7f\n    /* \"#utility.yul\":2522:2528   */\n  dup3\n    /* \"#utility.yul\":2518:2535   */\n  and\n    /* \"#utility.yul\":2508:2535   */\n  swap2\n  pop\n    /* \"#utility.yul\":2476:2537   */\ntag_147:\n    /* \"#utility.yul\":2583:2585   */\n  0x20\n    /* \"#utility.yul\":2575:2581   */\n  dup3\n    /* \"#utility.yul\":2572:2586   */\n  lt\n    /* \"#utility.yul\":2552:2570   */\n  dup2\n    /* \"#utility.yul\":2549:2587   */\n  sub\n    /* \"#utility.yul\":2546:2707   */\n  tag_148\n  jumpi\n    /* \"#utility.yul\":2629:2639   */\n  0x4e487b71\n    /* \"#utility.yul\":2624:2627   */\n  0xe0\n    /* \"#utility.yul\":2620:2640   */\n  shl\n    /* \"#utility.yul\":2617:2618   */\n  0x00\n    /* \"#utility.yul\":2610:2641   */\n  mstore\n    /* \"#utility.yul\":2664:2668   */\n  0x22\n    /* \"#utility.yul\":2661:2662   */\n  0x04\n    /* \"#utility.yul\":2654:2669   */\n  mstore\n    /* \"#utility.yul\":2692:2696   */\n  0x24\n    /* \"#utility.yul\":2689:2690   */\n  0x00\n    /* \"#utility.yul\":2682:2697   */\n  revert\n    /* \"#utility.yul\":2546:2707   */\ntag_148:\n  pop\n    /* \"#utility.yul\":2333:2713   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2844:3362   */\ntag_123:\n    /* \"#utility.yul\":2946:2948   */\n  0x1f\n    /* \"#utility.yul\":2941:2944   */\n  dup3\n    /* \"#utility.yul\":2938:2949   */\n  gt\n    /* \"#utility.yul\":2935:3356   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":2982:2987   */\n  dup1\n    /* \"#utility.yul\":2979:2980   */\n  0x00\n    /* \"#utility.yul\":2972:2988   */\n  mstore\n    /* \"#utility.yul\":3026:3030   */\n  0x20\n    /* \"#utility.yul\":3023:3024   */\n  0x00\n    /* \"#utility.yul\":3013:3031   */\n  keccak256\n    /* \"#utility.yul\":3096:3098   */\n  0x1f\n    /* \"#utility.yul\":3084:3094   */\n  dup5\n    /* \"#utility.yul\":3080:3099   */\n  add\n    /* \"#utility.yul\":3077:3078   */\n  0x05\n    /* \"#utility.yul\":3073:3100   */\n  shr\n    /* \"#utility.yul\":3067:3071   */\n  dup2\n    /* \"#utility.yul\":3063:3101   */\n  add\n    /* \"#utility.yul\":3132:3136   */\n  0x20\n    /* \"#utility.yul\":3120:3130   */\n  dup6\n    /* \"#utility.yul\":3117:3137   */\n  lt\n    /* \"#utility.yul\":3114:3161   */\n  iszero\n  tag_152\n  jumpi\n  pop\n    /* \"#utility.yul\":3155:3159   */\n  dup1\n    /* \"#utility.yul\":3114:3161   */\ntag_152:\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3205:3208   */\n  dup5\n    /* \"#utility.yul\":3201:3213   */\n  add\n    /* \"#utility.yul\":3198:3199   */\n  0x05\n    /* \"#utility.yul\":3194:3214   */\n  shr\n    /* \"#utility.yul\":3188:3192   */\n  dup3\n    /* \"#utility.yul\":3184:3215   */\n  add\n    /* \"#utility.yul\":3174:3215   */\n  swap2\n  pop\n    /* \"#utility.yul\":3265:3346   */\ntag_153:\n    /* \"#utility.yul\":3283:3285   */\n  dup2\n    /* \"#utility.yul\":3276:3281   */\n  dup2\n    /* \"#utility.yul\":3273:3286   */\n  lt\n    /* \"#utility.yul\":3265:3346   */\n  iszero\n  tag_155\n  jumpi\n    /* \"#utility.yul\":3342:3343   */\n  0x00\n    /* \"#utility.yul\":3328:3344   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3309:3310   */\n  0x01\n    /* \"#utility.yul\":3298:3311   */\n  add\n    /* \"#utility.yul\":3265:3346   */\n  jump(tag_153)\ntag_155:\n    /* \"#utility.yul\":3269:3272   */\n  pop\n  pop\n    /* \"#utility.yul\":2935:3356   */\ntag_151:\n    /* \"#utility.yul\":2844:3362   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3538:4837   */\ntag_18:\n    /* \"#utility.yul\":3658:3668   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3680:3710   */\n  dup2\n  gt\n    /* \"#utility.yul\":3677:3733   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":3713:3731   */\n  tag_159\n  tag_118\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":3742:3839   */\n  tag_160\n    /* \"#utility.yul\":3832:3838   */\n  dup2\n    /* \"#utility.yul\":3792:3830   */\n  tag_161\n    /* \"#utility.yul\":3824:3828   */\n  dup5\n    /* \"#utility.yul\":3818:3829   */\n  sload\n    /* \"#utility.yul\":3792:3830   */\n  tag_121\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":3786:3790   */\n  dup5\n    /* \"#utility.yul\":3742:3839   */\n  tag_123\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":3888:3892   */\n  0x20\n    /* \"#utility.yul\":3919:3921   */\n  0x1f\n    /* \"#utility.yul\":3908:3922   */\n  dup3\n  gt\n    /* \"#utility.yul\":3936:3937   */\n  0x01\n    /* \"#utility.yul\":3931:4580   */\n  dup2\n  eq\n  tag_163\n  jumpi\n    /* \"#utility.yul\":4624:4625   */\n  0x00\n    /* \"#utility.yul\":4641:4647   */\n  dup4\n    /* \"#utility.yul\":4638:4727   */\n  iszero\n  tag_164\n  jumpi\n  pop\n    /* \"#utility.yul\":4693:4712   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":4687:4713   */\n  mload\n    /* \"#utility.yul\":4638:4727   */\ntag_164:\n  not(0x00)\n    /* \"#utility.yul\":3495:3496   */\n  0x03\n    /* \"#utility.yul\":3491:3502   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3487:3511   */\n  shr\n    /* \"#utility.yul\":3483:3512   */\n  not\n    /* \"#utility.yul\":3473:3513   */\n  and\n    /* \"#utility.yul\":3519:3520   */\n  0x01\n    /* \"#utility.yul\":3515:3526   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":3470:3527   */\n  or\n    /* \"#utility.yul\":4740:4821   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3901:4831   */\n  jump(tag_155)\n    /* \"#utility.yul\":3931:4580   */\ntag_163:\n    /* \"#utility.yul\":2791:2792   */\n  0x00\n    /* \"#utility.yul\":2784:2798   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2828:2832   */\n  0x20\n    /* \"#utility.yul\":2815:2833   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3967:3987   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":4085:4307   */\ntag_167:\n    /* \"#utility.yul\":4099:4106   */\n  dup3\n    /* \"#utility.yul\":4096:4097   */\n  dup2\n    /* \"#utility.yul\":4093:4107   */\n  lt\n    /* \"#utility.yul\":4085:4307   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":4181:4200   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4175:4201   */\n  mload\n    /* \"#utility.yul\":4160:4202   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4288:4292   */\n  0x20\n    /* \"#utility.yul\":4273:4293   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":4241:4242   */\n  0x01\n    /* \"#utility.yul\":4229:4243   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":4115:4127   */\n  add\n    /* \"#utility.yul\":4085:4307   */\n  jump(tag_167)\ntag_169:\n    /* \"#utility.yul\":4089:4092   */\n  pop\n    /* \"#utility.yul\":4335:4341   */\n  dup5\n    /* \"#utility.yul\":4326:4333   */\n  dup3\n    /* \"#utility.yul\":4323:4342   */\n  lt\n    /* \"#utility.yul\":4320:4521   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":4396:4415   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":4390:4416   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4479:4480   */\n  0x03\n    /* \"#utility.yul\":4475:4489   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":4491:4494   */\n  0xf8\n    /* \"#utility.yul\":4471:4495   */\n  and\n    /* \"#utility.yul\":4467:4504   */\n  shr\n    /* \"#utility.yul\":4463:4505   */\n  not\n    /* \"#utility.yul\":4448:4506   */\n  and\n    /* \"#utility.yul\":4433:4507   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4320:4521   */\ntag_170:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4567:4568   */\n  0x01\n    /* \"#utility.yul\":4551:4565   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4547:4569   */\n  add\n    /* \"#utility.yul\":4534:4570   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3538:4837   */\n  jump\t// out\n    /* \"#utility.yul\":4842:4969   */\ntag_125:\n    /* \"#utility.yul\":4903:4913   */\n  0x4e487b71\n    /* \"#utility.yul\":4898:4901   */\n  0xe0\n    /* \"#utility.yul\":4894:4914   */\n  shl\n    /* \"#utility.yul\":4891:4892   */\n  0x00\n    /* \"#utility.yul\":4884:4915   */\n  mstore\n    /* \"#utility.yul\":4934:4938   */\n  0x11\n    /* \"#utility.yul\":4931:4932   */\n  0x04\n    /* \"#utility.yul\":4924:4939   */\n  mstore\n    /* \"#utility.yul\":4958:4962   */\n  0x24\n    /* \"#utility.yul\":4955:4956   */\n  0x00\n    /* \"#utility.yul\":4948:4963   */\n  revert\n    /* \"#utility.yul\":4974:5142   */\ntag_21:\n    /* \"#utility.yul\":5047:5056   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":5078:5087   */\n  dup2\n  iszero\n    /* \"#utility.yul\":5095:5110   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":5089:5111   */\n  dup5\n  eq\n    /* \"#utility.yul\":5075:5112   */\n  or\n    /* \"#utility.yul\":5065:5136   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":5116:5134   */\n  tag_61\n  tag_125\n  jump\t// in\n    /* \"#utility.yul\":5147:5364   */\ntag_24:\n    /* \"#utility.yul\":5187:5188   */\n  0x00\n    /* \"#utility.yul\":5213:5214   */\n  dup3\n    /* \"#utility.yul\":5203:5335   */\n  tag_176\n  jumpi\n    /* \"#utility.yul\":5257:5267   */\n  0x4e487b71\n    /* \"#utility.yul\":5252:5255   */\n  0xe0\n    /* \"#utility.yul\":5248:5268   */\n  shl\n    /* \"#utility.yul\":5245:5246   */\n  0x00\n    /* \"#utility.yul\":5238:5269   */\n  mstore\n    /* \"#utility.yul\":5292:5296   */\n  0x12\n    /* \"#utility.yul\":5289:5290   */\n  0x04\n    /* \"#utility.yul\":5282:5297   */\n  mstore\n    /* \"#utility.yul\":5320:5324   */\n  0x24\n    /* \"#utility.yul\":5317:5318   */\n  0x00\n    /* \"#utility.yul\":5310:5325   */\n  revert\n    /* \"#utility.yul\":5203:5335   */\ntag_176:\n  pop\n    /* \"#utility.yul\":5349:5358   */\n  div\n  swap1\n    /* \"#utility.yul\":5147:5364   */\n  jump\t// out\n    /* \"#utility.yul\":5906:6031   */\ntag_51:\n    /* \"#utility.yul\":5971:5980   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":5992:6002   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":5989:6025   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":6005:6023   */\n  tag_61\n  tag_125\n  jump\t// in\n    /* \"#utility.yul\":6036:6164   */\ntag_56:\n    /* \"#utility.yul\":6103:6112   */\n  dup2\n  dup2\n  sub\n    /* \"#utility.yul\":6124:6135   */\n  dup2\n  dup2\n  gt\n    /* \"#utility.yul\":6121:6158   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":6138:6156   */\n  tag_61\n  tag_125\n  jump\t// in\n    /* \"#utility.yul\":6169:6509   */\ntag_126:\n    /* \"SmartContractsInterview/Token.sol\":559:17443  contract Token is... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"SmartContractsInterview/Token.sol\":559:17443  contract Token is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x702115dd\n      gt\n      tag_61\n      jumpi\n      dup1\n      0x9220d3ed\n      gt\n      tag_62\n      jumpi\n      dup1\n      0xb3cd4254\n      gt\n      tag_63\n      jumpi\n      dup1\n      0xdf0ab308\n      gt\n      tag_64\n      jumpi\n      dup1\n      0xdf0ab308\n      eq\n      tag_57\n      jumpi\n      dup1\n      0xe2ff2440\n      eq\n      tag_58\n      jumpi\n      dup1\n      0xe5a5e318\n      eq\n      tag_59\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_60\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      0xb3cd4254\n      eq\n      tag_53\n      jumpi\n      dup1\n      0xb4dade59\n      eq\n      tag_54\n      jumpi\n      dup1\n      0xdc90b442\n      eq\n      tag_55\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup1\n      0x9cc2921c\n      gt\n      tag_65\n      jumpi\n      dup1\n      0x9cc2921c\n      eq\n      tag_49\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_50\n      jumpi\n      dup1\n      0xa6d1b891\n      eq\n      tag_51\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup1\n      0x9220d3ed\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x924c2ead\n      eq\n      tag_47\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup1\n      0x8456cb59\n      gt\n      tag_66\n      jumpi\n      dup1\n      0x89eec0f1\n      gt\n      tag_67\n      jumpi\n      dup1\n      0x89eec0f1\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x8cf66b16\n      eq\n      tag_43\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x8f372fa3\n      eq\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup1\n      0x8456cb59\n      eq\n      tag_39\n      jumpi\n      dup1\n      0x874a6ae7\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x893d20e8\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup1\n      0x75c2b13f\n      gt\n      tag_68\n      jumpi\n      dup1\n      0x75c2b13f\n      eq\n      tag_35\n      jumpi\n      dup1\n      0x7819f36f\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x79825ede\n      eq\n      tag_37\n      jumpi\n      dup1\n      0x81cea332\n      eq\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      dup1\n      0x702115dd\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup1\n      0x3f3b3b27\n      gt\n      tag_69\n      jumpi\n      dup1\n      0x5d70dde6\n      gt\n      tag_70\n      jumpi\n      dup1\n      0x690d8320\n      gt\n      tag_71\n      jumpi\n      dup1\n      0x690d8320\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x6aa3773f\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x6c5ed03e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x6e04ff0d\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup1\n      0x5d70dde6\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x6161eb18\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x639f3cc7\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x685f59de\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup1\n      0x4626402b\n      gt\n      tag_72\n      jumpi\n      dup1\n      0x4626402b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x4e6ec247\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x5b7f415c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      dup1\n      0x3f3b3b27\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x4585e33b\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      dup1\n      0x2ce8bd56\n      gt\n      tag_73\n      jumpi\n      dup1\n      0x35c85a34\n      gt\n      tag_74\n      jumpi\n      dup1\n      0x35c85a34\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3af9e669\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3cde0c0f\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup1\n      0x2ce8bd56\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x30e0789e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      dup1\n      0x1658a700\n      gt\n      tag_75\n      jumpi\n      dup1\n      0x1658a700\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x24024efd\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x104e81ff\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"SmartContractsInterview/Token.sol\":929:956  string public override name */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"SmartContractsInterview/Token.sol\":4537:4719  function approve(... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n        /* \"#utility.yul\":1181:1195   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1174:1196   */\n      iszero\n        /* \"#utility.yul\":1156:1197   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1144:1146   */\n      0x20\n        /* \"#utility.yul\":1129:1147   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":4537:4719  function approve(... */\n      tag_81\n        /* \"#utility.yul\":1016:1203   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":5723:6106  function _approve(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"SmartContractsInterview/Token.sol\":1473:1512  mapping(address => bool) public lpPools */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_84\n      tag_97\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_97:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":3453:3564  function totalSupply() public view override returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":3453:3564  function totalSupply() public view override returns (uint256) {... */\n      tag_81\n        /* \"#utility.yul\":1778:1955   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":4725:5148  function transferFrom(... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_84\n      tag_108\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1300:1326  uint256 public sellTaxRate */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_102\n      sload(0x0c)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":1332:1357  uint256 public debaseRate */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_102\n      sload(0x0d)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":7233:9758  function _transfer(... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_91\n      tag_121\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_121:\n      tag_122\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":3570:3669  function decimals() external view override returns (uint8) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n        /* \"SmartContractsInterview/Token.sol\":3652:3661  _decimals */\n      sload(0x05)\n        /* \"SmartContractsInterview/Token.sol\":3570:3669  function decimals() external view override returns (uint8) {... */\n      mload(0x40)\n        /* \"#utility.yul\":2132:2136   */\n      0xff\n        /* \"#utility.yul\":2120:2137   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2102:2138   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2090:2092   */\n      0x20\n        /* \"#utility.yul\":2075:2093   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":3570:3669  function decimals() external view override returns (uint8) {... */\n      tag_81\n        /* \"#utility.yul\":1960:2144   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":14802:15026  function _excludedFromHoldingLimit(address _account,bool _isExcluded) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_91\n      tag_130\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":5154:5438  function increaseAllowance(... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      tag_84\n      tag_135\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":4065:4185  function balanceOfUnderlying(address _account) public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_102\n      tag_140\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":4159:4178  _balances[_account] */\n      and\n        /* \"SmartContractsInterview/Token.sol\":4133:4140  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":4159:4178  _balances[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":4159:4168  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":4159:4178  _balances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":4065:4185  function balanceOfUnderlying(address _account) public view returns (uint256) {... */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":12766:12881  function updateHoldingLimit(uint256 _holdingLimit) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_91\n      tag_145\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1698:1726  uint256 public lastTimeStamp */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_102\n      sload(0x15)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":17030:17093  function unpause() public onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_152\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_152:\n      pop\n      tag_91\n      tag_154\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":10999:11483  function performUpkeep(bytes calldata /* performData */) external override {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_91\n      tag_157\n      calldatasize\n      0x04\n      tag_158\n      jump\t// in\n    tag_157:\n      tag_159\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1264:1293  address public treasuryWallet */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      pop\n      sload(0x0b)\n      tag_161\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_161:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3559:3591   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3541:3592   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3529:3531   */\n      0x20\n        /* \"#utility.yul\":3514:3532   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":1264:1293  address public treasuryWallet */\n      tag_81\n        /* \"#utility.yul\":3395:3598   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":6112:6685  function _mint(address _to, uint256 _amount) public {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_91\n      tag_167\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_167:\n      tag_168\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":819:864  uint256 public constant TOKEN_DECIMALS = 1e18 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      tag_102\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SmartContractsInterview/Token.sol\":819:864  uint256 public constant TOKEN_DECIMALS = 1e18 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_173\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_173:\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_84)\n        /* \"SmartContractsInterview/Token.sol\":16818:16959  function setLastTime() external onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      tag_91\n      tag_179\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":6691:7227  function _burn(address _from, uint256 _amount) public {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_91\n      tag_182\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":12116:12287  function _debaseTokenToFragment(uint256 _debaseToken) public view returns (uint256) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      tag_102\n      tag_186\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_186:\n      tag_187\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1403:1432  uint256 public debaseDuration */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      tag_102\n      sload(0x0f)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":3166:3447  function withdrawETH(address _to) external onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_193\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_193:\n      pop\n      tag_91\n      tag_195\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_195:\n      tag_196\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":9992:10653  function claimFromTreasury(... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_197\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_197:\n      pop\n      tag_91\n      tag_199\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_199:\n      tag_200\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":14440:14796  function multiExcludedFromDebasing(... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_201\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_201:\n      pop\n      tag_91\n      tag_203\n      calldatasize\n      0x04\n      tag_204\n      jump\t// in\n    tag_203:\n      tag_205\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":10659:10993  function checkUpkeep(... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      tag_207\n      tag_208\n      calldatasize\n      0x04\n      tag_158\n      jump\t// in\n    tag_208:\n      tag_209\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      tag_81\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":13779:14434  function _excludedFromDebasing(address _account,bool _isExcluded) public {... */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_212\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_212:\n      pop\n      tag_91\n      tag_214\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_214:\n      tag_215\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":3675:4059  function balanceOf(... */\n    tag_33:\n      callvalue\n      dup1\n      iszero\n      tag_216\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_216:\n      pop\n      tag_102\n      tag_218\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_218:\n      tag_219\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_34:\n      callvalue\n      dup1\n      iszero\n      tag_221\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_221:\n      pop\n      tag_91\n      tag_223\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":13564:13773  function updateTreasuryOperator( address _addr,  bool _isOperator) external onlyOwner {... */\n    tag_35:\n      callvalue\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      tag_91\n      tag_226\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_226:\n      tag_227\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":15032:15280  function multiExcludedFromHoldingLimit(address[] memory _accounts, bool _isExcluded) public onlyOwner {... */\n    tag_36:\n      callvalue\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      tag_91\n      tag_230\n      calldatasize\n      0x04\n      tag_204\n      jump\t// in\n    tag_230:\n      tag_231\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":13255:13558  function updateLPPool(address _lpPool, bool _isLPPool) external onlyOwner {... */\n    tag_37:\n      callvalue\n      dup1\n      iszero\n      tag_232\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_232:\n      pop\n      tag_91\n      tag_234\n      calldatasize\n      0x04\n      tag_131\n      jump\t// in\n    tag_234:\n      tag_235\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":12887:13120  function updateDebaseRate(uint256 _debaseRate) external onlyOwner {... */\n    tag_38:\n      callvalue\n      dup1\n      iszero\n      tag_236\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_236:\n      pop\n      tag_91\n      tag_238\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_238:\n      tag_239\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":16965:17024  function pause() public onlyOwner {... */\n    tag_39:\n      callvalue\n      dup1\n      iszero\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n      pop\n      tag_91\n      tag_242\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1439:1466  uint256 public holdingLimit */\n    tag_40:\n      callvalue\n      dup1\n      iszero\n      tag_243\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_243:\n      pop\n      tag_102\n      sload(0x10)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":17136:17219  function getOwner() external view returns (address) {... */\n    tag_41:\n      callvalue\n      dup1\n      iszero\n      tag_247\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_247:\n      pop\n      tag_161\n      tag_249\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":12297:12452  function _fragmentToDebaseToken(uint256 _value) public pure returns (uint256) {... */\n    tag_42:\n      callvalue\n      dup1\n      iszero\n      tag_251\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_251:\n      pop\n      tag_102\n      tag_253\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_253:\n      tag_254\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1578:1636  mapping(address => bool) public isExcludedFromHoldingLimit */\n    tag_43:\n      callvalue\n      dup1\n      iszero\n      tag_256\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_256:\n      pop\n      tag_84\n      tag_258\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_258:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_44:\n      callvalue\n      dup1\n      iszero\n      tag_261\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_261:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_161)\n        /* \"SmartContractsInterview/Token.sol\":1058:1094  uint256 public excludeDebasingSupply */\n    tag_45:\n      callvalue\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      tag_102\n      sload(0x07)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":1643:1691  mapping(address => bool) public treasuryOperator */\n    tag_46:\n      callvalue\n      dup1\n      iszero\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      pop\n      tag_84\n      tag_271\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_271:\n      mstore(0x20, 0x14)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":1518:1572  mapping(address => bool) public isExcludedFromDebasing */\n    tag_47:\n      callvalue\n      dup1\n      iszero\n      tag_274\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_274:\n      pop\n      tag_84\n      tag_276\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_276:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":962:991  string public override symbol */\n    tag_48:\n      callvalue\n      dup1\n      iszero\n      tag_279\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_279:\n      pop\n      tag_79\n      tag_281\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":9764:9986  function _sendTokensTreasuryWallet(uint256 _amount, address _to) public {... */\n    tag_49:\n      callvalue\n      dup1\n      iszero\n      tag_283\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_283:\n      pop\n      tag_91\n      tag_285\n      calldatasize\n      0x04\n      tag_286\n      jump\t// in\n    tag_285:\n      tag_287\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":5444:5717  function decreaseAllowance(address _spender,uint256 _subtractedValue) public virtual returns (bool) {... */\n    tag_50:\n      callvalue\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      tag_84\n      tag_290\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_290:\n      tag_291\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":870:922  uint256 public constant TOKEN_public_DECIMALS = 1e24 */\n    tag_51:\n      callvalue\n      dup1\n      iszero\n      tag_293\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_293:\n      pop\n      tag_102\n        /* \"SmartContractsInterview/Token.sol\":918:922  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"SmartContractsInterview/Token.sol\":870:922  uint256 public constant TOKEN_public_DECIMALS = 1e24 */\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":4191:4356  function transfer(address _recipient,uint256 _amount) public override returns (bool) {... */\n    tag_52:\n      callvalue\n      dup1\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_297:\n      pop\n      tag_84\n      tag_299\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_299:\n      tag_300\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":759:813  uint256 public constant PERCENTAGE_DENOMINATOR = 10000 */\n    tag_53:\n      callvalue\n      dup1\n      iszero\n      tag_302\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_302:\n      pop\n      tag_102\n        /* \"SmartContractsInterview/Token.sol\":808:813  10000 */\n      0x2710\n        /* \"SmartContractsInterview/Token.sol\":759:813  uint256 public constant PERCENTAGE_DENOMINATOR = 10000 */\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":12505:12760  function updateSellTaxRate(uint256 _sellTaxRate) external onlyOwner {... */\n    tag_54:\n      callvalue\n      dup1\n      iszero\n      tag_306\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_306:\n      pop\n      tag_91\n      tag_308\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_308:\n      tag_309\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":1364:1397  uint256 public tokenScalingFactor */\n    tag_55:\n      callvalue\n      dup1\n      iszero\n      tag_310\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_310:\n      pop\n      tag_102\n      sload(0x0e)\n      dup2\n      jump\n        /* \"SmartContractsInterview/Token.sol\":4362:4531  function allowance(... */\n    tag_56:\n      callvalue\n      dup1\n      iszero\n      tag_314\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_314:\n      pop\n      tag_102\n      tag_316\n      calldatasize\n      0x04\n      tag_317\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":4494:4514  _allowances[_holder] */\n      swap2\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":4468:4475  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":4494:4514  _allowances[_holder] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":4494:4505  _allowances */\n      0x08\n        /* \"SmartContractsInterview/Token.sol\":4494:4514  _allowances[_holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":4494:4524  _allowances[_holder][_spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":4362:4531  function allowance(... */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":13126:13249  function updateDebaseDuration(uint256 _debaseDuration) external onlyOwner {... */\n    tag_57:\n      callvalue\n      dup1\n      iszero\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n      pop\n      tag_91\n      tag_322\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_322:\n      tag_323\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":17225:17441  function _treasuryBalanceOf() public view returns (uint256) {... */\n    tag_58:\n      callvalue\n      dup1\n      iszero\n      tag_324\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_324:\n      pop\n      tag_102\n      tag_326\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":15286:16812  function multiAirdropTokenRequested(... */\n    tag_59:\n      callvalue\n      dup1\n      iszero\n      tag_328\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_328:\n      pop\n      tag_91\n      tag_330\n      calldatasize\n      0x04\n      tag_331\n      jump\t// in\n    tag_330:\n      tag_332\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_60:\n      callvalue\n      dup1\n      iszero\n      tag_333\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_333:\n      pop\n      tag_91\n      tag_335\n      calldatasize\n      0x04\n      tag_98\n      jump\t// in\n    tag_335:\n      tag_336\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":929:956  string public override name */\n    tag_80:\n      0x03\n      dup1\n      sload\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n    tag_337:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_339\n      swap1\n      tag_338\n      jump\t// in\n    tag_339:\n      dup1\n      iszero\n      tag_340\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_341\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_340)\n    tag_341:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_342:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_342\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_340:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":4537:4719  function approve(... */\n    tag_87:\n        /* \"SmartContractsInterview/Token.sol\":4636:4640  bool */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":4652:4691  _approve(msg.sender, _spender, _amount) */\n      tag_344\n        /* \"SmartContractsInterview/Token.sol\":4661:4671  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":4673:4681  _spender */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4683:4690  _amount */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4652:4660  _approve */\n      tag_94\n        /* \"SmartContractsInterview/Token.sol\":4652:4691  _approve(msg.sender, _spender, _amount) */\n      jump\t// in\n    tag_344:\n      pop\n        /* \"SmartContractsInterview/Token.sol\":4708:4712  true */\n      0x01\n        /* \"SmartContractsInterview/Token.sol\":4537:4719  function approve(... */\n    tag_343:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":5723:6106  function _approve(... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":5856:5877  _holder != address(0) */\n      dup4\n      and\n        /* \"SmartContractsInterview/Token.sol\":5848:5918  require(_holder != address(0), \"ERC20: approve from the zero address\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7952:7954   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":5848:5918  require(_holder != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7934:7955   */\n      mstore\n        /* \"#utility.yul\":7991:7993   */\n      0x24\n        /* \"#utility.yul\":7971:7989   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7964:7994   */\n      mstore\n        /* \"#utility.yul\":8030:8064   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":8010:8028   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8003:8065   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":8081:8099   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8074:8108   */\n      mstore\n        /* \"#utility.yul\":8125:8144   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":5848:5918  require(_holder != address(0), \"ERC20: approve from the zero address\") */\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":5936:5958  _spender != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":5928:5997  require(_spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_349\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8357:8359   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":5928:5997  require(_spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8339:8360   */\n      mstore\n        /* \"#utility.yul\":8396:8398   */\n      0x22\n        /* \"#utility.yul\":8376:8394   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8369:8399   */\n      mstore\n        /* \"#utility.yul\":8435:8469   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":8415:8433   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8408:8470   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":8486:8504   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8479:8511   */\n      mstore\n        /* \"#utility.yul\":8528:8547   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":5928:5997  require(_spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_347\n        /* \"#utility.yul\":8155:8553   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":5928:5997  require(_spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_349:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6008:6028  _allowances[_holder] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":6008:6019  _allowances */\n      0x08\n        /* \"SmartContractsInterview/Token.sol\":6008:6028  _allowances[_holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":6008:6038  _allowances[_holder][_spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":6008:6048  _allowances[_holder][_spender] = _amount */\n      dup6\n      swap1\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":6063:6099  Approval(_holder, _spender, _amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1924:1949   */\n      dup5\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":6063:6099  Approval(_holder, _spender, _amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":6063:6099  Approval(_holder, _spender, _amount) */\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartContractsInterview/Token.sol\":5723:6106  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":3453:3564  function totalSupply() public view override returns (uint256) {... */\n    tag_103:\n        /* \"SmartContractsInterview/Token.sol\":3506:3513  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":3542:3557  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":3532:3539  tSupply */\n      sload(0x06)\n        /* \"SmartContractsInterview/Token.sol\":3532:3557  tSupply + treasuryBalance */\n      tag_354\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"SmartContractsInterview/Token.sol\":3525:3557  return tSupply + treasuryBalance */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":3453:3564  function totalSupply() public view override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":4725:5148  function transferFrom(... */\n    tag_109:\n        /* \"SmartContractsInterview/Token.sol\":4856:4860  bool */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":4872:4911  _transfer(_sender, _recipient, _amount) */\n      tag_357\n        /* \"SmartContractsInterview/Token.sol\":4882:4889  _sender */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4891:4901  _recipient */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4903:4910  _amount */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4872:4881  _transfer */\n      tag_122\n        /* \"SmartContractsInterview/Token.sol\":4872:4911  _transfer(_sender, _recipient, _amount) */\n      jump\t// in\n    tag_357:\n        /* \"SmartContractsInterview/Token.sol\":4921:5120  _approve(_sender,... */\n      tag_358\n        /* \"SmartContractsInterview/Token.sol\":4930:4937  _sender */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4951:4961  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":4975:5110  _allowances[_sender][msg.sender].sub(... */\n      tag_92\n        /* \"SmartContractsInterview/Token.sol\":5029:5036  _amount */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":4975:5110  _allowances[_sender][msg.sender].sub(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":4975:4995  _allowances[_sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":4975:4986  _allowances */\n      0x08\n        /* \"SmartContractsInterview/Token.sol\":4975:4995  _allowances[_sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":4996:5006  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":4975:5007  _allowances[_sender][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":4975:5110  _allowances[_sender][msg.sender].sub(... */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":4975:5011  _allowances[_sender][msg.sender].sub */\n      tag_360\n        /* \"SmartContractsInterview/Token.sol\":4975:5110  _allowances[_sender][msg.sender].sub(... */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":4921:5120  _approve(_sender,... */\n    tag_358:\n      pop\n        /* \"SmartContractsInterview/Token.sol\":5137:5141  true */\n      0x01\n        /* \"SmartContractsInterview/Token.sol\":4725:5148  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":7233:9758  function _transfer(... */\n    tag_122:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_362\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_363\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_362:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7366:7385  _from != address(0) */\n      dup4\n      and\n        /* \"SmartContractsInterview/Token.sol\":7358:7427  require(_from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_365\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9022:9024   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":7358:7427  require(_from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9004:9025   */\n      mstore\n        /* \"#utility.yul\":9061:9063   */\n      0x25\n        /* \"#utility.yul\":9041:9059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9034:9064   */\n      mstore\n        /* \"#utility.yul\":9100:9134   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":9080:9098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9073:9135   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":9151:9169   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9144:9179   */\n      mstore\n        /* \"#utility.yul\":9196:9215   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":7358:7427  require(_from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_347\n        /* \"#utility.yul\":8820:9221   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":7358:7427  require(_from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_365:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7445:7462  _to != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":7437:7502  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9428:9430   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":7437:7502  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9410:9431   */\n      mstore\n        /* \"#utility.yul\":9467:9469   */\n      0x23\n        /* \"#utility.yul\":9447:9465   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9440:9470   */\n      mstore\n        /* \"#utility.yul\":9506:9540   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":9486:9504   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9479:9541   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9557:9575   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9550:9583   */\n      mstore\n        /* \"#utility.yul\":9600:9619   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":7437:7502  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_347\n        /* \"#utility.yul\":9226:9625   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":7437:7502  require(_to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_368:\n        /* \"SmartContractsInterview/Token.sol\":7536:7543  _amount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":7517:7533  balanceOf(_from) */\n      tag_371\n        /* \"SmartContractsInterview/Token.sol\":7527:7532  _from */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":7517:7526  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":7517:7533  balanceOf(_from) */\n      jump\t// in\n    tag_371:\n        /* \"SmartContractsInterview/Token.sol\":7517:7543  balanceOf(_from) < _amount */\n      lt\n        /* \"SmartContractsInterview/Token.sol\":7513:7611  if (balanceOf(_from) < _amount) {... */\n      iszero\n      tag_372\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":7559:7600  revert(\"Insufficient Funds For Transfer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9832:9834   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":7559:7600  revert(\"Insufficient Funds For Transfer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9814:9835   */\n      mstore\n        /* \"#utility.yul\":9871:9873   */\n      0x1f\n        /* \"#utility.yul\":9851:9869   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9844:9874   */\n      mstore\n        /* \"#utility.yul\":9910:9943   */\n      0x496e73756666696369656e742046756e647320466f72205472616e7366657200\n        /* \"#utility.yul\":9890:9908   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9883:9944   */\n      mstore\n        /* \"#utility.yul\":9961:9979   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":7559:7600  revert(\"Insufficient Funds For Transfer\") */\n      tag_347\n        /* \"#utility.yul\":9630:9985   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":7513:7611  if (balanceOf(_from) < _amount) {... */\n    tag_372:\n        /* \"SmartContractsInterview/Token.sol\":7656:7668  holdingLimit */\n      sload(0x10)\n        /* \"SmartContractsInterview/Token.sol\":7638:7652  balanceOf(_to) */\n      tag_375\n        /* \"SmartContractsInterview/Token.sol\":7648:7651  _to */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":7638:7647  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":7638:7652  balanceOf(_to) */\n      jump\t// in\n    tag_375:\n        /* \"SmartContractsInterview/Token.sol\":7638:7668  balanceOf(_to) >= holdingLimit */\n      lt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":7638:7704  balanceOf(_to) >= holdingLimit && !isExcludedFromHoldingLimit[_to] */\n      dup1\n      iszero\n      tag_376\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7673:7704  isExcludedFromHoldingLimit[_to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":7673:7699  isExcludedFromHoldingLimit */\n      0x13\n        /* \"SmartContractsInterview/Token.sol\":7673:7704  isExcludedFromHoldingLimit[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":7672:7704  !isExcludedFromHoldingLimit[_to] */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":7638:7704  balanceOf(_to) >= holdingLimit && !isExcludedFromHoldingLimit[_to] */\n    tag_376:\n        /* \"SmartContractsInterview/Token.sol\":7621:7774  if (... */\n      iszero\n      tag_377\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":7729:7763  revert(\"Holding Tokens exceeded!\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10192:10194   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":7729:7763  revert(\"Holding Tokens exceeded!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10174:10195   */\n      mstore\n        /* \"#utility.yul\":10231:10233   */\n      0x18\n        /* \"#utility.yul\":10211:10229   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10204:10234   */\n      mstore\n        /* \"#utility.yul\":10270:10296   */\n      0x486f6c64696e6720546f6b656e73206578636565646564210000000000000000\n        /* \"#utility.yul\":10250:10268   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10243:10297   */\n      mstore\n        /* \"#utility.yul\":10314:10332   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":7729:7763  revert(\"Holding Tokens exceeded!\") */\n      tag_347\n        /* \"#utility.yul\":9990:10338   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":7621:7774  if (... */\n    tag_377:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7837:7868  isExcludedFromHoldingLimit[_to] */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":7784:7798  uint256 amount */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":7837:7868  isExcludedFromHoldingLimit[_to] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":7837:7863  isExcludedFromHoldingLimit */\n      0x13\n        /* \"SmartContractsInterview/Token.sol\":7837:7868  isExcludedFromHoldingLimit[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":7801:7808  _amount */\n      dup2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":7837:7868  isExcludedFromHoldingLimit[_to] */\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":7836:7868  !isExcludedFromHoldingLimit[_to] */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":7836:7922  !isExcludedFromHoldingLimit[_to] &&... */\n      dup1\n      iszero\n      tag_380\n      jumpi\n      pop\n        /* \"SmartContractsInterview/Token.sol\":7910:7922  holdingLimit */\n      sload(0x10)\n        /* \"SmartContractsInterview/Token.sol\":7901:7907  amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":7884:7898  balanceOf(_to) */\n      tag_381\n        /* \"SmartContractsInterview/Token.sol\":7894:7897  _to */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":7884:7893  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":7884:7898  balanceOf(_to) */\n      jump\t// in\n    tag_381:\n        /* \"SmartContractsInterview/Token.sol\":7884:7907  balanceOf(_to) + amount */\n      tag_382\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_382:\n        /* \"SmartContractsInterview/Token.sol\":7884:7922  balanceOf(_to) + amount > holdingLimit */\n      gt\n        /* \"SmartContractsInterview/Token.sol\":7836:7922  !isExcludedFromHoldingLimit[_to] &&... */\n    tag_380:\n        /* \"SmartContractsInterview/Token.sol\":7819:8016  if (... */\n      iszero\n      tag_383\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":7992:8004  holdingLimit */\n      sload(0x10)\n        /* \"SmartContractsInterview/Token.sol\":7983:7989  amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":7966:7980  balanceOf(_to) */\n      tag_384\n        /* \"SmartContractsInterview/Token.sol\":7976:7979  _to */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":7966:7975  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":7966:7980  balanceOf(_to) */\n      jump\t// in\n    tag_384:\n        /* \"SmartContractsInterview/Token.sol\":7966:7989  balanceOf(_to) + amount */\n      tag_385\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_385:\n        /* \"SmartContractsInterview/Token.sol\":7966:8004  balanceOf(_to) + amount - holdingLimit */\n      tag_386\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_386:\n        /* \"SmartContractsInterview/Token.sol\":7956:8005  amount - (balanceOf(_to) + amount - holdingLimit) */\n      tag_388\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":7956:7962  amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":7956:8005  amount - (balanceOf(_to) + amount - holdingLimit) */\n      tag_387\n      jump\t// in\n    tag_388:\n        /* \"SmartContractsInterview/Token.sol\":7947:8005  amount = amount - (balanceOf(_to) + amount - holdingLimit) */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":7819:8016  if (... */\n    tag_383:\n        /* \"SmartContractsInterview/Token.sol\":8026:8045  uint256 debaseToken */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8048:8078  _fragmentToDebaseToken(amount) */\n      tag_389\n        /* \"SmartContractsInterview/Token.sol\":8071:8077  amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":8048:8070  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":8048:8078  _fragmentToDebaseToken(amount) */\n      jump\t// in\n    tag_389:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8092:8121  isExcludedFromDebasing[_from] */\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8092:8114  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":8092:8121  isExcludedFromDebasing[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":8026:8078  uint256 debaseToken = _fragmentToDebaseToken(amount) */\n      swap1\n      swap2\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8092:8121  isExcludedFromDebasing[_from] */\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":8088:8192  if (isExcludedFromDebasing[_from]) {... */\n      iszero\n      tag_390\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":8151:8181  _fragmentToDebaseToken(amount) */\n      tag_391\n        /* \"SmartContractsInterview/Token.sol\":8174:8180  amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":8151:8173  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":8151:8181  _fragmentToDebaseToken(amount) */\n      jump\t// in\n    tag_391:\n        /* \"SmartContractsInterview/Token.sol\":8137:8181  debaseToken = _fragmentToDebaseToken(amount) */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8088:8192  if (isExcludedFromDebasing[_from]) {... */\n    tag_390:\n        /* \"SmartContractsInterview/Token.sol\":8202:8217  uint256 sellTax */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8245:8252  owner() */\n      tag_392\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":8245:8252  owner() */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8236:8252  _from != owner() */\n      and\n        /* \"SmartContractsInterview/Token.sol\":8236:8241  _from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8236:8252  _from != owner() */\n      and\n      eq\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":8236:8268  _from != owner() && lpPools[_to] */\n      dup1\n      iszero\n      tag_393\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8256:8268  lpPools[_to] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8256:8263  lpPools */\n      0x11\n        /* \"SmartContractsInterview/Token.sol\":8256:8268  lpPools[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":8236:8268  _from != owner() && lpPools[_to] */\n    tag_393:\n        /* \"SmartContractsInterview/Token.sol\":8232:8352  if (_from != owner() && lpPools[_to]) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":808:813  10000 */\n      0x2710\n        /* \"SmartContractsInterview/Token.sol\":8304:8315  sellTaxRate */\n      sload(0x0c)\n        /* \"SmartContractsInterview/Token.sol\":8295:8301  amount */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":8295:8315  amount * sellTaxRate */\n      tag_395\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_395:\n        /* \"SmartContractsInterview/Token.sol\":8294:8341  (amount * sellTaxRate) / PERCENTAGE_DENOMINATOR */\n      tag_397\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_397:\n        /* \"SmartContractsInterview/Token.sol\":8284:8341  sellTax = (amount * sellTaxRate) / PERCENTAGE_DENOMINATOR */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8232:8352  if (_from != owner() && lpPools[_to]) {... */\n    tag_394:\n        /* \"SmartContractsInterview/Token.sol\":8362:8384  uint256 amountAfterTax */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8387:8403  amount - sellTax */\n      tag_399\n        /* \"SmartContractsInterview/Token.sol\":8396:8403  sellTax */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":8387:8393  amount */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":8387:8403  amount - sellTax */\n      tag_387\n      jump\t// in\n    tag_399:\n        /* \"SmartContractsInterview/Token.sol\":8362:8403  uint256 amountAfterTax = amount - sellTax */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8413:8440  uint256 debaseTokenAfterTax */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8443:8481  _fragmentToDebaseToken(amountAfterTax) */\n      tag_400\n        /* \"SmartContractsInterview/Token.sol\":8466:8480  amountAfterTax */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":8443:8465  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":8443:8481  _fragmentToDebaseToken(amountAfterTax) */\n      jump\t// in\n    tag_400:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8517:8544  isExcludedFromDebasing[_to] */\n      dup9\n      and\n        /* \"SmartContractsInterview/Token.sol\":8491:8514  uint256 adjustedBalance */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8517:8544  isExcludedFromDebasing[_to] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8517:8539  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":8517:8544  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":8413:8481  uint256 debaseTokenAfterTax = _fragmentToDebaseToken(amountAfterTax) */\n      swap2\n      swap3\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8491:8514  uint256 adjustedBalance */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8517:8544  isExcludedFromDebasing[_to] */\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":8517:8631  isExcludedFromDebasing[_to]... */\n      tag_401\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":8612:8631  debaseTokenAfterTax */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":8517:8631  isExcludedFromDebasing[_to]... */\n      jump(tag_403)\n    tag_401:\n        /* \"SmartContractsInterview/Token.sol\":8559:8597  _fragmentToDebaseToken(amountAfterTax) */\n      tag_403\n        /* \"SmartContractsInterview/Token.sol\":8582:8596  amountAfterTax */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":8559:8581  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":8559:8597  _fragmentToDebaseToken(amountAfterTax) */\n      jump\t// in\n    tag_403:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8642:8658  _balances[_from] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8642:8651  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":8642:8658  _balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":8642:8673  _balances[_from] -= debaseToken */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":8491:8631  uint256 adjustedBalance = isExcludedFromDebasing[_to]... */\n      swap3\n      swap4\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8662:8673  debaseToken */\n      dup8\n      swap3\n        /* \"SmartContractsInterview/Token.sol\":8642:8658  _balances[_from] */\n      swap1\n      swap2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8642:8673  _balances[_from] -= debaseToken */\n      tag_404\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8662:8673  debaseToken */\n      dup5\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8642:8673  _balances[_from] -= debaseToken */\n      tag_387\n      jump\t// in\n    tag_404:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8688:8715  isExcludedFromDebasing[_to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8688:8710  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":8688:8715  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":8684:8843  if (isExcludedFromDebasing[_to]) {... */\n      iszero\n      tag_405\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8731:8745  _balances[_to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8731:8740  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":8731:8745  _balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":8731:8764  _balances[_to] += adjustedBalance */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":8749:8764  adjustedBalance */\n      dup4\n      swap3\n        /* \"SmartContractsInterview/Token.sol\":8731:8745  _balances[_to] */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8731:8764  _balances[_to] += adjustedBalance */\n      tag_406\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8749:8764  adjustedBalance */\n      dup5\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8731:8764  _balances[_to] += adjustedBalance */\n      tag_355\n      jump\t// in\n    tag_406:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8684:8843  if (isExcludedFromDebasing[_to]) {... */\n      tag_407\n      swap1\n      pop\n      jump\n    tag_405:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8795:8809  _balances[_to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8795:8804  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":8795:8809  _balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":8795:8832  _balances[_to] += debaseTokenAfterTax */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":8813:8832  debaseTokenAfterTax */\n      dup5\n      swap3\n        /* \"SmartContractsInterview/Token.sol\":8795:8809  _balances[_to] */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8795:8832  _balances[_to] += debaseTokenAfterTax */\n      tag_408\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8813:8832  debaseTokenAfterTax */\n      dup5\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":8795:8832  _balances[_to] += debaseTokenAfterTax */\n      tag_355\n      jump\t// in\n    tag_408:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8684:8843  if (isExcludedFromDebasing[_to]) {... */\n    tag_407:\n        /* \"SmartContractsInterview/Token.sol\":8872:8879  sellTax */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":8853:8868  treasuryBalance */\n      0x0a\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8853:8879  treasuryBalance += sellTax */\n      dup3\n      dup3\n      sload\n      tag_409\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_409:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8900:8907  sellTax */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":8889:8896  tSupply */\n      0x06\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":8889:8907  tSupply -= sellTax */\n      dup3\n      dup3\n      sload\n      tag_410\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_410:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":8939:8942  _to */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8923:8959  Transfer(_from, _to, amountAfterTax) */\n      and\n        /* \"SmartContractsInterview/Token.sol\":8932:8937  _from */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":8923:8959  Transfer(_from, _to, amountAfterTax) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":8944:8958  amountAfterTax */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":8923:8959  Transfer(_from, _to, amountAfterTax) */\n      mload(0x40)\n      tag_411\n      swap2\n        /* \"#utility.yul\":1924:1949   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n      swap1\n        /* \"#utility.yul\":1778:1955   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":8923:8959  Transfer(_from, _to, amountAfterTax) */\n    tag_411:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartContractsInterview/Token.sol\":8974:8985  sellTax > 0 */\n      dup4\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":8970:9057  if (sellTax > 0) {... */\n      tag_412\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":9022:9036  treasuryWallet */\n      sload(0x0b)\n        /* \"SmartContractsInterview/Token.sol\":9006:9046  Transfer(_from, treasuryWallet, sellTax) */\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      dup6\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9022:9036  treasuryWallet */\n      swap2\n      dup3\n      and\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":9006:9046  Transfer(_from, treasuryWallet, sellTax) */\n      dup12\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":9006:9046  Transfer(_from, treasuryWallet, sellTax) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartContractsInterview/Token.sol\":8970:9057  if (sellTax > 0) {... */\n    tag_412:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9113:9142  isExcludedFromDebasing[_from] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":9113:9135  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":9113:9142  isExcludedFromDebasing[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":9112:9142  !isExcludedFromDebasing[_from] */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":9112:9173  !isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to] */\n      dup1\n      iszero\n      tag_414\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9146:9173  isExcludedFromDebasing[_to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":9146:9168  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":9146:9173  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":9112:9173  !isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to] */\n    tag_414:\n        /* \"SmartContractsInterview/Token.sol\":9108:9634  if (!isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to]) {... */\n      iszero\n      tag_415\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":9214:9228  amountAfterTax */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":9189:9210  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":9189:9228  excludeDebasingSupply += amountAfterTax */\n      dup3\n      dup3\n      sload\n      tag_416\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_416:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":9108:9634  if (!isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to]) {... */\n      tag_423\n      swap1\n      pop\n      jump\n    tag_415:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9249:9278  isExcludedFromDebasing[_from] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":9249:9271  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":9249:9278  isExcludedFromDebasing[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":9249:9310  isExcludedFromDebasing[_from] && !isExcludedFromDebasing[_to] */\n      dup1\n      iszero\n      tag_418\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9283:9310  isExcludedFromDebasing[_to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":9283:9305  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":9283:9310  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":9282:9310  !isExcludedFromDebasing[_to] */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":9249:9310  isExcludedFromDebasing[_from] && !isExcludedFromDebasing[_to] */\n    tag_418:\n        /* \"SmartContractsInterview/Token.sol\":9245:9634  if (isExcludedFromDebasing[_from] && !isExcludedFromDebasing[_to]) {... */\n      iszero\n      tag_419\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":9351:9365  amountAfterTax */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":9326:9347  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":9326:9365  excludeDebasingSupply -= amountAfterTax */\n      dup3\n      dup3\n      sload\n      tag_416\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":9245:9634  if (isExcludedFromDebasing[_from] && !isExcludedFromDebasing[_to]) {... */\n    tag_419:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9386:9415  isExcludedFromDebasing[_from] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":9386:9408  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":9386:9415  isExcludedFromDebasing[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":9386:9446  isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to] */\n      dup1\n      iszero\n      tag_422\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9419:9446  isExcludedFromDebasing[_to] */\n      dup9\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":9419:9441  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":9419:9446  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":9386:9446  isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to] */\n    tag_422:\n        /* \"SmartContractsInterview/Token.sol\":9382:9634  if (isExcludedFromDebasing[_from] && isExcludedFromDebasing[_to]) {... */\n      pop\n    tag_423:\n        /* \"SmartContractsInterview/Token.sol\":9648:9663  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":9648:9667  treasuryBalance > 0 */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":9644:9752  if (treasuryBalance > 0) {... */\n      tag_426\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":9709:9724  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":9726:9740  treasuryWallet */\n      sload(0x0b)\n        /* \"SmartContractsInterview/Token.sol\":9683:9741  _sendTokensTreasuryWallet(treasuryBalance, treasuryWallet) */\n      tag_426\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":9709:9724  treasuryBalance */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":9726:9740  treasuryWallet */\n      and\n        /* \"SmartContractsInterview/Token.sol\":9683:9708  _sendTokensTreasuryWallet */\n      tag_287\n        /* \"SmartContractsInterview/Token.sol\":9683:9741  _sendTokensTreasuryWallet(treasuryBalance, treasuryWallet) */\n      jump\t// in\n    tag_426:\n        /* \"SmartContractsInterview/Token.sol\":7348:9758  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":7233:9758  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":14802:15026  function _excludedFromHoldingLimit(address _account,bool _isExcluded) public {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":14906:14928  _account != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n      tag_429\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11073:11075   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11055:11076   */\n      mstore\n        /* \"#utility.yul\":11112:11114   */\n      0x1a\n        /* \"#utility.yul\":11092:11110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11085:11115   */\n      mstore\n        /* \"#utility.yul\":11151:11179   */\n      0x4163636f756e742073686f756c646e2774206265207a65726f2e000000000000\n        /* \"#utility.yul\":11131:11149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11124:11180   */\n      mstore\n        /* \"#utility.yul\":11197:11215   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n      tag_347\n        /* \"#utility.yul\":10871:11221   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":14898:14959  require(_account != address(0), \"Account shouldn't be zero.\") */\n    tag_429:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":14969:15005  isExcludedFromHoldingLimit[_account] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":14969:14995  isExcludedFromHoldingLimit */\n      0x13\n        /* \"SmartContractsInterview/Token.sol\":14969:15005  isExcludedFromHoldingLimit[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":14969:15019  isExcludedFromHoldingLimit[_account] = _isExcluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":14802:15026  function _excludedFromHoldingLimit(address _account,bool _isExcluded) public {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":5154:5438  function increaseAllowance(... */\n    tag_136:\n        /* \"SmartContractsInterview/Token.sol\":5304:5314  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":5266:5270  bool */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":5350:5373  _allowances[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":5350:5361  _allowances */\n      0x08\n        /* \"SmartContractsInterview/Token.sol\":5350:5373  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":5350:5383  _allowances[msg.sender][_spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":5266:5270  bool */\n      swap1\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":5282:5410  _approve(... */\n      tag_344\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":5328:5336  _spender */\n      dup6\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":5350:5400  _allowances[msg.sender][_spender].add(_addedValue) */\n      tag_92\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":5388:5399  _addedValue */\n      dup7\n        /* \"SmartContractsInterview/Token.sol\":5350:5387  _allowances[msg.sender][_spender].add */\n      tag_435\n        /* \"SmartContractsInterview/Token.sol\":5350:5400  _allowances[msg.sender][_spender].add(_addedValue) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":12766:12881  function updateHoldingLimit(uint256 _holdingLimit) external onlyOwner {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_438\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_438:\n        /* \"SmartContractsInterview/Token.sol\":12846:12858  holdingLimit */\n      0x10\n        /* \"SmartContractsInterview/Token.sol\":12846:12874  holdingLimit = _holdingLimit */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":12766:12881  function updateHoldingLimit(uint256 _holdingLimit) external onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":17030:17093  function unpause() public onlyOwner {... */\n    tag_154:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_442\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_442:\n        /* \"SmartContractsInterview/Token.sol\":17076:17086  _unpause() */\n      tag_444\n        /* \"SmartContractsInterview/Token.sol\":17076:17084  _unpause */\n      tag_445\n        /* \"SmartContractsInterview/Token.sol\":17076:17086  _unpause() */\n      jump\t// in\n    tag_444:\n        /* \"SmartContractsInterview/Token.sol\":17030:17093  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":10999:11483  function performUpkeep(bytes calldata /* performData */) external override {... */\n    tag_159:\n        /* \"SmartContractsInterview/Token.sol\":11225:11239  debaseDuration */\n      sload(0x0f)\n        /* \"SmartContractsInterview/Token.sol\":11208:11221  lastTimeStamp */\n      sload(0x15)\n        /* \"SmartContractsInterview/Token.sol\":11190:11221  block.timestamp - lastTimeStamp */\n      tag_447\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":11190:11205  block.timestamp */\n      timestamp\n        /* \"SmartContractsInterview/Token.sol\":11190:11221  block.timestamp - lastTimeStamp */\n      tag_387\n      jump\t// in\n    tag_447:\n        /* \"SmartContractsInterview/Token.sol\":11189:11239  (block.timestamp - lastTimeStamp) > debaseDuration */\n      gt\n        /* \"SmartContractsInterview/Token.sol\":11168:11295  require(... */\n      tag_448\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11428:11430   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":11168:11295  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11410:11431   */\n      mstore\n        /* \"#utility.yul\":11467:11469   */\n      0x1e\n        /* \"#utility.yul\":11447:11465   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11440:11470   */\n      mstore\n        /* \"#utility.yul\":11506:11538   */\n      0x4b656570557020726571756972656d656e74206973206e6f74206d6574210000\n        /* \"#utility.yul\":11486:11504   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11479:11539   */\n      mstore\n        /* \"#utility.yul\":11556:11574   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":11168:11295  require(... */\n      tag_347\n        /* \"#utility.yul\":11226:11580   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":11168:11295  require(... */\n    tag_448:\n        /* \"SmartContractsInterview/Token.sol\":11325:11346  excludeDebasingSupply */\n      sload(0x07)\n        /* \"SmartContractsInterview/Token.sol\":11314:11321  tSupply */\n      sload(0x06)\n        /* \"SmartContractsInterview/Token.sol\":11314:11346  tSupply >= excludeDebasingSupply */\n      lt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":11306:11413  require(tSupply >= excludeDebasingSupply, \"tSupply must be greater than or equal to excludeDebasingSupply\") */\n      tag_451\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11787:11789   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":11306:11413  require(tSupply >= excludeDebasingSupply, \"tSupply must be greater than or equal to excludeDebasingSupply\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11769:11790   */\n      mstore\n        /* \"#utility.yul\":11826:11828   */\n      0x3e\n        /* \"#utility.yul\":11806:11824   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11799:11829   */\n      mstore\n        /* \"#utility.yul\":11865:11899   */\n      0x74537570706c79206d7573742062652067726561746572207468616e206f7220\n        /* \"#utility.yul\":11845:11863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11838:11900   */\n      mstore\n        /* \"#utility.yul\":11936:11968   */\n      0x657175616c20746f206578636c7564654465626173696e67537570706c790000\n        /* \"#utility.yul\":11916:11934   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11909:11969   */\n      mstore\n        /* \"#utility.yul\":11986:12005   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":11306:11413  require(tSupply >= excludeDebasingSupply, \"tSupply must be greater than or equal to excludeDebasingSupply\") */\n      tag_347\n        /* \"#utility.yul\":11585:12011   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":11306:11413  require(tSupply >= excludeDebasingSupply, \"tSupply must be greater than or equal to excludeDebasingSupply\") */\n    tag_451:\n        /* \"SmartContractsInterview/Token.sol\":11425:11434  _debase() */\n      tag_454\n        /* \"SmartContractsInterview/Token.sol\":11425:11432  _debase */\n      tag_455\n        /* \"SmartContractsInterview/Token.sol\":11425:11434  _debase() */\n      jump\t// in\n    tag_454:\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":11461:11476  block.timestamp */\n      timestamp\n        /* \"SmartContractsInterview/Token.sol\":11445:11458  lastTimeStamp */\n      0x15\n        /* \"SmartContractsInterview/Token.sol\":11445:11476  lastTimeStamp = block.timestamp */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":10999:11483  function performUpkeep(bytes calldata /* performData */) external override {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":6112:6685  function _mint(address _to, uint256 _amount) public {... */\n    tag_168:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6182:6199  _to != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":6174:6235  require(_to != address(0), \"ERC20: mint to the zero address\") */\n      tag_457\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12218:12220   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":6174:6235  require(_to != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12200:12221   */\n      mstore\n        /* \"#utility.yul\":12257:12259   */\n      0x1f\n        /* \"#utility.yul\":12237:12255   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12230:12260   */\n      mstore\n        /* \"#utility.yul\":12296:12329   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":12276:12294   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12269:12330   */\n      mstore\n        /* \"#utility.yul\":12347:12365   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":6174:6235  require(_to != address(0), \"ERC20: mint to the zero address\") */\n      tag_347\n        /* \"#utility.yul\":12016:12371   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":6174:6235  require(_to != address(0), \"ERC20: mint to the zero address\") */\n    tag_457:\n        /* \"SmartContractsInterview/Token.sol\":6257:6264  _amount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":6246:6253  tSupply */\n      0x06\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":6246:6264  tSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_460\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_460:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6275:6300  uint256 debaseTokenAmount */\n      0x00\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6303:6334  _fragmentToDebaseToken(_amount) */\n      tag_461\n        /* \"SmartContractsInterview/Token.sol\":6326:6333  _amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":6303:6325  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":6303:6334  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_461:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6348:6375  isExcludedFromDebasing[_to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":6348:6370  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":6348:6375  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":6275:6334  uint256 debaseTokenAmount = _fragmentToDebaseToken(_amount) */\n      swap1\n      swap2\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6348:6375  isExcludedFromDebasing[_to] */\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":6344:6499  if (isExcludedFromDebasing[_to]) {... */\n      iszero\n      tag_462\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":6416:6423  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":6391:6412  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":6391:6423  excludeDebasingSupply += _amount */\n      dup3\n      dup3\n      sload\n      tag_463\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_463:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6457:6488  _fragmentToDebaseToken(_amount) */\n      tag_464\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6480:6487  _amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":6457:6479  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":6457:6488  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_464:\n        /* \"SmartContractsInterview/Token.sol\":6437:6488  debaseTokenAmount = _fragmentToDebaseToken(_amount) */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6344:6499  if (isExcludedFromDebasing[_to]) {... */\n    tag_462:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6509:6523  _balances[_to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":6509:6518  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":6509:6523  _balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":6509:6544  _balances[_to] += debaseTokenAmount */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":6527:6544  debaseTokenAmount */\n      dup4\n      swap3\n        /* \"SmartContractsInterview/Token.sol\":6509:6523  _balances[_to] */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":6509:6544  _balances[_to] += debaseTokenAmount */\n      tag_465\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":6527:6544  debaseTokenAmount */\n      dup5\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":6509:6544  _balances[_to] += debaseTokenAmount */\n      tag_355\n      jump\t// in\n    tag_465:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6560:6578  Mint(_to, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6560:6578  Mint(_to, _amount) */\n      dup5\n      and\n      swap1\n      0x0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885\n      swap1\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":6560:6578  Mint(_to, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SmartContractsInterview/Token.sol\":6599:6613  treasuryWallet */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6592:6613  _to != treasuryWallet */\n      dup5\n      dup2\n      and\n        /* \"SmartContractsInterview/Token.sol\":6599:6613  treasuryWallet */\n      swap2\n      and\n        /* \"SmartContractsInterview/Token.sol\":6592:6613  _to != treasuryWallet */\n      eq\n        /* \"SmartContractsInterview/Token.sol\":6588:6679  if (_to != treasuryWallet) {... */\n      tag_467\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":6634:6668  Transfer(address(0), _to, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6634:6668  Transfer(address(0), _to, _amount) */\n      dup5\n      and\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":6651:6652  0 */\n      0x00\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":6634:6668  Transfer(address(0), _to, _amount) */\n      swap1\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":6634:6668  Transfer(address(0), _to, _amount) */\n      tag_352\n        /* \"#utility.yul\":1778:1955   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":6588:6679  if (_to != treasuryWallet) {... */\n    tag_467:\n        /* \"SmartContractsInterview/Token.sol\":6164:6685  {... */\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6112:6685  function _mint(address _to, uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":16818:16959  function setLastTime() external onlyOwner {... */\n    tag_179:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_471\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_471:\n        /* \"SmartContractsInterview/Token.sol\":16895:16910  block.timestamp */\n      timestamp\n        /* \"SmartContractsInterview/Token.sol\":16878:16891  lastTimeStamp */\n      sload(0x15)\n        /* \"SmartContractsInterview/Token.sol\":16878:16910  lastTimeStamp <= block.timestamp */\n      gt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":16870:16911  require(lastTimeStamp <= block.timestamp) */\n      tag_473\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_473:\n        /* \"SmartContractsInterview/Token.sol\":16937:16952  block.timestamp */\n      timestamp\n        /* \"SmartContractsInterview/Token.sol\":16921:16934  lastTimeStamp */\n      0x15\n        /* \"SmartContractsInterview/Token.sol\":16921:16952  lastTimeStamp = block.timestamp */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":16818:16959  function setLastTime() external onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":6691:7227  function _burn(address _from, uint256 _amount) public {... */\n    tag_183:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6763:6782  _from != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":6755:6820  require(_from != address(0), \"ERC20: burn from the zero address\") */\n      tag_475\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12578:12580   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":6755:6820  require(_from != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12560:12581   */\n      mstore\n        /* \"#utility.yul\":12617:12619   */\n      0x21\n        /* \"#utility.yul\":12597:12615   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12590:12620   */\n      mstore\n        /* \"#utility.yul\":12656:12690   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":12636:12654   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12629:12691   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":12707:12725   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12700:12731   */\n      mstore\n        /* \"#utility.yul\":12748:12767   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":6755:6820  require(_from != address(0), \"ERC20: burn from the zero address\") */\n      tag_347\n        /* \"#utility.yul\":12376:12773   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":6755:6820  require(_from != address(0), \"ERC20: burn from the zero address\") */\n    tag_475:\n        /* \"SmartContractsInterview/Token.sol\":6842:6849  _amount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":6831:6838  tSupply */\n      0x06\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":6831:6849  tSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_478\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_478:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6860:6885  uint256 debaseTokenAmount */\n      0x00\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6888:6919  _fragmentToDebaseToken(_amount) */\n      tag_479\n        /* \"SmartContractsInterview/Token.sol\":6911:6918  _amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":6888:6910  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":6888:6919  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_479:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":6933:6962  isExcludedFromDebasing[_from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":6933:6955  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":6933:6962  isExcludedFromDebasing[_from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":6860:6919  uint256 debaseTokenAmount = _fragmentToDebaseToken(_amount) */\n      swap1\n      swap2\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6933:6962  isExcludedFromDebasing[_from] */\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":6929:7086  if (isExcludedFromDebasing[_from]) {... */\n      iszero\n      tag_480\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":7003:7010  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":6978:6999  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":6978:7010  excludeDebasingSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_481\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_481:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":7044:7075  _fragmentToDebaseToken(_amount) */\n      tag_482\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":7067:7074  _amount */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":7044:7066  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":7044:7075  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_482:\n        /* \"SmartContractsInterview/Token.sol\":7024:7075  debaseTokenAmount = _fragmentToDebaseToken(_amount) */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":6929:7086  if (isExcludedFromDebasing[_from]) {... */\n    tag_480:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7096:7112  _balances[_from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":7096:7105  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":7096:7112  _balances[_from] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":7096:7133  _balances[_from] -= debaseTokenAmount */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":7116:7133  debaseTokenAmount */\n      dup4\n      swap3\n        /* \"SmartContractsInterview/Token.sol\":7096:7112  _balances[_from] */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":7096:7133  _balances[_from] -= debaseTokenAmount */\n      tag_483\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":7116:7133  debaseTokenAmount */\n      dup5\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":7096:7133  _balances[_from] -= debaseTokenAmount */\n      tag_387\n      jump\t// in\n    tag_483:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":7149:7169  Burn(_from, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7149:7169  Burn(_from, _amount) */\n      dup5\n      and\n      swap1\n      0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5\n      swap1\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":7149:7169  Burn(_from, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"SmartContractsInterview/Token.sol\":7184:7220  Transfer(_from, address(0), _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      dup3\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":7208:7209  0 */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":7184:7220  Transfer(_from, address(0), _amount) */\n      dup6\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      swap1\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":7184:7220  Transfer(_from, address(0), _amount) */\n      tag_352\n        /* \"#utility.yul\":1778:1955   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":12116:12287  function _debaseTokenToFragment(uint256 _debaseToken) public view returns (uint256) {... */\n    tag_187:\n        /* \"SmartContractsInterview/Token.sol\":12191:12198  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":12217:12280  _debaseToken.mul(tokenScalingFactor).div(TOKEN_public_DECIMALS) */\n      tag_343\n        /* \"SmartContractsInterview/Token.sol\":918:922  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"SmartContractsInterview/Token.sol\":12217:12253  _debaseToken.mul(tokenScalingFactor) */\n      tag_488\n        /* \"SmartContractsInterview/Token.sol\":12234:12252  tokenScalingFactor */\n      sload(0x0e)\n        /* \"SmartContractsInterview/Token.sol\":12217:12229  _debaseToken */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":12217:12233  _debaseToken.mul */\n      tag_489\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":12217:12253  _debaseToken.mul(tokenScalingFactor) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_488:\n        /* \"SmartContractsInterview/Token.sol\":12217:12257  _debaseToken.mul(tokenScalingFactor).div */\n      swap1\n      tag_490\n        /* \"SmartContractsInterview/Token.sol\":12217:12280  _debaseToken.mul(tokenScalingFactor).div(TOKEN_public_DECIMALS) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":3166:3447  function withdrawETH(address _to) external onlyOwner {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_492\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_492:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":3237:3254  _to != address(0) */\n      dup2\n      and\n        /* \"SmartContractsInterview/Token.sol\":3229:3288  require(_to != address(0), \"Invalid address: zero address\") */\n      tag_494\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12980:12982   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":3229:3288  require(_to != address(0), \"Invalid address: zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12962:12983   */\n      mstore\n        /* \"#utility.yul\":13019:13021   */\n      0x1d\n        /* \"#utility.yul\":12999:13017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12992:13022   */\n      mstore\n        /* \"#utility.yul\":13058:13089   */\n      0x496e76616c696420616464726573733a207a65726f2061646472657373000000\n        /* \"#utility.yul\":13038:13056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13031:13090   */\n      mstore\n        /* \"#utility.yul\":13107:13125   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":3229:3288  require(_to != address(0), \"Invalid address: zero address\") */\n      tag_347\n        /* \"#utility.yul\":12778:13131   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":3229:3288  require(_to != address(0), \"Invalid address: zero address\") */\n    tag_494:\n        /* \"SmartContractsInterview/Token.sol\":3299:3311  bool success */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":3325:3328  _to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":3317:3334  payable(_to).call */\n      and\n        /* \"SmartContractsInterview/Token.sol\":3342:3363  address(this).balance */\n      selfbalance\n        /* \"SmartContractsInterview/Token.sol\":3317:3368  payable(_to).call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_501\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_500)\n    tag_501:\n      0x60\n      swap2\n      pop\n    tag_500:\n      pop\n        /* \"SmartContractsInterview/Token.sol\":3298:3368  (bool success, ) = payable(_to).call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":3382:3389  success */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":3378:3441  if(!success) {... */\n      tag_502\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":3405:3430  revert(\"Transfer Failed\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13548:13550   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":3405:3430  revert(\"Transfer Failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13530:13551   */\n      mstore\n        /* \"#utility.yul\":13587:13589   */\n      0x0f\n        /* \"#utility.yul\":13567:13585   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13560:13590   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8811985a5b1959)\n        /* \"#utility.yul\":13606:13624   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13599:13644   */\n      mstore\n        /* \"#utility.yul\":13661:13679   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":3405:3430  revert(\"Transfer Failed\") */\n      tag_347\n        /* \"#utility.yul\":13346:13685   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":3378:3441  if(!success) {... */\n    tag_502:\n        /* \"SmartContractsInterview/Token.sol\":3219:3447  {... */\n      pop\n        /* \"SmartContractsInterview/Token.sol\":3166:3447  function withdrawETH(address _to) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":9992:10653  function claimFromTreasury(... */\n    tag_200:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_506\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_363\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_506:\n        /* \"SmartContractsInterview/Token.sol\":1907:1917  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":1890:1918  treasuryOperator[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":1890:1906  treasuryOperator */\n      0x14\n        /* \"SmartContractsInterview/Token.sol\":1890:1918  treasuryOperator[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":1890:1943  treasuryOperator[msg.sender] || msg.sender == owner() */\n      tag_508\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"SmartContractsInterview/Token.sol\":1922:1932  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":1922:1943  msg.sender == owner() */\n      eq\n        /* \"SmartContractsInterview/Token.sol\":1890:1943  treasuryOperator[msg.sender] || msg.sender == owner() */\n    tag_508:\n        /* \"SmartContractsInterview/Token.sol\":1882:1944  require(treasuryOperator[msg.sender] || msg.sender == owner()) */\n      tag_510\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_510:\n        /* \"SmartContractsInterview/Token.sol\":10129:10144  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":10129:10148  treasuryBalance > 0 */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":10125:10233  if (treasuryBalance > 0) {... */\n      tag_513\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":10190:10205  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":10207:10221  treasuryWallet */\n      sload(0x0b)\n        /* \"SmartContractsInterview/Token.sol\":10164:10222  _sendTokensTreasuryWallet(treasuryBalance, treasuryWallet) */\n      tag_513\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":10190:10205  treasuryBalance */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":10207:10221  treasuryWallet */\n      and\n        /* \"SmartContractsInterview/Token.sol\":10164:10189  _sendTokensTreasuryWallet */\n      tag_287\n        /* \"SmartContractsInterview/Token.sol\":10164:10222  _sendTokensTreasuryWallet(treasuryBalance, treasuryWallet) */\n      jump\t// in\n    tag_513:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":10247:10274  isExcludedFromDebasing[_to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":10247:10269  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":10247:10274  isExcludedFromDebasing[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":10243:10522  if (isExcludedFromDebasing[_to]) {... */\n      iszero\n      tag_514\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":10308:10339  _fragmentToDebaseToken(_amount) */\n      tag_515\n        /* \"SmartContractsInterview/Token.sol\":10331:10338  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":10308:10330  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":10308:10339  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_515:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":10290:10304  _balances[_to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":10290:10299  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":10290:10304  _balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":10290:10339  _balances[_to] += _fragmentToDebaseToken(_amount) */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":10290:10304  _balances[_to] */\n      swap1\n      swap2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":10290:10339  _balances[_to] += _fragmentToDebaseToken(_amount) */\n      tag_516\n      swap1\n      dup5\n      swap1\n      tag_355\n      jump\t// in\n    tag_516:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":10243:10522  if (isExcludedFromDebasing[_to]) {... */\n      tag_517\n      swap1\n      pop\n      jump\n    tag_514:\n        /* \"SmartContractsInterview/Token.sol\":10388:10419  _fragmentToDebaseToken(_amount) */\n      tag_518\n        /* \"SmartContractsInterview/Token.sol\":10411:10418  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":10388:10410  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":10388:10419  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_518:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":10370:10384  _balances[_to] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":10370:10379  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":10370:10384  _balances[_to] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":10370:10419  _balances[_to] += _fragmentToDebaseToken(_amount) */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":10370:10384  _balances[_to] */\n      swap1\n      swap2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":10370:10419  _balances[_to] += _fragmentToDebaseToken(_amount) */\n      tag_519\n      swap1\n      dup5\n      swap1\n      tag_355\n      jump\t// in\n    tag_519:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":10504:10511  _amount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":10479:10500  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":10479:10511  excludeDebasingSupply -= _amount */\n      dup3\n      dup3\n      sload\n      tag_520\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_520:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":10243:10522  if (isExcludedFromDebasing[_to]) {... */\n    tag_517:\n        /* \"SmartContractsInterview/Token.sol\":10561:10592  _fragmentToDebaseToken(_amount) */\n      tag_521\n        /* \"SmartContractsInterview/Token.sol\":10584:10591  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":10561:10583  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":10561:10592  _fragmentToDebaseToken(_amount) */\n      jump\t// in\n    tag_521:\n        /* \"SmartContractsInterview/Token.sol\":10542:10556  treasuryWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"SmartContractsInterview/Token.sol\":10532:10557  _balances[treasuryWallet] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":10532:10541  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":10532:10557  _balances[treasuryWallet] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":10532:10592  _balances[treasuryWallet] -= _fragmentToDebaseToken(_amount) */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":10532:10557  _balances[treasuryWallet] */\n      swap1\n      swap2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":10532:10592  _balances[treasuryWallet] -= _fragmentToDebaseToken(_amount) */\n      tag_522\n      swap1\n      dup5\n      swap1\n      tag_387\n      jump\t// in\n    tag_522:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":10617:10631  treasuryWallet */\n      sload(0x0b)\n        /* \"SmartContractsInterview/Token.sol\":10608:10646  Transfer(treasuryWallet, _to, _amount) */\n      mload(0x40)\n        /* \"#utility.yul\":1924:1949   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":10608:10646  Transfer(treasuryWallet, _to, _amount) */\n      dup5\n      dup2\n      and\n      swap3\n        /* \"SmartContractsInterview/Token.sol\":10617:10631  treasuryWallet */\n      and\n      swap1\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":10608:10646  Transfer(treasuryWallet, _to, _amount) */\n      swap1\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n        /* \"SmartContractsInterview/Token.sol\":10608:10646  Transfer(treasuryWallet, _to, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartContractsInterview/Token.sol\":9992:10653  function claimFromTreasury(... */\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":14440:14796  function multiExcludedFromDebasing(... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_525\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_525:\n        /* \"SmartContractsInterview/Token.sol\":14575:14581  uint i */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":14570:14790  for (uint i = 0; i < _accounts.length; ++i) {... */\n    tag_527:\n        /* \"SmartContractsInterview/Token.sol\":14591:14600  _accounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":14591:14607  _accounts.length */\n      mload\n        /* \"SmartContractsInterview/Token.sol\":14587:14588  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":14587:14607  i < _accounts.length */\n      lt\n        /* \"SmartContractsInterview/Token.sol\":14570:14790  for (uint i = 0; i < _accounts.length; ++i) {... */\n      iszero\n      tag_467\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":14652:14666  treasuryWallet */\n      sload(0x0b)\n        /* \"SmartContractsInterview/Token.sol\":14636:14648  _accounts[i] */\n      dup4\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":14652:14666  treasuryWallet */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":14636:14645  _accounts */\n      dup5\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":14646:14647  i */\n      dup4\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":14636:14648  _accounts[i] */\n      dup2\n      lt\n      tag_531\n      jumpi\n      tag_531\n      tag_532\n      jump\t// in\n    tag_531:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":14636:14666  _accounts[i] != treasuryWallet */\n      and\n      sub\n        /* \"SmartContractsInterview/Token.sol\":14628:14717  require(_accounts[i] != treasuryWallet, \"Treasury wallet cannot be included in debasing\") */\n      tag_533\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14024:14026   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":14628:14717  require(_accounts[i] != treasuryWallet, \"Treasury wallet cannot be included in debasing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14006:14027   */\n      mstore\n        /* \"#utility.yul\":14063:14065   */\n      0x2e\n        /* \"#utility.yul\":14043:14061   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14036:14066   */\n      mstore\n        /* \"#utility.yul\":14102:14136   */\n      0x54726561737572792077616c6c65742063616e6e6f7420626520696e636c7564\n        /* \"#utility.yul\":14082:14100   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14075:14137   */\n      mstore\n      shl(0x90, 0x656420696e206465626173696e67)\n        /* \"#utility.yul\":14153:14171   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14146:14190   */\n      mstore\n        /* \"#utility.yul\":14207:14226   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":14628:14717  require(_accounts[i] != treasuryWallet, \"Treasury wallet cannot be included in debasing\") */\n      tag_347\n        /* \"#utility.yul\":13822:14232   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":14628:14717  require(_accounts[i] != treasuryWallet, \"Treasury wallet cannot be included in debasing\") */\n    tag_533:\n        /* \"SmartContractsInterview/Token.sol\":14731:14779  _excludedFromDebasing(_accounts[i], _isExcluded) */\n      tag_536\n        /* \"SmartContractsInterview/Token.sol\":14753:14762  _accounts */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":14763:14764  i */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":14753:14765  _accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_538\n      jumpi\n      tag_538\n      tag_532\n      jump\t// in\n    tag_538:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":14767:14778  _isExcluded */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":14731:14752  _excludedFromDebasing */\n      tag_215\n        /* \"SmartContractsInterview/Token.sol\":14731:14779  _excludedFromDebasing(_accounts[i], _isExcluded) */\n      jump\t// in\n    tag_536:\n        /* \"SmartContractsInterview/Token.sol\":14609:14612  ++i */\n      0x01\n      add\n        /* \"SmartContractsInterview/Token.sol\":14570:14790  for (uint i = 0; i < _accounts.length; ++i) {... */\n      jump(tag_527)\n        /* \"SmartContractsInterview/Token.sol\":10659:10993  function checkUpkeep(... */\n    tag_209:\n        /* \"SmartContractsInterview/Token.sol\":10784:10801  bool upkeepNeeded */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":10803:10827  bytes memory performData */\n      0x60\n        /* \"SmartContractsInterview/Token.sol\":10894:10908  debaseDuration */\n      sload(0x0f)\n        /* \"SmartContractsInterview/Token.sol\":10877:10890  lastTimeStamp */\n      sload(0x15)\n        /* \"SmartContractsInterview/Token.sol\":10859:10874  block.timestamp */\n      timestamp\n        /* \"SmartContractsInterview/Token.sol\":10859:10890  block.timestamp - lastTimeStamp */\n      tag_540\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_540:\n        /* \"SmartContractsInterview/Token.sol\":10858:10908  (block.timestamp - lastTimeStamp) > debaseDuration */\n      gt\n        /* \"SmartContractsInterview/Token.sol\":10843:10908  upkeepNeeded = (block.timestamp - lastTimeStamp) > debaseDuration */\n      swap2\n      pop\n        /* \"SmartContractsInterview/Token.sol\":10932:10941  checkData */\n      dup4\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":10918:10941  performData = checkData */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      swap3\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":10659:10993  function checkUpkeep(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":13779:14434  function _excludedFromDebasing(address _account,bool _isExcluded) public {... */\n    tag_215:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":13879:13901  _account != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n      tag_542\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11073:11075   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11055:11076   */\n      mstore\n        /* \"#utility.yul\":11112:11114   */\n      0x1a\n        /* \"#utility.yul\":11092:11110   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11085:11115   */\n      mstore\n        /* \"#utility.yul\":11151:11179   */\n      0x4163636f756e742073686f756c646e2774206265207a65726f2e000000000000\n        /* \"#utility.yul\":11131:11149   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11124:11180   */\n      mstore\n        /* \"#utility.yul\":11197:11215   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n      tag_347\n        /* \"#utility.yul\":10871:11221   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":13871:13932  require(_account != address(0), \"Account shouldn't be zero.\") */\n    tag_542:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":13964:13996  isExcludedFromDebasing[_account] */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":13942:13961  bool prevIsExcluded */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":13964:13996  isExcludedFromDebasing[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":13964:13986  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":13964:13996  isExcludedFromDebasing[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":14028:14047  balanceOf(_account) */\n      tag_544\n        /* \"SmartContractsInterview/Token.sol\":13987:13995  _account */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":14028:14037  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":14028:14047  balanceOf(_account) */\n      jump\t// in\n    tag_544:\n        /* \"SmartContractsInterview/Token.sol\":14006:14047  uint256 prevBalance = balanceOf(_account) */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":14089:14100  _isExcluded */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":14071:14100  prevIsExcluded != _isExcluded */\n      iszero\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":14071:14085  prevIsExcluded */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":14071:14100  prevIsExcluded != _isExcluded */\n      iszero\n      iszero\n      eq\n        /* \"SmartContractsInterview/Token.sol\":14067:14428  if (prevIsExcluded != _isExcluded) {... */\n      tag_551\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":14116:14148  isExcludedFromDebasing[_account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":14116:14138  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":14116:14148  isExcludedFromDebasing[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":14116:14162  isExcludedFromDebasing[_account] = _isExcluded */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup5\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":14185:14200  !prevIsExcluded */\n      dup2\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":14185:14215  !prevIsExcluded && _isExcluded */\n      dup1\n      iszero\n      tag_546\n      jumpi\n      pop\n        /* \"SmartContractsInterview/Token.sol\":14204:14215  _isExcluded */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":14185:14215  !prevIsExcluded && _isExcluded */\n    tag_546:\n        /* \"SmartContractsInterview/Token.sol\":14181:14418  if (!prevIsExcluded && _isExcluded) {... */\n      iszero\n      tag_547\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":14263:14274  prevBalance */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":14238:14259  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":14238:14274  excludeDebasingSupply += prevBalance */\n      dup3\n      dup3\n      sload\n      tag_548\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_548:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":14181:14418  if (!prevIsExcluded && _isExcluded) {... */\n      tag_551\n      swap1\n      pop\n      jump\n    tag_547:\n        /* \"SmartContractsInterview/Token.sol\":14316:14330  prevIsExcluded */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":14316:14346  prevIsExcluded && !_isExcluded */\n      dup1\n      iszero\n      tag_550\n      jumpi\n      pop\n        /* \"SmartContractsInterview/Token.sol\":14335:14346  _isExcluded */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":14334:14346  !_isExcluded */\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":14316:14346  prevIsExcluded && !_isExcluded */\n    tag_550:\n        /* \"SmartContractsInterview/Token.sol\":14312:14418  if (prevIsExcluded && !_isExcluded) {... */\n      iszero\n      tag_551\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":14392:14403  prevBalance */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":14367:14388  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":14367:14403  excludeDebasingSupply -= prevBalance */\n      dup3\n      dup3\n      sload\n      tag_552\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_552:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":14312:14418  if (prevIsExcluded && !_isExcluded) {... */\n    tag_551:\n        /* \"SmartContractsInterview/Token.sol\":13852:14434  {... */\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":13779:14434  function _excludedFromDebasing(address _account,bool _isExcluded) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":3675:4059  function balanceOf(... */\n    tag_219:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":3779:3811  isExcludedFromDebasing[_account] */\n      dup2\n      and\n        /* \"SmartContractsInterview/Token.sol\":3756:3763  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":3779:3811  isExcludedFromDebasing[_account] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":3779:3801  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":3779:3811  isExcludedFromDebasing[_account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":3775:3993  if (isExcludedFromDebasing[_account]) {... */\n      iszero\n      tag_555\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":3843:3857  treasuryWallet */\n      sload(0x0b)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"SmartContractsInterview/Token.sol\":3831:3857  _account == treasuryWallet */\n      swap1\n      dup4\n      and\n      sub\n        /* \"SmartContractsInterview/Token.sol\":3827:3919  if (_account == treasuryWallet) {... */\n      tag_555\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":3884:3904  _treasuryBalanceOf() */\n      tag_343\n        /* \"SmartContractsInterview/Token.sol\":3884:3902  _treasuryBalanceOf */\n      tag_326\n        /* \"SmartContractsInterview/Token.sol\":3884:3904  _treasuryBalanceOf() */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":3827:3919  if (_account == treasuryWallet) {... */\n    tag_555:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":3962:3981  _balances[_account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":3962:3971  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":3962:3981  _balances[_account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":3939:3982  _debaseTokenToFragment(_balances[_account]) */\n      tag_343\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":3939:3961  _debaseTokenToFragment */\n      tag_187\n        /* \"SmartContractsInterview/Token.sol\":3939:3982  _debaseTokenToFragment(_balances[_account]) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_560\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_560:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_444\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_563\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":13564:13773  function updateTreasuryOperator( address _addr,  bool _isOperator) external onlyOwner {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_565\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_565:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":13668:13687  _addr != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":13660:13719  require(_addr != address(0), \"Operator shouldn't be zero.\") */\n      tag_567\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14439:14441   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":13660:13719  require(_addr != address(0), \"Operator shouldn't be zero.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14421:14442   */\n      mstore\n        /* \"#utility.yul\":14478:14480   */\n      0x1b\n        /* \"#utility.yul\":14458:14476   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14451:14481   */\n      mstore\n        /* \"#utility.yul\":14517:14546   */\n      0x4f70657261746f722073686f756c646e2774206265207a65726f2e0000000000\n        /* \"#utility.yul\":14497:14515   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14490:14547   */\n      mstore\n        /* \"#utility.yul\":14564:14582   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":13660:13719  require(_addr != address(0), \"Operator shouldn't be zero.\") */\n      tag_347\n        /* \"#utility.yul\":14237:14588   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":13660:13719  require(_addr != address(0), \"Operator shouldn't be zero.\") */\n    tag_567:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":13729:13752  treasuryOperator[_addr] */\n      swap2\n      swap1\n      swap2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":13729:13745  treasuryOperator */\n      0x14\n        /* \"SmartContractsInterview/Token.sol\":13729:13752  treasuryOperator[_addr] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":13729:13766  treasuryOperator[_addr] = _isOperator */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":13564:13773  function updateTreasuryOperator( address _addr,  bool _isOperator) external onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":15032:15280  function multiExcludedFromHoldingLimit(address[] memory _accounts, bool _isExcluded) public onlyOwner {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_571\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_571:\n        /* \"SmartContractsInterview/Token.sol\":15158:15164  uint i */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":15153:15274  for (uint i = 0; i < _accounts.length; ++i) {... */\n    tag_573:\n        /* \"SmartContractsInterview/Token.sol\":15174:15183  _accounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":15174:15190  _accounts.length */\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15170:15171  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":15170:15190  i < _accounts.length */\n      lt\n        /* \"SmartContractsInterview/Token.sol\":15153:15274  for (uint i = 0; i < _accounts.length; ++i) {... */\n      iszero\n      tag_467\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":15211:15263  _excludedFromHoldingLimit(_accounts[i], _isExcluded) */\n      tag_576\n        /* \"SmartContractsInterview/Token.sol\":15237:15246  _accounts */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":15247:15248  i */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":15237:15249  _accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_578\n      jumpi\n      tag_578\n      tag_532\n      jump\t// in\n    tag_578:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15251:15262  _isExcluded */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":15211:15236  _excludedFromHoldingLimit */\n      tag_132\n        /* \"SmartContractsInterview/Token.sol\":15211:15263  _excludedFromHoldingLimit(_accounts[i], _isExcluded) */\n      jump\t// in\n    tag_576:\n        /* \"SmartContractsInterview/Token.sol\":15192:15195  ++i */\n      0x01\n      add\n        /* \"SmartContractsInterview/Token.sol\":15153:15274  for (uint i = 0; i < _accounts.length; ++i) {... */\n      jump(tag_573)\n        /* \"SmartContractsInterview/Token.sol\":13255:13558  function updateLPPool(address _lpPool, bool _isLPPool) external onlyOwner {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_580\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_580:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":13347:13368  _lpPool != address(0) */\n      dup3\n      and\n        /* \"SmartContractsInterview/Token.sol\":13339:13407  require(_lpPool != address(0), \"LP Pool address shouldn't be zero!\") */\n      tag_582\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14795:14797   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":13339:13407  require(_lpPool != address(0), \"LP Pool address shouldn't be zero!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14777:14798   */\n      mstore\n        /* \"#utility.yul\":14834:14836   */\n      0x22\n        /* \"#utility.yul\":14814:14832   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14807:14837   */\n      mstore\n        /* \"#utility.yul\":14873:14907   */\n      0x4c5020506f6f6c20616464726573732073686f756c646e2774206265207a6572\n        /* \"#utility.yul\":14853:14871   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14846:14908   */\n      mstore\n      shl(0xf0, 0x6f21)\n        /* \"#utility.yul\":14924:14942   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14917:14949   */\n      mstore\n        /* \"#utility.yul\":14966:14985   */\n      0x84\n      add\n        /* \"SmartContractsInterview/Token.sol\":13339:13407  require(_lpPool != address(0), \"LP Pool address shouldn't be zero!\") */\n      tag_347\n        /* \"#utility.yul\":14593:14991   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":13339:13407  require(_lpPool != address(0), \"LP Pool address shouldn't be zero!\") */\n    tag_582:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":13417:13433  lpPools[_lpPool] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":13417:13424  lpPools */\n      0x11\n        /* \"SmartContractsInterview/Token.sol\":13417:13433  lpPools[_lpPool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":13417:13445  lpPools[_lpPool] = _isLPPool */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup3\n      iszero\n      iszero\n      or\n      swap1\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":13455:13496  _excludedFromDebasing(_lpPool, _isLPPool) */\n      tag_585\n        /* \"SmartContractsInterview/Token.sol\":13417:13433  lpPools[_lpPool] */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":13417:13445  lpPools[_lpPool] = _isLPPool */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":13455:13476  _excludedFromDebasing */\n      tag_215\n        /* \"SmartContractsInterview/Token.sol\":13455:13496  _excludedFromDebasing(_lpPool, _isLPPool) */\n      jump\t// in\n    tag_585:\n        /* \"SmartContractsInterview/Token.sol\":13506:13551  _excludedFromHoldingLimit(_lpPool, _isLPPool) */\n      tag_502\n        /* \"SmartContractsInterview/Token.sol\":13532:13539  _lpPool */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":13541:13550  _isLPPool */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":13506:13531  _excludedFromHoldingLimit */\n      tag_132\n        /* \"SmartContractsInterview/Token.sol\":13506:13551  _excludedFromHoldingLimit(_lpPool, _isLPPool) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":12887:13120  function updateDebaseRate(uint256 _debaseRate) external onlyOwner {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_588\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_588:\n        /* \"SmartContractsInterview/Token.sol\":808:813  10000 */\n      0x2710\n        /* \"SmartContractsInterview/Token.sol\":12991:13002  _debaseRate */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":12991:13028  _debaseRate <= PERCENTAGE_DENOMINATOR */\n      gt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":12983:13079  require(_debaseRate <= PERCENTAGE_DENOMINATOR,\"Rate should be less than PERCENTAGE_DENOMINATOR\") */\n      tag_590\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_592\n      jump\t// in\n    tag_590:\n        /* \"SmartContractsInterview/Token.sol\":13089:13099  debaseRate */\n      0x0d\n        /* \"SmartContractsInterview/Token.sol\":13089:13113  debaseRate = _debaseRate */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":12887:13120  function updateDebaseRate(uint256 _debaseRate) external onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":16965:17024  function pause() public onlyOwner {... */\n    tag_242:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_594\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_594:\n        /* \"SmartContractsInterview/Token.sol\":17009:17017  _pause() */\n      tag_444\n        /* \"SmartContractsInterview/Token.sol\":17009:17015  _pause */\n      tag_597\n        /* \"SmartContractsInterview/Token.sol\":17009:17017  _pause() */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":17136:17219  function getOwner() external view returns (address) {... */\n    tag_249:\n        /* \"SmartContractsInterview/Token.sol\":17179:17186  address */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":17205:17212  owner() */\n      tag_354\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":12297:12452  function _fragmentToDebaseToken(uint256 _value) public pure returns (uint256) {... */\n    tag_254:\n        /* \"SmartContractsInterview/Token.sol\":12366:12373  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":12392:12445  _value.mul(TOKEN_public_DECIMALS).div(TOKEN_DECIMALS) */\n      tag_343\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SmartContractsInterview/Token.sol\":12392:12425  _value.mul(TOKEN_public_DECIMALS) */\n      tag_488\n        /* \"SmartContractsInterview/Token.sol\":12392:12398  _value */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":918:922  1e24 */\n      0xd3c21bcecceda1000000\n        /* \"SmartContractsInterview/Token.sol\":12392:12402  _value.mul */\n      tag_489\n        /* \"SmartContractsInterview/Token.sol\":12392:12425  _value.mul(TOKEN_public_DECIMALS) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":962:991  string public override symbol */\n    tag_281:\n      0x04\n      dup1\n      sload\n      tag_337\n      swap1\n      tag_338\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":9764:9986  function _sendTokensTreasuryWallet(uint256 _amount, address _to) public {... */\n    tag_287:\n        /* \"SmartContractsInterview/Token.sol\":9873:9880  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":9854:9869  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":9854:9880  treasuryBalance >= _amount */\n      lt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":9846:9914  require(treasuryBalance >= _amount, \"Insufficient Balance to claim\") */\n      tag_610\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15614:15616   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":9846:9914  require(treasuryBalance >= _amount, \"Insufficient Balance to claim\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15596:15617   */\n      mstore\n        /* \"#utility.yul\":15653:15655   */\n      0x1d\n        /* \"#utility.yul\":15633:15651   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15626:15656   */\n      mstore\n        /* \"#utility.yul\":15692:15723   */\n      0x496e73756666696369656e742042616c616e636520746f20636c61696d000000\n        /* \"#utility.yul\":15672:15690   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15665:15724   */\n      mstore\n        /* \"#utility.yul\":15741:15759   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":9846:9914  require(treasuryBalance >= _amount, \"Insufficient Balance to claim\") */\n      tag_347\n        /* \"#utility.yul\":15412:15765   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":9846:9914  require(treasuryBalance >= _amount, \"Insufficient Balance to claim\") */\n    tag_610:\n        /* \"SmartContractsInterview/Token.sol\":9943:9950  _amount */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":9924:9939  treasuryBalance */\n      0x0a\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":9924:9950  treasuryBalance -= _amount */\n      dup3\n      dup3\n      sload\n      tag_613\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_613:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":9960:9979  _mint(_to, _amount) */\n      tag_502\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":9966:9969  _to */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":9971:9978  _amount */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":9960:9965  _mint */\n      tag_168\n        /* \"SmartContractsInterview/Token.sol\":9960:9979  _mint(_to, _amount) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":5444:5717  function decreaseAllowance(address _spender,uint256 _subtractedValue) public virtual returns (bool) {... */\n    tag_291:\n        /* \"SmartContractsInterview/Token.sol\":5538:5542  bool */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":5554:5689  _approve(msg.sender, _spender,_allowances[msg.sender][_spender].sub(_subtractedValue,\"ERC20: decreased allowance below zero\")... */\n      tag_344\n        /* \"SmartContractsInterview/Token.sol\":5563:5573  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":5575:5583  _spender */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":5584:5679  _allowances[msg.sender][_spender].sub(_subtractedValue,\"ERC20: decreased allowance below zero\") */\n      tag_92\n        /* \"SmartContractsInterview/Token.sol\":5622:5638  _subtractedValue */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":5584:5679  _allowances[msg.sender][_spender].sub(_subtractedValue,\"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"SmartContractsInterview/Token.sol\":5596:5606  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":5584:5607  _allowances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":5584:5595  _allowances */\n      0x08\n        /* \"SmartContractsInterview/Token.sol\":5584:5607  _allowances[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":5584:5617  _allowances[msg.sender][_spender] */\n      dup14\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"SmartContractsInterview/Token.sol\":5584:5679  _allowances[msg.sender][_spender].sub(_subtractedValue,\"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":5584:5621  _allowances[msg.sender][_spender].sub */\n      tag_360\n        /* \"SmartContractsInterview/Token.sol\":5584:5679  _allowances[msg.sender][_spender].sub(_subtractedValue,\"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":4191:4356  function transfer(address _recipient,uint256 _amount) public override returns (bool) {... */\n    tag_300:\n        /* \"SmartContractsInterview/Token.sol\":4270:4274  bool */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":4286:4328  _transfer(msg.sender, _recipient, _amount) */\n      tag_344\n        /* \"SmartContractsInterview/Token.sol\":4296:4306  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":4308:4318  _recipient */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4320:4327  _amount */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":4286:4295  _transfer */\n      tag_122\n        /* \"SmartContractsInterview/Token.sol\":4286:4328  _transfer(msg.sender, _recipient, _amount) */\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":12505:12760  function updateSellTaxRate(uint256 _sellTaxRate) external onlyOwner {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_621\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_621:\n        /* \"SmartContractsInterview/Token.sol\":12640:12644  5000 */\n      0x1388\n        /* \"SmartContractsInterview/Token.sol\":12624:12636  _sellTaxRate */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":12624:12644  _sellTaxRate <= 5000 */\n      gt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":12603:12717  require(... */\n      tag_623\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap1\n      tag_592\n      jump\t// in\n    tag_623:\n        /* \"SmartContractsInterview/Token.sol\":12727:12738  sellTaxRate */\n      0x0c\n        /* \"SmartContractsInterview/Token.sol\":12727:12753  sellTaxRate = _sellTaxRate */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":12505:12760  function updateSellTaxRate(uint256 _sellTaxRate) external onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":13126:13249  function updateDebaseDuration(uint256 _debaseDuration) external onlyOwner {... */\n    tag_323:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_627\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_627:\n        /* \"SmartContractsInterview/Token.sol\":13210:13224  debaseDuration */\n      0x0f\n        /* \"SmartContractsInterview/Token.sol\":13210:13242  debaseDuration = _debaseDuration */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":13126:13249  function updateDebaseDuration(uint256 _debaseDuration) external onlyOwner {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":17225:17441  function _treasuryBalanceOf() public view returns (uint256) {... */\n    tag_326:\n        /* \"SmartContractsInterview/Token.sol\":17363:17377  treasuryWallet */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0b))\n        /* \"SmartContractsInterview/Token.sol\":17276:17283  uint256 */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":17353:17378  _balances[treasuryWallet] */\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":17353:17362  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":17353:17378  _balances[treasuryWallet] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"SmartContractsInterview/Token.sol\":17276:17283  uint256 */\n      dup2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":17317:17388  _debaseTokenToFragment(... */\n      tag_630\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":17317:17339  _debaseTokenToFragment */\n      tag_187\n        /* \"SmartContractsInterview/Token.sol\":17317:17388  _debaseTokenToFragment(... */\n      jump\t// in\n    tag_630:\n        /* \"SmartContractsInterview/Token.sol\":17295:17388  uint256 realBalance = _debaseTokenToFragment(... */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":17423:17434  realBalance */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":17405:17420  treasuryBalance */\n      sload(0x0a)\n        /* \"SmartContractsInterview/Token.sol\":17405:17434  treasuryBalance + realBalance */\n      tag_631\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_631:\n        /* \"SmartContractsInterview/Token.sol\":17398:17434  return treasuryBalance + realBalance */\n      swap2\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":17225:17441  function _treasuryBalanceOf() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":15286:16812  function multiAirdropTokenRequested(... */\n    tag_332:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_633\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_634\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_633:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_636\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_363\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_636:\n        /* \"SmartContractsInterview/Token.sol\":15479:15487  _amounts */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":15479:15494  _amounts.length */\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15456:15468  _airdroppers */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":15456:15475  _airdroppers.length */\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15456:15494  _airdroppers.length == _amounts.length */\n      eq\n        /* \"SmartContractsInterview/Token.sol\":15448:15521  require(_airdroppers.length == _amounts.length, \"Arrays length mismatch\") */\n      tag_638\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15972:15974   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":15448:15521  require(_airdroppers.length == _amounts.length, \"Arrays length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15954:15975   */\n      mstore\n        /* \"#utility.yul\":16011:16013   */\n      0x16\n        /* \"#utility.yul\":15991:16009   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15984:16014   */\n      mstore\n      shl(0x53, 0x082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":16030:16048   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16023:16075   */\n      mstore\n        /* \"#utility.yul\":16092:16110   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":15448:15521  require(_airdroppers.length == _amounts.length, \"Arrays length mismatch\") */\n      tag_347\n        /* \"#utility.yul\":15770:16116   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":15448:15521  require(_airdroppers.length == _amounts.length, \"Arrays length mismatch\") */\n    tag_638:\n        /* \"SmartContractsInterview/Token.sol\":15532:15551  uint256 totalAmount */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":15570:15579  uint256 i */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":15565:15662  for (uint256 i = 0; i < _amounts.length; ++i) {... */\n    tag_641:\n        /* \"SmartContractsInterview/Token.sol\":15589:15597  _amounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":15589:15604  _amounts.length */\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15585:15586  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":15585:15604  i < _amounts.length */\n      lt\n        /* \"SmartContractsInterview/Token.sol\":15565:15662  for (uint256 i = 0; i < _amounts.length; ++i) {... */\n      iszero\n      tag_642\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":15640:15648  _amounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":15649:15650  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":15640:15651  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_645\n      jumpi\n      tag_645\n      tag_532\n      jump\t// in\n    tag_645:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15625:15651  totalAmount += _amounts[i] */\n      dup3\n      tag_646\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_646:\n      swap2\n      pop\n        /* \"SmartContractsInterview/Token.sol\":15606:15609  ++i */\n      0x01\n      add\n        /* \"SmartContractsInterview/Token.sol\":15565:15662  for (uint256 i = 0; i < _amounts.length; ++i) {... */\n      jump(tag_641)\n    tag_642:\n      pop\n        /* \"SmartContractsInterview/Token.sol\":15709:15720  totalAmount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":15684:15705  balanceOf(msg.sender) */\n      tag_647\n        /* \"SmartContractsInterview/Token.sol\":15694:15704  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":15684:15693  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":15684:15705  balanceOf(msg.sender) */\n      jump\t// in\n    tag_647:\n        /* \"SmartContractsInterview/Token.sol\":15684:15720  balanceOf(msg.sender) >= totalAmount */\n      lt\n      iszero\n        /* \"SmartContractsInterview/Token.sol\":15676:15745  require(balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\") */\n      tag_648\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16323:16325   */\n      0x20\n        /* \"SmartContractsInterview/Token.sol\":15676:15745  require(balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16305:16326   */\n      mstore\n        /* \"#utility.yul\":16362:16364   */\n      0x14\n        /* \"#utility.yul\":16342:16360   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16335:16365   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":16381:16399   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16374:16424   */\n      mstore\n        /* \"#utility.yul\":16441:16459   */\n      0x64\n      add\n        /* \"SmartContractsInterview/Token.sol\":15676:15745  require(balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\") */\n      tag_347\n        /* \"#utility.yul\":16121:16465   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":15676:15745  require(balanceOf(msg.sender) >= totalAmount, \"Insufficient balance\") */\n    tag_648:\n        /* \"SmartContractsInterview/Token.sol\":15761:15770  uint256 i */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":15756:16806  for (uint256 i = 0; i < _airdroppers.length; ++i) {... */\n    tag_651:\n        /* \"SmartContractsInterview/Token.sol\":15780:15792  _airdroppers */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":15780:15799  _airdroppers.length */\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15776:15777  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":15776:15799  i < _airdroppers.length */\n      lt\n        /* \"SmartContractsInterview/Token.sol\":15756:16806  for (uint256 i = 0; i < _airdroppers.length; ++i) {... */\n      iszero\n      tag_652\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":15848:15856  _amounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":15857:15858  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":15848:15859  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_655\n      jumpi\n      tag_655\n      tag_532\n      jump\t// in\n    tag_655:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15824:15845  balanceOf(msg.sender) */\n      tag_656\n        /* \"SmartContractsInterview/Token.sol\":15834:15844  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":15824:15833  balanceOf */\n      tag_219\n        /* \"SmartContractsInterview/Token.sol\":15824:15845  balanceOf(msg.sender) */\n      jump\t// in\n    tag_656:\n        /* \"SmartContractsInterview/Token.sol\":15824:15859  balanceOf(msg.sender) > _amounts[i] */\n      gt\n        /* \"SmartContractsInterview/Token.sol\":15820:16796  if (balanceOf(msg.sender) > _amounts[i]) {... */\n      iszero\n      tag_657\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":15906:15916  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":15883:15917  isExcludedFromDebasing[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":15883:15905  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":15883:15917  isExcludedFromDebasing[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":15879:16277  if (isExcludedFromDebasing[msg.sender]) {... */\n      iszero\n      tag_658\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":15966:16047  _fragmentToDebaseToken(... */\n      tag_659\n        /* \"SmartContractsInterview/Token.sol\":16014:16022  _amounts */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":16023:16024  i */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":16014:16025  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_661\n      jumpi\n      tag_661\n      tag_532\n      jump\t// in\n    tag_661:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":15966:15988  _fragmentToDebaseToken */\n      tag_254\n        /* \"SmartContractsInterview/Token.sol\":15966:16047  _fragmentToDebaseToken(... */\n      jump\t// in\n    tag_659:\n        /* \"SmartContractsInterview/Token.sol\":15951:15961  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":15941:15962  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":15941:15950  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":15941:15962  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":15941:16047  _balances[msg.sender] -= _fragmentToDebaseToken(... */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":15941:15962  _balances[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":15941:16047  _balances[msg.sender] -= _fragmentToDebaseToken(... */\n      tag_662\n      swap1\n      dup5\n      swap1\n      tag_387\n      jump\t// in\n    tag_662:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":16094:16102  _amounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":16103:16104  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":16094:16105  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_664\n      jumpi\n      tag_664\n      tag_532\n      jump\t// in\n    tag_664:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":16069:16090  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16069:16105  excludeDebasingSupply -= _amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_665\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_665:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":15879:16277  if (isExcludedFromDebasing[msg.sender]) {... */\n      tag_666\n      swap1\n      pop\n      jump\n    tag_658:\n        /* \"SmartContractsInterview/Token.sol\":16177:16258  _fragmentToDebaseToken(... */\n      tag_667\n        /* \"SmartContractsInterview/Token.sol\":16225:16233  _amounts */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":16234:16235  i */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":16225:16236  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_661\n      jumpi\n      tag_661\n      tag_532\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":16177:16258  _fragmentToDebaseToken(... */\n    tag_667:\n        /* \"SmartContractsInterview/Token.sol\":16162:16172  msg.sender */\n      caller\n        /* \"SmartContractsInterview/Token.sol\":16152:16173  _balances[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":16152:16161  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":16152:16173  _balances[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"SmartContractsInterview/Token.sol\":16152:16258  _balances[msg.sender] -= _fragmentToDebaseToken(... */\n      dup1\n      sload\n        /* \"SmartContractsInterview/Token.sol\":16152:16173  _balances[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":16152:16258  _balances[msg.sender] -= _fragmentToDebaseToken(... */\n      tag_670\n      swap1\n      dup5\n      swap1\n      tag_387\n      jump\t// in\n    tag_670:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":15879:16277  if (isExcludedFromDebasing[msg.sender]) {... */\n    tag_666:\n        /* \"SmartContractsInterview/Token.sol\":16299:16321  isExcludedFromDebasing */\n      0x12\n        /* \"SmartContractsInterview/Token.sol\":16299:16338  isExcludedFromDebasing[_airdroppers[i]] */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16322:16334  _airdroppers */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":16335:16336  i */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":16322:16337  _airdroppers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_672\n      jumpi\n      tag_672\n      tag_532\n      jump\t// in\n    tag_672:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":16299:16338  isExcludedFromDebasing[_airdroppers[i]] */\n      and\n      dup3\n      mstore\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      0xff\n      and\n        /* \"SmartContractsInterview/Token.sol\":16295:16708  if (isExcludedFromDebasing[_airdroppers[i]]) {... */\n      iszero\n      tag_673\n      jumpi\n        /* \"SmartContractsInterview/Token.sol\":16438:16473  _fragmentToDebaseToken(_amounts[i]) */\n      tag_674\n        /* \"SmartContractsInterview/Token.sol\":16461:16469  _amounts */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":16470:16471  i */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":16461:16472  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_661\n      jumpi\n      tag_661\n      tag_532\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":16438:16473  _fragmentToDebaseToken(_amounts[i]) */\n    tag_674:\n        /* \"SmartContractsInterview/Token.sol\":16362:16371  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":16362:16434  _balances[... */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16397:16409  _airdroppers */\n      dup7\n        /* \"SmartContractsInterview/Token.sol\":16410:16411  i */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":16397:16412  _airdroppers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_678\n      jumpi\n      tag_678\n      tag_532\n      jump\t// in\n    tag_678:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":16362:16434  _balances[... */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16362:16473  _balances[... */\n      dup3\n      dup3\n      sload\n      tag_679\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_679:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":16520:16528  _amounts */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":16529:16530  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":16520:16531  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_681\n      jumpi\n      tag_681\n      tag_532\n      jump\t// in\n    tag_681:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":16495:16516  excludeDebasingSupply */\n      0x07\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16495:16531  excludeDebasingSupply += _amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_682\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_682:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":16295:16708  if (isExcludedFromDebasing[_airdroppers[i]]) {... */\n      tag_683\n      swap1\n      pop\n      jump\n    tag_673:\n        /* \"SmartContractsInterview/Token.sol\":16608:16689  _fragmentToDebaseToken(... */\n      tag_684\n        /* \"SmartContractsInterview/Token.sol\":16656:16664  _amounts */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":16665:16666  i */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":16656:16667  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_661\n      jumpi\n      tag_661\n      tag_532\n      jump\t// in\n        /* \"SmartContractsInterview/Token.sol\":16608:16689  _fragmentToDebaseToken(... */\n    tag_684:\n        /* \"SmartContractsInterview/Token.sol\":16578:16587  _balances */\n      0x09\n        /* \"SmartContractsInterview/Token.sol\":16578:16604  _balances[_airdroppers[i]] */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16588:16600  _airdroppers */\n      dup7\n        /* \"SmartContractsInterview/Token.sol\":16601:16602  i */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":16588:16603  _airdroppers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_688\n      jumpi\n      tag_688\n      tag_532\n      jump\t// in\n    tag_688:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":16578:16604  _balances[_airdroppers[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":16578:16689  _balances[_airdroppers[i]] += _fragmentToDebaseToken(... */\n      dup3\n      dup3\n      sload\n      tag_689\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_689:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"SmartContractsInterview/Token.sol\":16295:16708  if (isExcludedFromDebasing[_airdroppers[i]]) {... */\n    tag_683:\n        /* \"SmartContractsInterview/Token.sol\":16752:16764  _airdroppers */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":16765:16766  i */\n      dup2\n        /* \"SmartContractsInterview/Token.sol\":16752:16767  _airdroppers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_691\n      jumpi\n      tag_691\n      tag_532\n      jump\t// in\n    tag_691:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":16731:16781  Transfer(msg.sender, _airdroppers[i], _amounts[i]) */\n      and\n        /* \"SmartContractsInterview/Token.sol\":16740:16750  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"SmartContractsInterview/Token.sol\":16731:16781  Transfer(msg.sender, _airdroppers[i], _amounts[i]) */\n      and\n      0x00\n      dup1\n      mload\n      0x20\n      data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"SmartContractsInterview/Token.sol\":16769:16777  _amounts */\n      dup6\n        /* \"SmartContractsInterview/Token.sol\":16778:16779  i */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":16769:16780  _amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_693\n      jumpi\n      tag_693\n      tag_532\n      jump\t// in\n    tag_693:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"SmartContractsInterview/Token.sol\":16731:16781  Transfer(msg.sender, _airdroppers[i], _amounts[i]) */\n      mload(0x40)\n      tag_694\n      swap2\n        /* \"#utility.yul\":1924:1949   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1912:1914   */\n      0x20\n        /* \"#utility.yul\":1897:1915   */\n      add\n      swap1\n        /* \"#utility.yul\":1778:1955   */\n      jump\n        /* \"SmartContractsInterview/Token.sol\":16731:16781  Transfer(msg.sender, _airdroppers[i], _amounts[i]) */\n    tag_694:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"SmartContractsInterview/Token.sol\":15820:16796  if (balanceOf(msg.sender) > _amounts[i]) {... */\n    tag_657:\n        /* \"SmartContractsInterview/Token.sol\":15801:15804  ++i */\n      0x01\n      add\n        /* \"SmartContractsInterview/Token.sol\":15756:16806  for (uint256 i = 0; i < _airdroppers.length; ++i) {... */\n      jump(tag_651)\n    tag_652:\n      pop\n        /* \"SmartContractsInterview/Token.sol\":15438:16812  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_502\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_698\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_439\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_698:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_700\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3541:3592   */\n      mstore\n        /* \"#utility.yul\":3514:3532   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_347\n        /* \"#utility.yul\":3395:3598   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_700:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_702\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_563\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_702:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5160  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5045:5052  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5104:5116  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5096:5102  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5088:5117  require(b <= a, errorMessage) */\n      tag_704\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_704:\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5138:5143  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4959:5160  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_363:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16672:16674   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16654:16675   */\n      mstore\n        /* \"#utility.yul\":16711:16713   */\n      0x10\n        /* \"#utility.yul\":16691:16709   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16684:16714   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":16730:16748   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16723:16769   */\n      mstore\n        /* \"#utility.yul\":16786:16804   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_347\n        /* \"#utility.yul\":16470:16810   */\n      jump\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_435:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_712\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_355\n      jump\t// in\n    tag_712:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_439:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3541:3592   */\n      mstore\n        /* \"#utility.yul\":3514:3532   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_347\n        /* \"#utility.yul\":3395:3598   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_445:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_721\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_722\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_721:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_724:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3559:3591   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3541:3592   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3529:3531   */\n      0x20\n        /* \"#utility.yul\":3514:3532   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"SmartContractsInterview/Token.sol\":11489:12087  function _debase() private whenNotPaused {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_727\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_363\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_727:\n        /* \"SmartContractsInterview/Token.sol\":11549:11562  uint256 ratio */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":808:813  10000 */\n      0x2710\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SmartContractsInterview/Token.sol\":11566:11576  debaseRate */\n      sload(0x0d)\n        /* \"SmartContractsInterview/Token.sol\":11566:11593  debaseRate * TOKEN_DECIMALS */\n      tag_729\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_729:\n        /* \"SmartContractsInterview/Token.sol\":11565:11619  (debaseRate * TOKEN_DECIMALS) / PERCENTAGE_DENOMINATOR */\n      tag_730\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_730:\n        /* \"SmartContractsInterview/Token.sol\":11549:11619  uint256 ratio = (debaseRate * TOKEN_DECIMALS) / PERCENTAGE_DENOMINATOR */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":11630:11655  uint256 preDebasingSupply */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":11668:11689  excludeDebasingSupply */\n      sload(0x07)\n        /* \"SmartContractsInterview/Token.sol\":11658:11665  tSupply */\n      sload(0x06)\n        /* \"SmartContractsInterview/Token.sol\":11658:11689  tSupply - excludeDebasingSupply */\n      tag_731\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n    tag_731:\n        /* \"SmartContractsInterview/Token.sol\":11630:11689  uint256 preDebasingSupply = tSupply - excludeDebasingSupply */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SmartContractsInterview/Token.sol\":11756:11778  TOKEN_DECIMALS - ratio */\n      tag_732\n        /* \"SmartContractsInterview/Token.sol\":11773:11778  ratio */\n      dup4\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":11756:11778  TOKEN_DECIMALS - ratio */\n      tag_387\n      jump\t// in\n    tag_732:\n        /* \"SmartContractsInterview/Token.sol\":11734:11752  tokenScalingFactor */\n      sload(0x0e)\n        /* \"SmartContractsInterview/Token.sol\":11734:11779  tokenScalingFactor * (TOKEN_DECIMALS - ratio) */\n      tag_733\n      swap2\n      swap1\n      tag_396\n      jump\t// in\n    tag_733:\n        /* \"SmartContractsInterview/Token.sol\":11733:11809  (tokenScalingFactor * (TOKEN_DECIMALS - ratio)) /... */\n      tag_734\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_734:\n        /* \"SmartContractsInterview/Token.sol\":11700:11718  tokenScalingFactor */\n      0x0e\n        /* \"SmartContractsInterview/Token.sol\":11700:11809  tokenScalingFactor =... */\n      sstore\n        /* \"SmartContractsInterview/Token.sol\":11819:11841  uint256 debasingSupply */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      0x0de0b6b3a7640000\n        /* \"SmartContractsInterview/Token.sol\":11878:11900  TOKEN_DECIMALS - ratio */\n      tag_735\n        /* \"SmartContractsInterview/Token.sol\":11895:11900  ratio */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":860:864  1e18 */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":11878:11900  TOKEN_DECIMALS - ratio */\n      tag_387\n      jump\t// in\n    tag_735:\n        /* \"SmartContractsInterview/Token.sol\":11845:11901  preDebasingSupply *... */\n      tag_736\n      swap1\n        /* \"SmartContractsInterview/Token.sol\":11845:11862  preDebasingSupply */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":11845:11901  preDebasingSupply *... */\n      tag_396\n      jump\t// in\n    tag_736:\n        /* \"SmartContractsInterview/Token.sol\":11844:11919  (preDebasingSupply *... */\n      tag_737\n      swap2\n      swap1\n      tag_398\n      jump\t// in\n    tag_737:\n        /* \"SmartContractsInterview/Token.sol\":11819:11919  uint256 debasingSupply = (preDebasingSupply *... */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":11930:11956  uint256 debasedTokenAmount */\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":11959:11993  preDebasingSupply - debasingSupply */\n      tag_738\n        /* \"SmartContractsInterview/Token.sol\":11819:11919  uint256 debasingSupply = (preDebasingSupply *... */\n      dup3\n        /* \"SmartContractsInterview/Token.sol\":11959:11976  preDebasingSupply */\n      dup5\n        /* \"SmartContractsInterview/Token.sol\":11959:11993  preDebasingSupply - debasingSupply */\n      tag_387\n      jump\t// in\n    tag_738:\n        /* \"SmartContractsInterview/Token.sol\":11930:11993  uint256 debasedTokenAmount = preDebasingSupply - debasingSupply */\n      swap1\n      pop\n        /* \"SmartContractsInterview/Token.sol\":12023:12041  debasedTokenAmount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":12004:12019  treasuryBalance */\n      0x0a\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":12004:12041  treasuryBalance += debasedTokenAmount */\n      dup3\n      dup3\n      sload\n      tag_739\n      swap2\n      swap1\n      tag_355\n      jump\t// in\n    tag_739:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"SmartContractsInterview/Token.sol\":12062:12080  debasedTokenAmount */\n      dup1\n        /* \"SmartContractsInterview/Token.sol\":12051:12058  tSupply */\n      0x06\n      0x00\n        /* \"SmartContractsInterview/Token.sol\":12051:12080  tSupply -= debasedTokenAmount */\n      dup3\n      dup3\n      sload\n      tag_552\n      swap2\n      swap1\n      tag_387\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_489:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_712\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_396\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_490:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_712\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_398\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_563:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x02\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_597:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_747\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_363\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_747:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_724\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_634:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_752\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17017:17019   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16999:17020   */\n      mstore\n        /* \"#utility.yul\":17056:17058   */\n      0x1f\n        /* \"#utility.yul\":17036:17054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17029:17059   */\n      mstore\n        /* \"#utility.yul\":17095:17128   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17075:17093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17068:17129   */\n      mstore\n        /* \"#utility.yul\":17146:17164   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_347\n        /* \"#utility.yul\":16815:17170   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_752:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_722:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_444\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17377:17379   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17359:17380   */\n      mstore\n        /* \"#utility.yul\":17416:17418   */\n      0x14\n        /* \"#utility.yul\":17396:17414   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17389:17419   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":17435:17453   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17428:17478   */\n      mstore\n        /* \"#utility.yul\":17495:17513   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_347\n        /* \"#utility.yul\":17175:17519   */\n      jump\n        /* \"#utility.yul\":14:303   */\n    tag_762:\n        /* \"#utility.yul\":56:59   */\n      0x00\n        /* \"#utility.yul\":94:99   */\n      dup2\n        /* \"#utility.yul\":88:100   */\n      mload\n        /* \"#utility.yul\":121:127   */\n      dup1\n        /* \"#utility.yul\":116:119   */\n      dup5\n        /* \"#utility.yul\":109:128   */\n      mstore\n        /* \"#utility.yul\":177:183   */\n      dup1\n        /* \"#utility.yul\":170:174   */\n      0x20\n        /* \"#utility.yul\":163:168   */\n      dup5\n        /* \"#utility.yul\":159:175   */\n      add\n        /* \"#utility.yul\":152:156   */\n      0x20\n        /* \"#utility.yul\":147:150   */\n      dup7\n        /* \"#utility.yul\":143:157   */\n      add\n        /* \"#utility.yul\":137:184   */\n      mcopy\n        /* \"#utility.yul\":229:230   */\n      0x00\n        /* \"#utility.yul\":222:226   */\n      0x20\n        /* \"#utility.yul\":213:219   */\n      dup3\n        /* \"#utility.yul\":208:211   */\n      dup7\n        /* \"#utility.yul\":204:220   */\n      add\n        /* \"#utility.yul\":200:227   */\n      add\n        /* \"#utility.yul\":193:231   */\n      mstore\n        /* \"#utility.yul\":292:296   */\n      0x20\n        /* \"#utility.yul\":285:287   */\n      0x1f\n        /* \"#utility.yul\":281:288   */\n      not\n        /* \"#utility.yul\":276:278   */\n      0x1f\n        /* \"#utility.yul\":268:274   */\n      dup4\n        /* \"#utility.yul\":264:279   */\n      add\n        /* \"#utility.yul\":260:289   */\n      and\n        /* \"#utility.yul\":255:258   */\n      dup6\n        /* \"#utility.yul\":251:290   */\n      add\n        /* \"#utility.yul\":247:297   */\n      add\n        /* \"#utility.yul\":240:297   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":308:528   */\n    tag_82:\n        /* \"#utility.yul\":457:459   */\n      0x20\n        /* \"#utility.yul\":446:455   */\n      dup2\n        /* \"#utility.yul\":439:460   */\n      mstore\n        /* \"#utility.yul\":420:424   */\n      0x00\n        /* \"#utility.yul\":477:522   */\n      tag_712\n        /* \"#utility.yul\":518:520   */\n      0x20\n        /* \"#utility.yul\":507:516   */\n      dup4\n        /* \"#utility.yul\":503:521   */\n      add\n        /* \"#utility.yul\":495:501   */\n      dup5\n        /* \"#utility.yul\":477:522   */\n      tag_762\n      jump\t// in\n        /* \"#utility.yul\":533:706   */\n    tag_763:\n        /* \"#utility.yul\":601:621   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":650:681   */\n      dup2\n      and\n        /* \"#utility.yul\":640:682   */\n      dup2\n      eq\n        /* \"#utility.yul\":630:700   */\n      tag_775\n      jumpi\n        /* \"#utility.yul\":696:697   */\n      0x00\n        /* \"#utility.yul\":693:694   */\n      dup1\n        /* \"#utility.yul\":686:698   */\n      revert\n        /* \"#utility.yul\":630:700   */\n    tag_775:\n        /* \"#utility.yul\":533:706   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":711:1011   */\n    tag_86:\n        /* \"#utility.yul\":779:785   */\n      0x00\n        /* \"#utility.yul\":787:793   */\n      dup1\n        /* \"#utility.yul\":840:842   */\n      0x40\n        /* \"#utility.yul\":828:837   */\n      dup4\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":815:838   */\n      sub\n        /* \"#utility.yul\":811:843   */\n      slt\n        /* \"#utility.yul\":808:860   */\n      iszero\n      tag_777\n      jumpi\n        /* \"#utility.yul\":856:857   */\n      0x00\n        /* \"#utility.yul\":853:854   */\n      dup1\n        /* \"#utility.yul\":846:858   */\n      revert\n        /* \"#utility.yul\":808:860   */\n    tag_777:\n        /* \"#utility.yul\":879:908   */\n      tag_778\n        /* \"#utility.yul\":898:907   */\n      dup4\n        /* \"#utility.yul\":879:908   */\n      tag_763\n      jump\t// in\n    tag_778:\n        /* \"#utility.yul\":869:908   */\n      swap5\n        /* \"#utility.yul\":977:979   */\n      0x20\n        /* \"#utility.yul\":962:980   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":949:981   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":711:1011   */\n      jump\t// out\n        /* \"#utility.yul\":1208:1582   */\n    tag_93:\n        /* \"#utility.yul\":1285:1291   */\n      0x00\n        /* \"#utility.yul\":1293:1299   */\n      dup1\n        /* \"#utility.yul\":1301:1307   */\n      0x00\n        /* \"#utility.yul\":1354:1356   */\n      0x60\n        /* \"#utility.yul\":1342:1351   */\n      dup5\n        /* \"#utility.yul\":1333:1340   */\n      dup7\n        /* \"#utility.yul\":1329:1352   */\n      sub\n        /* \"#utility.yul\":1325:1357   */\n      slt\n        /* \"#utility.yul\":1322:1374   */\n      iszero\n      tag_781\n      jumpi\n        /* \"#utility.yul\":1370:1371   */\n      0x00\n        /* \"#utility.yul\":1367:1368   */\n      dup1\n        /* \"#utility.yul\":1360:1372   */\n      revert\n        /* \"#utility.yul\":1322:1374   */\n    tag_781:\n        /* \"#utility.yul\":1393:1422   */\n      tag_782\n        /* \"#utility.yul\":1412:1421   */\n      dup5\n        /* \"#utility.yul\":1393:1422   */\n      tag_763\n      jump\t// in\n    tag_782:\n        /* \"#utility.yul\":1383:1422   */\n      swap3\n      pop\n        /* \"#utility.yul\":1441:1479   */\n      tag_783\n        /* \"#utility.yul\":1475:1477   */\n      0x20\n        /* \"#utility.yul\":1464:1473   */\n      dup6\n        /* \"#utility.yul\":1460:1478   */\n      add\n        /* \"#utility.yul\":1441:1479   */\n      tag_763\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":1208:1582   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1431:1479   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1548:1550   */\n      0x40\n        /* \"#utility.yul\":1533:1551   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1520:1552   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1208:1582   */\n      jump\t// out\n        /* \"#utility.yul\":1587:1773   */\n    tag_98:\n        /* \"#utility.yul\":1646:1652   */\n      0x00\n        /* \"#utility.yul\":1699:1701   */\n      0x20\n        /* \"#utility.yul\":1687:1696   */\n      dup3\n        /* \"#utility.yul\":1678:1685   */\n      dup5\n        /* \"#utility.yul\":1674:1697   */\n      sub\n        /* \"#utility.yul\":1670:1702   */\n      slt\n        /* \"#utility.yul\":1667:1719   */\n      iszero\n      tag_785\n      jumpi\n        /* \"#utility.yul\":1715:1716   */\n      0x00\n        /* \"#utility.yul\":1712:1713   */\n      dup1\n        /* \"#utility.yul\":1705:1717   */\n      revert\n        /* \"#utility.yul\":1667:1719   */\n    tag_785:\n        /* \"#utility.yul\":1738:1767   */\n      tag_712\n        /* \"#utility.yul\":1757:1766   */\n      dup3\n        /* \"#utility.yul\":1738:1767   */\n      tag_763\n      jump\t// in\n        /* \"#utility.yul\":2149:2309   */\n    tag_764:\n        /* \"#utility.yul\":2214:2234   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2270:2283   */\n      dup1\n      iszero\n        /* \"#utility.yul\":2263:2284   */\n      iszero\n        /* \"#utility.yul\":2253:2285   */\n      dup2\n      eq\n        /* \"#utility.yul\":2243:2303   */\n      tag_775\n      jumpi\n        /* \"#utility.yul\":2299:2300   */\n      0x00\n        /* \"#utility.yul\":2296:2297   */\n      dup1\n        /* \"#utility.yul\":2289:2301   */\n      revert\n        /* \"#utility.yul\":2314:2568   */\n    tag_131:\n        /* \"#utility.yul\":2379:2385   */\n      0x00\n        /* \"#utility.yul\":2387:2393   */\n      dup1\n        /* \"#utility.yul\":2440:2442   */\n      0x40\n        /* \"#utility.yul\":2428:2437   */\n      dup4\n        /* \"#utility.yul\":2419:2426   */\n      dup6\n        /* \"#utility.yul\":2415:2438   */\n      sub\n        /* \"#utility.yul\":2411:2443   */\n      slt\n        /* \"#utility.yul\":2408:2460   */\n      iszero\n      tag_792\n      jumpi\n        /* \"#utility.yul\":2456:2457   */\n      0x00\n        /* \"#utility.yul\":2453:2454   */\n      dup1\n        /* \"#utility.yul\":2446:2458   */\n      revert\n        /* \"#utility.yul\":2408:2460   */\n    tag_792:\n        /* \"#utility.yul\":2479:2508   */\n      tag_793\n        /* \"#utility.yul\":2498:2507   */\n      dup4\n        /* \"#utility.yul\":2479:2508   */\n      tag_763\n      jump\t// in\n    tag_793:\n        /* \"#utility.yul\":2469:2508   */\n      swap2\n      pop\n        /* \"#utility.yul\":2527:2562   */\n      tag_794\n        /* \"#utility.yul\":2558:2560   */\n      0x20\n        /* \"#utility.yul\":2547:2556   */\n      dup5\n        /* \"#utility.yul\":2543:2561   */\n      add\n        /* \"#utility.yul\":2527:2562   */\n      tag_764\n      jump\t// in\n    tag_794:\n        /* \"#utility.yul\":2517:2562   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2568   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2573:2799   */\n    tag_146:\n        /* \"#utility.yul\":2632:2638   */\n      0x00\n        /* \"#utility.yul\":2685:2687   */\n      0x20\n        /* \"#utility.yul\":2673:2682   */\n      dup3\n        /* \"#utility.yul\":2664:2671   */\n      dup5\n        /* \"#utility.yul\":2660:2683   */\n      sub\n        /* \"#utility.yul\":2656:2688   */\n      slt\n        /* \"#utility.yul\":2653:2705   */\n      iszero\n      tag_796\n      jumpi\n        /* \"#utility.yul\":2701:2702   */\n      0x00\n        /* \"#utility.yul\":2698:2699   */\n      dup1\n        /* \"#utility.yul\":2691:2703   */\n      revert\n        /* \"#utility.yul\":2653:2705   */\n    tag_796:\n      pop\n        /* \"#utility.yul\":2746:2769   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2573:2799   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2804:3390   */\n    tag_158:\n        /* \"#utility.yul\":2874:2880   */\n      0x00\n        /* \"#utility.yul\":2882:2888   */\n      dup1\n        /* \"#utility.yul\":2935:2937   */\n      0x20\n        /* \"#utility.yul\":2923:2932   */\n      dup4\n        /* \"#utility.yul\":2914:2921   */\n      dup6\n        /* \"#utility.yul\":2910:2933   */\n      sub\n        /* \"#utility.yul\":2906:2938   */\n      slt\n        /* \"#utility.yul\":2903:2955   */\n      iszero\n      tag_798\n      jumpi\n        /* \"#utility.yul\":2951:2952   */\n      0x00\n        /* \"#utility.yul\":2948:2949   */\n      dup1\n        /* \"#utility.yul\":2941:2953   */\n      revert\n        /* \"#utility.yul\":2903:2955   */\n    tag_798:\n        /* \"#utility.yul\":2991:3000   */\n      dup3\n        /* \"#utility.yul\":2978:3001   */\n      calldataload\n        /* \"#utility.yul\":3024:3042   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3016:3022   */\n      dup2\n        /* \"#utility.yul\":3013:3043   */\n      gt\n        /* \"#utility.yul\":3010:3060   */\n      iszero\n      tag_799\n      jumpi\n        /* \"#utility.yul\":3056:3057   */\n      0x00\n        /* \"#utility.yul\":3053:3054   */\n      dup1\n        /* \"#utility.yul\":3046:3058   */\n      revert\n        /* \"#utility.yul\":3010:3060   */\n    tag_799:\n        /* \"#utility.yul\":3079:3101   */\n      dup4\n      add\n        /* \"#utility.yul\":3132:3136   */\n      0x1f\n        /* \"#utility.yul\":3124:3137   */\n      dup2\n      add\n        /* \"#utility.yul\":3120:3147   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3110:3165   */\n      tag_800\n      jumpi\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3158:3159   */\n      dup1\n        /* \"#utility.yul\":3151:3163   */\n      revert\n        /* \"#utility.yul\":3110:3165   */\n    tag_800:\n        /* \"#utility.yul\":3201:3203   */\n      dup1\n        /* \"#utility.yul\":3188:3204   */\n      calldataload\n        /* \"#utility.yul\":3227:3245   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3219:3225   */\n      dup2\n        /* \"#utility.yul\":3216:3246   */\n      gt\n        /* \"#utility.yul\":3213:3263   */\n      iszero\n      tag_801\n      jumpi\n        /* \"#utility.yul\":3259:3260   */\n      0x00\n        /* \"#utility.yul\":3256:3257   */\n      dup1\n        /* \"#utility.yul\":3249:3261   */\n      revert\n        /* \"#utility.yul\":3213:3263   */\n    tag_801:\n        /* \"#utility.yul\":3304:3311   */\n      dup6\n        /* \"#utility.yul\":3299:3301   */\n      0x20\n        /* \"#utility.yul\":3290:3296   */\n      dup3\n        /* \"#utility.yul\":3286:3288   */\n      dup5\n        /* \"#utility.yul\":3282:3297   */\n      add\n        /* \"#utility.yul\":3278:3302   */\n      add\n        /* \"#utility.yul\":3275:3312   */\n      gt\n        /* \"#utility.yul\":3272:3329   */\n      iszero\n      tag_802\n      jumpi\n        /* \"#utility.yul\":3325:3326   */\n      0x00\n        /* \"#utility.yul\":3322:3323   */\n      dup1\n        /* \"#utility.yul\":3315:3327   */\n      revert\n        /* \"#utility.yul\":3272:3329   */\n    tag_802:\n        /* \"#utility.yul\":3356:3358   */\n      0x20\n        /* \"#utility.yul\":3348:3359   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":3378:3384   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":2804:3390   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3603:3730   */\n    tag_765:\n        /* \"#utility.yul\":3664:3674   */\n      0x4e487b71\n        /* \"#utility.yul\":3659:3662   */\n      0xe0\n        /* \"#utility.yul\":3655:3675   */\n      shl\n        /* \"#utility.yul\":3652:3653   */\n      0x00\n        /* \"#utility.yul\":3645:3676   */\n      mstore\n        /* \"#utility.yul\":3695:3699   */\n      0x41\n        /* \"#utility.yul\":3692:3693   */\n      0x04\n        /* \"#utility.yul\":3685:3700   */\n      mstore\n        /* \"#utility.yul\":3719:3723   */\n      0x24\n        /* \"#utility.yul\":3716:3717   */\n      0x00\n        /* \"#utility.yul\":3709:3724   */\n      revert\n        /* \"#utility.yul\":3735:4010   */\n    tag_766:\n        /* \"#utility.yul\":3806:3808   */\n      0x40\n        /* \"#utility.yul\":3800:3809   */\n      mload\n        /* \"#utility.yul\":3871:3873   */\n      0x1f\n        /* \"#utility.yul\":3852:3865   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3848:3875   */\n      and\n        /* \"#utility.yul\":3836:3876   */\n      dup2\n      add\n        /* \"#utility.yul\":3906:3924   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3891:3925   */\n      dup2\n      gt\n        /* \"#utility.yul\":3927:3949   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3888:3950   */\n      or\n        /* \"#utility.yul\":3885:3973   */\n      iszero\n      tag_807\n      jumpi\n        /* \"#utility.yul\":3953:3971   */\n      tag_807\n      tag_765\n      jump\t// in\n    tag_807:\n        /* \"#utility.yul\":3989:3991   */\n      0x40\n        /* \"#utility.yul\":3982:4004   */\n      mstore\n        /* \"#utility.yul\":3735:4010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4015:4198   */\n    tag_767:\n        /* \"#utility.yul\":4075:4079   */\n      0x00\n        /* \"#utility.yul\":4108:4126   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4100:4106   */\n      dup3\n        /* \"#utility.yul\":4097:4127   */\n      gt\n        /* \"#utility.yul\":4094:4150   */\n      iszero\n      tag_810\n      jumpi\n        /* \"#utility.yul\":4130:4148   */\n      tag_810\n      tag_765\n      jump\t// in\n    tag_810:\n      pop\n        /* \"#utility.yul\":4175:4176   */\n      0x05\n        /* \"#utility.yul\":4171:4185   */\n      shl\n        /* \"#utility.yul\":4187:4191   */\n      0x20\n        /* \"#utility.yul\":4167:4192   */\n      add\n      swap1\n        /* \"#utility.yul\":4015:4198   */\n      jump\t// out\n        /* \"#utility.yul\":4203:4878   */\n    tag_768:\n        /* \"#utility.yul\":4257:4262   */\n      0x00\n        /* \"#utility.yul\":4310:4313   */\n      dup3\n        /* \"#utility.yul\":4303:4307   */\n      0x1f\n        /* \"#utility.yul\":4295:4301   */\n      dup4\n        /* \"#utility.yul\":4291:4308   */\n      add\n        /* \"#utility.yul\":4287:4314   */\n      slt\n        /* \"#utility.yul\":4277:4332   */\n      tag_812\n      jumpi\n        /* \"#utility.yul\":4328:4329   */\n      0x00\n        /* \"#utility.yul\":4325:4326   */\n      dup1\n        /* \"#utility.yul\":4318:4330   */\n      revert\n        /* \"#utility.yul\":4277:4332   */\n    tag_812:\n        /* \"#utility.yul\":4368:4374   */\n      dup2\n        /* \"#utility.yul\":4355:4375   */\n      calldataload\n        /* \"#utility.yul\":4395:4459   */\n      tag_813\n        /* \"#utility.yul\":4411:4458   */\n      tag_814\n        /* \"#utility.yul\":4451:4457   */\n      dup3\n        /* \"#utility.yul\":4411:4458   */\n      tag_767\n      jump\t// in\n    tag_814:\n        /* \"#utility.yul\":4395:4459   */\n      tag_766\n      jump\t// in\n    tag_813:\n        /* \"#utility.yul\":4483:4486   */\n      dup1\n        /* \"#utility.yul\":4507:4513   */\n      dup3\n        /* \"#utility.yul\":4502:4505   */\n      dup3\n        /* \"#utility.yul\":4495:4514   */\n      mstore\n        /* \"#utility.yul\":4539:4543   */\n      0x20\n        /* \"#utility.yul\":4534:4537   */\n      dup3\n        /* \"#utility.yul\":4530:4544   */\n      add\n        /* \"#utility.yul\":4523:4544   */\n      swap2\n      pop\n        /* \"#utility.yul\":4600:4604   */\n      0x20\n        /* \"#utility.yul\":4590:4596   */\n      dup4\n        /* \"#utility.yul\":4587:4588   */\n      0x05\n        /* \"#utility.yul\":4583:4597   */\n      shl\n        /* \"#utility.yul\":4575:4581   */\n      dup7\n        /* \"#utility.yul\":4571:4598   */\n      add\n        /* \"#utility.yul\":4567:4605   */\n      add\n        /* \"#utility.yul\":4553:4605   */\n      swap3\n      pop\n        /* \"#utility.yul\":4628:4631   */\n      dup6\n        /* \"#utility.yul\":4620:4626   */\n      dup4\n        /* \"#utility.yul\":4617:4632   */\n      gt\n        /* \"#utility.yul\":4614:4649   */\n      iszero\n      tag_815\n      jumpi\n        /* \"#utility.yul\":4645:4646   */\n      0x00\n        /* \"#utility.yul\":4642:4643   */\n      dup1\n        /* \"#utility.yul\":4635:4647   */\n      revert\n        /* \"#utility.yul\":4614:4649   */\n    tag_815:\n        /* \"#utility.yul\":4681:4685   */\n      0x20\n        /* \"#utility.yul\":4673:4679   */\n      dup6\n        /* \"#utility.yul\":4669:4686   */\n      add\n        /* \"#utility.yul\":4695:4847   */\n    tag_816:\n        /* \"#utility.yul\":4711:4717   */\n      dup4\n        /* \"#utility.yul\":4706:4709   */\n      dup2\n        /* \"#utility.yul\":4703:4718   */\n      lt\n        /* \"#utility.yul\":4695:4847   */\n      iszero\n      tag_818\n      jumpi\n        /* \"#utility.yul\":4779:4802   */\n      tag_819\n        /* \"#utility.yul\":4798:4801   */\n      dup2\n        /* \"#utility.yul\":4779:4802   */\n      tag_763\n      jump\t// in\n    tag_819:\n        /* \"#utility.yul\":4767:4803   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4832:4836   */\n      0x20\n        /* \"#utility.yul\":4823:4837   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":4728:4742   */\n      add\n        /* \"#utility.yul\":4695:4847   */\n      jump(tag_816)\n    tag_818:\n      pop\n        /* \"#utility.yul\":4865:4872   */\n      swap6\n        /* \"#utility.yul\":4203:4878   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4883:5299   */\n    tag_204:\n        /* \"#utility.yul\":4973:4979   */\n      0x00\n        /* \"#utility.yul\":4981:4987   */\n      dup1\n        /* \"#utility.yul\":5034:5036   */\n      0x40\n        /* \"#utility.yul\":5022:5031   */\n      dup4\n        /* \"#utility.yul\":5013:5020   */\n      dup6\n        /* \"#utility.yul\":5009:5032   */\n      sub\n        /* \"#utility.yul\":5005:5037   */\n      slt\n        /* \"#utility.yul\":5002:5054   */\n      iszero\n      tag_821\n      jumpi\n        /* \"#utility.yul\":5050:5051   */\n      0x00\n        /* \"#utility.yul\":5047:5048   */\n      dup1\n        /* \"#utility.yul\":5040:5052   */\n      revert\n        /* \"#utility.yul\":5002:5054   */\n    tag_821:\n        /* \"#utility.yul\":5090:5099   */\n      dup3\n        /* \"#utility.yul\":5077:5100   */\n      calldataload\n        /* \"#utility.yul\":5123:5141   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5115:5121   */\n      dup2\n        /* \"#utility.yul\":5112:5142   */\n      gt\n        /* \"#utility.yul\":5109:5159   */\n      iszero\n      tag_822\n      jumpi\n        /* \"#utility.yul\":5155:5156   */\n      0x00\n        /* \"#utility.yul\":5152:5153   */\n      dup1\n        /* \"#utility.yul\":5145:5157   */\n      revert\n        /* \"#utility.yul\":5109:5159   */\n    tag_822:\n        /* \"#utility.yul\":5178:5239   */\n      tag_823\n        /* \"#utility.yul\":5231:5238   */\n      dup6\n        /* \"#utility.yul\":5222:5228   */\n      dup3\n        /* \"#utility.yul\":5211:5220   */\n      dup7\n        /* \"#utility.yul\":5207:5229   */\n      add\n        /* \"#utility.yul\":5178:5239   */\n      tag_768\n      jump\t// in\n    tag_823:\n        /* \"#utility.yul\":5168:5239   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5258:5293   */\n      tag_794\n        /* \"#utility.yul\":5289:5291   */\n      0x20\n        /* \"#utility.yul\":5278:5287   */\n      dup5\n        /* \"#utility.yul\":5274:5292   */\n      add\n        /* \"#utility.yul\":5258:5293   */\n      tag_764\n      jump\t// in\n        /* \"#utility.yul\":5304:5603   */\n    tag_211:\n        /* \"#utility.yul\":5487:5493   */\n      dup3\n        /* \"#utility.yul\":5480:5494   */\n      iszero\n        /* \"#utility.yul\":5473:5495   */\n      iszero\n        /* \"#utility.yul\":5462:5471   */\n      dup2\n        /* \"#utility.yul\":5455:5496   */\n      mstore\n        /* \"#utility.yul\":5532:5534   */\n      0x40\n        /* \"#utility.yul\":5527:5529   */\n      0x20\n        /* \"#utility.yul\":5516:5525   */\n      dup3\n        /* \"#utility.yul\":5512:5530   */\n      add\n        /* \"#utility.yul\":5505:5535   */\n      mstore\n        /* \"#utility.yul\":5436:5440   */\n      0x00\n        /* \"#utility.yul\":5552:5597   */\n      tag_826\n        /* \"#utility.yul\":5593:5595   */\n      0x40\n        /* \"#utility.yul\":5582:5591   */\n      dup4\n        /* \"#utility.yul\":5578:5596   */\n      add\n        /* \"#utility.yul\":5570:5576   */\n      dup5\n        /* \"#utility.yul\":5552:5597   */\n      tag_762\n      jump\t// in\n    tag_826:\n        /* \"#utility.yul\":5544:5597   */\n      swap5\n        /* \"#utility.yul\":5304:5603   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5608:5908   */\n    tag_286:\n        /* \"#utility.yul\":5676:5682   */\n      0x00\n        /* \"#utility.yul\":5684:5690   */\n      dup1\n        /* \"#utility.yul\":5737:5739   */\n      0x40\n        /* \"#utility.yul\":5725:5734   */\n      dup4\n        /* \"#utility.yul\":5716:5723   */\n      dup6\n        /* \"#utility.yul\":5712:5735   */\n      sub\n        /* \"#utility.yul\":5708:5740   */\n      slt\n        /* \"#utility.yul\":5705:5757   */\n      iszero\n      tag_828\n      jumpi\n        /* \"#utility.yul\":5753:5754   */\n      0x00\n        /* \"#utility.yul\":5750:5751   */\n      dup1\n        /* \"#utility.yul\":5743:5755   */\n      revert\n        /* \"#utility.yul\":5705:5757   */\n    tag_828:\n        /* \"#utility.yul\":5798:5821   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":5864:5902   */\n      tag_794\n        /* \"#utility.yul\":5898:5900   */\n      0x20\n        /* \"#utility.yul\":5883:5901   */\n      dup5\n      add\n        /* \"#utility.yul\":5864:5902   */\n      tag_763\n      jump\t// in\n        /* \"#utility.yul\":5913:6173   */\n    tag_317:\n        /* \"#utility.yul\":5981:5987   */\n      0x00\n        /* \"#utility.yul\":5989:5995   */\n      dup1\n        /* \"#utility.yul\":6042:6044   */\n      0x40\n        /* \"#utility.yul\":6030:6039   */\n      dup4\n        /* \"#utility.yul\":6021:6028   */\n      dup6\n        /* \"#utility.yul\":6017:6040   */\n      sub\n        /* \"#utility.yul\":6013:6045   */\n      slt\n        /* \"#utility.yul\":6010:6062   */\n      iszero\n      tag_831\n      jumpi\n        /* \"#utility.yul\":6058:6059   */\n      0x00\n        /* \"#utility.yul\":6055:6056   */\n      dup1\n        /* \"#utility.yul\":6048:6060   */\n      revert\n        /* \"#utility.yul\":6010:6062   */\n    tag_831:\n        /* \"#utility.yul\":6081:6110   */\n      tag_832\n        /* \"#utility.yul\":6100:6109   */\n      dup4\n        /* \"#utility.yul\":6081:6110   */\n      tag_763\n      jump\t// in\n    tag_832:\n        /* \"#utility.yul\":6071:6110   */\n      swap2\n      pop\n        /* \"#utility.yul\":6129:6167   */\n      tag_794\n        /* \"#utility.yul\":6163:6165   */\n      0x20\n        /* \"#utility.yul\":6152:6161   */\n      dup5\n        /* \"#utility.yul\":6148:6166   */\n      add\n        /* \"#utility.yul\":6129:6167   */\n      tag_763\n      jump\t// in\n        /* \"#utility.yul\":6178:7360   */\n    tag_331:\n        /* \"#utility.yul\":6296:6302   */\n      0x00\n        /* \"#utility.yul\":6304:6310   */\n      dup1\n        /* \"#utility.yul\":6357:6359   */\n      0x40\n        /* \"#utility.yul\":6345:6354   */\n      dup4\n        /* \"#utility.yul\":6336:6343   */\n      dup6\n        /* \"#utility.yul\":6332:6355   */\n      sub\n        /* \"#utility.yul\":6328:6360   */\n      slt\n        /* \"#utility.yul\":6325:6377   */\n      iszero\n      tag_835\n      jumpi\n        /* \"#utility.yul\":6373:6374   */\n      0x00\n        /* \"#utility.yul\":6370:6371   */\n      dup1\n        /* \"#utility.yul\":6363:6375   */\n      revert\n        /* \"#utility.yul\":6325:6377   */\n    tag_835:\n        /* \"#utility.yul\":6413:6422   */\n      dup3\n        /* \"#utility.yul\":6400:6423   */\n      calldataload\n        /* \"#utility.yul\":6446:6464   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6438:6444   */\n      dup2\n        /* \"#utility.yul\":6435:6465   */\n      gt\n        /* \"#utility.yul\":6432:6482   */\n      iszero\n      tag_836\n      jumpi\n        /* \"#utility.yul\":6478:6479   */\n      0x00\n        /* \"#utility.yul\":6475:6476   */\n      dup1\n        /* \"#utility.yul\":6468:6480   */\n      revert\n        /* \"#utility.yul\":6432:6482   */\n    tag_836:\n        /* \"#utility.yul\":6501:6562   */\n      tag_837\n        /* \"#utility.yul\":6554:6561   */\n      dup6\n        /* \"#utility.yul\":6545:6551   */\n      dup3\n        /* \"#utility.yul\":6534:6543   */\n      dup7\n        /* \"#utility.yul\":6530:6552   */\n      add\n        /* \"#utility.yul\":6501:6562   */\n      tag_768\n      jump\t// in\n    tag_837:\n        /* \"#utility.yul\":6491:6562   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"#utility.yul\":6604:6613   */\n      dup4\n        /* \"#utility.yul\":6600:6618   */\n      add\n        /* \"#utility.yul\":6587:6619   */\n      calldataload\n        /* \"#utility.yul\":6644:6662   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6634:6642   */\n      dup2\n        /* \"#utility.yul\":6631:6663   */\n      gt\n        /* \"#utility.yul\":6628:6680   */\n      iszero\n      tag_838\n      jumpi\n        /* \"#utility.yul\":6676:6677   */\n      0x00\n        /* \"#utility.yul\":6673:6674   */\n      dup1\n        /* \"#utility.yul\":6666:6678   */\n      revert\n        /* \"#utility.yul\":6628:6680   */\n    tag_838:\n        /* \"#utility.yul\":6699:6723   */\n      dup4\n      add\n        /* \"#utility.yul\":6754:6758   */\n      0x1f\n        /* \"#utility.yul\":6746:6759   */\n      dup2\n      add\n        /* \"#utility.yul\":6742:6769   */\n      dup6\n      sgt\n        /* \"#utility.yul\":6732:6787   */\n      tag_839\n      jumpi\n        /* \"#utility.yul\":6783:6784   */\n      0x00\n        /* \"#utility.yul\":6780:6781   */\n      dup1\n        /* \"#utility.yul\":6773:6785   */\n      revert\n        /* \"#utility.yul\":6732:6787   */\n    tag_839:\n        /* \"#utility.yul\":6823:6825   */\n      dup1\n        /* \"#utility.yul\":6810:6826   */\n      calldataload\n        /* \"#utility.yul\":6846:6910   */\n      tag_840\n        /* \"#utility.yul\":6862:6909   */\n      tag_814\n        /* \"#utility.yul\":6902:6908   */\n      dup3\n        /* \"#utility.yul\":6862:6909   */\n      tag_767\n      jump\t// in\n        /* \"#utility.yul\":6846:6910   */\n    tag_840:\n        /* \"#utility.yul\":6932:6935   */\n      dup1\n        /* \"#utility.yul\":6956:6962   */\n      dup3\n        /* \"#utility.yul\":6951:6954   */\n      dup3\n        /* \"#utility.yul\":6944:6963   */\n      mstore\n        /* \"#utility.yul\":6988:6990   */\n      0x20\n        /* \"#utility.yul\":6983:6986   */\n      dup3\n        /* \"#utility.yul\":6979:6991   */\n      add\n        /* \"#utility.yul\":6972:6991   */\n      swap2\n      pop\n        /* \"#utility.yul\":7043:7045   */\n      0x20\n        /* \"#utility.yul\":7033:7039   */\n      dup4\n        /* \"#utility.yul\":7030:7031   */\n      0x05\n        /* \"#utility.yul\":7026:7040   */\n      shl\n        /* \"#utility.yul\":7022:7024   */\n      dup6\n        /* \"#utility.yul\":7018:7041   */\n      add\n        /* \"#utility.yul\":7014:7046   */\n      add\n        /* \"#utility.yul\":7000:7046   */\n      swap3\n      pop\n        /* \"#utility.yul\":7069:7076   */\n      dup8\n        /* \"#utility.yul\":7061:7067   */\n      dup4\n        /* \"#utility.yul\":7058:7077   */\n      gt\n        /* \"#utility.yul\":7055:7094   */\n      iszero\n      tag_842\n      jumpi\n        /* \"#utility.yul\":7090:7091   */\n      0x00\n        /* \"#utility.yul\":7087:7088   */\n      dup1\n        /* \"#utility.yul\":7080:7092   */\n      revert\n        /* \"#utility.yul\":7055:7094   */\n    tag_842:\n        /* \"#utility.yul\":7122:7124   */\n      0x20\n        /* \"#utility.yul\":7118:7120   */\n      dup5\n        /* \"#utility.yul\":7114:7125   */\n      add\n        /* \"#utility.yul\":7103:7125   */\n      swap4\n      pop\n        /* \"#utility.yul\":7134:7330   */\n    tag_843:\n        /* \"#utility.yul\":7150:7156   */\n      dup3\n        /* \"#utility.yul\":7145:7148   */\n      dup5\n        /* \"#utility.yul\":7142:7157   */\n      lt\n        /* \"#utility.yul\":7134:7330   */\n      iszero\n      tag_845\n      jumpi\n        /* \"#utility.yul\":7240:7257   */\n      dup4\n      calldataload\n        /* \"#utility.yul\":7270:7288   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7317:7319   */\n      0x20\n        /* \"#utility.yul\":7167:7179   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":7308:7320   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7134:7330   */\n      jump(tag_843)\n    tag_845:\n        /* \"#utility.yul\":7349:7354   */\n      dup1\n        /* \"#utility.yul\":7339:7354   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6178:7360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7365:7745   */\n    tag_338:\n        /* \"#utility.yul\":7444:7445   */\n      0x01\n        /* \"#utility.yul\":7440:7452   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":7487:7499   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":7508:7569   */\n      tag_847\n      jumpi\n        /* \"#utility.yul\":7562:7566   */\n      0x7f\n        /* \"#utility.yul\":7554:7560   */\n      dup3\n        /* \"#utility.yul\":7550:7567   */\n      and\n        /* \"#utility.yul\":7540:7567   */\n      swap2\n      pop\n        /* \"#utility.yul\":7508:7569   */\n    tag_847:\n        /* \"#utility.yul\":7615:7617   */\n      0x20\n        /* \"#utility.yul\":7607:7613   */\n      dup3\n        /* \"#utility.yul\":7604:7618   */\n      lt\n        /* \"#utility.yul\":7584:7602   */\n      dup2\n        /* \"#utility.yul\":7581:7619   */\n      sub\n        /* \"#utility.yul\":7578:7739   */\n      tag_848\n      jumpi\n        /* \"#utility.yul\":7661:7671   */\n      0x4e487b71\n        /* \"#utility.yul\":7656:7659   */\n      0xe0\n        /* \"#utility.yul\":7652:7672   */\n      shl\n        /* \"#utility.yul\":7649:7650   */\n      0x00\n        /* \"#utility.yul\":7642:7673   */\n      mstore\n        /* \"#utility.yul\":7696:7700   */\n      0x22\n        /* \"#utility.yul\":7693:7694   */\n      0x04\n        /* \"#utility.yul\":7686:7701   */\n      mstore\n        /* \"#utility.yul\":7724:7728   */\n      0x24\n        /* \"#utility.yul\":7721:7722   */\n      0x00\n        /* \"#utility.yul\":7714:7729   */\n      revert\n        /* \"#utility.yul\":7578:7739   */\n    tag_848:\n      pop\n        /* \"#utility.yul\":7365:7745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8558:8685   */\n    tag_769:\n        /* \"#utility.yul\":8619:8629   */\n      0x4e487b71\n        /* \"#utility.yul\":8614:8617   */\n      0xe0\n        /* \"#utility.yul\":8610:8630   */\n      shl\n        /* \"#utility.yul\":8607:8608   */\n      0x00\n        /* \"#utility.yul\":8600:8631   */\n      mstore\n        /* \"#utility.yul\":8650:8654   */\n      0x11\n        /* \"#utility.yul\":8647:8648   */\n      0x04\n        /* \"#utility.yul\":8640:8655   */\n      mstore\n        /* \"#utility.yul\":8674:8678   */\n      0x24\n        /* \"#utility.yul\":8671:8672   */\n      0x00\n        /* \"#utility.yul\":8664:8679   */\n      revert\n        /* \"#utility.yul\":8690:8815   */\n    tag_355:\n        /* \"#utility.yul\":8755:8764   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":8776:8786   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8773:8809   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":8789:8807   */\n      tag_343\n      tag_769\n      jump\t// in\n        /* \"#utility.yul\":10343:10471   */\n    tag_387:\n        /* \"#utility.yul\":10410:10419   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10431:10442   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10428:10465   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":10445:10463   */\n      tag_343\n      tag_769\n      jump\t// in\n        /* \"#utility.yul\":10476:10644   */\n    tag_396:\n        /* \"#utility.yul\":10549:10558   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10580:10589   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10597:10612   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10591:10613   */\n      dup5\n      eq\n        /* \"#utility.yul\":10577:10614   */\n      or\n        /* \"#utility.yul\":10567:10638   */\n      tag_343\n      jumpi\n        /* \"#utility.yul\":10618:10636   */\n      tag_343\n      tag_769\n      jump\t// in\n        /* \"#utility.yul\":10649:10866   */\n    tag_398:\n        /* \"#utility.yul\":10689:10690   */\n      0x00\n        /* \"#utility.yul\":10715:10716   */\n      dup3\n        /* \"#utility.yul\":10705:10837   */\n      tag_866\n      jumpi\n        /* \"#utility.yul\":10759:10769   */\n      0x4e487b71\n        /* \"#utility.yul\":10754:10757   */\n      0xe0\n        /* \"#utility.yul\":10750:10770   */\n      shl\n        /* \"#utility.yul\":10747:10748   */\n      0x00\n        /* \"#utility.yul\":10740:10771   */\n      mstore\n        /* \"#utility.yul\":10794:10798   */\n      0x12\n        /* \"#utility.yul\":10791:10792   */\n      0x04\n        /* \"#utility.yul\":10784:10799   */\n      mstore\n        /* \"#utility.yul\":10822:10826   */\n      0x24\n        /* \"#utility.yul\":10819:10820   */\n      0x00\n        /* \"#utility.yul\":10812:10827   */\n      revert\n        /* \"#utility.yul\":10705:10837   */\n    tag_866:\n      pop\n        /* \"#utility.yul\":10851:10860   */\n      div\n      swap1\n        /* \"#utility.yul\":10649:10866   */\n      jump\t// out\n        /* \"#utility.yul\":13690:13817   */\n    tag_532:\n        /* \"#utility.yul\":13751:13761   */\n      0x4e487b71\n        /* \"#utility.yul\":13746:13749   */\n      0xe0\n        /* \"#utility.yul\":13742:13762   */\n      shl\n        /* \"#utility.yul\":13739:13740   */\n      0x00\n        /* \"#utility.yul\":13732:13763   */\n      mstore\n        /* \"#utility.yul\":13782:13786   */\n      0x32\n        /* \"#utility.yul\":13779:13780   */\n      0x04\n        /* \"#utility.yul\":13772:13787   */\n      mstore\n        /* \"#utility.yul\":13806:13810   */\n      0x24\n        /* \"#utility.yul\":13803:13804   */\n      0x00\n        /* \"#utility.yul\":13796:13811   */\n      revert\n        /* \"#utility.yul\":14996:15407   */\n    tag_592:\n        /* \"#utility.yul\":15198:15200   */\n      0x20\n        /* \"#utility.yul\":15180:15201   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15237:15239   */\n      0x2f\n        /* \"#utility.yul\":15217:15235   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15210:15240   */\n      mstore\n        /* \"#utility.yul\":15276:15310   */\n      0x526174652073686f756c64206265206c657373207468616e2050455243454e54\n        /* \"#utility.yul\":15271:15273   */\n      0x40\n        /* \"#utility.yul\":15256:15274   */\n      dup3\n      add\n        /* \"#utility.yul\":15249:15311   */\n      mstore\n      shl(0x89, 0x20a3a2afa222a727a6a4a720aa27a9)\n        /* \"#utility.yul\":15342:15344   */\n      0x60\n        /* \"#utility.yul\":15327:15345   */\n      dup3\n      add\n        /* \"#utility.yul\":15320:15365   */\n      mstore\n        /* \"#utility.yul\":15397:15400   */\n      0x80\n        /* \"#utility.yul\":15382:15401   */\n      add\n      swap1\n        /* \"#utility.yul\":14996:15407   */\n      jump\t// out\n    stop\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_ada389e1fc24a8587c776340efb91b36e675792ab631816100d55df0b5cf3cbc ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa26469706673582212205372ef03b5eb7a4b0db0845b3856162fb806ffa8277192ccfe2519b503eaa89064736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_126": {
									"entryPoint": null,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1700": {
									"entryPoint": null,
									"id": 1700,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_250": {
									"entryPoint": null,
									"id": 250,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_160": {
									"entryPoint": 1187,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_debaseTokenToFragment_2612": {
									"entryPoint": 1380,
									"id": 2612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_excludedFromDebasing_2813": {
									"entryPoint": 551,
									"id": 2813,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_excludedFromHoldingLimit_2877": {
									"entryPoint": 811,
									"id": 2877,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_fragmentToDebaseToken_2628": {
									"entryPoint": 939,
									"id": 2628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_314": {
									"entryPoint": 1232,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_287": {
									"entryPoint": 1416,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_222": {
									"entryPoint": 470,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_treasuryBalanceOf_3134": {
									"entryPoint": 1321,
									"id": 3134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@balanceOf_1803": {
									"entryPoint": 1063,
									"id": 1803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@div_751": {
									"entryPoint": 1176,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_736": {
									"entryPoint": 1158,
									"id": 736,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3098": {
									"entryPoint": 984,
									"id": 3098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_202": {
									"entryPoint": 1002,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1642,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_uint256t_uint256t_address_fromMemory": {
									"entryPoint": 1669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 1832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6511:13",
										"nodeType": "YulBlock",
										"src": "0:6511:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:13",
													"nodeType": "YulBlock",
													"src": "46:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:13",
																		"nodeType": "YulLiteral",
																		"src": "63:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:13",
																				"nodeType": "YulLiteral",
																				"src": "70:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:13",
																				"nodeType": "YulLiteral",
																				"src": "75:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:13"
																		},
																		"nativeSrc": "66:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:13"
																},
																"nativeSrc": "56:31:13",
																"nodeType": "YulFunctionCall",
																"src": "56:31:13"
															},
															"nativeSrc": "56:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:13",
																		"nodeType": "YulLiteral",
																		"src": "103:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:13",
																		"nodeType": "YulLiteral",
																		"src": "106:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:13"
																},
																"nativeSrc": "96:15:13",
																"nodeType": "YulFunctionCall",
																"src": "96:15:13"
															},
															"nativeSrc": "96:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:13",
																		"nodeType": "YulLiteral",
																		"src": "127:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:13",
																		"nodeType": "YulLiteral",
																		"src": "130:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:13"
																},
																"nativeSrc": "120:15:13",
																"nodeType": "YulFunctionCall",
																"src": "120:15:13"
															},
															"nativeSrc": "120:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:13"
											},
											{
												"body": {
													"nativeSrc": "210:659:13",
													"nodeType": "YulBlock",
													"src": "210:659:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:13",
																"nodeType": "YulBlock",
																"src": "259:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:13",
																					"nodeType": "YulLiteral",
																					"src": "268:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:13",
																					"nodeType": "YulLiteral",
																					"src": "271:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:13"
																			},
																			"nativeSrc": "261:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:13"
																		},
																		"nativeSrc": "261:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:13",
																						"nodeType": "YulLiteral",
																						"src": "246:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:13"
																				},
																				"nativeSrc": "234:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:13"
																		},
																		"nativeSrc": "230:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:13"
																},
																"nativeSrc": "223:35:13",
																"nodeType": "YulFunctionCall",
																"src": "223:35:13"
															},
															"nativeSrc": "220:55:13",
															"nodeType": "YulIf",
															"src": "220:55:13"
														},
														{
															"nativeSrc": "284:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:13"
																},
																"nativeSrc": "298:13:13",
																"nodeType": "YulFunctionCall",
																"src": "298:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:13",
																	"nodeType": "YulTypedName",
																	"src": "288:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:13",
																"nodeType": "YulBlock",
																"src": "354:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:13"
																			},
																			"nativeSrc": "356:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:13"
																		},
																		"nativeSrc": "356:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:13",
																						"nodeType": "YulLiteral",
																						"src": "342:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:13",
																						"nodeType": "YulLiteral",
																						"src": "346:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:13"
																				},
																				"nativeSrc": "338:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:13",
																				"nodeType": "YulLiteral",
																				"src": "350:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:13"
																		},
																		"nativeSrc": "334:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:13"
																},
																"nativeSrc": "323:30:13",
																"nodeType": "YulFunctionCall",
																"src": "323:30:13"
															},
															"nativeSrc": "320:56:13",
															"nodeType": "YulIf",
															"src": "320:56:13"
														},
														{
															"nativeSrc": "385:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:13",
																		"nodeType": "YulLiteral",
																		"src": "405:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:13"
																},
																"nativeSrc": "399:9:13",
																"nodeType": "YulFunctionCall",
																"src": "399:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:13",
																	"nodeType": "YulTypedName",
																	"src": "389:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:13",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:13",
																										"nodeType": "YulLiteral",
																										"src": "471:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:13"
																								},
																								"nativeSrc": "459:17:13",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:13",
																										"nodeType": "YulLiteral",
																										"src": "482:2:13",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:13"
																								},
																								"nativeSrc": "478:7:13",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:13"
																						},
																						"nativeSrc": "455:31:13",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:13",
																						"nodeType": "YulLiteral",
																						"src": "488:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:13"
																				},
																				"nativeSrc": "451:40:13",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:13",
																						"nodeType": "YulLiteral",
																						"src": "497:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:13"
																				},
																				"nativeSrc": "493:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:13"
																		},
																		"nativeSrc": "447:54:13",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:13"
																},
																"nativeSrc": "435:67:13",
																"nodeType": "YulFunctionCall",
																"src": "435:67:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:13",
																	"nodeType": "YulTypedName",
																	"src": "421:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:13",
																"nodeType": "YulBlock",
																"src": "577:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:13"
																			},
																			"nativeSrc": "579:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:13"
																		},
																		"nativeSrc": "579:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:13",
																								"nodeType": "YulLiteral",
																								"src": "540:2:13",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:13",
																								"nodeType": "YulLiteral",
																								"src": "544:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:13"
																						},
																						"nativeSrc": "536:10:13",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:13",
																						"nodeType": "YulLiteral",
																						"src": "548:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:13"
																				},
																				"nativeSrc": "532:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:13"
																		},
																		"nativeSrc": "517:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:13"
																		},
																		"nativeSrc": "553:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:13"
																},
																"nativeSrc": "514:62:13",
																"nodeType": "YulFunctionCall",
																"src": "514:62:13"
															},
															"nativeSrc": "511:88:13",
															"nodeType": "YulIf",
															"src": "511:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:13",
																		"nodeType": "YulLiteral",
																		"src": "615:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:13"
																},
																"nativeSrc": "608:22:13",
																"nodeType": "YulFunctionCall",
																"src": "608:22:13"
															},
															"nativeSrc": "608:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:13"
																},
																"nativeSrc": "639:22:13",
																"nodeType": "YulFunctionCall",
																"src": "639:22:13"
															},
															"nativeSrc": "639:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:13"
														},
														{
															"body": {
																"nativeSrc": "713:16:13",
																"nodeType": "YulBlock",
																"src": "713:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:13",
																					"nodeType": "YulLiteral",
																					"src": "722:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:13",
																					"nodeType": "YulLiteral",
																					"src": "725:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:13"
																			},
																			"nativeSrc": "715:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:13"
																		},
																		"nativeSrc": "715:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:13"
																				},
																				"nativeSrc": "680:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:13",
																				"nodeType": "YulLiteral",
																				"src": "701:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:13"
																		},
																		"nativeSrc": "676:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:13"
																},
																"nativeSrc": "673:39:13",
																"nodeType": "YulFunctionCall",
																"src": "673:39:13"
															},
															"nativeSrc": "670:59:13",
															"nodeType": "YulIf",
															"src": "670:59:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:13",
																				"nodeType": "YulLiteral",
																				"src": "756:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:13"
																		},
																		"nativeSrc": "744:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:13",
																				"nodeType": "YulLiteral",
																				"src": "775:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:13"
																		},
																		"nativeSrc": "763:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:13"
																},
																"nativeSrc": "738:51:13",
																"nodeType": "YulFunctionCall",
																"src": "738:51:13"
															},
															"nativeSrc": "738:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:13"
																				},
																				"nativeSrc": "809:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:13",
																				"nodeType": "YulLiteral",
																				"src": "830:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:13"
																		},
																		"nativeSrc": "805:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:13",
																		"nodeType": "YulLiteral",
																		"src": "837:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:13"
																},
																"nativeSrc": "798:41:13",
																"nodeType": "YulFunctionCall",
																"src": "798:41:13"
															},
															"nativeSrc": "798:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:13"
														},
														{
															"nativeSrc": "848:15:13",
															"nodeType": "YulAssignment",
															"src": "848:15:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:13",
																"nodeType": "YulIdentifier",
																"src": "857:6:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:13",
														"nodeType": "YulTypedName",
														"src": "184:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:13",
														"nodeType": "YulTypedName",
														"src": "192:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:13",
														"nodeType": "YulTypedName",
														"src": "200:5:13",
														"type": ""
													}
												],
												"src": "146:723:13"
											},
											{
												"body": {
													"nativeSrc": "934:117:13",
													"nodeType": "YulBlock",
													"src": "934:117:13",
													"statements": [
														{
															"nativeSrc": "944:22:13",
															"nodeType": "YulAssignment",
															"src": "944:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "959:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "959:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "953:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "953:5:13"
																},
																"nativeSrc": "953:13:13",
																"nodeType": "YulFunctionCall",
																"src": "953:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "944:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "944:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1029:16:13",
																"nodeType": "YulBlock",
																"src": "1029:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1038:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1038:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1041:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1041:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1031:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1031:6:13"
																			},
																			"nativeSrc": "1031:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1031:12:13"
																		},
																		"nativeSrc": "1031:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1031:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "988:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "988:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "999:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "999:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1014:3:13",
																										"nodeType": "YulLiteral",
																										"src": "1014:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1019:1:13",
																										"nodeType": "YulLiteral",
																										"src": "1019:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1010:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1010:3:13"
																								},
																								"nativeSrc": "1010:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "1010:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1023:1:13",
																								"nodeType": "YulLiteral",
																								"src": "1023:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1006:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1006:3:13"
																						},
																						"nativeSrc": "1006:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "1006:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "995:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "995:3:13"
																				},
																				"nativeSrc": "995:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "995:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "985:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "985:2:13"
																		},
																		"nativeSrc": "985:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "985:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "978:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:13"
																},
																"nativeSrc": "978:50:13",
																"nodeType": "YulFunctionCall",
																"src": "978:50:13"
															},
															"nativeSrc": "975:70:13",
															"nodeType": "YulIf",
															"src": "975:70:13"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "874:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "913:6:13",
														"nodeType": "YulTypedName",
														"src": "913:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "924:5:13",
														"nodeType": "YulTypedName",
														"src": "924:5:13",
														"type": ""
													}
												],
												"src": "874:177:13"
											},
											{
												"body": {
													"nativeSrc": "1259:861:13",
													"nodeType": "YulBlock",
													"src": "1259:861:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1306:16:13",
																"nodeType": "YulBlock",
																"src": "1306:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1315:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1315:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1318:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1318:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1308:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1308:6:13"
																			},
																			"nativeSrc": "1308:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1308:12:13"
																		},
																		"nativeSrc": "1308:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1308:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:13"
																		},
																		"nativeSrc": "1276:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1301:3:13",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:33:13"
															},
															"nativeSrc": "1269:53:13",
															"nodeType": "YulIf",
															"src": "1269:53:13"
														},
														{
															"nativeSrc": "1331:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1331:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1351:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1351:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1345:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1345:5:13"
																},
																"nativeSrc": "1345:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1345:16:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1335:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1335:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1404:16:13",
																"nodeType": "YulBlock",
																"src": "1404:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1413:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1413:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1416:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1416:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1406:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1406:6:13"
																			},
																			"nativeSrc": "1406:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1406:12:13"
																		},
																		"nativeSrc": "1406:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1406:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1376:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1376:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1392:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1392:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1396:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1396:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1388:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1388:3:13"
																				},
																				"nativeSrc": "1388:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1388:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1400:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1400:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1384:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:13"
																		},
																		"nativeSrc": "1384:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1384:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1373:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1373:2:13"
																},
																"nativeSrc": "1373:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1373:30:13"
															},
															"nativeSrc": "1370:50:13",
															"nodeType": "YulIf",
															"src": "1370:50:13"
														},
														{
															"nativeSrc": "1429:71:13",
															"nodeType": "YulAssignment",
															"src": "1429:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1472:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1472:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1483:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1483:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1468:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1468:3:13"
																		},
																		"nativeSrc": "1468:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1468:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1492:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1492:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1439:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "1439:28:13"
																},
																"nativeSrc": "1439:61:13",
																"nodeType": "YulFunctionCall",
																"src": "1439:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1429:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1429:6:13"
																}
															]
														},
														{
															"nativeSrc": "1509:41:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1509:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1535:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1535:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1546:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1546:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1531:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:13"
																		},
																		"nativeSrc": "1531:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1525:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1525:5:13"
																},
																"nativeSrc": "1525:25:13",
																"nodeType": "YulFunctionCall",
																"src": "1525:25:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1513:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1513:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1595:16:13",
																"nodeType": "YulBlock",
																"src": "1595:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1604:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1604:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1607:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1607:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1597:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1597:6:13"
																			},
																			"nativeSrc": "1597:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1597:12:13"
																		},
																		"nativeSrc": "1597:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1597:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1565:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1565:8:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1583:2:13",
																						"nodeType": "YulLiteral",
																						"src": "1583:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1587:1:13",
																						"nodeType": "YulLiteral",
																						"src": "1587:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1579:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1579:3:13"
																				},
																				"nativeSrc": "1579:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1579:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1591:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1591:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1575:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1575:3:13"
																		},
																		"nativeSrc": "1575:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1575:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1562:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1562:2:13"
																},
																"nativeSrc": "1562:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1562:32:13"
															},
															"nativeSrc": "1559:52:13",
															"nodeType": "YulIf",
															"src": "1559:52:13"
														},
														{
															"nativeSrc": "1620:73:13",
															"nodeType": "YulAssignment",
															"src": "1620:73:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1663:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1663:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1674:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1674:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1659:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1659:3:13"
																		},
																		"nativeSrc": "1659:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1659:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1685:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1685:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1630:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "1630:28:13"
																},
																"nativeSrc": "1630:63:13",
																"nodeType": "YulFunctionCall",
																"src": "1630:63:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1620:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1620:6:13"
																}
															]
														},
														{
															"nativeSrc": "1702:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1702:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1715:1:13",
																"nodeType": "YulLiteral",
																"src": "1715:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1706:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1706:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1725:34:13",
															"nodeType": "YulAssignment",
															"src": "1725:34:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1744:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1744:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1755:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1755:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1740:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:13"
																		},
																		"nativeSrc": "1740:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1740:18:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1734:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1734:5:13"
																},
																"nativeSrc": "1734:25:13",
																"nodeType": "YulFunctionCall",
																"src": "1734:25:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1725:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1725:5:13"
																}
															]
														},
														{
															"nativeSrc": "1768:15:13",
															"nodeType": "YulAssignment",
															"src": "1768:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1778:5:13",
																"nodeType": "YulIdentifier",
																"src": "1778:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1768:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1768:6:13"
																}
															]
														},
														{
															"nativeSrc": "1792:59:13",
															"nodeType": "YulAssignment",
															"src": "1792:59:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1836:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1847:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1847:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1832:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:13"
																		},
																		"nativeSrc": "1832:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1832:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "1802:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "1802:29:13"
																},
																"nativeSrc": "1802:49:13",
																"nodeType": "YulFunctionCall",
																"src": "1802:49:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1792:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1792:6:13"
																}
															]
														},
														{
															"nativeSrc": "1860:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1860:16:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1875:1:13",
																"nodeType": "YulLiteral",
																"src": "1875:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1864:7:13",
																	"nodeType": "YulTypedName",
																	"src": "1864:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1885:37:13",
															"nodeType": "YulAssignment",
															"src": "1885:37:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1906:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1906:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1917:3:13",
																				"nodeType": "YulLiteral",
																				"src": "1917:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1902:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1902:3:13"
																		},
																		"nativeSrc": "1902:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1902:19:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1896:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1896:5:13"
																},
																"nativeSrc": "1896:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1896:26:13"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1885:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1885:7:13"
																}
															]
														},
														{
															"nativeSrc": "1931:17:13",
															"nodeType": "YulAssignment",
															"src": "1931:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "1941:7:13",
																"nodeType": "YulIdentifier",
																"src": "1941:7:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1931:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:13"
																}
															]
														},
														{
															"nativeSrc": "1957:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1957:16:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1972:1:13",
																"nodeType": "YulLiteral",
																"src": "1972:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "1961:7:13",
																	"nodeType": "YulTypedName",
																	"src": "1961:7:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1982:37:13",
															"nodeType": "YulAssignment",
															"src": "1982:37:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2014:3:13",
																				"nodeType": "YulLiteral",
																				"src": "2014:3:13",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1999:3:13"
																		},
																		"nativeSrc": "1999:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1999:19:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1993:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:13"
																},
																"nativeSrc": "1993:26:13",
																"nodeType": "YulFunctionCall",
																"src": "1993:26:13"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "1982:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1982:7:13"
																}
															]
														},
														{
															"nativeSrc": "2028:17:13",
															"nodeType": "YulAssignment",
															"src": "2028:17:13",
															"value": {
																"name": "value_2",
																"nativeSrc": "2038:7:13",
																"nodeType": "YulIdentifier",
																"src": "2038:7:13"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2028:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:13"
																}
															]
														},
														{
															"nativeSrc": "2054:60:13",
															"nodeType": "YulAssignment",
															"src": "2054:60:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2098:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2098:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2109:3:13",
																				"nodeType": "YulLiteral",
																				"src": "2109:3:13",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2094:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2094:3:13"
																		},
																		"nativeSrc": "2094:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2094:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "2064:29:13",
																	"nodeType": "YulIdentifier",
																	"src": "2064:29:13"
																},
																"nativeSrc": "2064:50:13",
																"nodeType": "YulFunctionCall",
																"src": "2064:50:13"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "2054:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_uint256t_uint256t_address_fromMemory",
												"nativeSrc": "1056:1064:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1177:9:13",
														"nodeType": "YulTypedName",
														"src": "1177:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1188:7:13",
														"nodeType": "YulTypedName",
														"src": "1188:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1200:6:13",
														"nodeType": "YulTypedName",
														"src": "1200:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1208:6:13",
														"nodeType": "YulTypedName",
														"src": "1208:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1216:6:13",
														"nodeType": "YulTypedName",
														"src": "1216:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1224:6:13",
														"nodeType": "YulTypedName",
														"src": "1224:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1232:6:13",
														"nodeType": "YulTypedName",
														"src": "1232:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1240:6:13",
														"nodeType": "YulTypedName",
														"src": "1240:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1248:6:13",
														"nodeType": "YulTypedName",
														"src": "1248:6:13",
														"type": ""
													}
												],
												"src": "1056:1064:13"
											},
											{
												"body": {
													"nativeSrc": "2226:102:13",
													"nodeType": "YulBlock",
													"src": "2226:102:13",
													"statements": [
														{
															"nativeSrc": "2236:26:13",
															"nodeType": "YulAssignment",
															"src": "2236:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2248:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2248:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2259:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2244:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:13"
																},
																"nativeSrc": "2244:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2244:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2236:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2236:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2293:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2293:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2309:3:13",
																								"nodeType": "YulLiteral",
																								"src": "2309:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2314:1:13",
																								"nodeType": "YulLiteral",
																								"src": "2314:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2305:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2305:3:13"
																						},
																						"nativeSrc": "2305:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2305:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:1:13",
																						"nodeType": "YulLiteral",
																						"src": "2318:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2301:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:13"
																				},
																				"nativeSrc": "2301:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2301:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2289:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:13"
																		},
																		"nativeSrc": "2289:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2289:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2271:6:13"
																},
																"nativeSrc": "2271:51:13",
																"nodeType": "YulFunctionCall",
																"src": "2271:51:13"
															},
															"nativeSrc": "2271:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "2271:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2125:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2195:9:13",
														"nodeType": "YulTypedName",
														"src": "2195:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2206:6:13",
														"nodeType": "YulTypedName",
														"src": "2206:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2217:4:13",
														"nodeType": "YulTypedName",
														"src": "2217:4:13",
														"type": ""
													}
												],
												"src": "2125:203:13"
											},
											{
												"body": {
													"nativeSrc": "2388:325:13",
													"nodeType": "YulBlock",
													"src": "2388:325:13",
													"statements": [
														{
															"nativeSrc": "2398:22:13",
															"nodeType": "YulAssignment",
															"src": "2398:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2412:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2412:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2415:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2415:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2408:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2408:3:13"
																},
																"nativeSrc": "2408:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2408:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2398:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2398:6:13"
																}
															]
														},
														{
															"nativeSrc": "2429:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2429:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2459:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2459:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2465:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2465:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2455:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:13"
																},
																"nativeSrc": "2455:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2455:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2433:18:13",
																	"nodeType": "YulTypedName",
																	"src": "2433:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2506:31:13",
																"nodeType": "YulBlock",
																"src": "2506:31:13",
																"statements": [
																	{
																		"nativeSrc": "2508:27:13",
																		"nodeType": "YulAssignment",
																		"src": "2508:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2522:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2522:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2530:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2530:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2518:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2518:3:13"
																			},
																			"nativeSrc": "2518:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2518:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2508:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2508:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2486:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2486:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2479:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2479:6:13"
																},
																"nativeSrc": "2479:26:13",
																"nodeType": "YulFunctionCall",
																"src": "2479:26:13"
															},
															"nativeSrc": "2476:61:13",
															"nodeType": "YulIf",
															"src": "2476:61:13"
														},
														{
															"body": {
																"nativeSrc": "2596:111:13",
																"nodeType": "YulBlock",
																"src": "2596:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2617:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2617:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2624:3:13",
																							"nodeType": "YulLiteral",
																							"src": "2624:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2629:10:13",
																							"nodeType": "YulLiteral",
																							"src": "2629:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2620:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "2620:3:13"
																					},
																					"nativeSrc": "2620:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2620:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2610:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2610:6:13"
																			},
																			"nativeSrc": "2610:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2610:31:13"
																		},
																		"nativeSrc": "2610:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2610:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2661:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2661:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2664:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2664:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2654:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2654:6:13"
																			},
																			"nativeSrc": "2654:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2654:15:13"
																		},
																		"nativeSrc": "2654:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2654:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2689:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2689:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2692:4:13",
																					"nodeType": "YulLiteral",
																					"src": "2692:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2682:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:13"
																			},
																			"nativeSrc": "2682:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2682:15:13"
																		},
																		"nativeSrc": "2682:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2682:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2552:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "2552:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2575:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2575:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2583:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2572:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2572:2:13"
																		},
																		"nativeSrc": "2572:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2572:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2549:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2549:2:13"
																},
																"nativeSrc": "2549:38:13",
																"nodeType": "YulFunctionCall",
																"src": "2549:38:13"
															},
															"nativeSrc": "2546:161:13",
															"nodeType": "YulIf",
															"src": "2546:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2333:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2368:4:13",
														"nodeType": "YulTypedName",
														"src": "2368:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2377:6:13",
														"nodeType": "YulTypedName",
														"src": "2377:6:13",
														"type": ""
													}
												],
												"src": "2333:380:13"
											},
											{
												"body": {
													"nativeSrc": "2774:65:13",
													"nodeType": "YulBlock",
													"src": "2774:65:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2791:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2791:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2794:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2794:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2784:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2784:6:13"
																},
																"nativeSrc": "2784:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2784:14:13"
															},
															"nativeSrc": "2784:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "2784:14:13"
														},
														{
															"nativeSrc": "2807:26:13",
															"nodeType": "YulAssignment",
															"src": "2807:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2825:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2825:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2828:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2828:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2815:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2815:9:13"
																},
																"nativeSrc": "2815:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2815:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2807:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2807:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "2718:121:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2757:3:13",
														"nodeType": "YulTypedName",
														"src": "2757:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2765:4:13",
														"nodeType": "YulTypedName",
														"src": "2765:4:13",
														"type": ""
													}
												],
												"src": "2718:121:13"
											},
											{
												"body": {
													"nativeSrc": "2925:437:13",
													"nodeType": "YulBlock",
													"src": "2925:437:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2958:398:13",
																"nodeType": "YulBlock",
																"src": "2958:398:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2979:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2979:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2982:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2982:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2972:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:13"
																			},
																			"nativeSrc": "2972:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2972:16:13"
																		},
																		"nativeSrc": "2972:16:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2972:16:13"
																	},
																	{
																		"nativeSrc": "3001:30:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3001:30:13",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3023:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3023:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3026:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3026:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "3013:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:13"
																			},
																			"nativeSrc": "3013:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3013:18:13"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "3005:4:13",
																				"nodeType": "YulTypedName",
																				"src": "3005:4:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3044:57:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3044:57:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3067:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "3067:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3077:1:13",
																							"nodeType": "YulLiteral",
																							"src": "3077:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "3084:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "3084:10:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3096:2:13",
																									"nodeType": "YulLiteral",
																									"src": "3096:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3080:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3080:3:13"
																							},
																							"nativeSrc": "3080:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3080:19:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3073:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3073:3:13"
																					},
																					"nativeSrc": "3073:27:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3073:27:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3063:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3063:3:13"
																			},
																			"nativeSrc": "3063:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3063:38:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3048:11:13",
																				"nodeType": "YulTypedName",
																				"src": "3048:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3138:23:13",
																			"nodeType": "YulBlock",
																			"src": "3138:23:13",
																			"statements": [
																				{
																					"nativeSrc": "3140:19:13",
																					"nodeType": "YulAssignment",
																					"src": "3140:19:13",
																					"value": {
																						"name": "data",
																						"nativeSrc": "3155:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3155:4:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3140:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "3140:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3120:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "3120:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3132:4:13",
																					"nodeType": "YulLiteral",
																					"src": "3132:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3117:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3117:2:13"
																			},
																			"nativeSrc": "3117:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3117:20:13"
																		},
																		"nativeSrc": "3114:47:13",
																		"nodeType": "YulIf",
																		"src": "3114:47:13"
																	},
																	{
																		"nativeSrc": "3174:41:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3174:41:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "3188:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "3188:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3198:1:13",
																							"nodeType": "YulLiteral",
																							"src": "3198:1:13",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3205:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3205:3:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3210:2:13",
																									"nodeType": "YulLiteral",
																									"src": "3210:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3201:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3201:3:13"
																							},
																							"nativeSrc": "3201:12:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3201:12:13"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "3194:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3194:3:13"
																					},
																					"nativeSrc": "3194:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3194:20:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3184:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3184:3:13"
																			},
																			"nativeSrc": "3184:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3184:31:13"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "3178:2:13",
																				"nodeType": "YulTypedName",
																				"src": "3178:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3228:24:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3228:24:13",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "3241:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "3241:11:13"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "3232:5:13",
																				"nodeType": "YulTypedName",
																				"src": "3232:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3326:20:13",
																			"nodeType": "YulBlock",
																			"src": "3326:20:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3335:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "3335:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3342:1:13",
																								"nodeType": "YulLiteral",
																								"src": "3342:1:13",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "3328:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3328:6:13"
																						},
																						"nativeSrc": "3328:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3328:16:13"
																					},
																					"nativeSrc": "3328:16:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "3328:16:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3276:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3276:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "3283:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "3283:2:13"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3273:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3273:2:13"
																			},
																			"nativeSrc": "3273:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3273:13:13"
																		},
																		"nativeSrc": "3265:81:13",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "3287:26:13",
																			"nodeType": "YulBlock",
																			"src": "3287:26:13",
																			"statements": [
																				{
																					"nativeSrc": "3289:22:13",
																					"nodeType": "YulAssignment",
																					"src": "3289:22:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "3302:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "3302:5:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3309:1:13",
																								"nodeType": "YulLiteral",
																								"src": "3309:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "3298:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3298:3:13"
																						},
																						"nativeSrc": "3298:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3298:13:13"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "3289:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "3289:5:13"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "3269:3:13",
																			"nodeType": "YulBlock",
																			"src": "3269:3:13",
																			"statements": []
																		},
																		"src": "3265:81:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2941:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2941:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2946:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2946:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2938:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2938:2:13"
																},
																"nativeSrc": "2938:11:13",
																"nodeType": "YulFunctionCall",
																"src": "2938:11:13"
															},
															"nativeSrc": "2935:421:13",
															"nodeType": "YulIf",
															"src": "2935:421:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2844:518:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2897:5:13",
														"nodeType": "YulTypedName",
														"src": "2897:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2904:3:13",
														"nodeType": "YulTypedName",
														"src": "2904:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2909:10:13",
														"nodeType": "YulTypedName",
														"src": "2909:10:13",
														"type": ""
													}
												],
												"src": "2844:518:13"
											},
											{
												"body": {
													"nativeSrc": "3452:81:13",
													"nodeType": "YulBlock",
													"src": "3452:81:13",
													"statements": [
														{
															"nativeSrc": "3462:65:13",
															"nodeType": "YulAssignment",
															"src": "3462:65:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "3477:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3477:4:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3495:1:13",
																										"nodeType": "YulLiteral",
																										"src": "3495:1:13",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "3498:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "3498:3:13"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "3491:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3491:3:13"
																								},
																								"nativeSrc": "3491:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3491:11:13"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3508:1:13",
																										"nodeType": "YulLiteral",
																										"src": "3508:1:13",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3504:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3504:3:13"
																								},
																								"nativeSrc": "3504:6:13",
																								"nodeType": "YulFunctionCall",
																								"src": "3504:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "3487:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3487:3:13"
																						},
																						"nativeSrc": "3487:24:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3487:24:13"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3483:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3483:3:13"
																				},
																				"nativeSrc": "3483:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3483:29:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3473:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3473:3:13"
																		},
																		"nativeSrc": "3473:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3473:40:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3519:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3519:1:13",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3522:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3522:3:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3515:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:13"
																		},
																		"nativeSrc": "3515:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3515:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3470:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3470:2:13"
																},
																"nativeSrc": "3470:57:13",
																"nodeType": "YulFunctionCall",
																"src": "3470:57:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3462:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3462:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3367:166:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3429:4:13",
														"nodeType": "YulTypedName",
														"src": "3429:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3435:3:13",
														"nodeType": "YulTypedName",
														"src": "3435:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3443:4:13",
														"nodeType": "YulTypedName",
														"src": "3443:4:13",
														"type": ""
													}
												],
												"src": "3367:166:13"
											},
											{
												"body": {
													"nativeSrc": "3634:1203:13",
													"nodeType": "YulBlock",
													"src": "3634:1203:13",
													"statements": [
														{
															"nativeSrc": "3644:24:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3644:24:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3664:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3664:3:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3658:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3658:5:13"
																},
																"nativeSrc": "3658:10:13",
																"nodeType": "YulFunctionCall",
																"src": "3658:10:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3648:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3648:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3711:22:13",
																"nodeType": "YulBlock",
																"src": "3711:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3713:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3713:16:13"
																			},
																			"nativeSrc": "3713:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3713:18:13"
																		},
																		"nativeSrc": "3713:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3713:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3683:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3683:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3699:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3699:2:13",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3703:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3703:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "3695:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3695:3:13"
																				},
																				"nativeSrc": "3695:10:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3695:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3707:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3707:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3691:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3691:3:13"
																		},
																		"nativeSrc": "3691:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3691:18:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3680:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3680:2:13"
																},
																"nativeSrc": "3680:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3680:30:13"
															},
															"nativeSrc": "3677:56:13",
															"nodeType": "YulIf",
															"src": "3677:56:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3786:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3786:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3824:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3824:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3818:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "3818:5:13"
																				},
																				"nativeSrc": "3818:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3818:11:13"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3792:25:13",
																			"nodeType": "YulIdentifier",
																			"src": "3792:25:13"
																		},
																		"nativeSrc": "3792:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3792:38:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3832:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3832:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "3742:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3742:43:13"
																},
																"nativeSrc": "3742:97:13",
																"nodeType": "YulFunctionCall",
																"src": "3742:97:13"
															},
															"nativeSrc": "3742:97:13",
															"nodeType": "YulExpressionStatement",
															"src": "3742:97:13"
														},
														{
															"nativeSrc": "3848:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3848:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3865:1:13",
																"nodeType": "YulLiteral",
																"src": "3865:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3852:9:13",
																	"nodeType": "YulTypedName",
																	"src": "3852:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3875:17:13",
															"nodeType": "YulAssignment",
															"src": "3875:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3888:4:13",
																"nodeType": "YulLiteral",
																"src": "3888:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3875:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "3875:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3938:642:13",
																		"nodeType": "YulBlock",
																		"src": "3938:642:13",
																		"statements": [
																			{
																				"nativeSrc": "3952:35:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3952:35:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3971:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "3971:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3983:2:13",
																									"nodeType": "YulLiteral",
																									"src": "3983:2:13",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3979:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "3979:3:13"
																							},
																							"nativeSrc": "3979:7:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3979:7:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3967:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3967:3:13"
																					},
																					"nativeSrc": "3967:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3967:20:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3956:7:13",
																						"nodeType": "YulTypedName",
																						"src": "3956:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4000:49:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4000:49:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4044:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4044:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "4014:29:13",
																						"nodeType": "YulIdentifier",
																						"src": "4014:29:13"
																					},
																					"nativeSrc": "4014:35:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4014:35:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4004:6:13",
																						"nodeType": "YulTypedName",
																						"src": "4004:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4062:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4062:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4071:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4071:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4066:1:13",
																						"nodeType": "YulTypedName",
																						"src": "4066:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4142:165:13",
																					"nodeType": "YulBlock",
																					"src": "4142:165:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4167:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4167:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4185:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "4185:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4190:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "4190:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4181:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4181:3:13"
																												},
																												"nativeSrc": "4181:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4181:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4175:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "4175:5:13"
																										},
																										"nativeSrc": "4175:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4175:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4160:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4160:6:13"
																								},
																								"nativeSrc": "4160:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4160:42:13"
																							},
																							"nativeSrc": "4160:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4160:42:13"
																						},
																						{
																							"nativeSrc": "4219:24:13",
																							"nodeType": "YulAssignment",
																							"src": "4219:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4233:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4233:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4241:1:13",
																										"nodeType": "YulLiteral",
																										"src": "4241:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4229:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4229:3:13"
																								},
																								"nativeSrc": "4229:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4229:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4219:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4219:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4260:33:13",
																							"nodeType": "YulAssignment",
																							"src": "4260:33:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4277:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "4277:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4288:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4288:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4273:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4273:3:13"
																								},
																								"nativeSrc": "4273:20:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4273:20:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4260:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "4260:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4096:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "4096:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4099:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4099:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4093:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4093:2:13"
																					},
																					"nativeSrc": "4093:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4093:14:13"
																				},
																				"nativeSrc": "4085:222:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4108:21:13",
																					"nodeType": "YulBlock",
																					"src": "4108:21:13",
																					"statements": [
																						{
																							"nativeSrc": "4110:17:13",
																							"nodeType": "YulAssignment",
																							"src": "4110:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4119:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "4119:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4122:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4122:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4115:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4115:3:13"
																								},
																								"nativeSrc": "4115:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4115:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4110:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4110:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4089:3:13",
																					"nodeType": "YulBlock",
																					"src": "4089:3:13",
																					"statements": []
																				},
																				"src": "4085:222:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "4355:166:13",
																					"nodeType": "YulBlock",
																					"src": "4355:166:13",
																					"statements": [
																						{
																							"nativeSrc": "4373:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4373:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4400:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4400:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4405:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4405:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4396:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4396:3:13"
																										},
																										"nativeSrc": "4396:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4396:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4390:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4390:5:13"
																								},
																								"nativeSrc": "4390:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4390:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4377:9:13",
																									"nodeType": "YulTypedName",
																									"src": "4377:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4440:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4440:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4452:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4452:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "4479:1:13",
																																				"nodeType": "YulLiteral",
																																				"src": "4479:1:13",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "4482:6:13",
																																				"nodeType": "YulIdentifier",
																																				"src": "4482:6:13"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "4475:3:13",
																																			"nodeType": "YulIdentifier",
																																			"src": "4475:3:13"
																																		},
																																		"nativeSrc": "4475:14:13",
																																		"nodeType": "YulFunctionCall",
																																		"src": "4475:14:13"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4491:3:13",
																																		"nodeType": "YulLiteral",
																																		"src": "4491:3:13",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "4471:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "4471:3:13"
																																},
																																"nativeSrc": "4471:24:13",
																																"nodeType": "YulFunctionCall",
																																"src": "4471:24:13"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "4501:1:13",
																																		"nodeType": "YulLiteral",
																																		"src": "4501:1:13",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "4497:3:13",
																																	"nodeType": "YulIdentifier",
																																	"src": "4497:3:13"
																																},
																																"nativeSrc": "4497:6:13",
																																"nodeType": "YulFunctionCall",
																																"src": "4497:6:13"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "4467:3:13",
																															"nodeType": "YulIdentifier",
																															"src": "4467:3:13"
																														},
																														"nativeSrc": "4467:37:13",
																														"nodeType": "YulFunctionCall",
																														"src": "4467:37:13"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "4463:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4463:3:13"
																												},
																												"nativeSrc": "4463:42:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4463:42:13"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "4448:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4448:3:13"
																										},
																										"nativeSrc": "4448:58:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4448:58:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4433:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4433:6:13"
																								},
																								"nativeSrc": "4433:74:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4433:74:13"
																							},
																							"nativeSrc": "4433:74:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4433:74:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4326:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4326:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4335:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4335:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4323:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4323:2:13"
																					},
																					"nativeSrc": "4323:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4323:19:13"
																				},
																				"nativeSrc": "4320:201:13",
																				"nodeType": "YulIf",
																				"src": "4320:201:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4541:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4541:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "4555:1:13",
																											"nodeType": "YulLiteral",
																											"src": "4555:1:13",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "4558:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "4558:6:13"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "4551:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "4551:3:13"
																									},
																									"nativeSrc": "4551:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "4551:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4567:1:13",
																									"nodeType": "YulLiteral",
																									"src": "4567:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4547:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4547:3:13"
																							},
																							"nativeSrc": "4547:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4547:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4534:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4534:6:13"
																					},
																					"nativeSrc": "4534:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:36:13"
																				},
																				"nativeSrc": "4534:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4534:36:13"
																			}
																		]
																	},
																	"nativeSrc": "3931:649:13",
																	"nodeType": "YulCase",
																	"src": "3931:649:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3936:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4597:234:13",
																		"nodeType": "YulBlock",
																		"src": "4597:234:13",
																		"statements": [
																			{
																				"nativeSrc": "4611:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4611:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4624:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4624:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "4615:5:13",
																						"nodeType": "YulTypedName",
																						"src": "4615:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4660:67:13",
																					"nodeType": "YulBlock",
																					"src": "4660:67:13",
																					"statements": [
																						{
																							"nativeSrc": "4678:35:13",
																							"nodeType": "YulAssignment",
																							"src": "4678:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4697:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4697:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4702:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4702:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4693:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4693:3:13"
																										},
																										"nativeSrc": "4693:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4693:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4687:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4687:5:13"
																								},
																								"nativeSrc": "4687:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4687:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "4678:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4678:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "4641:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4641:6:13"
																				},
																				"nativeSrc": "4638:89:13",
																				"nodeType": "YulIf",
																				"src": "4638:89:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4747:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4747:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4806:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4806:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4813:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4813:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "4753:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "4753:52:13"
																							},
																							"nativeSrc": "4753:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4753:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4740:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4740:6:13"
																					},
																					"nativeSrc": "4740:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4740:81:13"
																				},
																				"nativeSrc": "4740:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4740:81:13"
																			}
																		]
																	},
																	"nativeSrc": "4589:242:13",
																	"nodeType": "YulCase",
																	"src": "4589:242:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3911:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3911:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3919:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3908:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3908:2:13"
																},
																"nativeSrc": "3908:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3908:14:13"
															},
															"nativeSrc": "3901:930:13",
															"nodeType": "YulSwitch",
															"src": "3901:930:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3538:1299:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3619:4:13",
														"nodeType": "YulTypedName",
														"src": "3619:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3625:3:13",
														"nodeType": "YulTypedName",
														"src": "3625:3:13",
														"type": ""
													}
												],
												"src": "3538:1299:13"
											},
											{
												"body": {
													"nativeSrc": "4874:95:13",
													"nodeType": "YulBlock",
													"src": "4874:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4891:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4891:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4898:3:13",
																				"nodeType": "YulLiteral",
																				"src": "4898:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4903:10:13",
																				"nodeType": "YulLiteral",
																				"src": "4903:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4894:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4894:3:13"
																		},
																		"nativeSrc": "4894:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4894:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4884:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:13"
																},
																"nativeSrc": "4884:31:13",
																"nodeType": "YulFunctionCall",
																"src": "4884:31:13"
															},
															"nativeSrc": "4884:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "4884:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4931:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4931:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4934:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4934:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4924:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4924:6:13"
																},
																"nativeSrc": "4924:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4924:15:13"
															},
															"nativeSrc": "4924:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4924:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4955:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4955:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4958:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4958:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4948:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4948:6:13"
																},
																"nativeSrc": "4948:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4948:15:13"
															},
															"nativeSrc": "4948:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4948:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4842:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4842:127:13"
											},
											{
												"body": {
													"nativeSrc": "5026:116:13",
													"nodeType": "YulBlock",
													"src": "5026:116:13",
													"statements": [
														{
															"nativeSrc": "5036:20:13",
															"nodeType": "YulAssignment",
															"src": "5036:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5051:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5051:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5054:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5054:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5047:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5047:3:13"
																},
																"nativeSrc": "5047:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5047:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5036:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5036:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5114:22:13",
																"nodeType": "YulBlock",
																"src": "5114:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5116:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5116:16:13"
																			},
																			"nativeSrc": "5116:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5116:18:13"
																		},
																		"nativeSrc": "5116:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5116:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5085:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5085:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5078:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5078:6:13"
																				},
																				"nativeSrc": "5078:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5078:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5092:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5092:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5099:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "5099:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5108:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "5108:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5095:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5095:3:13"
																						},
																						"nativeSrc": "5095:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5095:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5089:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5089:2:13"
																				},
																				"nativeSrc": "5089:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5089:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5075:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5075:2:13"
																		},
																		"nativeSrc": "5075:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5075:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5068:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5068:6:13"
																},
																"nativeSrc": "5068:45:13",
																"nodeType": "YulFunctionCall",
																"src": "5068:45:13"
															},
															"nativeSrc": "5065:71:13",
															"nodeType": "YulIf",
															"src": "5065:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4974:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5005:1:13",
														"nodeType": "YulTypedName",
														"src": "5005:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5008:1:13",
														"nodeType": "YulTypedName",
														"src": "5008:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5014:7:13",
														"nodeType": "YulTypedName",
														"src": "5014:7:13",
														"type": ""
													}
												],
												"src": "4974:168:13"
											},
											{
												"body": {
													"nativeSrc": "5193:171:13",
													"nodeType": "YulBlock",
													"src": "5193:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5224:111:13",
																"nodeType": "YulBlock",
																"src": "5224:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5245:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5245:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5252:3:13",
																							"nodeType": "YulLiteral",
																							"src": "5252:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5257:10:13",
																							"nodeType": "YulLiteral",
																							"src": "5257:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5248:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5248:3:13"
																					},
																					"nativeSrc": "5248:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5248:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5238:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5238:6:13"
																			},
																			"nativeSrc": "5238:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5238:31:13"
																		},
																		"nativeSrc": "5238:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5238:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5289:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5289:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5292:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5292:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5282:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5282:6:13"
																			},
																			"nativeSrc": "5282:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5282:15:13"
																		},
																		"nativeSrc": "5282:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5282:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5317:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5320:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5320:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5310:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5310:6:13"
																			},
																			"nativeSrc": "5310:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5310:15:13"
																		},
																		"nativeSrc": "5310:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5310:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5213:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5213:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5206:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5206:6:13"
																},
																"nativeSrc": "5206:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5206:9:13"
															},
															"nativeSrc": "5203:132:13",
															"nodeType": "YulIf",
															"src": "5203:132:13"
														},
														{
															"nativeSrc": "5344:14:13",
															"nodeType": "YulAssignment",
															"src": "5344:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5353:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5353:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5356:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5356:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5349:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5349:3:13"
																},
																"nativeSrc": "5349:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5349:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5344:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5344:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5147:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5178:1:13",
														"nodeType": "YulTypedName",
														"src": "5178:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5181:1:13",
														"nodeType": "YulTypedName",
														"src": "5181:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5187:1:13",
														"nodeType": "YulTypedName",
														"src": "5187:1:13",
														"type": ""
													}
												],
												"src": "5147:217:13"
											},
											{
												"body": {
													"nativeSrc": "5470:76:13",
													"nodeType": "YulBlock",
													"src": "5470:76:13",
													"statements": [
														{
															"nativeSrc": "5480:26:13",
															"nodeType": "YulAssignment",
															"src": "5480:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5492:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5492:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5503:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5503:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5488:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5488:3:13"
																},
																"nativeSrc": "5488:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5488:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5480:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5480:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5522:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5522:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5533:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5533:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5515:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5515:6:13"
																},
																"nativeSrc": "5515:25:13",
																"nodeType": "YulFunctionCall",
																"src": "5515:25:13"
															},
															"nativeSrc": "5515:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "5515:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5369:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5439:9:13",
														"nodeType": "YulTypedName",
														"src": "5439:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5450:6:13",
														"nodeType": "YulTypedName",
														"src": "5450:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5461:4:13",
														"nodeType": "YulTypedName",
														"src": "5461:4:13",
														"type": ""
													}
												],
												"src": "5369:177:13"
											},
											{
												"body": {
													"nativeSrc": "5725:176:13",
													"nodeType": "YulBlock",
													"src": "5725:176:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5742:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5742:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5753:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5753:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5735:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:13"
																},
																"nativeSrc": "5735:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5735:21:13"
															},
															"nativeSrc": "5735:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "5735:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5776:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5776:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5787:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5787:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5772:3:13"
																		},
																		"nativeSrc": "5772:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5792:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5792:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5765:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5765:6:13"
																},
																"nativeSrc": "5765:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5765:30:13"
															},
															"nativeSrc": "5765:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5765:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5815:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5815:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5826:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5826:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5811:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5811:3:13"
																		},
																		"nativeSrc": "5811:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5811:18:13"
																	},
																	{
																		"hexValue": "4163636f756e742073686f756c646e2774206265207a65726f2e",
																		"kind": "string",
																		"nativeSrc": "5831:28:13",
																		"nodeType": "YulLiteral",
																		"src": "5831:28:13",
																		"type": "",
																		"value": "Account shouldn't be zero."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5804:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5804:6:13"
																},
																"nativeSrc": "5804:56:13",
																"nodeType": "YulFunctionCall",
																"src": "5804:56:13"
															},
															"nativeSrc": "5804:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "5804:56:13"
														},
														{
															"nativeSrc": "5869:26:13",
															"nodeType": "YulAssignment",
															"src": "5869:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5881:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5881:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5892:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5892:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5877:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5877:3:13"
																},
																"nativeSrc": "5877:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5877:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5869:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5869:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5551:350:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5702:9:13",
														"nodeType": "YulTypedName",
														"src": "5702:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5716:4:13",
														"nodeType": "YulTypedName",
														"src": "5716:4:13",
														"type": ""
													}
												],
												"src": "5551:350:13"
											},
											{
												"body": {
													"nativeSrc": "5954:77:13",
													"nodeType": "YulBlock",
													"src": "5954:77:13",
													"statements": [
														{
															"nativeSrc": "5964:16:13",
															"nodeType": "YulAssignment",
															"src": "5964:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5975:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5975:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5978:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5978:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5971:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:13"
																},
																"nativeSrc": "5971:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5971:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5964:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5964:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6003:22:13",
																"nodeType": "YulBlock",
																"src": "6003:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6005:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6005:16:13"
																			},
																			"nativeSrc": "6005:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6005:18:13"
																		},
																		"nativeSrc": "6005:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6005:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5995:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5995:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5998:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5998:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5992:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5992:2:13"
																},
																"nativeSrc": "5992:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5992:10:13"
															},
															"nativeSrc": "5989:36:13",
															"nodeType": "YulIf",
															"src": "5989:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5906:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5937:1:13",
														"nodeType": "YulTypedName",
														"src": "5937:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5940:1:13",
														"nodeType": "YulTypedName",
														"src": "5940:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5946:3:13",
														"nodeType": "YulTypedName",
														"src": "5946:3:13",
														"type": ""
													}
												],
												"src": "5906:125:13"
											},
											{
												"body": {
													"nativeSrc": "6085:79:13",
													"nodeType": "YulBlock",
													"src": "6085:79:13",
													"statements": [
														{
															"nativeSrc": "6095:17:13",
															"nodeType": "YulAssignment",
															"src": "6095:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6107:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6107:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6110:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6110:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6103:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6103:3:13"
																},
																"nativeSrc": "6103:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6103:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6095:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6095:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6136:22:13",
																"nodeType": "YulBlock",
																"src": "6136:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6138:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "6138:16:13"
																			},
																			"nativeSrc": "6138:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6138:18:13"
																		},
																		"nativeSrc": "6138:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6138:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6127:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6127:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6133:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6133:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6124:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6124:2:13"
																},
																"nativeSrc": "6124:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6124:11:13"
															},
															"nativeSrc": "6121:37:13",
															"nodeType": "YulIf",
															"src": "6121:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6036:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6067:1:13",
														"nodeType": "YulTypedName",
														"src": "6067:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6070:1:13",
														"nodeType": "YulTypedName",
														"src": "6070:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6076:4:13",
														"nodeType": "YulTypedName",
														"src": "6076:4:13",
														"type": ""
													}
												],
												"src": "6036:128:13"
											},
											{
												"body": {
													"nativeSrc": "6343:166:13",
													"nodeType": "YulBlock",
													"src": "6343:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6360:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6360:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6371:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6371:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6353:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6353:6:13"
																},
																"nativeSrc": "6353:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6353:21:13"
															},
															"nativeSrc": "6353:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6353:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6394:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6394:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6405:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6405:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6390:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:13"
																		},
																		"nativeSrc": "6390:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6390:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6410:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6410:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:13"
																},
																"nativeSrc": "6383:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6383:30:13"
															},
															"nativeSrc": "6383:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6383:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6433:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6433:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6444:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6444:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6429:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6429:3:13"
																		},
																		"nativeSrc": "6429:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6429:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "6449:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6449:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6422:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6422:6:13"
																},
																"nativeSrc": "6422:46:13",
																"nodeType": "YulFunctionCall",
																"src": "6422:46:13"
															},
															"nativeSrc": "6422:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "6422:46:13"
														},
														{
															"nativeSrc": "6477:26:13",
															"nodeType": "YulAssignment",
															"src": "6477:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6489:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6489:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6500:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6500:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6485:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6485:3:13"
																},
																"nativeSrc": "6485:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6485:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6477:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6477:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6169:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6320:9:13",
														"nodeType": "YulTypedName",
														"src": "6320:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6334:4:13",
														"nodeType": "YulTypedName",
														"src": "6334:4:13",
														"type": ""
													}
												],
												"src": "6169:340:13"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256t_addresst_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value := 0\n        value := mload(add(headStart, 64))\n        value2 := value\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        let value_1 := 0\n        value_1 := mload(add(headStart, 128))\n        value4 := value_1\n        let value_2 := 0\n        value_2 := mload(add(headStart, 160))\n        value5 := value_2\n        value6 := abi_decode_address_fromMemory(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Account shouldn't be zero.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516134a63803806134a683398101604081905261002e91610685565b5f805460ff1916905560018055338061006157604051631e4fbdf760e01b81525f60048201526024015b60405180910390fd5b61006a816101d6565b50600361007788826107ac565b50600461008487826107ac565b50601260055561009c670de0b6b3a76400008661087a565b60068190556007819055612710906100b590606461087a565b6100bf9190610891565b601055600c839055600d829055670de0b6b3a7640000600e5562015180600f555f600a5542601555600b80546001600160a01b0319166001600160a01b03831617905561010d846001610227565b61011884600161032b565b600b5461012f906001600160a01b03166001610227565b600b54610146906001600160a01b0316600161032b565b600654610152906103ab565b6001600160a01b0385165f908152600960205260409020556101726103d8565b836001600160a01b03165f6001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6006546040516101b991815260200190565b60405180910390a36101ca846103ea565b505050505050506108d6565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b03821661027d5760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e742073686f756c646e2774206265207a65726f2e0000000000006044820152606401610058565b6001600160a01b0382165f9081526012602052604081205460ff16906102a284610427565b905082151582151514610325576001600160a01b0384165f908152601260205260409020805460ff1916841515179055811580156102dd5750825b156102fe578060075f8282546102f391906108b0565b909155506103259050565b818015610309575082155b15610325578060075f82825461031f91906108c3565b90915550505b50505050565b6001600160a01b0382166103815760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e742073686f756c646e2774206265207a65726f2e0000000000006044820152606401610058565b6001600160a01b03919091165f908152601360205260409020805460ff1916911515919091179055565b5f6103d2670de0b6b3a76400006103cc8469d3c21bcecceda1000000610486565b90610498565b92915050565b6103e06104a3565b6103e86104d0565b565b6103f26104a3565b6001600160a01b03811661041b57604051631e4fbdf760e01b81525f6004820152602401610058565b610424816101d6565b50565b6001600160a01b0381165f9081526012602052604081205460ff161561046557600b546001600160a01b0390811690831603610465576103d2610529565b6001600160a01b0382165f908152600960205260409020546103d290610564565b5f610491828461087a565b9392505050565b5f6104918284610891565b6002546001600160a01b031633146103e85760405163118cdaa760e01b8152336004820152602401610058565b6104d8610588565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861050c3390565b6040516001600160a01b03909116815260200160405180910390a1565b600b546001600160a01b03165f90815260096020526040812054819061054e90610564565b905080600a5461055e91906108b0565b91505090565b5f6103d269d3c21bcecceda10000006103cc600e548561048660201b90919060201c565b5f5460ff16156103e85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610058565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126105f0575f80fd5b81516001600160401b03811115610609576106096105cd565b604051601f8201601f19908116603f011681016001600160401b0381118282101715610637576106376105cd565b60405281815283820160200185101561064e575f80fd5b8160208501602083015e5f918101602001919091529392505050565b80516001600160a01b0381168114610680575f80fd5b919050565b5f805f805f805f60e0888a03121561069b575f80fd5b87516001600160401b038111156106b0575f80fd5b6106bc8a828b016105e1565b60208a015190985090506001600160401b038111156106d9575f80fd5b6106e58a828b016105e1565b60408a015190975095506106fd90506060890161066a565b608089015160a08a01519195509350915061071a60c0890161066a565b905092959891949750929550565b600181811c9082168061073c57607f821691505b60208210810361075a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156107a757805f5260205f20601f840160051c810160208510156107855750805b601f840160051c820191505b818110156107a4575f8155600101610791565b50505b505050565b81516001600160401b038111156107c5576107c56105cd565b6107d9816107d38454610728565b84610760565b6020601f82116001811461080b575f83156107f45750848201515b5f19600385901b1c1916600184901b1784556107a4565b5f84815260208120601f198516915b8281101561083a578785015182556020948501946001909201910161081a565b508482101561085757868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b80820281158282048414176103d2576103d2610866565b5f826108ab57634e487b7160e01b5f52601260045260245ffd5b500490565b808201808211156103d2576103d2610866565b818103818111156103d2576103d2610866565b612bc3806108e35f395ff3fe608060405260043610610374575f3560e01c8063702115dd116101c85780639220d3ed116100fd578063b3cd42541161009d578063df0ab3081161006d578063df0ab30814610a24578063e2ff244014610a43578063e5a5e31814610a57578063f2fde38b14610a76575f80fd5b8063b3cd425414610997578063b4dade59146109ac578063dc90b442146109cb578063dd62ed3e146109e0575f80fd5b80639cc2921c116100d85780639cc2921c1461091d578063a457c2d71461093c578063a6d1b8911461095b578063a9059cbb14610978575f80fd5b80639220d3ed146108ad578063924c2ead146108db57806395d89b4114610909575f80fd5b80638456cb591161016857806389eec0f11161014357806389eec0f11461082e5780638cf66b161461084d5780638da5cb5b1461087b5780638f372fa314610898575f80fd5b80638456cb59146107f1578063874a6ae714610805578063893d20e81461081a575f80fd5b806375c2b13f116101a357806375c2b13f146107755780637819f36f1461079457806379825ede146107b357806381cea332146107d2575f80fd5b8063702115dd1461072357806370a0823114610742578063715018a614610761575f80fd5b80633f3b3b27116102a95780635d70dde611610249578063690d832011610219578063690d8320146106995780636aa3773f146106b85780636c5ed03e146106d75780636e04ff0d146106f6575f80fd5b80635d70dde6146106325780636161eb1814610646578063639f3cc714610665578063685f59de14610684575f80fd5b80634626402b116102845780634626402b146105ab5780634e6ec247146105e25780635b7f415c146106015780635c975abb1461061c575f80fd5b80633f3b3b27146105635780633f4ba83a146105785780634585e33b1461058c575f80fd5b80632ce8bd561161031457806335c85a34116102ef57806335c85a34146104d257806339509351146104f15780633af9e669146105105780633cde0c0f14610544575f80fd5b80632ce8bd561461047d57806330e0789e14610492578063313ce567146104b1575f80fd5b80631658a7001161034f5780631658a700146103f957806318160ddd1461042757806323b872dd1461044957806324024efd14610468575f80fd5b806306fdde031461037f578063095ea7b3146103a9578063104e81ff146103d8575f80fd5b3661037b57005b5f80fd5b34801561038a575f80fd5b50610393610a95565b6040516103a09190612664565b60405180910390f35b3480156103b4575f80fd5b506103c86103c3366004612691565b610b21565b60405190151581526020016103a0565b3480156103e3575f80fd5b506103f76103f23660046126b9565b610b37565b005b348015610404575f80fd5b506103c86104133660046126f3565b60116020525f908152604090205460ff1681565b348015610432575f80fd5b5061043b610c60565b6040519081526020016103a0565b348015610454575f80fd5b506103c86104633660046126b9565b610c76565b348015610473575f80fd5b5061043b600c5481565b348015610488575f80fd5b5061043b600d5481565b34801561049d575f80fd5b506103f76104ac3660046126b9565b610cd8565b3480156104bc575f80fd5b5060055460405160ff90911681526020016103a0565b3480156104dd575f80fd5b506103f76104ec36600461271b565b611252565b3480156104fc575f80fd5b506103c861050b366004612691565b6112d2565b34801561051b575f80fd5b5061043b61052a3660046126f3565b6001600160a01b03165f9081526009602052604090205490565b34801561054f575f80fd5b506103f761055e36600461274c565b611307565b34801561056e575f80fd5b5061043b60155481565b348015610583575f80fd5b506103f7611314565b348015610597575f80fd5b506103f76105a6366004612763565b611326565b3480156105b6575f80fd5b50600b546105ca906001600160a01b031681565b6040516001600160a01b0390911681526020016103a0565b3480156105ed575f80fd5b506103f76105fc366004612691565b61140d565b34801561060c575f80fd5b5061043b670de0b6b3a764000081565b348015610627575f80fd5b505f5460ff166103c8565b34801561063d575f80fd5b506103f7611578565b348015610651575f80fd5b506103f7610660366004612691565b611594565b348015610670575f80fd5b5061043b61067f36600461274c565b6116ef565b34801561068f575f80fd5b5061043b600f5481565b3480156106a4575f80fd5b506103f76106b33660046126f3565b611719565b3480156106c3575f80fd5b506103f76106d2366004612691565b61180c565b3480156106e2575f80fd5b506103f76106f13660046128aa565b611979565b348015610701575f80fd5b50610715610710366004612763565b611a4f565b6040516103a09291906128ec565b34801561072e575f80fd5b506103f761073d36600461271b565b611aa5565b34801561074d575f80fd5b5061043b61075c3660046126f3565b611ba9565b34801561076c575f80fd5b506103f7611c08565b348015610780575f80fd5b506103f761078f36600461271b565b611c19565b34801561079f575f80fd5b506103f76107ae3660046128aa565b611ca1565b3480156107be575f80fd5b506103f76107cd36600461271b565b611cdf565b3480156107dd575f80fd5b506103f76107ec36600461274c565b611d7f565b3480156107fc575f80fd5b506103f7611dae565b348015610810575f80fd5b5061043b60105481565b348015610825575f80fd5b506105ca611dbe565b348015610839575f80fd5b5061043b61084836600461274c565b611dd1565b348015610858575f80fd5b506103c86108673660046126f3565b60136020525f908152604090205460ff1681565b348015610886575f80fd5b506002546001600160a01b03166105ca565b3480156108a3575f80fd5b5061043b60075481565b3480156108b8575f80fd5b506103c86108c73660046126f3565b60146020525f908152604090205460ff1681565b3480156108e6575f80fd5b506103c86108f53660046126f3565b60126020525f908152604090205460ff1681565b348015610914575f80fd5b50610393611df2565b348015610928575f80fd5b506103f761093736600461290e565b611dff565b348015610947575f80fd5b506103c8610956366004612691565b611e72565b348015610966575f80fd5b5061043b69d3c21bcecceda100000081565b348015610983575f80fd5b506103c8610992366004612691565b611ebf565b3480156109a2575f80fd5b5061043b61271081565b3480156109b7575f80fd5b506103f76109c636600461274c565b611ecb565b3480156109d6575f80fd5b5061043b600e5481565b3480156109eb575f80fd5b5061043b6109fa36600461292f565b6001600160a01b039182165f90815260086020908152604080832093909416825291909152205490565b348015610a2f575f80fd5b506103f7610a3e36600461274c565b611efa565b348015610a4e575f80fd5b5061043b611f07565b348015610a62575f80fd5b506103f7610a71366004612957565b611f42565b348015610a81575f80fd5b506103f7610a903660046126f3565b6122e7565b60038054610aa290612a15565b80601f0160208091040260200160405190810160405280929190818152602001828054610ace90612a15565b8015610b195780601f10610af057610100808354040283529160200191610b19565b820191905f5260205f20905b815481529060010190602001808311610afc57829003601f168201915b505050505081565b5f610b2d338484610b37565b5060015b92915050565b6001600160a01b038316610b9e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b038216610bff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b95565b6001600160a01b038381165f8181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f600a54600654610c719190612a61565b905090565b5f610c82848484610cd8565b610cce84336103f285604051806060016040528060288152602001612b21602891396001600160a01b038a165f9081526008602090815260408083203384529091529020549190612324565b5060019392505050565b610ce061234f565b6001600160a01b038316610d445760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b95565b6001600160a01b038216610da65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b95565b80610db084611ba9565b1015610dfe5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742046756e647320466f72205472616e73666572006044820152606401610b95565b601054610e0a83611ba9565b10158015610e3057506001600160a01b0382165f9081526013602052604090205460ff16155b15610e7d5760405162461bcd60e51b815260206004820152601860248201527f486f6c64696e6720546f6b656e732065786365656465642100000000000000006044820152606401610b95565b6001600160a01b0382165f90815260136020526040902054819060ff16158015610ebb575060105481610eaf85611ba9565b610eb99190612a61565b115b15610eee5760105481610ecd85611ba9565b610ed79190612a61565b610ee19190612a74565b610eeb9082612a74565b90505b5f610ef882611dd1565b6001600160a01b0386165f9081526012602052604090205490915060ff1615610f2757610f2482611dd1565b90505b5f610f3a6002546001600160a01b031690565b6001600160a01b0316866001600160a01b031614158015610f7257506001600160a01b0385165f9081526011602052604090205460ff165b15610f9557612710600c5484610f889190612a87565b610f929190612a9e565b90505b5f610fa08285612a74565b90505f610fac82611dd1565b6001600160a01b0388165f908152601260205260408120549192509060ff16610fd55781610fde565b610fde83611dd1565b6001600160a01b038a165f9081526009602052604081208054929350879290919061100a908490612a74565b90915550506001600160a01b0388165f9081526012602052604090205460ff1615611061576001600160a01b0388165f9081526009602052604081208054839290611056908490612a61565b9091555061108e9050565b6001600160a01b0388165f9081526009602052604081208054849290611088908490612a61565b90915550505b83600a5f82825461109f9190612a61565b925050819055508360065f8282546110b79190612a74565b92505081905550876001600160a01b0316896001600160a01b03165f80516020612b49833981519152856040516110f091815260200190565b60405180910390a3831561113157600b546040518581526001600160a01b03918216918b16905f80516020612b498339815191529060200160405180910390a35b6001600160a01b0389165f9081526012602052604090205460ff1615801561117057506001600160a01b0388165f9081526012602052604090205460ff165b15611191578260075f8282546111869190612a61565b909155506112269050565b6001600160a01b0389165f9081526012602052604090205460ff1680156111d057506001600160a01b0388165f9081526012602052604090205460ff16155b156111e6578260075f8282546111869190612a74565b6001600160a01b0389165f9081526012602052604090205460ff16801561122457506001600160a01b0388165f9081526012602052604090205460ff165b505b600a541561124757600a54600b5461124791906001600160a01b0316611dff565b505050505050505050565b6001600160a01b0382166112a85760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e742073686f756c646e2774206265207a65726f2e0000000000006044820152606401610b95565b6001600160a01b03919091165f908152601360205260409020805460ff1916911515919091179055565b335f8181526008602090815260408083206001600160a01b03871684529091528120549091610b2d9185906103f29086612394565b61130f6123a6565b601055565b61131c6123a6565b6113246123d3565b565b600f546015546113369042612a74565b116113835760405162461bcd60e51b815260206004820152601e60248201527f4b656570557020726571756972656d656e74206973206e6f74206d65742100006044820152606401610b95565b60075460065410156113fd5760405162461bcd60e51b815260206004820152603e60248201527f74537570706c79206d7573742062652067726561746572207468616e206f722060448201527f657175616c20746f206578636c7564654465626173696e67537570706c7900006064820152608401610b95565b611405612424565b505042601555565b6001600160a01b0382166114635760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b95565b8060065f8282546114749190612a61565b909155505f905061148482611dd1565b6001600160a01b0384165f9081526012602052604090205490915060ff16156114ca578160075f8282546114b89190612a61565b909155506114c7905082611dd1565b90505b6001600160a01b0383165f90815260096020526040812080548392906114f1908490612a61565b90915550506040518281526001600160a01b038416907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a2600b546001600160a01b03848116911614611573576040518281526001600160a01b038416905f905f80516020612b4983398151915290602001610c53565b505050565b6115806123a6565b42601554111561158e575f80fd5b42601555565b6001600160a01b0382166115f45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b95565b8060065f8282546116059190612a74565b909155505f905061161582611dd1565b6001600160a01b0384165f9081526012602052604090205490915060ff161561165b578160075f8282546116499190612a74565b90915550611658905082611dd1565b90505b6001600160a01b0383165f9081526009602052604081208054839290611682908490612a74565b90915550506040518281526001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a26040518281525f906001600160a01b038516905f80516020612b4983398151915290602001610c53565b5f610b3169d3c21bcecceda1000000611713600e54856124f290919063ffffffff16565b906124fd565b6117216123a6565b6001600160a01b0381166117775760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420616464726573733a207a65726f20616464726573730000006044820152606401610b95565b5f816001600160a01b0316476040515f6040518083038185875af1925050503d805f81146117c0576040519150601f19603f3d011682016040523d82523d5f602084013e6117c5565b606091505b50509050806118085760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606401610b95565b5050565b61181461234f565b335f9081526014602052604090205460ff168061183b57506002546001600160a01b031633145b611843575f80fd5b600a541561186457600a54600b5461186491906001600160a01b0316611dff565b6001600160a01b0382165f9081526012602052604090205460ff16156118bf5761188d81611dd1565b6001600160a01b0383165f90815260096020526040812080549091906118b4908490612a61565b9091555061190d9050565b6118c881611dd1565b6001600160a01b0383165f90815260096020526040812080549091906118ef908490612a61565b925050819055508060075f8282546119079190612a74565b90915550505b61191681611dd1565b600b546001600160a01b03165f908152600960205260408120805490919061193f908490612a74565b9091555050600b546040518281526001600160a01b038481169216905f80516020612b498339815191529060200160405180910390a35050565b6119816123a6565b5f5b825181101561157357600b5483516001600160a01b03909116908490839081106119af576119af612abd565b60200260200101516001600160a01b031603611a245760405162461bcd60e51b815260206004820152602e60248201527f54726561737572792077616c6c65742063616e6e6f7420626520696e636c756460448201526d656420696e206465626173696e6760901b6064820152608401610b95565b611a47838281518110611a3957611a39612abd565b602002602001015183611aa5565b600101611983565b5f6060600f5460155442611a639190612a74565b11915083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152509293505050509250929050565b6001600160a01b038216611afb5760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e742073686f756c646e2774206265207a65726f2e0000000000006044820152606401610b95565b6001600160a01b0382165f9081526012602052604081205460ff1690611b2084611ba9565b905082151582151514611ba3576001600160a01b0384165f908152601260205260409020805460ff191684151517905581158015611b5b5750825b15611b7c578060075f828254611b719190612a61565b90915550611ba39050565b818015611b87575082155b15611ba3578060075f828254611b9d9190612a74565b90915550505b50505050565b6001600160a01b0381165f9081526012602052604081205460ff1615611be757600b546001600160a01b0390811690831603611be757610b31611f07565b6001600160a01b0382165f90815260096020526040902054610b31906116ef565b611c106123a6565b6113245f612508565b611c216123a6565b6001600160a01b038216611c775760405162461bcd60e51b815260206004820152601b60248201527f4f70657261746f722073686f756c646e2774206265207a65726f2e00000000006044820152606401610b95565b6001600160a01b03919091165f908152601460205260409020805460ff1916911515919091179055565b611ca96123a6565b5f5b825181101561157357611cd7838281518110611cc957611cc9612abd565b602002602001015183611252565b600101611cab565b611ce76123a6565b6001600160a01b038216611d485760405162461bcd60e51b815260206004820152602260248201527f4c5020506f6f6c20616464726573732073686f756c646e2774206265207a65726044820152616f2160f01b6064820152608401610b95565b6001600160a01b0382165f908152601160205260409020805460ff1916821515179055611d758282611aa5565b6118088282611252565b611d876123a6565b612710811115611da95760405162461bcd60e51b8152600401610b9590612ad1565b600d55565b611db66123a6565b611324612559565b5f610c716002546001600160a01b031690565b5f610b31670de0b6b3a76400006117138469d3c21bcecceda10000006124f2565b60048054610aa290612a15565b81600a541015611e515760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042616c616e636520746f20636c61696d0000006044820152606401610b95565b81600a5f828254611e629190612a74565b909155506118089050818361140d565b5f610b2d33846103f285604051806060016040528060258152602001612b6960259139335f9081526008602090815260408083206001600160a01b038d1684529091529020549190612324565b5f610b2d338484610cd8565b611ed36123a6565b611388811115611ef55760405162461bcd60e51b8152600401610b9590612ad1565b600c55565b611f026123a6565b600f55565b600b546001600160a01b03165f908152600960205260408120548190611f2c906116ef565b905080600a54611f3c9190612a61565b91505090565b611f4a612595565b611f5261234f565b8051825114611f9c5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610b95565b5f805b8251811015611fd757828181518110611fba57611fba612abd565b602002602001015182611fcd9190612a61565b9150600101611f9f565b5080611fe233611ba9565b10156120275760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610b95565b5f5b83518110156122dc5782818151811061204457612044612abd565b602002602001015161205533611ba9565b11156122d457335f9081526012602052604090205460ff16156120ee5761209483828151811061208757612087612abd565b6020026020010151611dd1565b335f90815260096020526040812080549091906120b2908490612a74565b925050819055508281815181106120cb576120cb612abd565b602002602001015160075f8282546120e39190612a74565b909155506121279050565b61210383828151811061208757612087612abd565b335f9081526009602052604081208054909190612121908490612a74565b90915550505b60125f85838151811061213c5761213c612abd565b6020908102919091018101516001600160a01b031682528101919091526040015f205460ff16156122025761217c83828151811061208757612087612abd565b60095f86848151811061219157612191612abd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546121c69190612a61565b925050819055508281815181106121df576121df612abd565b602002602001015160075f8282546121f79190612a61565b909155506122679050565b61221783828151811061208757612087612abd565b60095f86848151811061222c5761222c612abd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546122619190612a61565b90915550505b83818151811061227957612279612abd565b60200260200101516001600160a01b0316336001600160a01b03165f80516020612b498339815191528584815181106122b4576122b4612abd565b60200260200101516040516122cb91815260200190565b60405180910390a35b600101612029565b505061180860018055565b6122ef6123a6565b6001600160a01b03811661231857604051631e4fbdf760e01b81525f6004820152602401610b95565b61232181612508565b50565b5f81848411156123475760405162461bcd60e51b8152600401610b959190612664565b505050900390565b5f5460ff16156113245760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610b95565b5f61239f8284612a61565b9392505050565b6002546001600160a01b031633146113245760405163118cdaa760e01b8152336004820152602401610b95565b6123db6125ee565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61242c61234f565b5f612710670de0b6b3a7640000600d546124469190612a87565b6124509190612a9e565b90505f6007546006546124639190612a74565b9050670de0b6b3a76400006124788382612a74565b600e546124859190612a87565b61248f9190612a9e565b600e555f670de0b6b3a76400006124a68482612a74565b6124b09084612a87565b6124ba9190612a9e565b90505f6124c78284612a74565b905080600a5f8282546124da9190612a61565b925050819055508060065f828254611b9d9190612a74565b5f61239f8284612a87565b5f61239f8284612a9e565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61256161234f565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124073390565b6002600154036125e75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b95565b6002600155565b5f5460ff166113245760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b95565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61239f6020830184612636565b80356001600160a01b038116811461268c575f80fd5b919050565b5f80604083850312156126a2575f80fd5b6126ab83612676565b946020939093013593505050565b5f805f606084860312156126cb575f80fd5b6126d484612676565b92506126e260208501612676565b929592945050506040919091013590565b5f60208284031215612703575f80fd5b61239f82612676565b8035801515811461268c575f80fd5b5f806040838503121561272c575f80fd5b61273583612676565b91506127436020840161270c565b90509250929050565b5f6020828403121561275c575f80fd5b5035919050565b5f8060208385031215612774575f80fd5b823567ffffffffffffffff81111561278a575f80fd5b8301601f8101851361279a575f80fd5b803567ffffffffffffffff8111156127b0575f80fd5b8560208284010111156127c1575f80fd5b6020919091019590945092505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561280e5761280e6127d1565b604052919050565b5f67ffffffffffffffff82111561282f5761282f6127d1565b5060051b60200190565b5f82601f830112612848575f80fd5b813561285b61285682612816565b6127e5565b8082825260208201915060208360051b86010192508583111561287c575f80fd5b602085015b838110156128a05761289281612676565b835260209283019201612881565b5095945050505050565b5f80604083850312156128bb575f80fd5b823567ffffffffffffffff8111156128d1575f80fd5b6128dd85828601612839565b9250506127436020840161270c565b8215158152604060208201525f6129066040830184612636565b949350505050565b5f806040838503121561291f575f80fd5b8235915061274360208401612676565b5f8060408385031215612940575f80fd5b61294983612676565b915061274360208401612676565b5f8060408385031215612968575f80fd5b823567ffffffffffffffff81111561297e575f80fd5b61298a85828601612839565b925050602083013567ffffffffffffffff8111156129a6575f80fd5b8301601f810185136129b6575f80fd5b80356129c461285682612816565b8082825260208201915060208360051b8501019250878311156129e5575f80fd5b6020840193505b82841015612a075783358252602093840193909101906129ec565b809450505050509250929050565b600181811c90821680612a2957607f821691505b602082108103612a4757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610b3157610b31612a4d565b81810381811115610b3157610b31612a4d565b8082028115828204841417610b3157610b31612a4d565b5f82612ab857634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b6020808252602f908201527f526174652073686f756c64206265206c657373207468616e2050455243454e5460408201526e20a3a2afa222a727a6a4a720aa27a960891b60608201526080019056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205372ef03b5eb7a4b0db0845b3856162fb806ffa8277192ccfe2519b503eaa89064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x34A6 CODESIZE SUB DUP1 PUSH2 0x34A6 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x685 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x1 DUP1 SSTORE CALLER DUP1 PUSH2 0x61 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6A DUP2 PUSH2 0x1D6 JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x77 DUP9 DUP3 PUSH2 0x7AC JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x84 DUP8 DUP3 PUSH2 0x7AC JUMP JUMPDEST POP PUSH1 0x12 PUSH1 0x5 SSTORE PUSH2 0x9C PUSH8 0xDE0B6B3A7640000 DUP7 PUSH2 0x87A JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE PUSH1 0x7 DUP2 SWAP1 SSTORE PUSH2 0x2710 SWAP1 PUSH2 0xB5 SWAP1 PUSH1 0x64 PUSH2 0x87A JUMP JUMPDEST PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x10 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0xD DUP3 SWAP1 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xE SSTORE PUSH3 0x15180 PUSH1 0xF SSTORE PUSH0 PUSH1 0xA SSTORE TIMESTAMP PUSH1 0x15 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0x10D DUP5 PUSH1 0x1 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x118 DUP5 PUSH1 0x1 PUSH2 0x32B JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x12F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x227 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x146 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x152 SWAP1 PUSH2 0x3AB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x172 PUSH2 0x3D8 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1B9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1CA DUP5 PUSH2 0x3EA JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x8D6 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E742073686F756C646E2774206265207A65726F2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 PUSH2 0x2A2 DUP5 PUSH2 0x427 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x325 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE DUP2 ISZERO DUP1 ISZERO PUSH2 0x2DD JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x8B0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x325 SWAP1 POP JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x309 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x325 JUMPI DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x8C3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x381 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E742073686F756C646E2774206265207A65726F2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH0 PUSH2 0x3D2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x3CC DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x486 JUMP JUMPDEST SWAP1 PUSH2 0x498 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x4A3 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x4D0 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3F2 PUSH2 0x4A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x58 JUMP JUMPDEST PUSH2 0x424 DUP2 PUSH2 0x1D6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x465 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x465 JUMPI PUSH2 0x3D2 PUSH2 0x529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3D2 SWAP1 PUSH2 0x564 JUMP JUMPDEST PUSH0 PUSH2 0x491 DUP3 DUP5 PUSH2 0x87A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x491 DUP3 DUP5 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x58 JUMP JUMPDEST PUSH2 0x4D8 PUSH2 0x588 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x50C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x54E SWAP1 PUSH2 0x564 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA SLOAD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x8B0 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x3D2 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x3CC PUSH1 0xE SLOAD DUP6 PUSH2 0x486 PUSH1 0x20 SHL SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x58 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x637 JUMPI PUSH2 0x637 PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x64E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x680 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x69B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6BC DUP11 DUP3 DUP12 ADD PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MLOAD SWAP1 SWAP9 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x6D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x6E5 DUP11 DUP3 DUP12 ADD PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD MLOAD SWAP1 SWAP8 POP SWAP6 POP PUSH2 0x6FD SWAP1 POP PUSH1 0x60 DUP10 ADD PUSH2 0x66A JUMP JUMPDEST PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xA0 DUP11 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP SWAP2 POP PUSH2 0x71A PUSH1 0xC0 DUP10 ADD PUSH2 0x66A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x73C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x75A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7A7 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x785 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7A4 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x791 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x7C5 JUMPI PUSH2 0x7C5 PUSH2 0x5CD JUMP JUMPDEST PUSH2 0x7D9 DUP2 PUSH2 0x7D3 DUP5 SLOAD PUSH2 0x728 JUMP JUMPDEST DUP5 PUSH2 0x760 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x80B JUMPI PUSH0 DUP4 ISZERO PUSH2 0x7F4 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x7A4 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x83A JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x81A JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x857 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x866 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x8AB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x866 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x3D2 JUMPI PUSH2 0x3D2 PUSH2 0x866 JUMP JUMPDEST PUSH2 0x2BC3 DUP1 PUSH2 0x8E3 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x374 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x702115DD GT PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x9220D3ED GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xB3CD4254 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDF0AB308 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDF0AB308 EQ PUSH2 0xA24 JUMPI DUP1 PUSH4 0xE2FF2440 EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0xE5A5E318 EQ PUSH2 0xA57 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA76 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CD4254 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0xB4DADE59 EQ PUSH2 0x9AC JUMPI DUP1 PUSH4 0xDC90B442 EQ PUSH2 0x9CB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CC2921C GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x9CC2921C EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x93C JUMPI DUP1 PUSH4 0xA6D1B891 EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x978 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9220D3ED EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0x924C2EAD EQ PUSH2 0x8DB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x909 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x89EEC0F1 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x89EEC0F1 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0x8CF66B16 EQ PUSH2 0x84D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x8F372FA3 EQ PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0x874A6AE7 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x81A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75C2B13F GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x75C2B13F EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0x7819F36F EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0x79825EDE EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0x81CEA332 EQ PUSH2 0x7D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x702115DD EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 GT PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x5D70DDE6 GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x690D8320 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x690D8320 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x6AA3773F EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x6C5ED03E EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x6F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D70DDE6 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x6161EB18 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x639F3CC7 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x685F59DE EQ PUSH2 0x684 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4626402B GT PUSH2 0x284 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x58C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE8BD56 GT PUSH2 0x314 JUMPI DUP1 PUSH4 0x35C85A34 GT PUSH2 0x2EF JUMPI DUP1 PUSH4 0x35C85A34 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x3AF9E669 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x3CDE0C0F EQ PUSH2 0x544 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE8BD56 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x30E0789E EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1658A700 GT PUSH2 0x34F JUMPI DUP1 PUSH4 0x1658A700 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x24024EFD EQ PUSH2 0x468 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x104E81FF EQ PUSH2 0x3D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x37B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1252 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x12D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1314 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x5CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x140D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1578 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x16EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x6B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x1719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x6D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x180C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x1979 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x701 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH2 0x710 CALLDATASIZE PUSH1 0x4 PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x1A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP3 SWAP2 SWAP1 PUSH2 0x28EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x73D CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1AA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x75C CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x1BA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1C08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1C19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x7AE CALLDATASIZE PUSH1 0x4 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x1CA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1CDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1D7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1DAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x825 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x1DBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x848 CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1DD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x858 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x886 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x1DF2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x928 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x937 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x1DFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x947 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x956 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x1E72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x966 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x1EBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x9C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1ECB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x9FA CALLDATASIZE PUSH1 0x4 PUSH2 0x292F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xA3E CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1EFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x1F07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xA71 CALLDATASIZE PUSH1 0x4 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x1F42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xA90 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0xAA2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACE SWAP1 PUSH2 0x2A15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB19 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB19 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xB2D CALLER DUP5 DUP5 PUSH2 0xB37 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA SLOAD PUSH1 0x6 SLOAD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC82 DUP5 DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xCCE DUP5 CALLER PUSH2 0x3F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B21 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCE0 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH2 0xDB0 DUP5 PUSH2 0x1BA9 JUMP JUMPDEST LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742046756E647320466F72205472616E7366657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0xE0A DUP4 PUSH2 0x1BA9 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0xE30 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F6C64696E6720546F6B656E73206578636565646564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI POP PUSH1 0x10 SLOAD DUP2 PUSH2 0xEAF DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xEB9 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xEEE JUMPI PUSH1 0x10 SLOAD DUP2 PUSH2 0xECD DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0xEEB SWAP1 DUP3 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0xEF8 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xF27 JUMPI PUSH2 0xF24 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0xF3A PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0xF72 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xF95 JUMPI PUSH2 0x2710 PUSH1 0xC SLOAD DUP5 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0xFA0 DUP3 DUP6 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xFAC DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0xFD5 JUMPI DUP2 PUSH2 0xFDE JUMP JUMPDEST PUSH2 0xFDE DUP4 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP8 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x100A SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1061 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1056 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x108E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1088 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP4 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x109F SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0x10F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 ISZERO PUSH2 0x1131 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP12 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1170 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1191 JUMPI DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1226 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x11E6 JUMPI DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1224 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x1247 JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x1247 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DFF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E742073686F756C646E2774206265207A65726F2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xB2D SWAP2 DUP6 SWAP1 PUSH2 0x3F2 SWAP1 DUP7 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x130F PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH2 0x131C PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1324 PUSH2 0x23D3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x15 SLOAD PUSH2 0x1336 SWAP1 TIMESTAMP PUSH2 0x2A74 JUMP JUMPDEST GT PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B656570557020726571756972656D656E74206973206E6F74206D6574210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74537570706C79206D7573742062652067726561746572207468616E206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657175616C20746F206578636C7564654465626173696E67537570706C790000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x1405 PUSH2 0x2424 JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1474 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1484 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x14CA JUMPI DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14B8 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14C7 SWAP1 POP DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x14F1 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH0 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0xC53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x23A6 JUMP JUMPDEST TIMESTAMP PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x158E JUMPI PUSH0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1605 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1615 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x165B JUMPI DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1649 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1658 SWAP1 POP DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1682 SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0xC53 JUMP JUMPDEST PUSH0 PUSH2 0xB31 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1713 PUSH1 0xE SLOAD DUP6 PUSH2 0x24F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x1721 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573733A207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8811985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1814 PUSH2 0x234F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x183B JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1843 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x1864 JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x1864 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18BF JUMPI PUSH2 0x188D DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x18B4 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x190D SWAP1 POP JUMP JUMPDEST PUSH2 0x18C8 DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x18EF SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1907 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x1916 DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x193F SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1981 PUSH2 0x23A6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1573 JUMPI PUSH1 0xB SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x19AF JUMPI PUSH2 0x19AF PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1A24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792077616C6C65742063616E6E6F7420626520696E636C7564 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656420696E206465626173696E67 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x1A47 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A39 JUMPI PUSH2 0x1A39 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1983 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH1 0xF SLOAD PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST GT SWAP2 POP DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E742073686F756C646E2774206265207A65726F2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 PUSH2 0x1B20 DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x1BA3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE DUP2 ISZERO DUP1 ISZERO PUSH2 0x1B5B JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x1B7C JUMPI DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BA3 SWAP1 POP JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1B87 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1BA3 JUMPI DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B9D SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BE7 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x1BE7 JUMPI PUSH2 0xB31 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB31 SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1C10 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1324 PUSH0 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x1C21 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F722073686F756C646E2774206265207A65726F2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1CA9 PUSH2 0x23A6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1573 JUMPI PUSH2 0x1CD7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CC9 JUMPI PUSH2 0x1CC9 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x1CE7 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C5020506F6F6C20616464726573732073686F756C646E2774206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6F21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x1D75 DUP3 DUP3 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x1808 DUP3 DUP3 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x1D87 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x1DB6 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1324 PUSH2 0x2559 JUMP JUMPDEST PUSH0 PUSH2 0xC71 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB31 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1713 DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST DUP2 PUSH1 0xA SLOAD LT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042616C616E636520746F20636C61696D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E62 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1808 SWAP1 POP DUP2 DUP4 PUSH2 0x140D JUMP JUMPDEST PUSH0 PUSH2 0xB2D CALLER DUP5 PUSH2 0x3F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B69 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH0 PUSH2 0xB2D CALLER DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x1ED3 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1388 DUP2 GT ISZERO PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0x1F02 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x1F2C SWAP1 PUSH2 0x16EF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA SLOAD PUSH2 0x1F3C SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4A PUSH2 0x2595 JUMP JUMPDEST PUSH2 0x1F52 PUSH2 0x234F JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1FD7 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1FBA JUMPI PUSH2 0x1FBA PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1FCD SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1F9F JUMP JUMPDEST POP DUP1 PUSH2 0x1FE2 CALLER PUSH2 0x1BA9 JUMP JUMPDEST LT ISZERO PUSH2 0x2027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x22DC JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2044 JUMPI PUSH2 0x2044 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2055 CALLER PUSH2 0x1BA9 JUMP JUMPDEST GT ISZERO PUSH2 0x22D4 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20EE JUMPI PUSH2 0x2094 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x20B2 SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20CB JUMPI PUSH2 0x20CB PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20E3 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2127 SWAP1 POP JUMP JUMPDEST PUSH2 0x2103 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2121 SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x12 PUSH0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x213C JUMPI PUSH2 0x213C PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2202 JUMPI PUSH2 0x217C DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2191 JUMPI PUSH2 0x2191 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21C6 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21DF JUMPI PUSH2 0x21DF PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21F7 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2267 SWAP1 POP JUMP JUMPDEST PUSH2 0x2217 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x222C JUMPI PUSH2 0x222C PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2279 JUMPI PUSH2 0x2279 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x22B4 JUMPI PUSH2 0x22B4 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x22CB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 ADD PUSH2 0x2029 JUMP JUMPDEST POP POP PUSH2 0x1808 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x22EF PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2318 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x2321 DUP2 PUSH2 0x2508 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 PUSH2 0x239F DUP3 DUP5 PUSH2 0x2A61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x23DB PUSH2 0x25EE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x242C PUSH2 0x234F JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH1 0xD SLOAD PUSH2 0x2446 SWAP2 SWAP1 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0x2450 SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x2463 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x2478 DUP4 DUP3 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x2485 SWAP2 SWAP1 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0x248F SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0xE SSTORE PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x24A6 DUP5 DUP3 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x24B0 SWAP1 DUP5 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0x24BA SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24C7 DUP3 DUP5 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24DA SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B9D SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH0 PUSH2 0x239F DUP3 DUP5 PUSH2 0x2A87 JUMP JUMPDEST PUSH0 PUSH2 0x239F DUP3 DUP5 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2561 PUSH2 0x234F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2407 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x239F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2636 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x268C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26AB DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26D4 DUP5 PUSH2 0x2676 JUMP JUMPDEST SWAP3 POP PUSH2 0x26E2 PUSH1 0x20 DUP6 ADD PUSH2 0x2676 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x239F DUP3 PUSH2 0x2676 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x268C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x272C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2735 DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x270C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x275C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2774 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x278A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x279A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x27C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x280E JUMPI PUSH2 0x280E PUSH2 0x27D1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x282F JUMPI PUSH2 0x282F PUSH2 0x27D1 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2848 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x285B PUSH2 0x2856 DUP3 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x27E5 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x287C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x2892 DUP2 PUSH2 0x2676 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2881 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x28DD DUP6 DUP3 DUP7 ADD PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x270C JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2906 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2636 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x291F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x2676 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2940 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2949 DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x2676 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2968 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x297E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x298A DUP6 DUP3 DUP7 ADD PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x29B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29C4 PUSH2 0x2856 DUP3 PUSH2 0x2816 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x29E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2A07 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29EC JUMP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A29 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x2A4D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x2A4D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x2A4D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2AB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x526174652073686F756C64206265206C657373207468616E2050455243454E54 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x20A3A2AFA222A727A6A4A720AA27A9 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365DDF252AD1BE2C89B69C2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212205372 0xEF SUB 0xB5 0xEB PUSH27 0x4B0DB0845B3856162FB806FFA8277192CCFE2519B503EAA8906473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "559:16884:12:-:0;;;1968:1157;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:5:5;996:15;;-1:-1:-1;;996:15:5;;;;1821:22:6;;2211:10:12;;1269:95:4;;1322:31;;-1:-1:-1;;;1322:31:4;;1350:1;1322:31;;;2271:51:13;2244:18;;1322:31:4;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2232:4:12::1;:17;2239:10:::0;2232:4;:17:::1;:::i;:::-;-1:-1:-1::0;2259:6:12::1;:21;2268:12:::0;2259:6;:21:::1;:::i;:::-;-1:-1:-1::0;2302:2:12::1;2290:9;:14:::0;2325:25:::1;860:4;2325:8:::0;:25:::1;:::i;:::-;2315:7;:35:::0;;;2360:21:::1;:31:::0;;;808:5:::1;::::0;2418:13:::1;::::0;2428:3:::1;2418:13;:::i;:::-;2417:40;;;;:::i;:::-;2402:12;:55:::0;2468:11:::1;:26:::0;;;2504:10:::1;:24:::0;;;860:4:::1;2539:18;:35:::0;2601:5:::1;2584:14;:22:::0;-1:-1:-1;2616:15:12::1;:19:::0;2662:15:::1;2646:13;:31:::0;2688:14:::1;:32:::0;;-1:-1:-1;;;;;;2688:32:12::1;-1:-1:-1::0;;;;;2688:32:12;::::1;;::::0;;2731:40:::1;2753:11:::0;-1:-1:-1;2731:21:12::1;:40::i;:::-;2781:44;2807:11:::0;2820:4:::1;2781:25;:44::i;:::-;2857:14;::::0;2835:43:::1;::::0;-1:-1:-1;;;;;2857:14:12::1;::::0;2835:21:::1;:43::i;:::-;2914:14;::::0;2888:47:::1;::::0;-1:-1:-1;;;;;2914:14:12::1;::::0;2888:25:::1;:47::i;:::-;2994:7;::::0;2971:31:::1;::::0;:22:::1;:31::i;:::-;-1:-1:-1::0;;;;;2946:22:12;::::1;;::::0;;;:9:::1;:22;::::0;;;;:56;3013:7:::1;:5;:7::i;:::-;3057:11;-1:-1:-1::0;;;;;3036:42:12::1;3053:1;-1:-1:-1::0;;;;;3036:42:12::1;;3070:7;;3036:42;;;;5515:25:13::0;;5503:2;5488:18;;5369:177;3036:42:12::1;;;;;;;;3088:30;3106:11:::0;3088:17:::1;:30::i;:::-;1968:1157:::0;;;;;;;559:16884;;2912:187:4;3004:6;;;-1:-1:-1;;;;;3020:17:4;;;-1:-1:-1;;;;;;3020:17:4;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;13779:655:12:-;-1:-1:-1;;;;;13879:22:12;;13871:61;;;;-1:-1:-1;;;13871:61:12;;5753:2:13;13871:61:12;;;5735:21:13;5792:2;5772:18;;;5765:30;5831:28;5811:18;;;5804:56;5877:18;;13871:61:12;5551:350:13;13871:61:12;-1:-1:-1;;;;;13964:32:12;;13942:19;13964:32;;;:22;:32;;;;;;;;;14028:19;13987:8;14028:9;:19::i;:::-;14006:41;;14089:11;14071:29;;:14;:29;;;14067:361;;-1:-1:-1;;;;;14116:32:12;;;;;;:22;:32;;;;;:46;;-1:-1:-1;;14116:46:12;;;;;;;14185:15;;:30;;;;;14204:11;14185:30;14181:237;;;14263:11;14238:21;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;14181:237:12;;-1:-1:-1;14181:237:12;;14316:14;:30;;;;;14335:11;14334:12;14316:30;14312:106;;;14392:11;14367:21;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;14312:106:12;13852:582;;13779:655;;:::o;14802:224::-;-1:-1:-1;;;;;14906:22:12;;14898:61;;;;-1:-1:-1;;;14898:61:12;;5753:2:13;14898:61:12;;;5735:21:13;5792:2;5772:18;;;5765:30;5831:28;5811:18;;;5804:56;5877:18;;14898:61:12;5551:350:13;14898:61:12;-1:-1:-1;;;;;14969:36:12;;;;;;;;:26;:36;;;;;:50;;-1:-1:-1;;14969:50:12;;;;;;;;;;14802:224::o;12297:155::-;12366:7;12392:53;860:4;12392:33;:6;918:4;12392:10;:33::i;:::-;:37;;:53::i;:::-;12385:60;12297:155;-1:-1:-1;;12297:155:12:o;16965:59::-;1531:13:4;:11;:13::i;:::-;17009:8:12::1;:6;:8::i;:::-;16965:59::o:0;2543:215:4:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:4;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:4;;2700:1:::1;2672:31;::::0;::::1;2271:51:13::0;2244:18;;2672:31:4::1;2125:203:13::0;2623:91:4::1;2723:28;2742:8:::0;2723:18:::1;:28::i;:::-;2543:215:::0;:::o;3675:384:12:-;-1:-1:-1;;;;;3779:32:12;;3756:7;3779:32;;;:22;:32;;;;;;;;3775:218;;;3843:14;;-1:-1:-1;;;;;3843:14:12;;;3831:26;;;;3827:92;;3884:20;:18;:20::i;3827:92::-;-1:-1:-1;;;;;3962:19:12;;;;;;:9;:19;;;;;;3939:43;;:22;:43::i;3465:96:10:-;3523:7;3549:5;3553:1;3549;:5;:::i;:::-;3542:12;3465:96;-1:-1:-1;;;3465:96:10:o;3850:::-;3908:7;3934:5;3938:1;3934;:5;:::i;1796:162:4:-;1710:6;;-1:-1:-1;;;;;1710:6:4;735:10:9;1855:23:4;1851:101;;1901:40;;-1:-1:-1;;;1901:40:4;;735:10:9;1901:40:4;;;2271:51:13;2244:18;;1901:40:4;2125:203:13;2186:115:5;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:5::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;735:10:9::0;;656:96;2281:12:5::1;2274:20;::::0;-1:-1:-1;;;;;2289:32:13;;;2271:51;;2259:2;2244:18;2274:20:5::1;;;;;;;2186:115::o:0;17225:216:12:-;17363:14;;-1:-1:-1;;;;;17363:14:12;17276:7;17353:25;;;:9;:25;;;;;;17276:7;;17317:71;;:22;:71::i;:::-;17295:93;;17423:11;17405:15;;:29;;;;:::i;:::-;17398:36;;;17225:216;:::o;12116:171::-;12191:7;12217:63;918:4;12217:36;12234:18;;12217:12;:16;;;;:36;;;;:::i;1767:106:5:-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:5;;6371:2:13;1828:38:5;;;6353:21:13;6410:2;6390:18;;;6383:30;-1:-1:-1;;;6429:18:13;;;6422:46;6485:18;;1828:38:5;6169:340:13;14:127;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:13;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:13;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:13;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:13;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:13:o;874:177::-;953:13;;-1:-1:-1;;;;;995:31:13;;985:42;;975:70;;1041:1;1038;1031:12;975:70;874:177;;;:::o;1056:1064::-;1200:6;1208;1216;1224;1232;1240;1248;1301:3;1289:9;1280:7;1276:23;1272:33;1269:53;;;1318:1;1315;1308:12;1269:53;1345:16;;-1:-1:-1;;;;;1373:30:13;;1370:50;;;1416:1;1413;1406:12;1370:50;1439:61;1492:7;1483:6;1472:9;1468:22;1439:61;:::i;:::-;1546:2;1531:18;;1525:25;1429:71;;-1:-1:-1;1525:25:13;-1:-1:-1;;;;;;1562:32:13;;1559:52;;;1607:1;1604;1597:12;1559:52;1630:63;1685:7;1674:8;1663:9;1659:24;1630:63;:::i;:::-;1755:2;1740:18;;1734:25;1620:73;;-1:-1:-1;1734:25:13;-1:-1:-1;1802:49:13;;-1:-1:-1;1847:2:13;1832:18;;1802:49;:::i;:::-;1917:3;1902:19;;1896:26;2014:3;1999:19;;1993:26;1792:59;;-1:-1:-1;1896:26:13;-1:-1:-1;1993:26:13;-1:-1:-1;2064:50:13;2109:3;2094:19;;2064:50;:::i;:::-;2054:60;;1056:1064;;;;;;;;;;:::o;2333:380::-;2412:1;2408:12;;;;2455;;;2476:61;;2530:4;2522:6;2518:17;2508:27;;2476:61;2583:2;2575:6;2572:14;2552:18;2549:38;2546:161;;2629:10;2624:3;2620:20;2617:1;2610:31;2664:4;2661:1;2654:15;2692:4;2689:1;2682:15;2546:161;;2333:380;;;:::o;2844:518::-;2946:2;2941:3;2938:11;2935:421;;;2982:5;2979:1;2972:16;3026:4;3023:1;3013:18;3096:2;3084:10;3080:19;3077:1;3073:27;3067:4;3063:38;3132:4;3120:10;3117:20;3114:47;;;-1:-1:-1;3155:4:13;3114:47;3210:2;3205:3;3201:12;3198:1;3194:20;3188:4;3184:31;3174:41;;3265:81;3283:2;3276:5;3273:13;3265:81;;;3342:1;3328:16;;3309:1;3298:13;3265:81;;;3269:3;;2935:421;2844:518;;;:::o;3538:1299::-;3658:10;;-1:-1:-1;;;;;3680:30:13;;3677:56;;;3713:18;;:::i;:::-;3742:97;3832:6;3792:38;3824:4;3818:11;3792:38;:::i;:::-;3786:4;3742:97;:::i;:::-;3888:4;3919:2;3908:14;;3936:1;3931:649;;;;4624:1;4641:6;4638:89;;;-1:-1:-1;4693:19:13;;;4687:26;4638:89;-1:-1:-1;;3495:1:13;3491:11;;;3487:24;3483:29;3473:40;3519:1;3515:11;;;3470:57;4740:81;;3901:930;;3931:649;2791:1;2784:14;;;2828:4;2815:18;;-1:-1:-1;;3967:20:13;;;4085:222;4099:7;4096:1;4093:14;4085:222;;;4181:19;;;4175:26;4160:42;;4288:4;4273:20;;;;4241:1;4229:14;;;;4115:12;4085:222;;;4089:3;4335:6;4326:7;4323:19;4320:201;;;4396:19;;;4390:26;-1:-1:-1;;4479:1:13;4475:14;;;4491:3;4471:24;4467:37;4463:42;4448:58;4433:74;;4320:201;-1:-1:-1;;;;4567:1:13;4551:14;;;4547:22;4534:36;;-1:-1:-1;3538:1299:13:o;4842:127::-;4903:10;4898:3;4894:20;4891:1;4884:31;4934:4;4931:1;4924:15;4958:4;4955:1;4948:15;4974:168;5047:9;;;5078;;5095:15;;;5089:22;;5075:37;5065:71;;5116:18;;:::i;5147:217::-;5187:1;5213;5203:132;;5257:10;5252:3;5248:20;5245:1;5238:31;5292:4;5289:1;5282:15;5320:4;5317:1;5310:15;5203:132;-1:-1:-1;5349:9:13;;5147:217::o;5906:125::-;5971:9;;;5992:10;;;5989:36;;;6005:18;;:::i;6036:128::-;6103:9;;;6124:11;;;6121:37;;;6138:18;;:::i;6169:340::-;559:16884:12;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@PERCENTAGE_DENOMINATOR_1485": {
									"entryPoint": null,
									"id": 1485,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_DECIMALS_1488": {
									"entryPoint": null,
									"id": 1488,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_public_DECIMALS_1491": {
									"entryPoint": null,
									"id": 1491,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1704": {
									"entryPoint": null,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_2008": {
									"entryPoint": 2871,
									"id": 2008,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_2139": {
									"entryPoint": 5524,
									"id": 2139,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_160": {
									"entryPoint": 9126,
									"id": 160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_debaseTokenToFragment_2612": {
									"entryPoint": 5871,
									"id": 2612,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_debase_2596": {
									"entryPoint": 9252,
									"id": 2596,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_excludedFromDebasing_2813": {
									"entryPoint": 6821,
									"id": 2813,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_excludedFromHoldingLimit_2877": {
									"entryPoint": 4690,
									"id": 2877,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_fragmentToDebaseToken_2628": {
									"entryPoint": 7633,
									"id": 2628,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_mint_2076": {
									"entryPoint": 5133,
									"id": 2076,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_512": {
									"entryPoint": null,
									"id": 512,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_384": {
									"entryPoint": null,
									"id": 384,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_376": {
									"entryPoint": 9621,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_314": {
									"entryPoint": 9561,
									"id": 314,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_287": {
									"entryPoint": 9039,
									"id": 287,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_298": {
									"entryPoint": 9710,
									"id": 298,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_sendTokensTreasuryWallet_2413": {
									"entryPoint": 7679,
									"id": 2413,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_222": {
									"entryPoint": 9480,
									"id": 222,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_2389": {
									"entryPoint": 3288,
									"id": 2389,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_treasuryBalanceOf_3134": {
									"entryPoint": 7943,
									"id": 3134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_unpause_330": {
									"entryPoint": 9171,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_706": {
									"entryPoint": 9108,
									"id": 706,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_1852": {
									"entryPoint": null,
									"id": 1852,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_1872": {
									"entryPoint": 2849,
									"id": 1872,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOfUnderlying_1815": {
									"entryPoint": null,
									"id": 1815,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_1803": {
									"entryPoint": 7081,
									"id": 1803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@checkUpkeep_2504": {
									"entryPoint": 6735,
									"id": 2504,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@claimFromTreasury_2475": {
									"entryPoint": 6156,
									"id": 2475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@debaseDuration_1525": {
									"entryPoint": null,
									"id": 1525,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@debaseRate_1521": {
									"entryPoint": null,
									"id": 1521,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_1769": {
									"entryPoint": null,
									"id": 1769,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_1964": {
									"entryPoint": 7794,
									"id": 1964,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_751": {
									"entryPoint": 9469,
									"id": 751,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@excludeDebasingSupply_1503": {
									"entryPoint": null,
									"id": 1503,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getOwner_3116": {
									"entryPoint": 7614,
									"id": 3116,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@holdingLimit_1527": {
									"entryPoint": null,
									"id": 1527,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_1936": {
									"entryPoint": 4818,
									"id": 1936,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isExcludedFromDebasing_1535": {
									"entryPoint": null,
									"id": 1535,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isExcludedFromHoldingLimit_1539": {
									"entryPoint": null,
									"id": 1539,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTimeStamp_1545": {
									"entryPoint": null,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lpPools_1531": {
									"entryPoint": null,
									"id": 1531,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_736": {
									"entryPoint": 9458,
									"id": 736,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@multiAirdropTokenRequested_3071": {
									"entryPoint": 8002,
									"id": 3071,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@multiExcludedFromDebasing_2853": {
									"entryPoint": 6521,
									"id": 2853,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@multiExcludedFromHoldingLimit_2908": {
									"entryPoint": 7329,
									"id": 2908,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_1494": {
									"entryPoint": 2709,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_143": {
									"entryPoint": null,
									"id": 143,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_3098": {
									"entryPoint": 7598,
									"id": 3098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@performUpkeep_2537": {
									"entryPoint": 4902,
									"id": 2537,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_174": {
									"entryPoint": 7176,
									"id": 174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sellTaxRate_1519": {
									"entryPoint": null,
									"id": 1519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setLastTime_3089": {
									"entryPoint": 5496,
									"id": 3089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_791": {
									"entryPoint": 8996,
									"id": 791,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@symbol_1497": {
									"entryPoint": 7666,
									"id": 1497,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenScalingFactor_1523": {
									"entryPoint": null,
									"id": 1523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_1757": {
									"entryPoint": 3168,
									"id": 1757,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1909": {
									"entryPoint": 3190,
									"id": 1909,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_202": {
									"entryPoint": 8935,
									"id": 202,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1835": {
									"entryPoint": 7871,
									"id": 1835,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@treasuryOperator_1543": {
									"entryPoint": null,
									"id": 1543,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@treasuryWallet_1517": {
									"entryPoint": null,
									"id": 1517,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_3107": {
									"entryPoint": 4884,
									"id": 3107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateDebaseDuration_2690": {
									"entryPoint": 7930,
									"id": 2690,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateDebaseRate_2678": {
									"entryPoint": 7551,
									"id": 2678,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateHoldingLimit_2659": {
									"entryPoint": 4871,
									"id": 2659,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateLPPool_2726": {
									"entryPoint": 7391,
									"id": 2726,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateSellTaxRate_2647": {
									"entryPoint": 7883,
									"id": 2647,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateTreasuryOperator_2752": {
									"entryPoint": 7193,
									"id": 2752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawETH_1746": {
									"entryPoint": 5913,
									"id": 1746,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 9846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 10297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 9996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10543,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 9913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 10011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 10583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bool": {
									"entryPoint": 10410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptr": {
									"entryPoint": 10083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 10060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 10510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 9782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10476,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_178af170496040e43e5fed3c2211f45b441ebd3eec2edb3c0d04ec63679aa9d9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3ce739ae4632163ea42e3bb420e91992e17c2c2db110c5ea16c1c9817736f6f3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_40dd6eb5f0b12779f51dc2c657d95f9d67c485a171864bc8ffae511283136f08__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_42c77607df448acdb8bc855d46684130f36187daf74deeded3f768350fe35353__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_80610bfd926591e04d7c9e978c0e76c69e04dd673eb3efbbe1432feff9b4b7b7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84d5812972af2c1adbf06f4834fb56a990c910224226d45960e515dd2c80b59c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9469c4f2eeb72442418ea3737024403ab7b9756617b6b8ffc7558079b2b5b6ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ac071be263243feaeb93aefe4b90e1c3125d8814c0c6023f6884f9c607bb4f38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dcc620396316e80fe3313fdb45381a1c672b33070adfcdfe129154cbb0d20bec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 10213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10887,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10868,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 10773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 10193,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17521:13",
										"nodeType": "YulBlock",
										"src": "0:17521:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "64:239:13",
													"nodeType": "YulBlock",
													"src": "64:239:13",
													"statements": [
														{
															"nativeSrc": "74:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "74:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "94:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "94:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "88:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "88:5:13"
																},
																"nativeSrc": "88:12:13",
																"nodeType": "YulFunctionCall",
																"src": "88:12:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "78:6:13",
																	"nodeType": "YulTypedName",
																	"src": "78:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "116:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "116:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "121:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "121:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "109:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "109:6:13"
																},
																"nativeSrc": "109:19:13",
																"nodeType": "YulFunctionCall",
																"src": "109:19:13"
															},
															"nativeSrc": "109:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "109:19:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "147:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "147:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "152:4:13",
																				"nodeType": "YulLiteral",
																				"src": "152:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "143:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "143:3:13"
																		},
																		"nativeSrc": "143:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "143:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "163:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "163:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "170:4:13",
																				"nodeType": "YulLiteral",
																				"src": "170:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "159:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "159:3:13"
																		},
																		"nativeSrc": "159:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "159:16:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "177:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "177:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "137:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "137:5:13"
																},
																"nativeSrc": "137:47:13",
																"nodeType": "YulFunctionCall",
																"src": "137:47:13"
															},
															"nativeSrc": "137:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "137:47:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "208:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "208:3:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "213:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "213:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "204:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "204:3:13"
																				},
																				"nativeSrc": "204:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "204:16:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "222:4:13",
																				"nodeType": "YulLiteral",
																				"src": "222:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "200:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "200:3:13"
																		},
																		"nativeSrc": "200:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "200:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "229:1:13",
																		"nodeType": "YulLiteral",
																		"src": "229:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "193:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "193:6:13"
																},
																"nativeSrc": "193:38:13",
																"nodeType": "YulFunctionCall",
																"src": "193:38:13"
															},
															"nativeSrc": "193:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "193:38:13"
														},
														{
															"nativeSrc": "240:57:13",
															"nodeType": "YulAssignment",
															"src": "240:57:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "255:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "255:3:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "268:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "268:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "276:2:13",
																								"nodeType": "YulLiteral",
																								"src": "276:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "264:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "264:3:13"
																						},
																						"nativeSrc": "264:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "264:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "285:2:13",
																								"nodeType": "YulLiteral",
																								"src": "285:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "281:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "281:3:13"
																						},
																						"nativeSrc": "281:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "281:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "260:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "260:3:13"
																				},
																				"nativeSrc": "260:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "260:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "251:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "251:3:13"
																		},
																		"nativeSrc": "251:39:13",
																		"nodeType": "YulFunctionCall",
																		"src": "251:39:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "292:4:13",
																		"nodeType": "YulLiteral",
																		"src": "292:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "247:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:13"
																},
																"nativeSrc": "247:50:13",
																"nodeType": "YulFunctionCall",
																"src": "247:50:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "240:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "240:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "14:289:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "41:5:13",
														"nodeType": "YulTypedName",
														"src": "41:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "48:3:13",
														"nodeType": "YulTypedName",
														"src": "48:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "56:3:13",
														"nodeType": "YulTypedName",
														"src": "56:3:13",
														"type": ""
													}
												],
												"src": "14:289:13"
											},
											{
												"body": {
													"nativeSrc": "429:99:13",
													"nodeType": "YulBlock",
													"src": "429:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "446:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "446:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "457:2:13",
																		"nodeType": "YulLiteral",
																		"src": "457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "439:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "439:6:13"
																},
																"nativeSrc": "439:21:13",
																"nodeType": "YulFunctionCall",
																"src": "439:21:13"
															},
															"nativeSrc": "439:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "439:21:13"
														},
														{
															"nativeSrc": "469:53:13",
															"nodeType": "YulAssignment",
															"src": "469:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "495:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "495:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "507:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "507:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "518:2:13",
																				"nodeType": "YulLiteral",
																				"src": "518:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "503:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "503:3:13"
																		},
																		"nativeSrc": "503:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "503:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "477:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "477:17:13"
																},
																"nativeSrc": "477:45:13",
																"nodeType": "YulFunctionCall",
																"src": "477:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "469:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "469:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "308:220:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "398:9:13",
														"nodeType": "YulTypedName",
														"src": "398:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "409:6:13",
														"nodeType": "YulTypedName",
														"src": "409:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "420:4:13",
														"nodeType": "YulTypedName",
														"src": "420:4:13",
														"type": ""
													}
												],
												"src": "308:220:13"
											},
											{
												"body": {
													"nativeSrc": "582:124:13",
													"nodeType": "YulBlock",
													"src": "582:124:13",
													"statements": [
														{
															"nativeSrc": "592:29:13",
															"nodeType": "YulAssignment",
															"src": "592:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "614:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "614:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "601:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "601:12:13"
																},
																"nativeSrc": "601:20:13",
																"nodeType": "YulFunctionCall",
																"src": "601:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "592:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "592:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "684:16:13",
																"nodeType": "YulBlock",
																"src": "684:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "693:1:13",
																					"nodeType": "YulLiteral",
																					"src": "693:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "696:1:13",
																					"nodeType": "YulLiteral",
																					"src": "696:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "686:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "686:6:13"
																			},
																			"nativeSrc": "686:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "686:12:13"
																		},
																		"nativeSrc": "686:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "686:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "643:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "643:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "654:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "654:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "669:3:13",
																										"nodeType": "YulLiteral",
																										"src": "669:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "674:1:13",
																										"nodeType": "YulLiteral",
																										"src": "674:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "665:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "665:3:13"
																								},
																								"nativeSrc": "665:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "665:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "678:1:13",
																								"nodeType": "YulLiteral",
																								"src": "678:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "661:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "661:3:13"
																						},
																						"nativeSrc": "661:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "661:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "650:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "650:3:13"
																				},
																				"nativeSrc": "650:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "650:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "640:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "640:2:13"
																		},
																		"nativeSrc": "640:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "640:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "633:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "633:6:13"
																},
																"nativeSrc": "633:50:13",
																"nodeType": "YulFunctionCall",
																"src": "633:50:13"
															},
															"nativeSrc": "630:70:13",
															"nodeType": "YulIf",
															"src": "630:70:13"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "533:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "561:6:13",
														"nodeType": "YulTypedName",
														"src": "561:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "572:5:13",
														"nodeType": "YulTypedName",
														"src": "572:5:13",
														"type": ""
													}
												],
												"src": "533:173:13"
											},
											{
												"body": {
													"nativeSrc": "798:213:13",
													"nodeType": "YulBlock",
													"src": "798:213:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "844:16:13",
																"nodeType": "YulBlock",
																"src": "844:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "853:1:13",
																					"nodeType": "YulLiteral",
																					"src": "853:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "856:1:13",
																					"nodeType": "YulLiteral",
																					"src": "856:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "846:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "846:6:13"
																			},
																			"nativeSrc": "846:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "846:12:13"
																		},
																		"nativeSrc": "846:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "846:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "819:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "828:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "828:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "815:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "815:3:13"
																		},
																		"nativeSrc": "815:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "815:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "840:2:13",
																		"nodeType": "YulLiteral",
																		"src": "840:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "811:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:13"
																},
																"nativeSrc": "811:32:13",
																"nodeType": "YulFunctionCall",
																"src": "811:32:13"
															},
															"nativeSrc": "808:52:13",
															"nodeType": "YulIf",
															"src": "808:52:13"
														},
														{
															"nativeSrc": "869:39:13",
															"nodeType": "YulAssignment",
															"src": "869:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "898:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "898:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "879:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "879:18:13"
																},
																"nativeSrc": "879:29:13",
																"nodeType": "YulFunctionCall",
																"src": "879:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "869:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "869:6:13"
																}
															]
														},
														{
															"nativeSrc": "917:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "917:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "930:1:13",
																"nodeType": "YulLiteral",
																"src": "930:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "921:5:13",
																	"nodeType": "YulTypedName",
																	"src": "921:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "940:41:13",
															"nodeType": "YulAssignment",
															"src": "940:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "966:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "966:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "977:2:13",
																				"nodeType": "YulLiteral",
																				"src": "977:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "962:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "962:3:13"
																		},
																		"nativeSrc": "962:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "962:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "949:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "949:12:13"
																},
																"nativeSrc": "949:32:13",
																"nodeType": "YulFunctionCall",
																"src": "949:32:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "940:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:13"
																}
															]
														},
														{
															"nativeSrc": "990:15:13",
															"nodeType": "YulAssignment",
															"src": "990:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1000:5:13",
																"nodeType": "YulIdentifier",
																"src": "1000:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "990:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "990:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "711:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "756:9:13",
														"nodeType": "YulTypedName",
														"src": "756:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "767:7:13",
														"nodeType": "YulTypedName",
														"src": "767:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "779:6:13",
														"nodeType": "YulTypedName",
														"src": "779:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "787:6:13",
														"nodeType": "YulTypedName",
														"src": "787:6:13",
														"type": ""
													}
												],
												"src": "711:300:13"
											},
											{
												"body": {
													"nativeSrc": "1111:92:13",
													"nodeType": "YulBlock",
													"src": "1111:92:13",
													"statements": [
														{
															"nativeSrc": "1121:26:13",
															"nodeType": "YulAssignment",
															"src": "1121:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1133:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1133:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1144:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1144:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1129:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:3:13"
																},
																"nativeSrc": "1129:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1129:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1121:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1121:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1163:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1163:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1188:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1188:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1181:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "1181:6:13"
																				},
																				"nativeSrc": "1181:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1174:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1174:6:13"
																		},
																		"nativeSrc": "1174:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1156:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1156:6:13"
																},
																"nativeSrc": "1156:41:13",
																"nodeType": "YulFunctionCall",
																"src": "1156:41:13"
															},
															"nativeSrc": "1156:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "1156:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1016:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1080:9:13",
														"nodeType": "YulTypedName",
														"src": "1080:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1091:6:13",
														"nodeType": "YulTypedName",
														"src": "1091:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1102:4:13",
														"nodeType": "YulTypedName",
														"src": "1102:4:13",
														"type": ""
													}
												],
												"src": "1016:187:13"
											},
											{
												"body": {
													"nativeSrc": "1312:270:13",
													"nodeType": "YulBlock",
													"src": "1312:270:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1358:16:13",
																"nodeType": "YulBlock",
																"src": "1358:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1367:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1367:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1370:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1370:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1360:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1360:6:13"
																			},
																			"nativeSrc": "1360:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1360:12:13"
																		},
																		"nativeSrc": "1360:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1360:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1333:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1333:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1342:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1329:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1329:3:13"
																		},
																		"nativeSrc": "1329:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1329:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1354:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1354:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1325:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1325:3:13"
																},
																"nativeSrc": "1325:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1325:32:13"
															},
															"nativeSrc": "1322:52:13",
															"nodeType": "YulIf",
															"src": "1322:52:13"
														},
														{
															"nativeSrc": "1383:39:13",
															"nodeType": "YulAssignment",
															"src": "1383:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1412:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1412:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1393:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1393:18:13"
																},
																"nativeSrc": "1393:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1393:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1383:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:13"
																}
															]
														},
														{
															"nativeSrc": "1431:48:13",
															"nodeType": "YulAssignment",
															"src": "1431:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1464:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1464:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1475:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1475:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1460:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1460:3:13"
																		},
																		"nativeSrc": "1460:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1460:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1441:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1441:18:13"
																},
																"nativeSrc": "1441:38:13",
																"nodeType": "YulFunctionCall",
																"src": "1441:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1431:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1431:6:13"
																}
															]
														},
														{
															"nativeSrc": "1488:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1488:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1501:1:13",
																"nodeType": "YulLiteral",
																"src": "1501:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1492:5:13",
																	"nodeType": "YulTypedName",
																	"src": "1492:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1511:41:13",
															"nodeType": "YulAssignment",
															"src": "1511:41:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1537:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1537:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1548:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1548:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1533:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1533:3:13"
																		},
																		"nativeSrc": "1533:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1533:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1520:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1520:12:13"
																},
																"nativeSrc": "1520:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1520:32:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1511:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1511:5:13"
																}
															]
														},
														{
															"nativeSrc": "1561:15:13",
															"nodeType": "YulAssignment",
															"src": "1561:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "1571:5:13",
																"nodeType": "YulIdentifier",
																"src": "1571:5:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1561:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1208:374:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1262:9:13",
														"nodeType": "YulTypedName",
														"src": "1262:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1273:7:13",
														"nodeType": "YulTypedName",
														"src": "1273:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1285:6:13",
														"nodeType": "YulTypedName",
														"src": "1285:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1293:6:13",
														"nodeType": "YulTypedName",
														"src": "1293:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1301:6:13",
														"nodeType": "YulTypedName",
														"src": "1301:6:13",
														"type": ""
													}
												],
												"src": "1208:374:13"
											},
											{
												"body": {
													"nativeSrc": "1657:116:13",
													"nodeType": "YulBlock",
													"src": "1657:116:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1703:16:13",
																"nodeType": "YulBlock",
																"src": "1703:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1712:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1712:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1715:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1715:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1705:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1705:6:13"
																			},
																			"nativeSrc": "1705:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1705:12:13"
																		},
																		"nativeSrc": "1705:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1705:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1678:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1678:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1687:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1687:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1674:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1674:3:13"
																		},
																		"nativeSrc": "1674:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1674:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1699:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1699:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1670:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1670:3:13"
																},
																"nativeSrc": "1670:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1670:32:13"
															},
															"nativeSrc": "1667:52:13",
															"nodeType": "YulIf",
															"src": "1667:52:13"
														},
														{
															"nativeSrc": "1728:39:13",
															"nodeType": "YulAssignment",
															"src": "1728:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1757:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1757:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1738:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1738:18:13"
																},
																"nativeSrc": "1738:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1738:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1728:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1728:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1587:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1623:9:13",
														"nodeType": "YulTypedName",
														"src": "1623:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1634:7:13",
														"nodeType": "YulTypedName",
														"src": "1634:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1646:6:13",
														"nodeType": "YulTypedName",
														"src": "1646:6:13",
														"type": ""
													}
												],
												"src": "1587:186:13"
											},
											{
												"body": {
													"nativeSrc": "1879:76:13",
													"nodeType": "YulBlock",
													"src": "1879:76:13",
													"statements": [
														{
															"nativeSrc": "1889:26:13",
															"nodeType": "YulAssignment",
															"src": "1889:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1901:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1901:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1912:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1897:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1897:3:13"
																},
																"nativeSrc": "1897:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1897:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1889:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1889:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1931:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1931:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1942:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1942:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:13"
																},
																"nativeSrc": "1924:25:13",
																"nodeType": "YulFunctionCall",
																"src": "1924:25:13"
															},
															"nativeSrc": "1924:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "1924:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1778:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1848:9:13",
														"nodeType": "YulTypedName",
														"src": "1848:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1859:6:13",
														"nodeType": "YulTypedName",
														"src": "1859:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1870:4:13",
														"nodeType": "YulTypedName",
														"src": "1870:4:13",
														"type": ""
													}
												],
												"src": "1778:177:13"
											},
											{
												"body": {
													"nativeSrc": "2057:87:13",
													"nodeType": "YulBlock",
													"src": "2057:87:13",
													"statements": [
														{
															"nativeSrc": "2067:26:13",
															"nodeType": "YulAssignment",
															"src": "2067:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2079:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2079:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2090:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2075:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2075:3:13"
																},
																"nativeSrc": "2075:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2075:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2067:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2067:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2109:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2109:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2124:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2124:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2132:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2132:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2120:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2120:3:13"
																		},
																		"nativeSrc": "2120:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2120:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2102:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2102:6:13"
																},
																"nativeSrc": "2102:36:13",
																"nodeType": "YulFunctionCall",
																"src": "2102:36:13"
															},
															"nativeSrc": "2102:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "2102:36:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1960:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2026:9:13",
														"nodeType": "YulTypedName",
														"src": "2026:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2037:6:13",
														"nodeType": "YulTypedName",
														"src": "2037:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2048:4:13",
														"nodeType": "YulTypedName",
														"src": "2048:4:13",
														"type": ""
													}
												],
												"src": "1960:184:13"
											},
											{
												"body": {
													"nativeSrc": "2195:114:13",
													"nodeType": "YulBlock",
													"src": "2195:114:13",
													"statements": [
														{
															"nativeSrc": "2205:29:13",
															"nodeType": "YulAssignment",
															"src": "2205:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2227:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2227:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2214:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2214:12:13"
																},
																"nativeSrc": "2214:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2214:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2205:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2205:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2287:16:13",
																"nodeType": "YulBlock",
																"src": "2287:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2296:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2296:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2299:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2299:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2289:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2289:6:13"
																			},
																			"nativeSrc": "2289:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2289:12:13"
																		},
																		"nativeSrc": "2289:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2289:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2256:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2256:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2277:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "2277:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2270:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "2270:6:13"
																						},
																						"nativeSrc": "2270:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2270:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2263:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "2263:6:13"
																				},
																				"nativeSrc": "2263:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2263:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2253:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2253:2:13"
																		},
																		"nativeSrc": "2253:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2253:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2246:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:13"
																},
																"nativeSrc": "2246:40:13",
																"nodeType": "YulFunctionCall",
																"src": "2246:40:13"
															},
															"nativeSrc": "2243:60:13",
															"nodeType": "YulIf",
															"src": "2243:60:13"
														}
													]
												},
												"name": "abi_decode_bool",
												"nativeSrc": "2149:160:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2174:6:13",
														"nodeType": "YulTypedName",
														"src": "2174:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2185:5:13",
														"nodeType": "YulTypedName",
														"src": "2185:5:13",
														"type": ""
													}
												],
												"src": "2149:160:13"
											},
											{
												"body": {
													"nativeSrc": "2398:170:13",
													"nodeType": "YulBlock",
													"src": "2398:170:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2444:16:13",
																"nodeType": "YulBlock",
																"src": "2444:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2453:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2453:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2456:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2456:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2446:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2446:6:13"
																			},
																			"nativeSrc": "2446:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2446:12:13"
																		},
																		"nativeSrc": "2446:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2446:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2419:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2419:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2428:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2428:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:13"
																		},
																		"nativeSrc": "2415:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2440:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2440:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2411:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2411:3:13"
																},
																"nativeSrc": "2411:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2411:32:13"
															},
															"nativeSrc": "2408:52:13",
															"nodeType": "YulIf",
															"src": "2408:52:13"
														},
														{
															"nativeSrc": "2469:39:13",
															"nodeType": "YulAssignment",
															"src": "2469:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2498:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2479:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2479:18:13"
																},
																"nativeSrc": "2479:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2479:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2469:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2469:6:13"
																}
															]
														},
														{
															"nativeSrc": "2517:45:13",
															"nodeType": "YulAssignment",
															"src": "2517:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2547:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2547:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2558:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2558:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2543:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2543:3:13"
																		},
																		"nativeSrc": "2543:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2543:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "2527:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "2527:15:13"
																},
																"nativeSrc": "2527:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2527:35:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2517:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2517:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "2314:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2356:9:13",
														"nodeType": "YulTypedName",
														"src": "2356:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2367:7:13",
														"nodeType": "YulTypedName",
														"src": "2367:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2379:6:13",
														"nodeType": "YulTypedName",
														"src": "2379:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2387:6:13",
														"nodeType": "YulTypedName",
														"src": "2387:6:13",
														"type": ""
													}
												],
												"src": "2314:254:13"
											},
											{
												"body": {
													"nativeSrc": "2643:156:13",
													"nodeType": "YulBlock",
													"src": "2643:156:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2689:16:13",
																"nodeType": "YulBlock",
																"src": "2689:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2698:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2698:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2701:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2701:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2691:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2691:6:13"
																			},
																			"nativeSrc": "2691:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2691:12:13"
																		},
																		"nativeSrc": "2691:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2691:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2664:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2664:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2673:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2673:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2660:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2660:3:13"
																		},
																		"nativeSrc": "2660:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2660:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2685:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2685:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2656:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2656:3:13"
																},
																"nativeSrc": "2656:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2656:32:13"
															},
															"nativeSrc": "2653:52:13",
															"nodeType": "YulIf",
															"src": "2653:52:13"
														},
														{
															"nativeSrc": "2714:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2714:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2727:1:13",
																"nodeType": "YulLiteral",
																"src": "2727:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2718:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2718:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2737:32:13",
															"nodeType": "YulAssignment",
															"src": "2737:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2759:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2759:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2746:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2746:12:13"
																},
																"nativeSrc": "2746:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2746:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2737:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2737:5:13"
																}
															]
														},
														{
															"nativeSrc": "2778:15:13",
															"nodeType": "YulAssignment",
															"src": "2778:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2788:5:13",
																"nodeType": "YulIdentifier",
																"src": "2788:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2778:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2573:226:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2609:9:13",
														"nodeType": "YulTypedName",
														"src": "2609:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2620:7:13",
														"nodeType": "YulTypedName",
														"src": "2620:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2632:6:13",
														"nodeType": "YulTypedName",
														"src": "2632:6:13",
														"type": ""
													}
												],
												"src": "2573:226:13"
											},
											{
												"body": {
													"nativeSrc": "2893:497:13",
													"nodeType": "YulBlock",
													"src": "2893:497:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2939:16:13",
																"nodeType": "YulBlock",
																"src": "2939:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2951:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2951:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2941:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2941:6:13"
																			},
																			"nativeSrc": "2941:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2941:12:13"
																		},
																		"nativeSrc": "2941:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2941:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2914:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2914:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2923:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2923:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2910:3:13"
																		},
																		"nativeSrc": "2910:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2935:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2935:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2906:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2906:3:13"
																},
																"nativeSrc": "2906:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2906:32:13"
															},
															"nativeSrc": "2903:52:13",
															"nodeType": "YulIf",
															"src": "2903:52:13"
														},
														{
															"nativeSrc": "2964:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2964:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2991:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2991:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2978:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2978:12:13"
																},
																"nativeSrc": "2978:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2978:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2968:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2968:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3044:16:13",
																"nodeType": "YulBlock",
																"src": "3044:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3053:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3053:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3056:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3056:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3046:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3046:6:13"
																			},
																			"nativeSrc": "3046:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3046:12:13"
																		},
																		"nativeSrc": "3046:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3046:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3016:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3016:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3024:18:13",
																		"nodeType": "YulLiteral",
																		"src": "3024:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3013:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3013:2:13"
																},
																"nativeSrc": "3013:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3013:30:13"
															},
															"nativeSrc": "3010:50:13",
															"nodeType": "YulIf",
															"src": "3010:50:13"
														},
														{
															"nativeSrc": "3069:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3069:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3083:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3083:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3094:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3094:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3079:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3079:3:13"
																},
																"nativeSrc": "3079:22:13",
																"nodeType": "YulFunctionCall",
																"src": "3079:22:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3073:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3073:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3149:16:13",
																"nodeType": "YulBlock",
																"src": "3149:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3158:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3158:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3161:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3161:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3151:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3151:6:13"
																			},
																			"nativeSrc": "3151:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3151:12:13"
																		},
																		"nativeSrc": "3151:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3151:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3128:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3128:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3132:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3132:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3124:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3124:3:13"
																				},
																				"nativeSrc": "3124:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3124:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3139:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3139:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3120:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3120:3:13"
																		},
																		"nativeSrc": "3120:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3120:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3113:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:13"
																},
																"nativeSrc": "3113:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3113:35:13"
															},
															"nativeSrc": "3110:55:13",
															"nodeType": "YulIf",
															"src": "3110:55:13"
														},
														{
															"nativeSrc": "3174:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3174:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3201:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3201:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3188:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3188:12:13"
																},
																"nativeSrc": "3188:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3188:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3178:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3178:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3247:16:13",
																"nodeType": "YulBlock",
																"src": "3247:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3256:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3256:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3259:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3259:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3249:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3249:6:13"
																			},
																			"nativeSrc": "3249:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3249:12:13"
																		},
																		"nativeSrc": "3249:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3249:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3219:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3219:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3227:18:13",
																		"nodeType": "YulLiteral",
																		"src": "3227:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3216:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3216:2:13"
																},
																"nativeSrc": "3216:30:13",
																"nodeType": "YulFunctionCall",
																"src": "3216:30:13"
															},
															"nativeSrc": "3213:50:13",
															"nodeType": "YulIf",
															"src": "3213:50:13"
														},
														{
															"body": {
																"nativeSrc": "3313:16:13",
																"nodeType": "YulBlock",
																"src": "3313:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3322:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3322:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3325:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3325:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3315:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3315:6:13"
																			},
																			"nativeSrc": "3315:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3315:12:13"
																		},
																		"nativeSrc": "3315:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3315:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3286:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3286:2:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3290:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3290:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3282:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3282:3:13"
																				},
																				"nativeSrc": "3282:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3282:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3299:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3299:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3278:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3278:3:13"
																		},
																		"nativeSrc": "3278:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3278:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3304:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "3304:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3275:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3275:2:13"
																},
																"nativeSrc": "3275:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3275:37:13"
															},
															"nativeSrc": "3272:57:13",
															"nodeType": "YulIf",
															"src": "3272:57:13"
														},
														{
															"nativeSrc": "3338:21:13",
															"nodeType": "YulAssignment",
															"src": "3338:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3352:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3352:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3356:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3356:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3348:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3348:3:13"
																},
																"nativeSrc": "3348:11:13",
																"nodeType": "YulFunctionCall",
																"src": "3348:11:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3338:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3338:6:13"
																}
															]
														},
														{
															"nativeSrc": "3368:16:13",
															"nodeType": "YulAssignment",
															"src": "3368:16:13",
															"value": {
																"name": "length",
																"nativeSrc": "3378:6:13",
																"nodeType": "YulIdentifier",
																"src": "3378:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3368:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptr",
												"nativeSrc": "2804:586:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2851:9:13",
														"nodeType": "YulTypedName",
														"src": "2851:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2862:7:13",
														"nodeType": "YulTypedName",
														"src": "2862:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2874:6:13",
														"nodeType": "YulTypedName",
														"src": "2874:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2882:6:13",
														"nodeType": "YulTypedName",
														"src": "2882:6:13",
														"type": ""
													}
												],
												"src": "2804:586:13"
											},
											{
												"body": {
													"nativeSrc": "3496:102:13",
													"nodeType": "YulBlock",
													"src": "3496:102:13",
													"statements": [
														{
															"nativeSrc": "3506:26:13",
															"nodeType": "YulAssignment",
															"src": "3506:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3518:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3518:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3529:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3529:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3514:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:13"
																},
																"nativeSrc": "3514:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3514:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3506:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3506:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3548:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3548:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3563:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3563:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3579:3:13",
																								"nodeType": "YulLiteral",
																								"src": "3579:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3584:1:13",
																								"nodeType": "YulLiteral",
																								"src": "3584:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3575:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3575:3:13"
																						},
																						"nativeSrc": "3575:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3575:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3588:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3588:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3571:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3571:3:13"
																				},
																				"nativeSrc": "3571:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3571:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3559:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3559:3:13"
																		},
																		"nativeSrc": "3559:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3559:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3541:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3541:6:13"
																},
																"nativeSrc": "3541:51:13",
																"nodeType": "YulFunctionCall",
																"src": "3541:51:13"
															},
															"nativeSrc": "3541:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "3541:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3395:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3465:9:13",
														"nodeType": "YulTypedName",
														"src": "3465:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3476:6:13",
														"nodeType": "YulTypedName",
														"src": "3476:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3487:4:13",
														"nodeType": "YulTypedName",
														"src": "3487:4:13",
														"type": ""
													}
												],
												"src": "3395:203:13"
											},
											{
												"body": {
													"nativeSrc": "3635:95:13",
													"nodeType": "YulBlock",
													"src": "3635:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3652:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3652:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3659:3:13",
																				"nodeType": "YulLiteral",
																				"src": "3659:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3664:10:13",
																				"nodeType": "YulLiteral",
																				"src": "3664:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3655:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3655:3:13"
																		},
																		"nativeSrc": "3655:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3655:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3645:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3645:6:13"
																},
																"nativeSrc": "3645:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3645:31:13"
															},
															"nativeSrc": "3645:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "3645:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3692:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3692:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3695:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3695:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:13"
																},
																"nativeSrc": "3685:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3685:15:13"
															},
															"nativeSrc": "3685:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3685:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3716:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3716:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3719:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3719:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3709:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3709:6:13"
																},
																"nativeSrc": "3709:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3709:15:13"
															},
															"nativeSrc": "3709:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3709:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3603:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3603:127:13"
											},
											{
												"body": {
													"nativeSrc": "3780:230:13",
													"nodeType": "YulBlock",
													"src": "3780:230:13",
													"statements": [
														{
															"nativeSrc": "3790:19:13",
															"nodeType": "YulAssignment",
															"src": "3790:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3806:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3806:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3800:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3800:5:13"
																},
																"nativeSrc": "3800:9:13",
																"nodeType": "YulFunctionCall",
																"src": "3800:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3790:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3790:6:13"
																}
															]
														},
														{
															"nativeSrc": "3818:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3818:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3840:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3840:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "3856:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "3856:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3862:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3862:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3852:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3852:3:13"
																				},
																				"nativeSrc": "3852:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3852:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3871:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3871:2:13",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3867:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3867:3:13"
																				},
																				"nativeSrc": "3867:7:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3867:7:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3848:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3848:3:13"
																		},
																		"nativeSrc": "3848:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3848:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3836:3:13"
																},
																"nativeSrc": "3836:40:13",
																"nodeType": "YulFunctionCall",
																"src": "3836:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3822:10:13",
																	"nodeType": "YulTypedName",
																	"src": "3822:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3951:22:13",
																"nodeType": "YulBlock",
																"src": "3951:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3953:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "3953:16:13"
																			},
																			"nativeSrc": "3953:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3953:18:13"
																		},
																		"nativeSrc": "3953:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3953:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3894:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "3894:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3906:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3906:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3891:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3891:2:13"
																		},
																		"nativeSrc": "3891:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3891:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3930:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "3930:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3942:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3942:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3927:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3927:2:13"
																		},
																		"nativeSrc": "3927:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3927:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3888:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3888:2:13"
																},
																"nativeSrc": "3888:62:13",
																"nodeType": "YulFunctionCall",
																"src": "3888:62:13"
															},
															"nativeSrc": "3885:88:13",
															"nodeType": "YulIf",
															"src": "3885:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3989:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3993:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "3993:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3982:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:13"
																},
																"nativeSrc": "3982:22:13",
																"nodeType": "YulFunctionCall",
																"src": "3982:22:13"
															},
															"nativeSrc": "3982:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "3982:22:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3735:275:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3760:4:13",
														"nodeType": "YulTypedName",
														"src": "3760:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3769:6:13",
														"nodeType": "YulTypedName",
														"src": "3769:6:13",
														"type": ""
													}
												],
												"src": "3735:275:13"
											},
											{
												"body": {
													"nativeSrc": "4084:114:13",
													"nodeType": "YulBlock",
													"src": "4084:114:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4128:22:13",
																"nodeType": "YulBlock",
																"src": "4128:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4130:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4130:16:13"
																			},
																			"nativeSrc": "4130:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4130:18:13"
																		},
																		"nativeSrc": "4130:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4130:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4100:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4100:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4108:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4108:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4097:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4097:2:13"
																},
																"nativeSrc": "4097:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4097:30:13"
															},
															"nativeSrc": "4094:56:13",
															"nodeType": "YulIf",
															"src": "4094:56:13"
														},
														{
															"nativeSrc": "4159:33:13",
															"nodeType": "YulAssignment",
															"src": "4159:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4175:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4175:1:13",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4178:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4178:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4171:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4171:3:13"
																		},
																		"nativeSrc": "4171:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4171:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4187:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4167:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4167:3:13"
																},
																"nativeSrc": "4167:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4167:25:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4159:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4159:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nativeSrc": "4015:183:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4064:6:13",
														"nodeType": "YulTypedName",
														"src": "4064:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4075:4:13",
														"nodeType": "YulTypedName",
														"src": "4075:4:13",
														"type": ""
													}
												],
												"src": "4015:183:13"
											},
											{
												"body": {
													"nativeSrc": "4267:611:13",
													"nodeType": "YulBlock",
													"src": "4267:611:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4316:16:13",
																"nodeType": "YulBlock",
																"src": "4316:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4325:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4325:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4328:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4328:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4318:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4318:6:13"
																			},
																			"nativeSrc": "4318:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4318:12:13"
																		},
																		"nativeSrc": "4318:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4318:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "4295:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4295:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4303:4:13",
																						"nodeType": "YulLiteral",
																						"src": "4303:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4291:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4291:3:13"
																				},
																				"nativeSrc": "4291:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4291:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "4310:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4310:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4287:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4287:3:13"
																		},
																		"nativeSrc": "4287:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4287:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4280:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4280:6:13"
																},
																"nativeSrc": "4280:35:13",
																"nodeType": "YulFunctionCall",
																"src": "4280:35:13"
															},
															"nativeSrc": "4277:55:13",
															"nodeType": "YulIf",
															"src": "4277:55:13"
														},
														{
															"nativeSrc": "4341:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4341:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4368:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4368:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4355:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4355:12:13"
																},
																"nativeSrc": "4355:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4355:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4345:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4345:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4384:75:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4384:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4451:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4451:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "4411:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "4411:39:13"
																		},
																		"nativeSrc": "4411:47:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4411:47:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4395:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "4395:15:13"
																},
																"nativeSrc": "4395:64:13",
																"nodeType": "YulFunctionCall",
																"src": "4395:64:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4388:3:13",
																	"nodeType": "YulTypedName",
																	"src": "4388:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4468:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4468:18:13",
															"value": {
																"name": "dst",
																"nativeSrc": "4483:3:13",
																"nodeType": "YulIdentifier",
																"src": "4483:3:13"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "4472:7:13",
																	"nodeType": "YulTypedName",
																	"src": "4472:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4502:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4502:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4507:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4507:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4495:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4495:6:13"
																},
																"nativeSrc": "4495:19:13",
																"nodeType": "YulFunctionCall",
																"src": "4495:19:13"
															},
															"nativeSrc": "4495:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "4495:19:13"
														},
														{
															"nativeSrc": "4523:21:13",
															"nodeType": "YulAssignment",
															"src": "4523:21:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4534:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4534:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4539:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4530:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4530:3:13"
																},
																"nativeSrc": "4530:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4530:14:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "4523:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:13"
																}
															]
														},
														{
															"nativeSrc": "4553:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4553:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4575:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4575:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4587:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4587:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4590:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4590:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4583:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4583:3:13"
																				},
																				"nativeSrc": "4583:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4583:14:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:13"
																		},
																		"nativeSrc": "4571:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:27:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4600:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4600:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4567:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4567:3:13"
																},
																"nativeSrc": "4567:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4567:38:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "4557:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4557:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4633:16:13",
																"nodeType": "YulBlock",
																"src": "4633:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4642:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4642:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4645:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4645:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4635:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4635:6:13"
																			},
																			"nativeSrc": "4635:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4635:12:13"
																		},
																		"nativeSrc": "4635:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4635:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4620:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4620:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4628:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4628:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4617:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4617:2:13"
																},
																"nativeSrc": "4617:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4617:15:13"
															},
															"nativeSrc": "4614:35:13",
															"nodeType": "YulIf",
															"src": "4614:35:13"
														},
														{
															"nativeSrc": "4658:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4658:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4673:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4673:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4681:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4681:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4669:3:13"
																},
																"nativeSrc": "4669:17:13",
																"nodeType": "YulFunctionCall",
																"src": "4669:17:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "4662:3:13",
																	"nodeType": "YulTypedName",
																	"src": "4662:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4753:94:13",
																"nodeType": "YulBlock",
																"src": "4753:94:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4774:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4774:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "4798:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4798:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "4779:18:13",
																						"nodeType": "YulIdentifier",
																						"src": "4779:18:13"
																					},
																					"nativeSrc": "4779:23:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4779:23:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4767:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4767:6:13"
																			},
																			"nativeSrc": "4767:36:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4767:36:13"
																		},
																		"nativeSrc": "4767:36:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4767:36:13"
																	},
																	{
																		"nativeSrc": "4816:21:13",
																		"nodeType": "YulAssignment",
																		"src": "4816:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4827:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4827:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4832:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4832:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4823:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4823:3:13"
																			},
																			"nativeSrc": "4823:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4823:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4816:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4816:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4706:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4706:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4711:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4711:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4703:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4703:2:13"
																},
																"nativeSrc": "4703:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4703:15:13"
															},
															"nativeSrc": "4695:152:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4719:25:13",
																"nodeType": "YulBlock",
																"src": "4719:25:13",
																"statements": [
																	{
																		"nativeSrc": "4721:21:13",
																		"nodeType": "YulAssignment",
																		"src": "4721:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "4732:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4732:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4737:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4737:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4728:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4728:3:13"
																			},
																			"nativeSrc": "4728:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4728:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "4721:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4721:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4699:3:13",
																"nodeType": "YulBlock",
																"src": "4699:3:13",
																"statements": []
															},
															"src": "4695:152:13"
														},
														{
															"nativeSrc": "4856:16:13",
															"nodeType": "YulAssignment",
															"src": "4856:16:13",
															"value": {
																"name": "array_1",
																"nativeSrc": "4865:7:13",
																"nodeType": "YulIdentifier",
																"src": "4865:7:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4856:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4856:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "4203:675:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4241:6:13",
														"nodeType": "YulTypedName",
														"src": "4241:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4249:3:13",
														"nodeType": "YulTypedName",
														"src": "4249:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4257:5:13",
														"nodeType": "YulTypedName",
														"src": "4257:5:13",
														"type": ""
													}
												],
												"src": "4203:675:13"
											},
											{
												"body": {
													"nativeSrc": "4992:307:13",
													"nodeType": "YulBlock",
													"src": "4992:307:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5038:16:13",
																"nodeType": "YulBlock",
																"src": "5038:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5047:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5047:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5050:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5050:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5040:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5040:6:13"
																			},
																			"nativeSrc": "5040:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5040:12:13"
																		},
																		"nativeSrc": "5040:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5040:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5013:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5013:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5022:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5022:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5009:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5009:3:13"
																		},
																		"nativeSrc": "5009:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5009:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5034:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5034:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5005:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5005:3:13"
																},
																"nativeSrc": "5005:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5005:32:13"
															},
															"nativeSrc": "5002:52:13",
															"nodeType": "YulIf",
															"src": "5002:52:13"
														},
														{
															"nativeSrc": "5063:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5063:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5090:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5090:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5077:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5077:12:13"
																},
																"nativeSrc": "5077:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5077:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5067:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5067:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5143:16:13",
																"nodeType": "YulBlock",
																"src": "5143:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5152:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5152:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5155:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5155:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5145:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5145:6:13"
																			},
																			"nativeSrc": "5145:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5145:12:13"
																		},
																		"nativeSrc": "5145:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5145:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5115:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5115:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5123:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5123:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5112:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5112:2:13"
																},
																"nativeSrc": "5112:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5112:30:13"
															},
															"nativeSrc": "5109:50:13",
															"nodeType": "YulIf",
															"src": "5109:50:13"
														},
														{
															"nativeSrc": "5168:71:13",
															"nodeType": "YulAssignment",
															"src": "5168:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5211:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5211:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5222:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5222:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5207:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:13"
																		},
																		"nativeSrc": "5207:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5207:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5231:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5231:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "5178:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "5178:28:13"
																},
																"nativeSrc": "5178:61:13",
																"nodeType": "YulFunctionCall",
																"src": "5178:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5168:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5168:6:13"
																}
															]
														},
														{
															"nativeSrc": "5248:45:13",
															"nodeType": "YulAssignment",
															"src": "5248:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5278:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5278:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5289:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5289:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5274:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5274:3:13"
																		},
																		"nativeSrc": "5274:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5274:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nativeSrc": "5258:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "5258:15:13"
																},
																"nativeSrc": "5258:35:13",
																"nodeType": "YulFunctionCall",
																"src": "5258:35:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5248:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5248:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bool",
												"nativeSrc": "4883:416:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4950:9:13",
														"nodeType": "YulTypedName",
														"src": "4950:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4961:7:13",
														"nodeType": "YulTypedName",
														"src": "4961:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4973:6:13",
														"nodeType": "YulTypedName",
														"src": "4973:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4981:6:13",
														"nodeType": "YulTypedName",
														"src": "4981:6:13",
														"type": ""
													}
												],
												"src": "4883:416:13"
											},
											{
												"body": {
													"nativeSrc": "5445:158:13",
													"nodeType": "YulBlock",
													"src": "5445:158:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5462:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5462:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "5487:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5487:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5480:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5480:6:13"
																				},
																				"nativeSrc": "5480:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5480:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5473:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5473:6:13"
																		},
																		"nativeSrc": "5473:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5455:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:13"
																},
																"nativeSrc": "5455:41:13",
																"nodeType": "YulFunctionCall",
																"src": "5455:41:13"
															},
															"nativeSrc": "5455:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "5455:41:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5516:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5516:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5527:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5527:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5512:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:13"
																		},
																		"nativeSrc": "5512:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5532:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5532:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5505:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5505:6:13"
																},
																"nativeSrc": "5505:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5505:30:13"
															},
															"nativeSrc": "5505:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "5505:30:13"
														},
														{
															"nativeSrc": "5544:53:13",
															"nodeType": "YulAssignment",
															"src": "5544:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5570:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5570:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5582:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5582:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5593:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5593:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5578:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5578:3:13"
																		},
																		"nativeSrc": "5578:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5578:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "5552:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5552:17:13"
																},
																"nativeSrc": "5552:45:13",
																"nodeType": "YulFunctionCall",
																"src": "5552:45:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5544:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5544:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "5304:299:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5406:9:13",
														"nodeType": "YulTypedName",
														"src": "5406:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5417:6:13",
														"nodeType": "YulTypedName",
														"src": "5417:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5425:6:13",
														"nodeType": "YulTypedName",
														"src": "5425:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5436:4:13",
														"nodeType": "YulTypedName",
														"src": "5436:4:13",
														"type": ""
													}
												],
												"src": "5304:299:13"
											},
											{
												"body": {
													"nativeSrc": "5695:213:13",
													"nodeType": "YulBlock",
													"src": "5695:213:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5741:16:13",
																"nodeType": "YulBlock",
																"src": "5741:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5750:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5750:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5753:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5753:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5743:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5743:6:13"
																			},
																			"nativeSrc": "5743:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5743:12:13"
																		},
																		"nativeSrc": "5743:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5743:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5716:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5716:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5725:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5725:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5712:3:13"
																		},
																		"nativeSrc": "5712:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5712:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5737:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5737:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5708:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:13"
																},
																"nativeSrc": "5708:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5708:32:13"
															},
															"nativeSrc": "5705:52:13",
															"nodeType": "YulIf",
															"src": "5705:52:13"
														},
														{
															"nativeSrc": "5766:14:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5766:14:13",
															"value": {
																"kind": "number",
																"nativeSrc": "5779:1:13",
																"nodeType": "YulLiteral",
																"src": "5779:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5770:5:13",
																	"nodeType": "YulTypedName",
																	"src": "5770:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5789:32:13",
															"nodeType": "YulAssignment",
															"src": "5789:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5811:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5811:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5798:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5798:12:13"
																},
																"nativeSrc": "5798:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5798:23:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5789:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5789:5:13"
																}
															]
														},
														{
															"nativeSrc": "5830:15:13",
															"nodeType": "YulAssignment",
															"src": "5830:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "5840:5:13",
																"nodeType": "YulIdentifier",
																"src": "5840:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5830:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5830:6:13"
																}
															]
														},
														{
															"nativeSrc": "5854:48:13",
															"nodeType": "YulAssignment",
															"src": "5854:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5887:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5887:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5898:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5898:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5883:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5883:3:13"
																		},
																		"nativeSrc": "5883:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5883:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5864:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5864:18:13"
																},
																"nativeSrc": "5864:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5864:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5854:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5854:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "5608:300:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5653:9:13",
														"nodeType": "YulTypedName",
														"src": "5653:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5664:7:13",
														"nodeType": "YulTypedName",
														"src": "5664:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5676:6:13",
														"nodeType": "YulTypedName",
														"src": "5676:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5684:6:13",
														"nodeType": "YulTypedName",
														"src": "5684:6:13",
														"type": ""
													}
												],
												"src": "5608:300:13"
											},
											{
												"body": {
													"nativeSrc": "6000:173:13",
													"nodeType": "YulBlock",
													"src": "6000:173:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6046:16:13",
																"nodeType": "YulBlock",
																"src": "6046:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6055:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6055:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6058:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6058:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6048:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6048:6:13"
																			},
																			"nativeSrc": "6048:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6048:12:13"
																		},
																		"nativeSrc": "6048:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6048:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6021:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6021:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6030:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6030:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6017:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:13"
																		},
																		"nativeSrc": "6017:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6017:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6042:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6042:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6013:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:13"
																},
																"nativeSrc": "6013:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6013:32:13"
															},
															"nativeSrc": "6010:52:13",
															"nodeType": "YulIf",
															"src": "6010:52:13"
														},
														{
															"nativeSrc": "6071:39:13",
															"nodeType": "YulAssignment",
															"src": "6071:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6100:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6100:9:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6081:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6081:18:13"
																},
																"nativeSrc": "6081:29:13",
																"nodeType": "YulFunctionCall",
																"src": "6081:29:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6071:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:13"
																}
															]
														},
														{
															"nativeSrc": "6119:48:13",
															"nodeType": "YulAssignment",
															"src": "6119:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6152:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6152:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6163:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6163:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6148:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6148:3:13"
																		},
																		"nativeSrc": "6148:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6148:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "6129:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "6129:18:13"
																},
																"nativeSrc": "6129:38:13",
																"nodeType": "YulFunctionCall",
																"src": "6129:38:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6119:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6119:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5913:260:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:13",
														"nodeType": "YulTypedName",
														"src": "5958:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5969:7:13",
														"nodeType": "YulTypedName",
														"src": "5969:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5981:6:13",
														"nodeType": "YulTypedName",
														"src": "5981:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5989:6:13",
														"nodeType": "YulTypedName",
														"src": "5989:6:13",
														"type": ""
													}
												],
												"src": "5913:260:13"
											},
											{
												"body": {
													"nativeSrc": "6315:1045:13",
													"nodeType": "YulBlock",
													"src": "6315:1045:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6361:16:13",
																"nodeType": "YulBlock",
																"src": "6361:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6370:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6370:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6373:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6373:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6363:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6363:6:13"
																			},
																			"nativeSrc": "6363:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6363:12:13"
																		},
																		"nativeSrc": "6363:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6363:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6336:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6336:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6345:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6345:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6332:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:13"
																		},
																		"nativeSrc": "6332:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6332:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6357:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6357:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6328:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:13"
																},
																"nativeSrc": "6328:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6328:32:13"
															},
															"nativeSrc": "6325:52:13",
															"nodeType": "YulIf",
															"src": "6325:52:13"
														},
														{
															"nativeSrc": "6386:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6386:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6413:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6413:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6400:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6400:12:13"
																},
																"nativeSrc": "6400:23:13",
																"nodeType": "YulFunctionCall",
																"src": "6400:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6390:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6390:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6466:16:13",
																"nodeType": "YulBlock",
																"src": "6466:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6475:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6475:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6478:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6478:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6468:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6468:6:13"
																			},
																			"nativeSrc": "6468:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6468:12:13"
																		},
																		"nativeSrc": "6468:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6468:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6438:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6438:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6446:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6446:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6435:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6435:2:13"
																},
																"nativeSrc": "6435:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6435:30:13"
															},
															"nativeSrc": "6432:50:13",
															"nodeType": "YulIf",
															"src": "6432:50:13"
														},
														{
															"nativeSrc": "6491:71:13",
															"nodeType": "YulAssignment",
															"src": "6491:71:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6534:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6534:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6545:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6545:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6530:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6530:3:13"
																		},
																		"nativeSrc": "6530:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6530:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6554:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6554:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "6501:28:13",
																	"nodeType": "YulIdentifier",
																	"src": "6501:28:13"
																},
																"nativeSrc": "6501:61:13",
																"nodeType": "YulFunctionCall",
																"src": "6501:61:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6491:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6491:6:13"
																}
															]
														},
														{
															"nativeSrc": "6571:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6571:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6604:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6615:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:13"
																		},
																		"nativeSrc": "6600:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6587:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6587:12:13"
																},
																"nativeSrc": "6587:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6587:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6575:8:13",
																	"nodeType": "YulTypedName",
																	"src": "6575:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6664:16:13",
																"nodeType": "YulBlock",
																"src": "6664:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6673:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6673:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6676:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6676:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6666:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6666:6:13"
																			},
																			"nativeSrc": "6666:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6666:12:13"
																		},
																		"nativeSrc": "6666:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6666:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6634:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "6634:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6644:18:13",
																		"nodeType": "YulLiteral",
																		"src": "6644:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6631:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6631:2:13"
																},
																"nativeSrc": "6631:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6631:32:13"
															},
															"nativeSrc": "6628:52:13",
															"nodeType": "YulIf",
															"src": "6628:52:13"
														},
														{
															"nativeSrc": "6689:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6689:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6703:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6703:9:13"
																	},
																	{
																		"name": "offset_1",
																		"nativeSrc": "6714:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "6714:8:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6699:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6699:3:13"
																},
																"nativeSrc": "6699:24:13",
																"nodeType": "YulFunctionCall",
																"src": "6699:24:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6693:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6693:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6771:16:13",
																"nodeType": "YulBlock",
																"src": "6771:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6780:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6780:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6783:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6783:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6773:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6773:6:13"
																			},
																			"nativeSrc": "6773:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6773:12:13"
																		},
																		"nativeSrc": "6773:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6773:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6750:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6750:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6754:4:13",
																						"nodeType": "YulLiteral",
																						"src": "6754:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6746:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6746:3:13"
																				},
																				"nativeSrc": "6746:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6746:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6761:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6761:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6742:3:13"
																		},
																		"nativeSrc": "6742:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6742:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6735:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6735:6:13"
																},
																"nativeSrc": "6735:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6735:35:13"
															},
															"nativeSrc": "6732:55:13",
															"nodeType": "YulIf",
															"src": "6732:55:13"
														},
														{
															"nativeSrc": "6796:30:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6796:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6823:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6823:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6810:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6810:12:13"
																},
																"nativeSrc": "6810:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6810:16:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6800:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6800:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6835:75:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6835:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6902:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6902:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "6862:39:13",
																			"nodeType": "YulIdentifier",
																			"src": "6862:39:13"
																		},
																		"nativeSrc": "6862:47:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6862:47:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6846:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "6846:15:13"
																},
																"nativeSrc": "6846:64:13",
																"nodeType": "YulFunctionCall",
																"src": "6846:64:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6839:3:13",
																	"nodeType": "YulTypedName",
																	"src": "6839:3:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6919:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6919:16:13",
															"value": {
																"name": "dst",
																"nativeSrc": "6932:3:13",
																"nodeType": "YulIdentifier",
																"src": "6932:3:13"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "6923:5:13",
																	"nodeType": "YulTypedName",
																	"src": "6923:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6951:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6951:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6956:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6956:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6944:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6944:6:13"
																},
																"nativeSrc": "6944:19:13",
																"nodeType": "YulFunctionCall",
																"src": "6944:19:13"
															},
															"nativeSrc": "6944:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "6944:19:13"
														},
														{
															"nativeSrc": "6972:19:13",
															"nodeType": "YulAssignment",
															"src": "6972:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6983:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6988:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6979:3:13"
																},
																"nativeSrc": "6979:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6979:12:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6972:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6972:3:13"
																}
															]
														},
														{
															"nativeSrc": "7000:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7000:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "7022:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7022:2:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7030:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7030:1:13",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "7033:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7033:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "7026:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7026:3:13"
																				},
																				"nativeSrc": "7026:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7026:14:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7018:3:13"
																		},
																		"nativeSrc": "7018:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7018:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7043:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7043:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7014:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7014:3:13"
																},
																"nativeSrc": "7014:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7014:32:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7004:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7004:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7078:16:13",
																"nodeType": "YulBlock",
																"src": "7078:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7087:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7087:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7090:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7090:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7080:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7080:6:13"
																			},
																			"nativeSrc": "7080:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7080:12:13"
																		},
																		"nativeSrc": "7080:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7080:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7061:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7061:6:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7069:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "7069:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7058:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7058:2:13"
																},
																"nativeSrc": "7058:19:13",
																"nodeType": "YulFunctionCall",
																"src": "7058:19:13"
															},
															"nativeSrc": "7055:39:13",
															"nodeType": "YulIf",
															"src": "7055:39:13"
														},
														{
															"nativeSrc": "7103:22:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7103:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7118:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7118:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7122:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7122:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7114:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7114:3:13"
																},
																"nativeSrc": "7114:11:13",
																"nodeType": "YulFunctionCall",
																"src": "7114:11:13"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "7107:3:13",
																	"nodeType": "YulTypedName",
																	"src": "7107:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7190:140:13",
																"nodeType": "YulBlock",
																"src": "7190:140:13",
																"statements": [
																	{
																		"nativeSrc": "7204:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7204:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7217:1:13",
																			"nodeType": "YulLiteral",
																			"src": "7217:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "7208:5:13",
																				"nodeType": "YulTypedName",
																				"src": "7208:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7231:26:13",
																		"nodeType": "YulAssignment",
																		"src": "7231:26:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7253:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7253:3:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "7240:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "7240:12:13"
																			},
																			"nativeSrc": "7240:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7240:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "7231:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7231:5:13"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7277:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7277:3:13"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "7282:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "7282:5:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7270:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7270:6:13"
																			},
																			"nativeSrc": "7270:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7270:18:13"
																		},
																		"nativeSrc": "7270:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7270:18:13"
																	},
																	{
																		"nativeSrc": "7301:19:13",
																		"nodeType": "YulAssignment",
																		"src": "7301:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7312:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7312:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7317:2:13",
																					"nodeType": "YulLiteral",
																					"src": "7317:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7308:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7308:3:13"
																			},
																			"nativeSrc": "7308:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7308:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7301:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7301:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7145:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7145:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7150:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7150:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7142:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7142:2:13"
																},
																"nativeSrc": "7142:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7142:15:13"
															},
															"nativeSrc": "7134:196:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7158:23:13",
																"nodeType": "YulBlock",
																"src": "7158:23:13",
																"statements": [
																	{
																		"nativeSrc": "7160:19:13",
																		"nodeType": "YulAssignment",
																		"src": "7160:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7171:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7171:3:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7176:2:13",
																					"nodeType": "YulLiteral",
																					"src": "7176:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7167:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7167:3:13"
																			},
																			"nativeSrc": "7167:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7167:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7160:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7138:3:13",
																"nodeType": "YulBlock",
																"src": "7138:3:13",
																"statements": []
															},
															"src": "7134:196:13"
														},
														{
															"nativeSrc": "7339:15:13",
															"nodeType": "YulAssignment",
															"src": "7339:15:13",
															"value": {
																"name": "array",
																"nativeSrc": "7349:5:13",
																"nodeType": "YulIdentifier",
																"src": "7349:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7339:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7339:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6178:1182:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6273:9:13",
														"nodeType": "YulTypedName",
														"src": "6273:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6284:7:13",
														"nodeType": "YulTypedName",
														"src": "6284:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6296:6:13",
														"nodeType": "YulTypedName",
														"src": "6296:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6304:6:13",
														"nodeType": "YulTypedName",
														"src": "6304:6:13",
														"type": ""
													}
												],
												"src": "6178:1182:13"
											},
											{
												"body": {
													"nativeSrc": "7420:325:13",
													"nodeType": "YulBlock",
													"src": "7420:325:13",
													"statements": [
														{
															"nativeSrc": "7430:22:13",
															"nodeType": "YulAssignment",
															"src": "7430:22:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7444:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7444:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "7447:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7447:4:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7440:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:13"
																},
																"nativeSrc": "7440:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7440:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7430:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7430:6:13"
																}
															]
														},
														{
															"nativeSrc": "7461:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7461:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7491:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7491:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7497:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7497:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7487:3:13"
																},
																"nativeSrc": "7487:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7487:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7465:18:13",
																	"nodeType": "YulTypedName",
																	"src": "7465:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7538:31:13",
																"nodeType": "YulBlock",
																"src": "7538:31:13",
																"statements": [
																	{
																		"nativeSrc": "7540:27:13",
																		"nodeType": "YulAssignment",
																		"src": "7540:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7554:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7554:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7562:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7562:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7550:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7550:3:13"
																			},
																			"nativeSrc": "7550:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7550:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7540:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7540:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7518:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "7518:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7511:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7511:6:13"
																},
																"nativeSrc": "7511:26:13",
																"nodeType": "YulFunctionCall",
																"src": "7511:26:13"
															},
															"nativeSrc": "7508:61:13",
															"nodeType": "YulIf",
															"src": "7508:61:13"
														},
														{
															"body": {
																"nativeSrc": "7628:111:13",
																"nodeType": "YulBlock",
																"src": "7628:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7649:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7649:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7656:3:13",
																							"nodeType": "YulLiteral",
																							"src": "7656:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7661:10:13",
																							"nodeType": "YulLiteral",
																							"src": "7661:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7652:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "7652:3:13"
																					},
																					"nativeSrc": "7652:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "7652:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7642:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7642:6:13"
																			},
																			"nativeSrc": "7642:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7642:31:13"
																		},
																		"nativeSrc": "7642:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7642:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7693:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7693:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7696:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7696:4:13",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7686:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7686:6:13"
																			},
																			"nativeSrc": "7686:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7686:15:13"
																		},
																		"nativeSrc": "7686:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7686:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7721:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7721:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7724:4:13",
																					"nodeType": "YulLiteral",
																					"src": "7724:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7714:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7714:6:13"
																			},
																			"nativeSrc": "7714:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7714:15:13"
																		},
																		"nativeSrc": "7714:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7714:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7584:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "7584:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7607:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7607:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7615:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7615:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7604:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7604:2:13"
																		},
																		"nativeSrc": "7604:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7604:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7581:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7581:2:13"
																},
																"nativeSrc": "7581:38:13",
																"nodeType": "YulFunctionCall",
																"src": "7581:38:13"
															},
															"nativeSrc": "7578:161:13",
															"nodeType": "YulIf",
															"src": "7578:161:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7365:380:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7400:4:13",
														"nodeType": "YulTypedName",
														"src": "7400:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7409:6:13",
														"nodeType": "YulTypedName",
														"src": "7409:6:13",
														"type": ""
													}
												],
												"src": "7365:380:13"
											},
											{
												"body": {
													"nativeSrc": "7924:226:13",
													"nodeType": "YulBlock",
													"src": "7924:226:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7941:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7941:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7952:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7952:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7934:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7934:6:13"
																},
																"nativeSrc": "7934:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7934:21:13"
															},
															"nativeSrc": "7934:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "7934:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7975:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7975:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7986:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7986:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7971:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7971:3:13"
																		},
																		"nativeSrc": "7971:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7971:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7991:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7991:2:13",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7964:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7964:6:13"
																},
																"nativeSrc": "7964:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7964:30:13"
															},
															"nativeSrc": "7964:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "7964:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8014:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8014:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8025:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8025:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8010:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8010:3:13"
																		},
																		"nativeSrc": "8010:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8010:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "8030:34:13",
																		"nodeType": "YulLiteral",
																		"src": "8030:34:13",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8003:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8003:6:13"
																},
																"nativeSrc": "8003:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8003:62:13"
															},
															"nativeSrc": "8003:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "8003:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8085:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8085:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8096:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8096:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8081:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8081:3:13"
																		},
																		"nativeSrc": "8081:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8081:18:13"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "8101:6:13",
																		"nodeType": "YulLiteral",
																		"src": "8101:6:13",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8074:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8074:6:13"
																},
																"nativeSrc": "8074:34:13",
																"nodeType": "YulFunctionCall",
																"src": "8074:34:13"
															},
															"nativeSrc": "8074:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "8074:34:13"
														},
														{
															"nativeSrc": "8117:27:13",
															"nodeType": "YulAssignment",
															"src": "8117:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8129:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8129:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8140:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8140:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8125:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8125:3:13"
																},
																"nativeSrc": "8125:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8125:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8117:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8117:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7750:400:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7901:9:13",
														"nodeType": "YulTypedName",
														"src": "7901:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7915:4:13",
														"nodeType": "YulTypedName",
														"src": "7915:4:13",
														"type": ""
													}
												],
												"src": "7750:400:13"
											},
											{
												"body": {
													"nativeSrc": "8329:224:13",
													"nodeType": "YulBlock",
													"src": "8329:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8346:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8346:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8357:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8357:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8339:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8339:6:13"
																},
																"nativeSrc": "8339:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8339:21:13"
															},
															"nativeSrc": "8339:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8339:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8380:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8380:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8391:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8391:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8376:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8376:3:13"
																		},
																		"nativeSrc": "8376:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8376:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8396:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8396:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8369:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8369:6:13"
																},
																"nativeSrc": "8369:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8369:30:13"
															},
															"nativeSrc": "8369:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8369:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8419:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8419:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8430:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8430:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8415:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8415:3:13"
																		},
																		"nativeSrc": "8415:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8415:18:13"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "8435:34:13",
																		"nodeType": "YulLiteral",
																		"src": "8435:34:13",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8408:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:13"
																},
																"nativeSrc": "8408:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8408:62:13"
															},
															"nativeSrc": "8408:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "8408:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8490:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8501:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8501:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8486:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:13"
																		},
																		"nativeSrc": "8486:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8486:18:13"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "8506:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8506:4:13",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8479:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8479:6:13"
																},
																"nativeSrc": "8479:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8479:32:13"
															},
															"nativeSrc": "8479:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "8479:32:13"
														},
														{
															"nativeSrc": "8520:27:13",
															"nodeType": "YulAssignment",
															"src": "8520:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8532:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8532:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8543:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8543:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8528:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8528:3:13"
																},
																"nativeSrc": "8528:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8528:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8520:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8520:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8155:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8306:9:13",
														"nodeType": "YulTypedName",
														"src": "8306:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8320:4:13",
														"nodeType": "YulTypedName",
														"src": "8320:4:13",
														"type": ""
													}
												],
												"src": "8155:398:13"
											},
											{
												"body": {
													"nativeSrc": "8590:95:13",
													"nodeType": "YulBlock",
													"src": "8590:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8607:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8607:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8614:3:13",
																				"nodeType": "YulLiteral",
																				"src": "8614:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8619:10:13",
																				"nodeType": "YulLiteral",
																				"src": "8619:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8610:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8610:3:13"
																		},
																		"nativeSrc": "8610:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8610:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8600:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8600:6:13"
																},
																"nativeSrc": "8600:31:13",
																"nodeType": "YulFunctionCall",
																"src": "8600:31:13"
															},
															"nativeSrc": "8600:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "8600:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8647:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8647:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8650:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8650:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8640:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8640:6:13"
																},
																"nativeSrc": "8640:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8640:15:13"
															},
															"nativeSrc": "8640:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8640:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8671:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8671:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8674:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8674:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8664:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8664:6:13"
																},
																"nativeSrc": "8664:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8664:15:13"
															},
															"nativeSrc": "8664:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8664:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8558:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "8558:127:13"
											},
											{
												"body": {
													"nativeSrc": "8738:77:13",
													"nodeType": "YulBlock",
													"src": "8738:77:13",
													"statements": [
														{
															"nativeSrc": "8748:16:13",
															"nodeType": "YulAssignment",
															"src": "8748:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8759:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8759:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8762:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8762:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8755:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8755:3:13"
																},
																"nativeSrc": "8755:9:13",
																"nodeType": "YulFunctionCall",
																"src": "8755:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8748:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8787:22:13",
																"nodeType": "YulBlock",
																"src": "8787:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8789:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8789:16:13"
																			},
																			"nativeSrc": "8789:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8789:18:13"
																		},
																		"nativeSrc": "8789:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8789:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8779:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "8779:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8782:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8782:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8776:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8776:2:13"
																},
																"nativeSrc": "8776:10:13",
																"nodeType": "YulFunctionCall",
																"src": "8776:10:13"
															},
															"nativeSrc": "8773:36:13",
															"nodeType": "YulIf",
															"src": "8773:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8690:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8721:1:13",
														"nodeType": "YulTypedName",
														"src": "8721:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8724:1:13",
														"nodeType": "YulTypedName",
														"src": "8724:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8730:3:13",
														"nodeType": "YulTypedName",
														"src": "8730:3:13",
														"type": ""
													}
												],
												"src": "8690:125:13"
											},
											{
												"body": {
													"nativeSrc": "8994:227:13",
													"nodeType": "YulBlock",
													"src": "8994:227:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9011:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9011:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9022:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9022:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9004:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:13"
																},
																"nativeSrc": "9004:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9004:21:13"
															},
															"nativeSrc": "9004:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9004:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9045:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9045:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9056:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9056:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9041:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9041:3:13"
																		},
																		"nativeSrc": "9041:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9041:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9061:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9061:2:13",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9034:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9034:6:13"
																},
																"nativeSrc": "9034:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9034:30:13"
															},
															"nativeSrc": "9034:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9034:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9084:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9084:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9095:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9095:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9080:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:13"
																		},
																		"nativeSrc": "9080:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "9100:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9100:34:13",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9073:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:13"
																},
																"nativeSrc": "9073:62:13",
																"nodeType": "YulFunctionCall",
																"src": "9073:62:13"
															},
															"nativeSrc": "9073:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "9073:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9155:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9155:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9166:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9166:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9151:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9151:3:13"
																		},
																		"nativeSrc": "9151:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9151:18:13"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "9171:7:13",
																		"nodeType": "YulLiteral",
																		"src": "9171:7:13",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9144:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9144:6:13"
																},
																"nativeSrc": "9144:35:13",
																"nodeType": "YulFunctionCall",
																"src": "9144:35:13"
															},
															"nativeSrc": "9144:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "9144:35:13"
														},
														{
															"nativeSrc": "9188:27:13",
															"nodeType": "YulAssignment",
															"src": "9188:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9200:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9200:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9211:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9211:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9196:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9196:3:13"
																},
																"nativeSrc": "9196:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9196:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9188:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8820:401:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8971:9:13",
														"nodeType": "YulTypedName",
														"src": "8971:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8985:4:13",
														"nodeType": "YulTypedName",
														"src": "8985:4:13",
														"type": ""
													}
												],
												"src": "8820:401:13"
											},
											{
												"body": {
													"nativeSrc": "9400:225:13",
													"nodeType": "YulBlock",
													"src": "9400:225:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9417:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9417:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9428:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9410:6:13"
																},
																"nativeSrc": "9410:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9410:21:13"
															},
															"nativeSrc": "9410:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9410:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9451:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9451:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9462:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9462:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9447:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9447:3:13"
																		},
																		"nativeSrc": "9447:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9447:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9467:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9467:2:13",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9440:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9440:6:13"
																},
																"nativeSrc": "9440:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9440:30:13"
															},
															"nativeSrc": "9440:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9440:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9490:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9490:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9501:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9501:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9486:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9486:3:13"
																		},
																		"nativeSrc": "9486:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9486:18:13"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "9506:34:13",
																		"nodeType": "YulLiteral",
																		"src": "9506:34:13",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9479:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9479:6:13"
																},
																"nativeSrc": "9479:62:13",
																"nodeType": "YulFunctionCall",
																"src": "9479:62:13"
															},
															"nativeSrc": "9479:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "9479:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9561:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9561:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9572:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9572:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9557:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9557:3:13"
																		},
																		"nativeSrc": "9557:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9557:18:13"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "9577:5:13",
																		"nodeType": "YulLiteral",
																		"src": "9577:5:13",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9550:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9550:6:13"
																},
																"nativeSrc": "9550:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9550:33:13"
															},
															"nativeSrc": "9550:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "9550:33:13"
														},
														{
															"nativeSrc": "9592:27:13",
															"nodeType": "YulAssignment",
															"src": "9592:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9604:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9604:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9615:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9615:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9600:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9600:3:13"
																},
																"nativeSrc": "9600:19:13",
																"nodeType": "YulFunctionCall",
																"src": "9600:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9592:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9592:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9226:399:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9377:9:13",
														"nodeType": "YulTypedName",
														"src": "9377:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9391:4:13",
														"nodeType": "YulTypedName",
														"src": "9391:4:13",
														"type": ""
													}
												],
												"src": "9226:399:13"
											},
											{
												"body": {
													"nativeSrc": "9804:181:13",
													"nodeType": "YulBlock",
													"src": "9804:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9821:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9821:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9832:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9832:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9814:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9814:6:13"
																},
																"nativeSrc": "9814:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9814:21:13"
															},
															"nativeSrc": "9814:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9814:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9855:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9855:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9866:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9866:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9851:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:13"
																		},
																		"nativeSrc": "9851:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9851:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9871:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9871:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9844:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9844:6:13"
																},
																"nativeSrc": "9844:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9844:30:13"
															},
															"nativeSrc": "9844:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9844:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9894:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9894:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9905:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9905:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9890:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9890:3:13"
																		},
																		"nativeSrc": "9890:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9890:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742046756e647320466f72205472616e73666572",
																		"kind": "string",
																		"nativeSrc": "9910:33:13",
																		"nodeType": "YulLiteral",
																		"src": "9910:33:13",
																		"type": "",
																		"value": "Insufficient Funds For Transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9883:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9883:6:13"
																},
																"nativeSrc": "9883:61:13",
																"nodeType": "YulFunctionCall",
																"src": "9883:61:13"
															},
															"nativeSrc": "9883:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "9883:61:13"
														},
														{
															"nativeSrc": "9953:26:13",
															"nodeType": "YulAssignment",
															"src": "9953:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9965:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9965:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9976:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9976:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9961:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:13"
																},
																"nativeSrc": "9961:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9961:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9953:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9953:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_40dd6eb5f0b12779f51dc2c657d95f9d67c485a171864bc8ffae511283136f08__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9630:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9781:9:13",
														"nodeType": "YulTypedName",
														"src": "9781:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9795:4:13",
														"nodeType": "YulTypedName",
														"src": "9795:4:13",
														"type": ""
													}
												],
												"src": "9630:355:13"
											},
											{
												"body": {
													"nativeSrc": "10164:174:13",
													"nodeType": "YulBlock",
													"src": "10164:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10181:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10181:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10192:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10192:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10174:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10174:6:13"
																},
																"nativeSrc": "10174:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10174:21:13"
															},
															"nativeSrc": "10174:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10174:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10215:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10215:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10226:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10226:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10211:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10211:3:13"
																		},
																		"nativeSrc": "10211:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10211:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10231:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10231:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10204:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10204:6:13"
																},
																"nativeSrc": "10204:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10204:30:13"
															},
															"nativeSrc": "10204:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10204:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10254:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10254:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10265:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10265:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10250:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10250:3:13"
																		},
																		"nativeSrc": "10250:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10250:18:13"
																	},
																	{
																		"hexValue": "486f6c64696e6720546f6b656e7320657863656564656421",
																		"kind": "string",
																		"nativeSrc": "10270:26:13",
																		"nodeType": "YulLiteral",
																		"src": "10270:26:13",
																		"type": "",
																		"value": "Holding Tokens exceeded!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10243:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10243:6:13"
																},
																"nativeSrc": "10243:54:13",
																"nodeType": "YulFunctionCall",
																"src": "10243:54:13"
															},
															"nativeSrc": "10243:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "10243:54:13"
														},
														{
															"nativeSrc": "10306:26:13",
															"nodeType": "YulAssignment",
															"src": "10306:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10318:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10318:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10329:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10329:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10314:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10314:3:13"
																},
																"nativeSrc": "10314:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10314:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10306:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10306:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9469c4f2eeb72442418ea3737024403ab7b9756617b6b8ffc7558079b2b5b6ed__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9990:348:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10141:9:13",
														"nodeType": "YulTypedName",
														"src": "10141:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10155:4:13",
														"nodeType": "YulTypedName",
														"src": "10155:4:13",
														"type": ""
													}
												],
												"src": "9990:348:13"
											},
											{
												"body": {
													"nativeSrc": "10392:79:13",
													"nodeType": "YulBlock",
													"src": "10392:79:13",
													"statements": [
														{
															"nativeSrc": "10402:17:13",
															"nodeType": "YulAssignment",
															"src": "10402:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10414:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10414:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10417:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10417:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10410:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10410:3:13"
																},
																"nativeSrc": "10410:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10410:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10402:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10402:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10443:22:13",
																"nodeType": "YulBlock",
																"src": "10443:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10445:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10445:16:13"
																			},
																			"nativeSrc": "10445:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10445:18:13"
																		},
																		"nativeSrc": "10445:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10445:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10434:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10434:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10440:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10440:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10431:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10431:2:13"
																},
																"nativeSrc": "10431:11:13",
																"nodeType": "YulFunctionCall",
																"src": "10431:11:13"
															},
															"nativeSrc": "10428:37:13",
															"nodeType": "YulIf",
															"src": "10428:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "10343:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10374:1:13",
														"nodeType": "YulTypedName",
														"src": "10374:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10377:1:13",
														"nodeType": "YulTypedName",
														"src": "10377:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "10383:4:13",
														"nodeType": "YulTypedName",
														"src": "10383:4:13",
														"type": ""
													}
												],
												"src": "10343:128:13"
											},
											{
												"body": {
													"nativeSrc": "10528:116:13",
													"nodeType": "YulBlock",
													"src": "10528:116:13",
													"statements": [
														{
															"nativeSrc": "10538:20:13",
															"nodeType": "YulAssignment",
															"src": "10538:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10553:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10553:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10556:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10556:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10549:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:13"
																},
																"nativeSrc": "10549:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10549:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10538:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "10538:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10616:22:13",
																"nodeType": "YulBlock",
																"src": "10616:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10618:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10618:16:13"
																			},
																			"nativeSrc": "10618:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10618:18:13"
																		},
																		"nativeSrc": "10618:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10618:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10587:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "10587:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10580:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "10580:6:13"
																				},
																				"nativeSrc": "10580:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10580:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10594:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "10594:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10601:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "10601:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10610:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "10610:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10597:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10597:3:13"
																						},
																						"nativeSrc": "10597:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "10597:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10591:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10591:2:13"
																				},
																				"nativeSrc": "10591:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10591:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10577:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "10577:2:13"
																		},
																		"nativeSrc": "10577:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10577:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10570:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10570:6:13"
																},
																"nativeSrc": "10570:45:13",
																"nodeType": "YulFunctionCall",
																"src": "10570:45:13"
															},
															"nativeSrc": "10567:71:13",
															"nodeType": "YulIf",
															"src": "10567:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10476:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10507:1:13",
														"nodeType": "YulTypedName",
														"src": "10507:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10510:1:13",
														"nodeType": "YulTypedName",
														"src": "10510:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10516:7:13",
														"nodeType": "YulTypedName",
														"src": "10516:7:13",
														"type": ""
													}
												],
												"src": "10476:168:13"
											},
											{
												"body": {
													"nativeSrc": "10695:171:13",
													"nodeType": "YulBlock",
													"src": "10695:171:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10726:111:13",
																"nodeType": "YulBlock",
																"src": "10726:111:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10747:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10747:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10754:3:13",
																							"nodeType": "YulLiteral",
																							"src": "10754:3:13",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10759:10:13",
																							"nodeType": "YulLiteral",
																							"src": "10759:10:13",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10750:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "10750:3:13"
																					},
																					"nativeSrc": "10750:20:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10750:20:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10740:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10740:6:13"
																			},
																			"nativeSrc": "10740:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10740:31:13"
																		},
																		"nativeSrc": "10740:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10740:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10791:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10791:1:13",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10794:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10794:4:13",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10784:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10784:6:13"
																			},
																			"nativeSrc": "10784:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10784:15:13"
																		},
																		"nativeSrc": "10784:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10784:15:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10819:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10819:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10822:4:13",
																					"nodeType": "YulLiteral",
																					"src": "10822:4:13",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10812:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10812:6:13"
																			},
																			"nativeSrc": "10812:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10812:15:13"
																		},
																		"nativeSrc": "10812:15:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10812:15:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10715:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10715:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10708:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10708:6:13"
																},
																"nativeSrc": "10708:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10708:9:13"
															},
															"nativeSrc": "10705:132:13",
															"nodeType": "YulIf",
															"src": "10705:132:13"
														},
														{
															"nativeSrc": "10846:14:13",
															"nodeType": "YulAssignment",
															"src": "10846:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10855:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10855:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10858:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10858:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10851:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10851:3:13"
																},
																"nativeSrc": "10851:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10851:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10846:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "10846:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10649:217:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10680:1:13",
														"nodeType": "YulTypedName",
														"src": "10680:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10683:1:13",
														"nodeType": "YulTypedName",
														"src": "10683:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10689:1:13",
														"nodeType": "YulTypedName",
														"src": "10689:1:13",
														"type": ""
													}
												],
												"src": "10649:217:13"
											},
											{
												"body": {
													"nativeSrc": "11045:176:13",
													"nodeType": "YulBlock",
													"src": "11045:176:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11062:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11062:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11073:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11055:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11055:6:13"
																},
																"nativeSrc": "11055:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11055:21:13"
															},
															"nativeSrc": "11055:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11055:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11096:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11096:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11107:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11107:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11092:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11092:3:13"
																		},
																		"nativeSrc": "11092:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11092:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11112:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11112:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11085:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:13"
																},
																"nativeSrc": "11085:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11085:30:13"
															},
															"nativeSrc": "11085:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11085:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11146:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:13"
																		},
																		"nativeSrc": "11131:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:18:13"
																	},
																	{
																		"hexValue": "4163636f756e742073686f756c646e2774206265207a65726f2e",
																		"kind": "string",
																		"nativeSrc": "11151:28:13",
																		"nodeType": "YulLiteral",
																		"src": "11151:28:13",
																		"type": "",
																		"value": "Account shouldn't be zero."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11124:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11124:6:13"
																},
																"nativeSrc": "11124:56:13",
																"nodeType": "YulFunctionCall",
																"src": "11124:56:13"
															},
															"nativeSrc": "11124:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "11124:56:13"
														},
														{
															"nativeSrc": "11189:26:13",
															"nodeType": "YulAssignment",
															"src": "11189:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11201:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11201:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11212:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11212:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11197:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11197:3:13"
																},
																"nativeSrc": "11197:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11197:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11189:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11189:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10871:350:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11022:9:13",
														"nodeType": "YulTypedName",
														"src": "11022:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11036:4:13",
														"nodeType": "YulTypedName",
														"src": "11036:4:13",
														"type": ""
													}
												],
												"src": "10871:350:13"
											},
											{
												"body": {
													"nativeSrc": "11400:180:13",
													"nodeType": "YulBlock",
													"src": "11400:180:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11417:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11417:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11428:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11428:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11410:6:13"
																},
																"nativeSrc": "11410:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11410:21:13"
															},
															"nativeSrc": "11410:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11410:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11451:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11451:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11462:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11462:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11447:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11447:3:13"
																		},
																		"nativeSrc": "11447:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11447:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11467:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11467:2:13",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11440:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11440:6:13"
																},
																"nativeSrc": "11440:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11440:30:13"
															},
															"nativeSrc": "11440:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11440:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11490:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11490:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11501:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11501:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11486:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11486:3:13"
																		},
																		"nativeSrc": "11486:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11486:18:13"
																	},
																	{
																		"hexValue": "4b656570557020726571756972656d656e74206973206e6f74206d657421",
																		"kind": "string",
																		"nativeSrc": "11506:32:13",
																		"nodeType": "YulLiteral",
																		"src": "11506:32:13",
																		"type": "",
																		"value": "KeepUp requirement is not met!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11479:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11479:6:13"
																},
																"nativeSrc": "11479:60:13",
																"nodeType": "YulFunctionCall",
																"src": "11479:60:13"
															},
															"nativeSrc": "11479:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "11479:60:13"
														},
														{
															"nativeSrc": "11548:26:13",
															"nodeType": "YulAssignment",
															"src": "11548:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11560:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11560:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11571:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11571:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11556:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11556:3:13"
																},
																"nativeSrc": "11556:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11556:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11548:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11548:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3ce739ae4632163ea42e3bb420e91992e17c2c2db110c5ea16c1c9817736f6f3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11226:354:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11377:9:13",
														"nodeType": "YulTypedName",
														"src": "11377:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11391:4:13",
														"nodeType": "YulTypedName",
														"src": "11391:4:13",
														"type": ""
													}
												],
												"src": "11226:354:13"
											},
											{
												"body": {
													"nativeSrc": "11759:252:13",
													"nodeType": "YulBlock",
													"src": "11759:252:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11776:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11776:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11787:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11787:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11769:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11769:6:13"
																},
																"nativeSrc": "11769:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11769:21:13"
															},
															"nativeSrc": "11769:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11769:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11810:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11810:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11821:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11821:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11806:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11806:3:13"
																		},
																		"nativeSrc": "11806:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11806:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11826:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11826:2:13",
																		"type": "",
																		"value": "62"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11799:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:13"
																},
																"nativeSrc": "11799:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11799:30:13"
															},
															"nativeSrc": "11799:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11799:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11849:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11849:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11860:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11860:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11845:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11845:3:13"
																		},
																		"nativeSrc": "11845:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11845:18:13"
																	},
																	{
																		"hexValue": "74537570706c79206d7573742062652067726561746572207468616e206f7220",
																		"kind": "string",
																		"nativeSrc": "11865:34:13",
																		"nodeType": "YulLiteral",
																		"src": "11865:34:13",
																		"type": "",
																		"value": "tSupply must be greater than or "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11838:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11838:6:13"
																},
																"nativeSrc": "11838:62:13",
																"nodeType": "YulFunctionCall",
																"src": "11838:62:13"
															},
															"nativeSrc": "11838:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "11838:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11920:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11920:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11931:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11931:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11916:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11916:3:13"
																		},
																		"nativeSrc": "11916:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11916:18:13"
																	},
																	{
																		"hexValue": "657175616c20746f206578636c7564654465626173696e67537570706c79",
																		"kind": "string",
																		"nativeSrc": "11936:32:13",
																		"nodeType": "YulLiteral",
																		"src": "11936:32:13",
																		"type": "",
																		"value": "equal to excludeDebasingSupply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11909:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11909:6:13"
																},
																"nativeSrc": "11909:60:13",
																"nodeType": "YulFunctionCall",
																"src": "11909:60:13"
															},
															"nativeSrc": "11909:60:13",
															"nodeType": "YulExpressionStatement",
															"src": "11909:60:13"
														},
														{
															"nativeSrc": "11978:27:13",
															"nodeType": "YulAssignment",
															"src": "11978:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11990:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11990:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12001:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12001:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11986:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11986:3:13"
																},
																"nativeSrc": "11986:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11986:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11978:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11978:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ac071be263243feaeb93aefe4b90e1c3125d8814c0c6023f6884f9c607bb4f38__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11585:426:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11736:9:13",
														"nodeType": "YulTypedName",
														"src": "11736:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11750:4:13",
														"nodeType": "YulTypedName",
														"src": "11750:4:13",
														"type": ""
													}
												],
												"src": "11585:426:13"
											},
											{
												"body": {
													"nativeSrc": "12190:181:13",
													"nodeType": "YulBlock",
													"src": "12190:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12207:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12207:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12218:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12218:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12200:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12200:6:13"
																},
																"nativeSrc": "12200:21:13",
																"nodeType": "YulFunctionCall",
																"src": "12200:21:13"
															},
															"nativeSrc": "12200:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "12200:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12241:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12241:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12252:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12252:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12237:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12237:3:13"
																		},
																		"nativeSrc": "12237:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12237:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12257:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12257:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12230:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12230:6:13"
																},
																"nativeSrc": "12230:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12230:30:13"
															},
															"nativeSrc": "12230:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "12230:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12280:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12280:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12291:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12291:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12276:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:13"
																		},
																		"nativeSrc": "12276:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12276:18:13"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "12296:33:13",
																		"nodeType": "YulLiteral",
																		"src": "12296:33:13",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12269:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12269:6:13"
																},
																"nativeSrc": "12269:61:13",
																"nodeType": "YulFunctionCall",
																"src": "12269:61:13"
															},
															"nativeSrc": "12269:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "12269:61:13"
														},
														{
															"nativeSrc": "12339:26:13",
															"nodeType": "YulAssignment",
															"src": "12339:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12351:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12351:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12362:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12362:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12347:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12347:3:13"
																},
																"nativeSrc": "12347:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12347:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12339:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12339:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12016:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12167:9:13",
														"nodeType": "YulTypedName",
														"src": "12167:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12181:4:13",
														"nodeType": "YulTypedName",
														"src": "12181:4:13",
														"type": ""
													}
												],
												"src": "12016:355:13"
											},
											{
												"body": {
													"nativeSrc": "12550:223:13",
													"nodeType": "YulBlock",
													"src": "12550:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12567:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12567:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12578:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12578:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12560:6:13"
																},
																"nativeSrc": "12560:21:13",
																"nodeType": "YulFunctionCall",
																"src": "12560:21:13"
															},
															"nativeSrc": "12560:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "12560:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12601:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12601:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12612:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12612:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12597:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12597:3:13"
																		},
																		"nativeSrc": "12597:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12597:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12617:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12590:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12590:6:13"
																},
																"nativeSrc": "12590:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12590:30:13"
															},
															"nativeSrc": "12590:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "12590:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12640:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12640:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12651:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12651:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12636:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12636:3:13"
																		},
																		"nativeSrc": "12636:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12636:18:13"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "12656:34:13",
																		"nodeType": "YulLiteral",
																		"src": "12656:34:13",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12629:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12629:6:13"
																},
																"nativeSrc": "12629:62:13",
																"nodeType": "YulFunctionCall",
																"src": "12629:62:13"
															},
															"nativeSrc": "12629:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "12629:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12711:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12722:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12722:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12707:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12707:3:13"
																		},
																		"nativeSrc": "12707:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12707:18:13"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "12727:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12727:3:13",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12700:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12700:6:13"
																},
																"nativeSrc": "12700:31:13",
																"nodeType": "YulFunctionCall",
																"src": "12700:31:13"
															},
															"nativeSrc": "12700:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "12700:31:13"
														},
														{
															"nativeSrc": "12740:27:13",
															"nodeType": "YulAssignment",
															"src": "12740:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12752:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12752:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12763:3:13",
																		"nodeType": "YulLiteral",
																		"src": "12763:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12748:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12748:3:13"
																},
																"nativeSrc": "12748:19:13",
																"nodeType": "YulFunctionCall",
																"src": "12748:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12740:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12740:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12376:397:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12527:9:13",
														"nodeType": "YulTypedName",
														"src": "12527:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12541:4:13",
														"nodeType": "YulTypedName",
														"src": "12541:4:13",
														"type": ""
													}
												],
												"src": "12376:397:13"
											},
											{
												"body": {
													"nativeSrc": "12952:179:13",
													"nodeType": "YulBlock",
													"src": "12952:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12969:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12969:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12980:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12980:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12962:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12962:6:13"
																},
																"nativeSrc": "12962:21:13",
																"nodeType": "YulFunctionCall",
																"src": "12962:21:13"
															},
															"nativeSrc": "12962:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "12962:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13014:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13014:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12999:3:13"
																		},
																		"nativeSrc": "12999:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12999:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13019:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13019:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12992:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12992:6:13"
																},
																"nativeSrc": "12992:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12992:30:13"
															},
															"nativeSrc": "12992:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "12992:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13042:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13042:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13053:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13053:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13038:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13038:3:13"
																		},
																		"nativeSrc": "13038:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13038:18:13"
																	},
																	{
																		"hexValue": "496e76616c696420616464726573733a207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "13058:31:13",
																		"nodeType": "YulLiteral",
																		"src": "13058:31:13",
																		"type": "",
																		"value": "Invalid address: zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13031:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13031:6:13"
																},
																"nativeSrc": "13031:59:13",
																"nodeType": "YulFunctionCall",
																"src": "13031:59:13"
															},
															"nativeSrc": "13031:59:13",
															"nodeType": "YulExpressionStatement",
															"src": "13031:59:13"
														},
														{
															"nativeSrc": "13099:26:13",
															"nodeType": "YulAssignment",
															"src": "13099:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13111:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13111:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13122:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13122:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13107:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13107:3:13"
																},
																"nativeSrc": "13107:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13107:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13099:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13099:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_42c77607df448acdb8bc855d46684130f36187daf74deeded3f768350fe35353__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12778:353:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12929:9:13",
														"nodeType": "YulTypedName",
														"src": "12929:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12943:4:13",
														"nodeType": "YulTypedName",
														"src": "12943:4:13",
														"type": ""
													}
												],
												"src": "12778:353:13"
											},
											{
												"body": {
													"nativeSrc": "13327:14:13",
													"nodeType": "YulBlock",
													"src": "13327:14:13",
													"statements": [
														{
															"nativeSrc": "13329:10:13",
															"nodeType": "YulAssignment",
															"src": "13329:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "13336:3:13",
																"nodeType": "YulIdentifier",
																"src": "13336:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13329:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13329:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13136:205:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13311:3:13",
														"nodeType": "YulTypedName",
														"src": "13311:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13319:3:13",
														"nodeType": "YulTypedName",
														"src": "13319:3:13",
														"type": ""
													}
												],
												"src": "13136:205:13"
											},
											{
												"body": {
													"nativeSrc": "13520:165:13",
													"nodeType": "YulBlock",
													"src": "13520:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13537:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13537:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13548:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13548:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13530:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13530:6:13"
																},
																"nativeSrc": "13530:21:13",
																"nodeType": "YulFunctionCall",
																"src": "13530:21:13"
															},
															"nativeSrc": "13530:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "13530:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13571:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13571:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13582:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13582:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13567:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13567:3:13"
																		},
																		"nativeSrc": "13567:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13567:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13587:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13587:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13560:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13560:6:13"
																},
																"nativeSrc": "13560:30:13",
																"nodeType": "YulFunctionCall",
																"src": "13560:30:13"
															},
															"nativeSrc": "13560:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "13560:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13610:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13610:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13621:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13621:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13606:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13606:3:13"
																		},
																		"nativeSrc": "13606:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13606:18:13"
																	},
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"kind": "string",
																		"nativeSrc": "13626:17:13",
																		"nodeType": "YulLiteral",
																		"src": "13626:17:13",
																		"type": "",
																		"value": "Transfer Failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13599:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13599:6:13"
																},
																"nativeSrc": "13599:45:13",
																"nodeType": "YulFunctionCall",
																"src": "13599:45:13"
															},
															"nativeSrc": "13599:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "13599:45:13"
														},
														{
															"nativeSrc": "13653:26:13",
															"nodeType": "YulAssignment",
															"src": "13653:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13665:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13665:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13676:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13676:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13661:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13661:3:13"
																},
																"nativeSrc": "13661:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13661:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13653:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13653:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13346:339:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13497:9:13",
														"nodeType": "YulTypedName",
														"src": "13497:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13511:4:13",
														"nodeType": "YulTypedName",
														"src": "13511:4:13",
														"type": ""
													}
												],
												"src": "13346:339:13"
											},
											{
												"body": {
													"nativeSrc": "13722:95:13",
													"nodeType": "YulBlock",
													"src": "13722:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13739:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13739:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13746:3:13",
																				"nodeType": "YulLiteral",
																				"src": "13746:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13751:10:13",
																				"nodeType": "YulLiteral",
																				"src": "13751:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "13742:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13742:3:13"
																		},
																		"nativeSrc": "13742:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13742:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13732:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13732:6:13"
																},
																"nativeSrc": "13732:31:13",
																"nodeType": "YulFunctionCall",
																"src": "13732:31:13"
															},
															"nativeSrc": "13732:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "13732:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13779:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13779:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13782:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13782:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13772:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13772:6:13"
																},
																"nativeSrc": "13772:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13772:15:13"
															},
															"nativeSrc": "13772:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13772:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13803:1:13",
																		"nodeType": "YulLiteral",
																		"src": "13803:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13806:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13806:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13796:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13796:6:13"
																},
																"nativeSrc": "13796:15:13",
																"nodeType": "YulFunctionCall",
																"src": "13796:15:13"
															},
															"nativeSrc": "13796:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "13796:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "13690:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "13690:127:13"
											},
											{
												"body": {
													"nativeSrc": "13996:236:13",
													"nodeType": "YulBlock",
													"src": "13996:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14013:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14013:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14024:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14024:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14006:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14006:6:13"
																},
																"nativeSrc": "14006:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14006:21:13"
															},
															"nativeSrc": "14006:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14006:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14047:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14047:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14058:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14058:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14043:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14043:3:13"
																		},
																		"nativeSrc": "14043:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14043:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14063:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14063:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14036:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14036:6:13"
																},
																"nativeSrc": "14036:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14036:30:13"
															},
															"nativeSrc": "14036:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14036:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14086:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14086:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14097:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14097:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14082:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14082:3:13"
																		},
																		"nativeSrc": "14082:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14082:18:13"
																	},
																	{
																		"hexValue": "54726561737572792077616c6c65742063616e6e6f7420626520696e636c7564",
																		"kind": "string",
																		"nativeSrc": "14102:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14102:34:13",
																		"type": "",
																		"value": "Treasury wallet cannot be includ"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14075:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14075:6:13"
																},
																"nativeSrc": "14075:62:13",
																"nodeType": "YulFunctionCall",
																"src": "14075:62:13"
															},
															"nativeSrc": "14075:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "14075:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14157:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14157:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14168:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14168:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14153:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14153:3:13"
																		},
																		"nativeSrc": "14153:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:18:13"
																	},
																	{
																		"hexValue": "656420696e206465626173696e67",
																		"kind": "string",
																		"nativeSrc": "14173:16:13",
																		"nodeType": "YulLiteral",
																		"src": "14173:16:13",
																		"type": "",
																		"value": "ed in debasing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14146:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14146:6:13"
																},
																"nativeSrc": "14146:44:13",
																"nodeType": "YulFunctionCall",
																"src": "14146:44:13"
															},
															"nativeSrc": "14146:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "14146:44:13"
														},
														{
															"nativeSrc": "14199:27:13",
															"nodeType": "YulAssignment",
															"src": "14199:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14211:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14211:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14222:3:13",
																		"nodeType": "YulLiteral",
																		"src": "14222:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14207:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14207:3:13"
																},
																"nativeSrc": "14207:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14207:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14199:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14199:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84d5812972af2c1adbf06f4834fb56a990c910224226d45960e515dd2c80b59c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13822:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13973:9:13",
														"nodeType": "YulTypedName",
														"src": "13973:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13987:4:13",
														"nodeType": "YulTypedName",
														"src": "13987:4:13",
														"type": ""
													}
												],
												"src": "13822:410:13"
											},
											{
												"body": {
													"nativeSrc": "14411:177:13",
													"nodeType": "YulBlock",
													"src": "14411:177:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14428:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14428:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14439:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14439:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14421:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14421:6:13"
																},
																"nativeSrc": "14421:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14421:21:13"
															},
															"nativeSrc": "14421:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14421:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14462:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14462:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14473:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14473:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14458:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14458:3:13"
																		},
																		"nativeSrc": "14458:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14458:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14478:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14478:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14451:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14451:6:13"
																},
																"nativeSrc": "14451:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14451:30:13"
															},
															"nativeSrc": "14451:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14451:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14501:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14501:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14512:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14512:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14497:3:13"
																		},
																		"nativeSrc": "14497:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14497:18:13"
																	},
																	{
																		"hexValue": "4f70657261746f722073686f756c646e2774206265207a65726f2e",
																		"kind": "string",
																		"nativeSrc": "14517:29:13",
																		"nodeType": "YulLiteral",
																		"src": "14517:29:13",
																		"type": "",
																		"value": "Operator shouldn't be zero."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14490:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14490:6:13"
																},
																"nativeSrc": "14490:57:13",
																"nodeType": "YulFunctionCall",
																"src": "14490:57:13"
															},
															"nativeSrc": "14490:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "14490:57:13"
														},
														{
															"nativeSrc": "14556:26:13",
															"nodeType": "YulAssignment",
															"src": "14556:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14568:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14568:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14579:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14579:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14564:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14564:3:13"
																},
																"nativeSrc": "14564:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14564:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14556:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14556:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dcc620396316e80fe3313fdb45381a1c672b33070adfcdfe129154cbb0d20bec__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14237:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14388:9:13",
														"nodeType": "YulTypedName",
														"src": "14388:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14402:4:13",
														"nodeType": "YulTypedName",
														"src": "14402:4:13",
														"type": ""
													}
												],
												"src": "14237:351:13"
											},
											{
												"body": {
													"nativeSrc": "14767:224:13",
													"nodeType": "YulBlock",
													"src": "14767:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14784:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14784:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14795:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14795:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14777:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14777:6:13"
																},
																"nativeSrc": "14777:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14777:21:13"
															},
															"nativeSrc": "14777:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14777:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14818:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14818:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14829:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14829:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14814:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14814:3:13"
																		},
																		"nativeSrc": "14814:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14814:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14834:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14834:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14807:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14807:6:13"
																},
																"nativeSrc": "14807:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14807:30:13"
															},
															"nativeSrc": "14807:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14807:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14857:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14857:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14868:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14868:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14853:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14853:3:13"
																		},
																		"nativeSrc": "14853:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14853:18:13"
																	},
																	{
																		"hexValue": "4c5020506f6f6c20616464726573732073686f756c646e2774206265207a6572",
																		"kind": "string",
																		"nativeSrc": "14873:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14873:34:13",
																		"type": "",
																		"value": "LP Pool address shouldn't be zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14846:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14846:6:13"
																},
																"nativeSrc": "14846:62:13",
																"nodeType": "YulFunctionCall",
																"src": "14846:62:13"
															},
															"nativeSrc": "14846:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "14846:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14928:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14928:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14939:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14939:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14924:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14924:3:13"
																		},
																		"nativeSrc": "14924:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14924:18:13"
																	},
																	{
																		"hexValue": "6f21",
																		"kind": "string",
																		"nativeSrc": "14944:4:13",
																		"nodeType": "YulLiteral",
																		"src": "14944:4:13",
																		"type": "",
																		"value": "o!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14917:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14917:6:13"
																},
																"nativeSrc": "14917:32:13",
																"nodeType": "YulFunctionCall",
																"src": "14917:32:13"
															},
															"nativeSrc": "14917:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "14917:32:13"
														},
														{
															"nativeSrc": "14958:27:13",
															"nodeType": "YulAssignment",
															"src": "14958:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14970:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14970:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14981:3:13",
																		"nodeType": "YulLiteral",
																		"src": "14981:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14966:3:13"
																},
																"nativeSrc": "14966:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14966:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14958:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14958:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_80610bfd926591e04d7c9e978c0e76c69e04dd673eb3efbbe1432feff9b4b7b7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14593:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14744:9:13",
														"nodeType": "YulTypedName",
														"src": "14744:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14758:4:13",
														"nodeType": "YulTypedName",
														"src": "14758:4:13",
														"type": ""
													}
												],
												"src": "14593:398:13"
											},
											{
												"body": {
													"nativeSrc": "15170:237:13",
													"nodeType": "YulBlock",
													"src": "15170:237:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15187:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15187:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15198:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15198:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15180:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15180:6:13"
																},
																"nativeSrc": "15180:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15180:21:13"
															},
															"nativeSrc": "15180:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15180:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15221:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15221:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15232:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15232:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15217:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15217:3:13"
																		},
																		"nativeSrc": "15217:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15217:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15237:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15237:2:13",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15210:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15210:6:13"
																},
																"nativeSrc": "15210:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15210:30:13"
															},
															"nativeSrc": "15210:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15210:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15260:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15260:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15271:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15271:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15256:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15256:3:13"
																		},
																		"nativeSrc": "15256:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15256:18:13"
																	},
																	{
																		"hexValue": "526174652073686f756c64206265206c657373207468616e2050455243454e54",
																		"kind": "string",
																		"nativeSrc": "15276:34:13",
																		"nodeType": "YulLiteral",
																		"src": "15276:34:13",
																		"type": "",
																		"value": "Rate should be less than PERCENT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15249:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15249:6:13"
																},
																"nativeSrc": "15249:62:13",
																"nodeType": "YulFunctionCall",
																"src": "15249:62:13"
															},
															"nativeSrc": "15249:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "15249:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15331:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15331:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15342:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15342:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15327:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15327:3:13"
																		},
																		"nativeSrc": "15327:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15327:18:13"
																	},
																	{
																		"hexValue": "4147455f44454e4f4d494e41544f52",
																		"kind": "string",
																		"nativeSrc": "15347:17:13",
																		"nodeType": "YulLiteral",
																		"src": "15347:17:13",
																		"type": "",
																		"value": "AGE_DENOMINATOR"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15320:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15320:6:13"
																},
																"nativeSrc": "15320:45:13",
																"nodeType": "YulFunctionCall",
																"src": "15320:45:13"
															},
															"nativeSrc": "15320:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "15320:45:13"
														},
														{
															"nativeSrc": "15374:27:13",
															"nodeType": "YulAssignment",
															"src": "15374:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15386:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15386:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15397:3:13",
																		"nodeType": "YulLiteral",
																		"src": "15397:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15382:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15382:3:13"
																},
																"nativeSrc": "15382:19:13",
																"nodeType": "YulFunctionCall",
																"src": "15382:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15374:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15374:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14996:411:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15147:9:13",
														"nodeType": "YulTypedName",
														"src": "15147:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15161:4:13",
														"nodeType": "YulTypedName",
														"src": "15161:4:13",
														"type": ""
													}
												],
												"src": "14996:411:13"
											},
											{
												"body": {
													"nativeSrc": "15586:179:13",
													"nodeType": "YulBlock",
													"src": "15586:179:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15603:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15603:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15614:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15614:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15596:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15596:6:13"
																},
																"nativeSrc": "15596:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15596:21:13"
															},
															"nativeSrc": "15596:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15596:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15637:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15637:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15648:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15648:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15633:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15633:3:13"
																		},
																		"nativeSrc": "15633:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15633:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15653:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15653:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15626:6:13"
																},
																"nativeSrc": "15626:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15626:30:13"
															},
															"nativeSrc": "15626:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15626:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15676:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15676:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15687:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15687:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15672:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15672:3:13"
																		},
																		"nativeSrc": "15672:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15672:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742042616c616e636520746f20636c61696d",
																		"kind": "string",
																		"nativeSrc": "15692:31:13",
																		"nodeType": "YulLiteral",
																		"src": "15692:31:13",
																		"type": "",
																		"value": "Insufficient Balance to claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15665:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15665:6:13"
																},
																"nativeSrc": "15665:59:13",
																"nodeType": "YulFunctionCall",
																"src": "15665:59:13"
															},
															"nativeSrc": "15665:59:13",
															"nodeType": "YulExpressionStatement",
															"src": "15665:59:13"
														},
														{
															"nativeSrc": "15733:26:13",
															"nodeType": "YulAssignment",
															"src": "15733:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15745:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15745:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15756:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15756:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15741:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15741:3:13"
																},
																"nativeSrc": "15741:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15741:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15733:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15733:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_178af170496040e43e5fed3c2211f45b441ebd3eec2edb3c0d04ec63679aa9d9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15412:353:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15563:9:13",
														"nodeType": "YulTypedName",
														"src": "15563:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15577:4:13",
														"nodeType": "YulTypedName",
														"src": "15577:4:13",
														"type": ""
													}
												],
												"src": "15412:353:13"
											},
											{
												"body": {
													"nativeSrc": "15944:172:13",
													"nodeType": "YulBlock",
													"src": "15944:172:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15961:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15961:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15972:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15972:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15954:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15954:6:13"
																},
																"nativeSrc": "15954:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15954:21:13"
															},
															"nativeSrc": "15954:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15954:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15995:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15995:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16006:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16006:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15991:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15991:3:13"
																		},
																		"nativeSrc": "15991:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15991:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16011:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16011:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15984:6:13"
																},
																"nativeSrc": "15984:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15984:30:13"
															},
															"nativeSrc": "15984:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15984:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16034:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16034:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16045:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16045:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16030:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16030:3:13"
																		},
																		"nativeSrc": "16030:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16030:18:13"
																	},
																	{
																		"hexValue": "417272617973206c656e677468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "16050:24:13",
																		"nodeType": "YulLiteral",
																		"src": "16050:24:13",
																		"type": "",
																		"value": "Arrays length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16023:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16023:6:13"
																},
																"nativeSrc": "16023:52:13",
																"nodeType": "YulFunctionCall",
																"src": "16023:52:13"
															},
															"nativeSrc": "16023:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "16023:52:13"
														},
														{
															"nativeSrc": "16084:26:13",
															"nodeType": "YulAssignment",
															"src": "16084:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16096:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16096:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16107:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16107:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16092:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16092:3:13"
																},
																"nativeSrc": "16092:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16092:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16084:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16084:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15770:346:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15921:9:13",
														"nodeType": "YulTypedName",
														"src": "15921:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15935:4:13",
														"nodeType": "YulTypedName",
														"src": "15935:4:13",
														"type": ""
													}
												],
												"src": "15770:346:13"
											},
											{
												"body": {
													"nativeSrc": "16295:170:13",
													"nodeType": "YulBlock",
													"src": "16295:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16312:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16312:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16323:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16323:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16305:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16305:6:13"
																},
																"nativeSrc": "16305:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16305:21:13"
															},
															"nativeSrc": "16305:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16305:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16346:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16346:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16357:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16357:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16342:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16342:3:13"
																		},
																		"nativeSrc": "16342:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16342:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16362:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16362:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16335:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16335:6:13"
																},
																"nativeSrc": "16335:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16335:30:13"
															},
															"nativeSrc": "16335:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "16335:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16385:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16385:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16396:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16396:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16381:3:13"
																		},
																		"nativeSrc": "16381:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16381:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "16401:22:13",
																		"nodeType": "YulLiteral",
																		"src": "16401:22:13",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16374:6:13"
																},
																"nativeSrc": "16374:50:13",
																"nodeType": "YulFunctionCall",
																"src": "16374:50:13"
															},
															"nativeSrc": "16374:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "16374:50:13"
														},
														{
															"nativeSrc": "16433:26:13",
															"nodeType": "YulAssignment",
															"src": "16433:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16445:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16445:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16456:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16456:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16441:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16441:3:13"
																},
																"nativeSrc": "16441:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16441:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16433:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16433:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16121:344:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16272:9:13",
														"nodeType": "YulTypedName",
														"src": "16272:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16286:4:13",
														"nodeType": "YulTypedName",
														"src": "16286:4:13",
														"type": ""
													}
												],
												"src": "16121:344:13"
											},
											{
												"body": {
													"nativeSrc": "16644:166:13",
													"nodeType": "YulBlock",
													"src": "16644:166:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16661:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16661:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16672:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16672:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16654:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16654:6:13"
																},
																"nativeSrc": "16654:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16654:21:13"
															},
															"nativeSrc": "16654:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16654:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16695:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16695:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16706:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16706:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16691:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16691:3:13"
																		},
																		"nativeSrc": "16691:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16691:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16711:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16711:2:13",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16684:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16684:6:13"
																},
																"nativeSrc": "16684:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16684:30:13"
															},
															"nativeSrc": "16684:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "16684:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16734:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16734:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16745:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16745:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16730:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16730:3:13"
																		},
																		"nativeSrc": "16730:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16730:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "16750:18:13",
																		"nodeType": "YulLiteral",
																		"src": "16750:18:13",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16723:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16723:6:13"
																},
																"nativeSrc": "16723:46:13",
																"nodeType": "YulFunctionCall",
																"src": "16723:46:13"
															},
															"nativeSrc": "16723:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "16723:46:13"
														},
														{
															"nativeSrc": "16778:26:13",
															"nodeType": "YulAssignment",
															"src": "16778:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16790:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16790:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16801:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16801:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16786:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16786:3:13"
																},
																"nativeSrc": "16786:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16786:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16778:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "16778:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16470:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16621:9:13",
														"nodeType": "YulTypedName",
														"src": "16621:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16635:4:13",
														"nodeType": "YulTypedName",
														"src": "16635:4:13",
														"type": ""
													}
												],
												"src": "16470:340:13"
											},
											{
												"body": {
													"nativeSrc": "16989:181:13",
													"nodeType": "YulBlock",
													"src": "16989:181:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17006:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17006:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17017:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17017:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16999:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16999:6:13"
																},
																"nativeSrc": "16999:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16999:21:13"
															},
															"nativeSrc": "16999:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16999:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17040:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17040:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17051:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17051:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17036:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17036:3:13"
																		},
																		"nativeSrc": "17036:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17036:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17056:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17056:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17029:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17029:6:13"
																},
																"nativeSrc": "17029:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17029:30:13"
															},
															"nativeSrc": "17029:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "17029:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17079:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17079:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17090:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17090:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17075:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17075:3:13"
																		},
																		"nativeSrc": "17075:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17075:18:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "17095:33:13",
																		"nodeType": "YulLiteral",
																		"src": "17095:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17068:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17068:6:13"
																},
																"nativeSrc": "17068:61:13",
																"nodeType": "YulFunctionCall",
																"src": "17068:61:13"
															},
															"nativeSrc": "17068:61:13",
															"nodeType": "YulExpressionStatement",
															"src": "17068:61:13"
														},
														{
															"nativeSrc": "17138:26:13",
															"nodeType": "YulAssignment",
															"src": "17138:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17150:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17150:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17161:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17161:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17146:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17146:3:13"
																},
																"nativeSrc": "17146:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17146:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17138:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17138:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16815:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16966:9:13",
														"nodeType": "YulTypedName",
														"src": "16966:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16980:4:13",
														"nodeType": "YulTypedName",
														"src": "16980:4:13",
														"type": ""
													}
												],
												"src": "16815:355:13"
											},
											{
												"body": {
													"nativeSrc": "17349:170:13",
													"nodeType": "YulBlock",
													"src": "17349:170:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17366:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17366:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17377:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17377:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17359:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17359:6:13"
																},
																"nativeSrc": "17359:21:13",
																"nodeType": "YulFunctionCall",
																"src": "17359:21:13"
															},
															"nativeSrc": "17359:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "17359:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17400:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17400:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17411:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17411:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17396:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17396:3:13"
																		},
																		"nativeSrc": "17396:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17396:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17416:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17416:2:13",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17389:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17389:6:13"
																},
																"nativeSrc": "17389:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17389:30:13"
															},
															"nativeSrc": "17389:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "17389:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17439:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17439:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17450:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17450:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17435:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17435:3:13"
																		},
																		"nativeSrc": "17435:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17435:18:13"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "17455:22:13",
																		"nodeType": "YulLiteral",
																		"src": "17455:22:13",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17428:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17428:6:13"
																},
																"nativeSrc": "17428:50:13",
																"nodeType": "YulFunctionCall",
																"src": "17428:50:13"
															},
															"nativeSrc": "17428:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "17428:50:13"
														},
														{
															"nativeSrc": "17487:26:13",
															"nodeType": "YulAssignment",
															"src": "17487:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17499:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17499:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17510:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17510:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17495:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17495:3:13"
																},
																"nativeSrc": "17495:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17495:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17487:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17487:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17175:344:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17326:9:13",
														"nodeType": "YulTypedName",
														"src": "17326:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17340:4:13",
														"nodeType": "YulTypedName",
														"src": "17340:4:13",
														"type": ""
													}
												],
												"src": "17175:344:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset_1)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 32)\n        let srcEnd := add(add(_1, shl(5, length)), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 32)\n        }\n        value1 := array\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_40dd6eb5f0b12779f51dc2c657d95f9d67c485a171864bc8ffae511283136f08__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Insufficient Funds For Transfer\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9469c4f2eeb72442418ea3737024403ab7b9756617b6b8ffc7558079b2b5b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Holding Tokens exceeded!\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Account shouldn't be zero.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3ce739ae4632163ea42e3bb420e91992e17c2c2db110c5ea16c1c9817736f6f3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"KeepUp requirement is not met!\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ac071be263243feaeb93aefe4b90e1c3125d8814c0c6023f6884f9c607bb4f38__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 62)\n        mstore(add(headStart, 64), \"tSupply must be greater than or \")\n        mstore(add(headStart, 96), \"equal to excludeDebasingSupply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_42c77607df448acdb8bc855d46684130f36187daf74deeded3f768350fe35353__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Invalid address: zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer Failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_84d5812972af2c1adbf06f4834fb56a990c910224226d45960e515dd2c80b59c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Treasury wallet cannot be includ\")\n        mstore(add(headStart, 96), \"ed in debasing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dcc620396316e80fe3313fdb45381a1c672b33070adfcdfe129154cbb0d20bec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Operator shouldn't be zero.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_80610bfd926591e04d7c9e978c0e76c69e04dd673eb3efbbe1432feff9b4b7b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"LP Pool address shouldn't be zer\")\n        mstore(add(headStart, 96), \"o!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"Rate should be less than PERCENT\")\n        mstore(add(headStart, 96), \"AGE_DENOMINATOR\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_178af170496040e43e5fed3c2211f45b441ebd3eec2edb3c0d04ec63679aa9d9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Insufficient Balance to claim\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Arrays length mismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610374575f3560e01c8063702115dd116101c85780639220d3ed116100fd578063b3cd42541161009d578063df0ab3081161006d578063df0ab30814610a24578063e2ff244014610a43578063e5a5e31814610a57578063f2fde38b14610a76575f80fd5b8063b3cd425414610997578063b4dade59146109ac578063dc90b442146109cb578063dd62ed3e146109e0575f80fd5b80639cc2921c116100d85780639cc2921c1461091d578063a457c2d71461093c578063a6d1b8911461095b578063a9059cbb14610978575f80fd5b80639220d3ed146108ad578063924c2ead146108db57806395d89b4114610909575f80fd5b80638456cb591161016857806389eec0f11161014357806389eec0f11461082e5780638cf66b161461084d5780638da5cb5b1461087b5780638f372fa314610898575f80fd5b80638456cb59146107f1578063874a6ae714610805578063893d20e81461081a575f80fd5b806375c2b13f116101a357806375c2b13f146107755780637819f36f1461079457806379825ede146107b357806381cea332146107d2575f80fd5b8063702115dd1461072357806370a0823114610742578063715018a614610761575f80fd5b80633f3b3b27116102a95780635d70dde611610249578063690d832011610219578063690d8320146106995780636aa3773f146106b85780636c5ed03e146106d75780636e04ff0d146106f6575f80fd5b80635d70dde6146106325780636161eb1814610646578063639f3cc714610665578063685f59de14610684575f80fd5b80634626402b116102845780634626402b146105ab5780634e6ec247146105e25780635b7f415c146106015780635c975abb1461061c575f80fd5b80633f3b3b27146105635780633f4ba83a146105785780634585e33b1461058c575f80fd5b80632ce8bd561161031457806335c85a34116102ef57806335c85a34146104d257806339509351146104f15780633af9e669146105105780633cde0c0f14610544575f80fd5b80632ce8bd561461047d57806330e0789e14610492578063313ce567146104b1575f80fd5b80631658a7001161034f5780631658a700146103f957806318160ddd1461042757806323b872dd1461044957806324024efd14610468575f80fd5b806306fdde031461037f578063095ea7b3146103a9578063104e81ff146103d8575f80fd5b3661037b57005b5f80fd5b34801561038a575f80fd5b50610393610a95565b6040516103a09190612664565b60405180910390f35b3480156103b4575f80fd5b506103c86103c3366004612691565b610b21565b60405190151581526020016103a0565b3480156103e3575f80fd5b506103f76103f23660046126b9565b610b37565b005b348015610404575f80fd5b506103c86104133660046126f3565b60116020525f908152604090205460ff1681565b348015610432575f80fd5b5061043b610c60565b6040519081526020016103a0565b348015610454575f80fd5b506103c86104633660046126b9565b610c76565b348015610473575f80fd5b5061043b600c5481565b348015610488575f80fd5b5061043b600d5481565b34801561049d575f80fd5b506103f76104ac3660046126b9565b610cd8565b3480156104bc575f80fd5b5060055460405160ff90911681526020016103a0565b3480156104dd575f80fd5b506103f76104ec36600461271b565b611252565b3480156104fc575f80fd5b506103c861050b366004612691565b6112d2565b34801561051b575f80fd5b5061043b61052a3660046126f3565b6001600160a01b03165f9081526009602052604090205490565b34801561054f575f80fd5b506103f761055e36600461274c565b611307565b34801561056e575f80fd5b5061043b60155481565b348015610583575f80fd5b506103f7611314565b348015610597575f80fd5b506103f76105a6366004612763565b611326565b3480156105b6575f80fd5b50600b546105ca906001600160a01b031681565b6040516001600160a01b0390911681526020016103a0565b3480156105ed575f80fd5b506103f76105fc366004612691565b61140d565b34801561060c575f80fd5b5061043b670de0b6b3a764000081565b348015610627575f80fd5b505f5460ff166103c8565b34801561063d575f80fd5b506103f7611578565b348015610651575f80fd5b506103f7610660366004612691565b611594565b348015610670575f80fd5b5061043b61067f36600461274c565b6116ef565b34801561068f575f80fd5b5061043b600f5481565b3480156106a4575f80fd5b506103f76106b33660046126f3565b611719565b3480156106c3575f80fd5b506103f76106d2366004612691565b61180c565b3480156106e2575f80fd5b506103f76106f13660046128aa565b611979565b348015610701575f80fd5b50610715610710366004612763565b611a4f565b6040516103a09291906128ec565b34801561072e575f80fd5b506103f761073d36600461271b565b611aa5565b34801561074d575f80fd5b5061043b61075c3660046126f3565b611ba9565b34801561076c575f80fd5b506103f7611c08565b348015610780575f80fd5b506103f761078f36600461271b565b611c19565b34801561079f575f80fd5b506103f76107ae3660046128aa565b611ca1565b3480156107be575f80fd5b506103f76107cd36600461271b565b611cdf565b3480156107dd575f80fd5b506103f76107ec36600461274c565b611d7f565b3480156107fc575f80fd5b506103f7611dae565b348015610810575f80fd5b5061043b60105481565b348015610825575f80fd5b506105ca611dbe565b348015610839575f80fd5b5061043b61084836600461274c565b611dd1565b348015610858575f80fd5b506103c86108673660046126f3565b60136020525f908152604090205460ff1681565b348015610886575f80fd5b506002546001600160a01b03166105ca565b3480156108a3575f80fd5b5061043b60075481565b3480156108b8575f80fd5b506103c86108c73660046126f3565b60146020525f908152604090205460ff1681565b3480156108e6575f80fd5b506103c86108f53660046126f3565b60126020525f908152604090205460ff1681565b348015610914575f80fd5b50610393611df2565b348015610928575f80fd5b506103f761093736600461290e565b611dff565b348015610947575f80fd5b506103c8610956366004612691565b611e72565b348015610966575f80fd5b5061043b69d3c21bcecceda100000081565b348015610983575f80fd5b506103c8610992366004612691565b611ebf565b3480156109a2575f80fd5b5061043b61271081565b3480156109b7575f80fd5b506103f76109c636600461274c565b611ecb565b3480156109d6575f80fd5b5061043b600e5481565b3480156109eb575f80fd5b5061043b6109fa36600461292f565b6001600160a01b039182165f90815260086020908152604080832093909416825291909152205490565b348015610a2f575f80fd5b506103f7610a3e36600461274c565b611efa565b348015610a4e575f80fd5b5061043b611f07565b348015610a62575f80fd5b506103f7610a71366004612957565b611f42565b348015610a81575f80fd5b506103f7610a903660046126f3565b6122e7565b60038054610aa290612a15565b80601f0160208091040260200160405190810160405280929190818152602001828054610ace90612a15565b8015610b195780601f10610af057610100808354040283529160200191610b19565b820191905f5260205f20905b815481529060010190602001808311610afc57829003601f168201915b505050505081565b5f610b2d338484610b37565b5060015b92915050565b6001600160a01b038316610b9e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084015b60405180910390fd5b6001600160a01b038216610bff5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610b95565b6001600160a01b038381165f8181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f600a54600654610c719190612a61565b905090565b5f610c82848484610cd8565b610cce84336103f285604051806060016040528060288152602001612b21602891396001600160a01b038a165f9081526008602090815260408083203384529091529020549190612324565b5060019392505050565b610ce061234f565b6001600160a01b038316610d445760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610b95565b6001600160a01b038216610da65760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610b95565b80610db084611ba9565b1015610dfe5760405162461bcd60e51b815260206004820152601f60248201527f496e73756666696369656e742046756e647320466f72205472616e73666572006044820152606401610b95565b601054610e0a83611ba9565b10158015610e3057506001600160a01b0382165f9081526013602052604090205460ff16155b15610e7d5760405162461bcd60e51b815260206004820152601860248201527f486f6c64696e6720546f6b656e732065786365656465642100000000000000006044820152606401610b95565b6001600160a01b0382165f90815260136020526040902054819060ff16158015610ebb575060105481610eaf85611ba9565b610eb99190612a61565b115b15610eee5760105481610ecd85611ba9565b610ed79190612a61565b610ee19190612a74565b610eeb9082612a74565b90505b5f610ef882611dd1565b6001600160a01b0386165f9081526012602052604090205490915060ff1615610f2757610f2482611dd1565b90505b5f610f3a6002546001600160a01b031690565b6001600160a01b0316866001600160a01b031614158015610f7257506001600160a01b0385165f9081526011602052604090205460ff165b15610f9557612710600c5484610f889190612a87565b610f929190612a9e565b90505b5f610fa08285612a74565b90505f610fac82611dd1565b6001600160a01b0388165f908152601260205260408120549192509060ff16610fd55781610fde565b610fde83611dd1565b6001600160a01b038a165f9081526009602052604081208054929350879290919061100a908490612a74565b90915550506001600160a01b0388165f9081526012602052604090205460ff1615611061576001600160a01b0388165f9081526009602052604081208054839290611056908490612a61565b9091555061108e9050565b6001600160a01b0388165f9081526009602052604081208054849290611088908490612a61565b90915550505b83600a5f82825461109f9190612a61565b925050819055508360065f8282546110b79190612a74565b92505081905550876001600160a01b0316896001600160a01b03165f80516020612b49833981519152856040516110f091815260200190565b60405180910390a3831561113157600b546040518581526001600160a01b03918216918b16905f80516020612b498339815191529060200160405180910390a35b6001600160a01b0389165f9081526012602052604090205460ff1615801561117057506001600160a01b0388165f9081526012602052604090205460ff165b15611191578260075f8282546111869190612a61565b909155506112269050565b6001600160a01b0389165f9081526012602052604090205460ff1680156111d057506001600160a01b0388165f9081526012602052604090205460ff16155b156111e6578260075f8282546111869190612a74565b6001600160a01b0389165f9081526012602052604090205460ff16801561122457506001600160a01b0388165f9081526012602052604090205460ff165b505b600a541561124757600a54600b5461124791906001600160a01b0316611dff565b505050505050505050565b6001600160a01b0382166112a85760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e742073686f756c646e2774206265207a65726f2e0000000000006044820152606401610b95565b6001600160a01b03919091165f908152601360205260409020805460ff1916911515919091179055565b335f8181526008602090815260408083206001600160a01b03871684529091528120549091610b2d9185906103f29086612394565b61130f6123a6565b601055565b61131c6123a6565b6113246123d3565b565b600f546015546113369042612a74565b116113835760405162461bcd60e51b815260206004820152601e60248201527f4b656570557020726571756972656d656e74206973206e6f74206d65742100006044820152606401610b95565b60075460065410156113fd5760405162461bcd60e51b815260206004820152603e60248201527f74537570706c79206d7573742062652067726561746572207468616e206f722060448201527f657175616c20746f206578636c7564654465626173696e67537570706c7900006064820152608401610b95565b611405612424565b505042601555565b6001600160a01b0382166114635760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610b95565b8060065f8282546114749190612a61565b909155505f905061148482611dd1565b6001600160a01b0384165f9081526012602052604090205490915060ff16156114ca578160075f8282546114b89190612a61565b909155506114c7905082611dd1565b90505b6001600160a01b0383165f90815260096020526040812080548392906114f1908490612a61565b90915550506040518281526001600160a01b038416907f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968859060200160405180910390a2600b546001600160a01b03848116911614611573576040518281526001600160a01b038416905f905f80516020612b4983398151915290602001610c53565b505050565b6115806123a6565b42601554111561158e575f80fd5b42601555565b6001600160a01b0382166115f45760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610b95565b8060065f8282546116059190612a74565b909155505f905061161582611dd1565b6001600160a01b0384165f9081526012602052604090205490915060ff161561165b578160075f8282546116499190612a74565b90915550611658905082611dd1565b90505b6001600160a01b0383165f9081526009602052604081208054839290611682908490612a74565b90915550506040518281526001600160a01b038416907fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca59060200160405180910390a26040518281525f906001600160a01b038516905f80516020612b4983398151915290602001610c53565b5f610b3169d3c21bcecceda1000000611713600e54856124f290919063ffffffff16565b906124fd565b6117216123a6565b6001600160a01b0381166117775760405162461bcd60e51b815260206004820152601d60248201527f496e76616c696420616464726573733a207a65726f20616464726573730000006044820152606401610b95565b5f816001600160a01b0316476040515f6040518083038185875af1925050503d805f81146117c0576040519150601f19603f3d011682016040523d82523d5f602084013e6117c5565b606091505b50509050806118085760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8811985a5b1959608a1b6044820152606401610b95565b5050565b61181461234f565b335f9081526014602052604090205460ff168061183b57506002546001600160a01b031633145b611843575f80fd5b600a541561186457600a54600b5461186491906001600160a01b0316611dff565b6001600160a01b0382165f9081526012602052604090205460ff16156118bf5761188d81611dd1565b6001600160a01b0383165f90815260096020526040812080549091906118b4908490612a61565b9091555061190d9050565b6118c881611dd1565b6001600160a01b0383165f90815260096020526040812080549091906118ef908490612a61565b925050819055508060075f8282546119079190612a74565b90915550505b61191681611dd1565b600b546001600160a01b03165f908152600960205260408120805490919061193f908490612a74565b9091555050600b546040518281526001600160a01b038481169216905f80516020612b498339815191529060200160405180910390a35050565b6119816123a6565b5f5b825181101561157357600b5483516001600160a01b03909116908490839081106119af576119af612abd565b60200260200101516001600160a01b031603611a245760405162461bcd60e51b815260206004820152602e60248201527f54726561737572792077616c6c65742063616e6e6f7420626520696e636c756460448201526d656420696e206465626173696e6760901b6064820152608401610b95565b611a47838281518110611a3957611a39612abd565b602002602001015183611aa5565b600101611983565b5f6060600f5460155442611a639190612a74565b11915083838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152509293505050509250929050565b6001600160a01b038216611afb5760405162461bcd60e51b815260206004820152601a60248201527f4163636f756e742073686f756c646e2774206265207a65726f2e0000000000006044820152606401610b95565b6001600160a01b0382165f9081526012602052604081205460ff1690611b2084611ba9565b905082151582151514611ba3576001600160a01b0384165f908152601260205260409020805460ff191684151517905581158015611b5b5750825b15611b7c578060075f828254611b719190612a61565b90915550611ba39050565b818015611b87575082155b15611ba3578060075f828254611b9d9190612a74565b90915550505b50505050565b6001600160a01b0381165f9081526012602052604081205460ff1615611be757600b546001600160a01b0390811690831603611be757610b31611f07565b6001600160a01b0382165f90815260096020526040902054610b31906116ef565b611c106123a6565b6113245f612508565b611c216123a6565b6001600160a01b038216611c775760405162461bcd60e51b815260206004820152601b60248201527f4f70657261746f722073686f756c646e2774206265207a65726f2e00000000006044820152606401610b95565b6001600160a01b03919091165f908152601460205260409020805460ff1916911515919091179055565b611ca96123a6565b5f5b825181101561157357611cd7838281518110611cc957611cc9612abd565b602002602001015183611252565b600101611cab565b611ce76123a6565b6001600160a01b038216611d485760405162461bcd60e51b815260206004820152602260248201527f4c5020506f6f6c20616464726573732073686f756c646e2774206265207a65726044820152616f2160f01b6064820152608401610b95565b6001600160a01b0382165f908152601160205260409020805460ff1916821515179055611d758282611aa5565b6118088282611252565b611d876123a6565b612710811115611da95760405162461bcd60e51b8152600401610b9590612ad1565b600d55565b611db66123a6565b611324612559565b5f610c716002546001600160a01b031690565b5f610b31670de0b6b3a76400006117138469d3c21bcecceda10000006124f2565b60048054610aa290612a15565b81600a541015611e515760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742042616c616e636520746f20636c61696d0000006044820152606401610b95565b81600a5f828254611e629190612a74565b909155506118089050818361140d565b5f610b2d33846103f285604051806060016040528060258152602001612b6960259139335f9081526008602090815260408083206001600160a01b038d1684529091529020549190612324565b5f610b2d338484610cd8565b611ed36123a6565b611388811115611ef55760405162461bcd60e51b8152600401610b9590612ad1565b600c55565b611f026123a6565b600f55565b600b546001600160a01b03165f908152600960205260408120548190611f2c906116ef565b905080600a54611f3c9190612a61565b91505090565b611f4a612595565b611f5261234f565b8051825114611f9c5760405162461bcd60e51b8152602060048201526016602482015275082e4e4c2f2e640d8cadccee8d040dad2e6dac2e8c6d60531b6044820152606401610b95565b5f805b8251811015611fd757828181518110611fba57611fba612abd565b602002602001015182611fcd9190612a61565b9150600101611f9f565b5080611fe233611ba9565b10156120275760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610b95565b5f5b83518110156122dc5782818151811061204457612044612abd565b602002602001015161205533611ba9565b11156122d457335f9081526012602052604090205460ff16156120ee5761209483828151811061208757612087612abd565b6020026020010151611dd1565b335f90815260096020526040812080549091906120b2908490612a74565b925050819055508281815181106120cb576120cb612abd565b602002602001015160075f8282546120e39190612a74565b909155506121279050565b61210383828151811061208757612087612abd565b335f9081526009602052604081208054909190612121908490612a74565b90915550505b60125f85838151811061213c5761213c612abd565b6020908102919091018101516001600160a01b031682528101919091526040015f205460ff16156122025761217c83828151811061208757612087612abd565b60095f86848151811061219157612191612abd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546121c69190612a61565b925050819055508281815181106121df576121df612abd565b602002602001015160075f8282546121f79190612a61565b909155506122679050565b61221783828151811061208757612087612abd565b60095f86848151811061222c5761222c612abd565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f8282546122619190612a61565b90915550505b83818151811061227957612279612abd565b60200260200101516001600160a01b0316336001600160a01b03165f80516020612b498339815191528584815181106122b4576122b4612abd565b60200260200101516040516122cb91815260200190565b60405180910390a35b600101612029565b505061180860018055565b6122ef6123a6565b6001600160a01b03811661231857604051631e4fbdf760e01b81525f6004820152602401610b95565b61232181612508565b50565b5f81848411156123475760405162461bcd60e51b8152600401610b959190612664565b505050900390565b5f5460ff16156113245760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610b95565b5f61239f8284612a61565b9392505050565b6002546001600160a01b031633146113245760405163118cdaa760e01b8152336004820152602401610b95565b6123db6125ee565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b61242c61234f565b5f612710670de0b6b3a7640000600d546124469190612a87565b6124509190612a9e565b90505f6007546006546124639190612a74565b9050670de0b6b3a76400006124788382612a74565b600e546124859190612a87565b61248f9190612a9e565b600e555f670de0b6b3a76400006124a68482612a74565b6124b09084612a87565b6124ba9190612a9e565b90505f6124c78284612a74565b905080600a5f8282546124da9190612a61565b925050819055508060065f828254611b9d9190612a74565b5f61239f8284612a87565b5f61239f8284612a9e565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b61256161234f565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124073390565b6002600154036125e75760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610b95565b6002600155565b5f5460ff166113245760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610b95565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b602081525f61239f6020830184612636565b80356001600160a01b038116811461268c575f80fd5b919050565b5f80604083850312156126a2575f80fd5b6126ab83612676565b946020939093013593505050565b5f805f606084860312156126cb575f80fd5b6126d484612676565b92506126e260208501612676565b929592945050506040919091013590565b5f60208284031215612703575f80fd5b61239f82612676565b8035801515811461268c575f80fd5b5f806040838503121561272c575f80fd5b61273583612676565b91506127436020840161270c565b90509250929050565b5f6020828403121561275c575f80fd5b5035919050565b5f8060208385031215612774575f80fd5b823567ffffffffffffffff81111561278a575f80fd5b8301601f8101851361279a575f80fd5b803567ffffffffffffffff8111156127b0575f80fd5b8560208284010111156127c1575f80fd5b6020919091019590945092505050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561280e5761280e6127d1565b604052919050565b5f67ffffffffffffffff82111561282f5761282f6127d1565b5060051b60200190565b5f82601f830112612848575f80fd5b813561285b61285682612816565b6127e5565b8082825260208201915060208360051b86010192508583111561287c575f80fd5b602085015b838110156128a05761289281612676565b835260209283019201612881565b5095945050505050565b5f80604083850312156128bb575f80fd5b823567ffffffffffffffff8111156128d1575f80fd5b6128dd85828601612839565b9250506127436020840161270c565b8215158152604060208201525f6129066040830184612636565b949350505050565b5f806040838503121561291f575f80fd5b8235915061274360208401612676565b5f8060408385031215612940575f80fd5b61294983612676565b915061274360208401612676565b5f8060408385031215612968575f80fd5b823567ffffffffffffffff81111561297e575f80fd5b61298a85828601612839565b925050602083013567ffffffffffffffff8111156129a6575f80fd5b8301601f810185136129b6575f80fd5b80356129c461285682612816565b8082825260208201915060208360051b8501019250878311156129e5575f80fd5b6020840193505b82841015612a075783358252602093840193909101906129ec565b809450505050509250929050565b600181811c90821680612a2957607f821691505b602082108103612a4757634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610b3157610b31612a4d565b81810381811115610b3157610b31612a4d565b8082028115828204841417610b3157610b31612a4d565b5f82612ab857634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b6020808252602f908201527f526174652073686f756c64206265206c657373207468616e2050455243454e5460408201526e20a3a2afa222a727a6a4a720aa27a960891b60608201526080019056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212205372ef03b5eb7a4b0db0845b3856162fb806ffa8277192ccfe2519b503eaa89064736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x374 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x702115DD GT PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x9220D3ED GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xB3CD4254 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xDF0AB308 GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xDF0AB308 EQ PUSH2 0xA24 JUMPI DUP1 PUSH4 0xE2FF2440 EQ PUSH2 0xA43 JUMPI DUP1 PUSH4 0xE5A5E318 EQ PUSH2 0xA57 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xA76 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB3CD4254 EQ PUSH2 0x997 JUMPI DUP1 PUSH4 0xB4DADE59 EQ PUSH2 0x9AC JUMPI DUP1 PUSH4 0xDC90B442 EQ PUSH2 0x9CB JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x9E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9CC2921C GT PUSH2 0xD8 JUMPI DUP1 PUSH4 0x9CC2921C EQ PUSH2 0x91D JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x93C JUMPI DUP1 PUSH4 0xA6D1B891 EQ PUSH2 0x95B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x978 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9220D3ED EQ PUSH2 0x8AD JUMPI DUP1 PUSH4 0x924C2EAD EQ PUSH2 0x8DB JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x909 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x89EEC0F1 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x89EEC0F1 EQ PUSH2 0x82E JUMPI DUP1 PUSH4 0x8CF66B16 EQ PUSH2 0x84D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x87B JUMPI DUP1 PUSH4 0x8F372FA3 EQ PUSH2 0x898 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x7F1 JUMPI DUP1 PUSH4 0x874A6AE7 EQ PUSH2 0x805 JUMPI DUP1 PUSH4 0x893D20E8 EQ PUSH2 0x81A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x75C2B13F GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x75C2B13F EQ PUSH2 0x775 JUMPI DUP1 PUSH4 0x7819F36F EQ PUSH2 0x794 JUMPI DUP1 PUSH4 0x79825EDE EQ PUSH2 0x7B3 JUMPI DUP1 PUSH4 0x81CEA332 EQ PUSH2 0x7D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x702115DD EQ PUSH2 0x723 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x742 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 GT PUSH2 0x2A9 JUMPI DUP1 PUSH4 0x5D70DDE6 GT PUSH2 0x249 JUMPI DUP1 PUSH4 0x690D8320 GT PUSH2 0x219 JUMPI DUP1 PUSH4 0x690D8320 EQ PUSH2 0x699 JUMPI DUP1 PUSH4 0x6AA3773F EQ PUSH2 0x6B8 JUMPI DUP1 PUSH4 0x6C5ED03E EQ PUSH2 0x6D7 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x6F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5D70DDE6 EQ PUSH2 0x632 JUMPI DUP1 PUSH4 0x6161EB18 EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0x639F3CC7 EQ PUSH2 0x665 JUMPI DUP1 PUSH4 0x685F59DE EQ PUSH2 0x684 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4626402B GT PUSH2 0x284 JUMPI DUP1 PUSH4 0x4626402B EQ PUSH2 0x5AB JUMPI DUP1 PUSH4 0x4E6EC247 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x61C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F3B3B27 EQ PUSH2 0x563 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x58C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE8BD56 GT PUSH2 0x314 JUMPI DUP1 PUSH4 0x35C85A34 GT PUSH2 0x2EF JUMPI DUP1 PUSH4 0x35C85A34 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0x3AF9E669 EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0x3CDE0C0F EQ PUSH2 0x544 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2CE8BD56 EQ PUSH2 0x47D JUMPI DUP1 PUSH4 0x30E0789E EQ PUSH2 0x492 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x4B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1658A700 GT PUSH2 0x34F JUMPI DUP1 PUSH4 0x1658A700 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x24024EFD EQ PUSH2 0x468 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x104E81FF EQ PUSH2 0x3D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x37B JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0xB21 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x3F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0xB37 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x404 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x413 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0xC60 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x454 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x463 CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x473 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x488 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x4AC CALLDATASIZE PUSH1 0x4 PUSH2 0x26B9 JUMP JUMPDEST PUSH2 0xCD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1252 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x12D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1307 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0x15 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1314 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x5A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x5CA SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3A0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x140D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH8 0xDE0B6B3A7640000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x627 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x3C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1578 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x651 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x660 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x1594 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x67F CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x16EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6A4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x6B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x1719 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x6D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x180C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x6F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x1979 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x701 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x715 PUSH2 0x710 CALLDATASIZE PUSH1 0x4 PUSH2 0x2763 JUMP JUMPDEST PUSH2 0x1A4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP3 SWAP2 SWAP1 PUSH2 0x28EC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x72E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x73D CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1AA5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x74D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x75C CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x1BA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x76C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1C08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x780 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x78F CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1C19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x7AE CALLDATASIZE PUSH1 0x4 PUSH2 0x28AA JUMP JUMPDEST PUSH2 0x1CA1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7BE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x7CD CALLDATASIZE PUSH1 0x4 PUSH2 0x271B JUMP JUMPDEST PUSH2 0x1CDF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x7EC CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1D7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x1DAE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x810 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x825 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x5CA PUSH2 0x1DBE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x839 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x848 CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1DD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x858 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x867 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x886 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5CA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x8C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x14 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x8F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x914 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x393 PUSH2 0x1DF2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x928 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x937 CALLDATASIZE PUSH1 0x4 PUSH2 0x290E JUMP JUMPDEST PUSH2 0x1DFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x947 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x956 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x1E72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x966 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x983 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C8 PUSH2 0x992 CALLDATASIZE PUSH1 0x4 PUSH2 0x2691 JUMP JUMPDEST PUSH2 0x1EBF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x2710 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0x9C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1ECB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x9FA CALLDATASIZE PUSH1 0x4 PUSH2 0x292F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xA3E CALLDATASIZE PUSH1 0x4 PUSH2 0x274C JUMP JUMPDEST PUSH2 0x1EFA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x43B PUSH2 0x1F07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA62 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xA71 CALLDATASIZE PUSH1 0x4 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x1F42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F7 PUSH2 0xA90 CALLDATASIZE PUSH1 0x4 PUSH2 0x26F3 JUMP JUMPDEST PUSH2 0x22E7 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0xAA2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xACE SWAP1 PUSH2 0x2A15 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB19 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAF0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB19 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xAFC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xB2D CALLER DUP5 DUP5 PUSH2 0xB37 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA SLOAD PUSH1 0x6 SLOAD PUSH2 0xC71 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xC82 DUP5 DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0xCCE DUP5 CALLER PUSH2 0x3F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B21 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xCE0 PUSH2 0x234F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xDA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH2 0xDB0 DUP5 PUSH2 0x1BA9 JUMP JUMPDEST LT ISZERO PUSH2 0xDFE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742046756E647320466F72205472616E7366657200 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH2 0xE0A DUP4 PUSH2 0x1BA9 JUMP JUMPDEST LT ISZERO DUP1 ISZERO PUSH2 0xE30 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0xE7D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x486F6C64696E6720546F6B656E73206578636565646564210000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 SWAP1 PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI POP PUSH1 0x10 SLOAD DUP2 PUSH2 0xEAF DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xEB9 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST GT JUMPDEST ISZERO PUSH2 0xEEE JUMPI PUSH1 0x10 SLOAD DUP2 PUSH2 0xECD DUP6 PUSH2 0x1BA9 JUMP JUMPDEST PUSH2 0xED7 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST PUSH2 0xEE1 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0xEEB SWAP1 DUP3 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0xEF8 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xF27 JUMPI PUSH2 0xF24 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0xF3A PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0xF72 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xF95 JUMPI PUSH2 0x2710 PUSH1 0xC SLOAD DUP5 PUSH2 0xF88 SWAP2 SWAP1 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0xF92 SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH2 0xFA0 DUP3 DUP6 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xFAC DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0xFF AND PUSH2 0xFD5 JUMPI DUP2 PUSH2 0xFDE JUMP JUMPDEST PUSH2 0xFDE DUP4 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP DUP8 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x100A SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1061 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1056 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x108E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1088 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP4 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x109F SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 PUSH1 0x40 MLOAD PUSH2 0x10F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 ISZERO PUSH2 0x1131 JUMPI PUSH1 0xB SLOAD PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 DUP12 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1170 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1191 JUMPI DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1226 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x11D0 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x11E6 JUMPI DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1186 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1224 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST POP JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x1247 JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x1247 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DFF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x12A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E742073686F756C646E2774206265207A65726F2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0xB2D SWAP2 DUP6 SWAP1 PUSH2 0x3F2 SWAP1 DUP7 PUSH2 0x2394 JUMP JUMPDEST PUSH2 0x130F PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH2 0x131C PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1324 PUSH2 0x23D3 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x15 SLOAD PUSH2 0x1336 SWAP1 TIMESTAMP PUSH2 0x2A74 JUMP JUMPDEST GT PUSH2 0x1383 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4B656570557020726571756972656D656E74206973206E6F74206D6574210000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x74537570706C79206D7573742062652067726561746572207468616E206F7220 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x657175616C20746F206578636C7564654465626173696E67537570706C790000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x1405 PUSH2 0x2424 JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1463 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1474 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1484 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x14CA JUMPI DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14B8 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x14C7 SWAP1 POP DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x14F1 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xF6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x1573 JUMPI PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH0 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0xC53 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1580 PUSH2 0x23A6 JUMP JUMPDEST TIMESTAMP PUSH1 0x15 SLOAD GT ISZERO PUSH2 0x158E JUMPI PUSH0 DUP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x15 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x15F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1605 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH0 SWAP1 POP PUSH2 0x1615 DUP3 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x165B JUMPI DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1649 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1658 SWAP1 POP DUP3 PUSH2 0x1DD1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1682 SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xCC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0xC53 JUMP JUMPDEST PUSH0 PUSH2 0xB31 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x1713 PUSH1 0xE SLOAD DUP6 PUSH2 0x24F2 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x24FD JUMP JUMPDEST PUSH2 0x1721 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420616464726573733A207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17C0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8811985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1814 PUSH2 0x234F JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x183B JUMPI POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ JUMPDEST PUSH2 0x1843 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0xA SLOAD ISZERO PUSH2 0x1864 JUMPI PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH2 0x1864 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DFF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18BF JUMPI PUSH2 0x188D DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x18B4 SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x190D SWAP1 POP JUMP JUMPDEST PUSH2 0x18C8 DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x18EF SWAP1 DUP5 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1907 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH2 0x1916 DUP2 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x193F SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xB SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP3 AND SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1981 PUSH2 0x23A6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1573 JUMPI PUSH1 0xB SLOAD DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x19AF JUMPI PUSH2 0x19AF PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x1A24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54726561737572792077616C6C65742063616E6E6F7420626520696E636C7564 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x656420696E206465626173696E67 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x1A47 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1A39 JUMPI PUSH2 0x1A39 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1AA5 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1983 JUMP JUMPDEST PUSH0 PUSH1 0x60 PUSH1 0xF SLOAD PUSH1 0x15 SLOAD TIMESTAMP PUSH2 0x1A63 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST GT SWAP2 POP DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1AFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4163636F756E742073686F756C646E2774206265207A65726F2E000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 PUSH2 0x1B20 DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO DUP3 ISZERO ISZERO EQ PUSH2 0x1BA3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE DUP2 ISZERO DUP1 ISZERO PUSH2 0x1B5B JUMPI POP DUP3 JUMPDEST ISZERO PUSH2 0x1B7C JUMPI DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1BA3 SWAP1 POP JUMP JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x1B87 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x1BA3 JUMPI DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B9D SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BE7 JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP4 AND SUB PUSH2 0x1BE7 JUMPI PUSH2 0xB31 PUSH2 0x1F07 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB31 SWAP1 PUSH2 0x16EF JUMP JUMPDEST PUSH2 0x1C10 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1324 PUSH0 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x1C21 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F722073686F756C646E2774206265207A65726F2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x14 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1CA9 PUSH2 0x23A6 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1573 JUMPI PUSH2 0x1CD7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CC9 JUMPI PUSH2 0x1CC9 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP4 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1CAB JUMP JUMPDEST PUSH2 0x1CE7 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D48 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C5020506F6F6C20616464726573732073686F756C646E2774206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6F21 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP3 ISZERO ISZERO OR SWAP1 SSTORE PUSH2 0x1D75 DUP3 DUP3 PUSH2 0x1AA5 JUMP JUMPDEST PUSH2 0x1808 DUP3 DUP3 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x1D87 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x1DA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x1DB6 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1324 PUSH2 0x2559 JUMP JUMPDEST PUSH0 PUSH2 0xC71 PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB31 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1713 DUP5 PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x24F2 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH2 0xAA2 SWAP1 PUSH2 0x2A15 JUMP JUMPDEST DUP2 PUSH1 0xA SLOAD LT ISZERO PUSH2 0x1E51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742042616C616E636520746F20636C61696D000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST DUP2 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1E62 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1808 SWAP1 POP DUP2 DUP4 PUSH2 0x140D JUMP JUMPDEST PUSH0 PUSH2 0xB2D CALLER DUP5 PUSH2 0x3F2 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2B69 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x2324 JUMP JUMPDEST PUSH0 PUSH2 0xB2D CALLER DUP5 DUP5 PUSH2 0xCD8 JUMP JUMPDEST PUSH2 0x1ED3 PUSH2 0x23A6 JUMP JUMPDEST PUSH2 0x1388 DUP2 GT ISZERO PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH2 0x1F02 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x1F2C SWAP1 PUSH2 0x16EF JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA SLOAD PUSH2 0x1F3C SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4A PUSH2 0x2595 JUMP JUMPDEST PUSH2 0x1F52 PUSH2 0x234F JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1F9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1FD7 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1FBA JUMPI PUSH2 0x1FBA PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x1FCD SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x1F9F JUMP JUMPDEST POP DUP1 PUSH2 0x1FE2 CALLER PUSH2 0x1BA9 JUMP JUMPDEST LT ISZERO PUSH2 0x2027 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x22DC JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2044 JUMPI PUSH2 0x2044 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2055 CALLER PUSH2 0x1BA9 JUMP JUMPDEST GT ISZERO PUSH2 0x22D4 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x20EE JUMPI PUSH2 0x2094 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1DD1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x20B2 SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x20CB JUMPI PUSH2 0x20CB PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x20E3 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2127 SWAP1 POP JUMP JUMPDEST PUSH2 0x2103 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x2121 SWAP1 DUP5 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x12 PUSH0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x213C JUMPI PUSH2 0x213C PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH0 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2202 JUMPI PUSH2 0x217C DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2191 JUMPI PUSH2 0x2191 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21C6 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x21DF JUMPI PUSH2 0x21DF PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x21F7 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x2267 SWAP1 POP JUMP JUMPDEST PUSH2 0x2217 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2087 JUMPI PUSH2 0x2087 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x222C JUMPI PUSH2 0x222C PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2261 SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2279 JUMPI PUSH2 0x2279 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B49 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x22B4 JUMPI PUSH2 0x22B4 PUSH2 0x2ABD JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x22CB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x1 ADD PUSH2 0x2029 JUMP JUMPDEST POP POP PUSH2 0x1808 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x22EF PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2318 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x2321 DUP2 PUSH2 0x2508 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x2347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB95 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 PUSH2 0x239F DUP3 DUP5 PUSH2 0x2A61 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH2 0x23DB PUSH2 0x25EE JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x242C PUSH2 0x234F JUMP JUMPDEST PUSH0 PUSH2 0x2710 PUSH8 0xDE0B6B3A7640000 PUSH1 0xD SLOAD PUSH2 0x2446 SWAP2 SWAP1 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0x2450 SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x2463 SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 PUSH2 0x2478 DUP4 DUP3 PUSH2 0x2A74 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x2485 SWAP2 SWAP1 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0x248F SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0xE SSTORE PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x24A6 DUP5 DUP3 PUSH2 0x2A74 JUMP JUMPDEST PUSH2 0x24B0 SWAP1 DUP5 PUSH2 0x2A87 JUMP JUMPDEST PUSH2 0x24BA SWAP2 SWAP1 PUSH2 0x2A9E JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x24C7 DUP3 DUP5 PUSH2 0x2A74 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP3 DUP3 SLOAD PUSH2 0x24DA SWAP2 SWAP1 PUSH2 0x2A61 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B9D SWAP2 SWAP1 PUSH2 0x2A74 JUMP JUMPDEST PUSH0 PUSH2 0x239F DUP3 DUP5 PUSH2 0x2A87 JUMP JUMPDEST PUSH0 PUSH2 0x239F DUP3 DUP5 PUSH2 0x2A9E JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2561 PUSH2 0x234F JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x2407 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1324 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xB95 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x239F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2636 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x268C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26AB DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26CB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x26D4 DUP5 PUSH2 0x2676 JUMP JUMPDEST SWAP3 POP PUSH2 0x26E2 PUSH1 0x20 DUP6 ADD PUSH2 0x2676 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2703 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x239F DUP3 PUSH2 0x2676 JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x268C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x272C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2735 DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x270C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x275C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2774 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x278A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x279A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x27C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x280E JUMPI PUSH2 0x280E PUSH2 0x27D1 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x282F JUMPI PUSH2 0x282F PUSH2 0x27D1 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2848 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x285B PUSH2 0x2856 DUP3 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x27E5 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x287C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x2892 DUP2 PUSH2 0x2676 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x2881 JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x28DD DUP6 DUP3 DUP7 ADD PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x270C JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2906 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2636 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x291F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x2676 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2940 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2949 DUP4 PUSH2 0x2676 JUMP JUMPDEST SWAP2 POP PUSH2 0x2743 PUSH1 0x20 DUP5 ADD PUSH2 0x2676 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2968 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x297E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x298A DUP6 DUP3 DUP7 ADD PUSH2 0x2839 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29A6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x29B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x29C4 PUSH2 0x2856 DUP3 PUSH2 0x2816 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP8 DUP4 GT ISZERO PUSH2 0x29E5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x2A07 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x29EC JUMP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A29 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A47 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x2A4D JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x2A4D JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xB31 JUMPI PUSH2 0xB31 PUSH2 0x2A4D JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x2AB8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2F SWAP1 DUP3 ADD MSTORE PUSH32 0x526174652073686F756C64206265206C657373207468616E2050455243454E54 PUSH1 0x40 DUP3 ADD MSTORE PUSH15 0x20A3A2AFA222A727A6A4A720AA27A9 PUSH1 0x89 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E6365DDF252AD1BE2C89B69C2 0xB0 PUSH9 0xFC378DAA952BA7F163 0xC4 LOG1 AND 0x28 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x73582212205372 0xEF SUB 0xB5 0xEB PUSH27 0x4B0DB0845B3856162FB806FFA8277192CCFE2519B503EAA8906473 PUSH16 0x6C634300081A00330000000000000000 ",
							"sourceMap": "559:16884:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;929:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4537:182;;;;;;;;;;-1:-1:-1;4537:182:12;;;;;:::i;:::-;;:::i;:::-;;;1181:14:13;;1174:22;1156:41;;1144:2;1129:18;4537:182:12;1016:187:13;5723:383:12;;;;;;;;;;-1:-1:-1;5723:383:12;;;;;:::i;:::-;;:::i;:::-;;1473:39;;;;;;;;;;-1:-1:-1;1473:39:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;3453:111;;;;;;;;;;;;;:::i;:::-;;;1924:25:13;;;1912:2;1897:18;3453:111:12;1778:177:13;4725:423:12;;;;;;;;;;-1:-1:-1;4725:423:12;;;;;:::i;:::-;;:::i;1300:26::-;;;;;;;;;;;;;;;;1332:25;;;;;;;;;;;;;;;;7233:2525;;;;;;;;;;-1:-1:-1;7233:2525:12;;;;;:::i;:::-;;:::i;3570:99::-;;;;;;;;;;-1:-1:-1;3652:9:12;;3570:99;;2132:4:13;2120:17;;;2102:36;;2090:2;2075:18;3570:99:12;1960:184:13;14802:224:12;;;;;;;;;;-1:-1:-1;14802:224:12;;;;;:::i;:::-;;:::i;5154:284::-;;;;;;;;;;-1:-1:-1;5154:284:12;;;;;:::i;:::-;;:::i;4065:120::-;;;;;;;;;;-1:-1:-1;4065:120:12;;;;;:::i;:::-;-1:-1:-1;;;;;4159:19:12;4133:7;4159:19;;;:9;:19;;;;;;;4065:120;12766:115;;;;;;;;;;-1:-1:-1;12766:115:12;;;;;:::i;:::-;;:::i;1698:28::-;;;;;;;;;;;;;;;;17030:63;;;;;;;;;;;;;:::i;10999:484::-;;;;;;;;;;-1:-1:-1;10999:484:12;;;;;:::i;:::-;;:::i;1264:29::-;;;;;;;;;;-1:-1:-1;1264:29:12;;;;-1:-1:-1;;;;;1264:29:12;;;;;;-1:-1:-1;;;;;3559:32:13;;;3541:51;;3529:2;3514:18;1264:29:12;3395:203:13;6112:573:12;;;;;;;;;;-1:-1:-1;6112:573:12;;;;;:::i;:::-;;:::i;819:45::-;;;;;;;;;;;;860:4;819:45;;1615:84:5;;;;;;;;;;-1:-1:-1;1662:4:5;1685:7;;;1615:84;;16818:141:12;;;;;;;;;;;;;:::i;6691:536::-;;;;;;;;;;-1:-1:-1;6691:536:12;;;;;:::i;:::-;;:::i;12116:171::-;;;;;;;;;;-1:-1:-1;12116:171:12;;;;;:::i;:::-;;:::i;1403:29::-;;;;;;;;;;;;;;;;3166:281;;;;;;;;;;-1:-1:-1;3166:281:12;;;;;:::i;:::-;;:::i;9992:661::-;;;;;;;;;;-1:-1:-1;9992:661:12;;;;;:::i;:::-;;:::i;14440:356::-;;;;;;;;;;-1:-1:-1;14440:356:12;;;;;:::i;:::-;;:::i;10659:334::-;;;;;;;;;;-1:-1:-1;10659:334:12;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;13779:655::-;;;;;;;;;;-1:-1:-1;13779:655:12;;;;;:::i;:::-;;:::i;3675:384::-;;;;;;;;;;-1:-1:-1;3675:384:12;;;;;:::i;:::-;;:::i;2293:101:4:-;;;;;;;;;;;;;:::i;13564:209:12:-;;;;;;;;;;-1:-1:-1;13564:209:12;;;;;:::i;:::-;;:::i;15032:248::-;;;;;;;;;;-1:-1:-1;15032:248:12;;;;;:::i;:::-;;:::i;13255:303::-;;;;;;;;;;-1:-1:-1;13255:303:12;;;;;:::i;:::-;;:::i;12887:233::-;;;;;;;;;;-1:-1:-1;12887:233:12;;;;;:::i;:::-;;:::i;16965:59::-;;;;;;;;;;;;;:::i;1439:27::-;;;;;;;;;;;;;;;;17136:83;;;;;;;;;;;;;:::i;12297:155::-;;;;;;;;;;-1:-1:-1;12297:155:12;;;;;:::i;:::-;;:::i;1578:58::-;;;;;;;;;;-1:-1:-1;1578:58:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;1638:85:4;;;;;;;;;;-1:-1:-1;1710:6:4;;-1:-1:-1;;;;;1710:6:4;1638:85;;1058:36:12;;;;;;;;;;;;;;;;1643:48;;;;;;;;;;-1:-1:-1;1643:48:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;1518:54;;;;;;;;;;-1:-1:-1;1518:54:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;962:29;;;;;;;;;;;;;:::i;9764:222::-;;;;;;;;;;-1:-1:-1;9764:222:12;;;;;:::i;:::-;;:::i;5444:273::-;;;;;;;;;;-1:-1:-1;5444:273:12;;;;;:::i;:::-;;:::i;870:52::-;;;;;;;;;;;;918:4;870:52;;4191:165;;;;;;;;;;-1:-1:-1;4191:165:12;;;;;:::i;:::-;;:::i;759:54::-;;;;;;;;;;;;808:5;759:54;;12505:255;;;;;;;;;;-1:-1:-1;12505:255:12;;;;;:::i;:::-;;:::i;1364:33::-;;;;;;;;;;;;;;;;4362:169;;;;;;;;;;-1:-1:-1;4362:169:12;;;;;:::i;:::-;-1:-1:-1;;;;;4494:20:12;;;4468:7;4494:20;;;:11;:20;;;;;;;;:30;;;;;;;;;;;;;4362:169;13126:123;;;;;;;;;;-1:-1:-1;13126:123:12;;;;;:::i;:::-;;:::i;17225:216::-;;;;;;;;;;;;;:::i;15286:1526::-;;;;;;;;;;-1:-1:-1;15286:1526:12;;;;;:::i;:::-;;:::i;2543:215:4:-;;;;;;;;;;-1:-1:-1;2543:215:4;;;;;:::i;:::-;;:::i;929:27:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4537:182::-;4636:4;4652:39;4661:10;4673:8;4683:7;4652:8;:39::i;:::-;-1:-1:-1;4708:4:12;4537:182;;;;;:::o;5723:383::-;-1:-1:-1;;;;;5856:21:12;;5848:70;;;;-1:-1:-1;;;5848:70:12;;7952:2:13;5848:70:12;;;7934:21:13;7991:2;7971:18;;;7964:30;8030:34;8010:18;;;8003:62;-1:-1:-1;;;8081:18:13;;;8074:34;8125:19;;5848:70:12;;;;;;;;;-1:-1:-1;;;;;5936:22:12;;5928:69;;;;-1:-1:-1;;;5928:69:12;;8357:2:13;5928:69:12;;;8339:21:13;8396:2;8376:18;;;8369:30;8435:34;8415:18;;;8408:62;-1:-1:-1;;;8486:18:13;;;8479:32;8528:19;;5928:69:12;8155:398:13;5928:69:12;-1:-1:-1;;;;;6008:20:12;;;;;;;:11;:20;;;;;;;;:30;;;;;;;;;;;;;:40;;;6063:36;;1924:25:13;;;6063:36:12;;1897:18:13;6063:36:12;;;;;;;;5723:383;;;:::o;3453:111::-;3506:7;3542:15;;3532:7;;:25;;;;:::i;:::-;3525:32;;3453:111;:::o;4725:423::-;4856:4;4872:39;4882:7;4891:10;4903:7;4872:9;:39::i;:::-;4921:199;4930:7;4951:10;4975:135;5029:7;4975:135;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4975:20:12;;;;;;:11;:20;;;;;;;;4996:10;4975:32;;;;;;;;;:135;:36;:135::i;4921:199::-;-1:-1:-1;5137:4:12;4725:423;;;;;:::o;7233:2525::-;1239:19:5;:17;:19::i;:::-;-1:-1:-1;;;;;7366:19:12;::::1;7358:69;;;::::0;-1:-1:-1;;;7358:69:12;;9022:2:13;7358:69:12::1;::::0;::::1;9004:21:13::0;9061:2;9041:18;;;9034:30;9100:34;9080:18;;;9073:62;-1:-1:-1;;;9151:18:13;;;9144:35;9196:19;;7358:69:12::1;8820:401:13::0;7358:69:12::1;-1:-1:-1::0;;;;;7445:17:12;::::1;7437:65;;;::::0;-1:-1:-1;;;7437:65:12;;9428:2:13;7437:65:12::1;::::0;::::1;9410:21:13::0;9467:2;9447:18;;;9440:30;9506:34;9486:18;;;9479:62;-1:-1:-1;;;9557:18:13;;;9550:33;9600:19;;7437:65:12::1;9226:399:13::0;7437:65:12::1;7536:7;7517:16;7527:5;7517:9;:16::i;:::-;:26;7513:98;;;7559:41;::::0;-1:-1:-1;;;7559:41:12;;9832:2:13;7559:41:12::1;::::0;::::1;9814:21:13::0;9871:2;9851:18;;;9844:30;9910:33;9890:18;;;9883:61;9961:18;;7559:41:12::1;9630:355:13::0;7513:98:12::1;7656:12;;7638:14;7648:3;7638:9;:14::i;:::-;:30;;:66;;;;-1:-1:-1::0;;;;;;7673:31:12;::::1;;::::0;;;:26:::1;:31;::::0;;;;;::::1;;7672:32;7638:66;7621:153;;;7729:34;::::0;-1:-1:-1;;;7729:34:12;;10192:2:13;7729:34:12::1;::::0;::::1;10174:21:13::0;10231:2;10211:18;;;10204:30;10270:26;10250:18;;;10243:54;10314:18;;7729:34:12::1;9990:348:13::0;7621:153:12::1;-1:-1:-1::0;;;;;7837:31:12;::::1;7784:14;7837:31:::0;;;:26:::1;:31;::::0;;;;;7801:7;;7837:31:::1;;7836:32;:86:::0;::::1;;;;7910:12;;7901:6;7884:14;7894:3;7884:9;:14::i;:::-;:23;;;;:::i;:::-;:38;7836:86;7819:197;;;7992:12;;7983:6;7966:14;7976:3;7966:9;:14::i;:::-;:23;;;;:::i;:::-;:38;;;;:::i;:::-;7956:49;::::0;:6;:49:::1;:::i;:::-;7947:58;;7819:197;8026:19;8048:30;8071:6;8048:22;:30::i;:::-;-1:-1:-1::0;;;;;8092:29:12;::::1;;::::0;;;:22:::1;:29;::::0;;;;;8026:52;;-1:-1:-1;8092:29:12::1;;8088:104;;;8151:30;8174:6;8151:22;:30::i;:::-;8137:44;;8088:104;8202:15;8245:7;1710:6:4::0;;-1:-1:-1;;;;;1710:6:4;;1638:85;8245:7:12::1;-1:-1:-1::0;;;;;8236:16:12::1;:5;-1:-1:-1::0;;;;;8236:16:12::1;;;:32;;;;-1:-1:-1::0;;;;;;8256:12:12;::::1;;::::0;;;:7:::1;:12;::::0;;;;;::::1;;8236:32;8232:120;;;808:5;8304:11;;8295:6;:20;;;;:::i;:::-;8294:47;;;;:::i;:::-;8284:57;;8232:120;8362:22;8387:16;8396:7:::0;8387:6;:16:::1;:::i;:::-;8362:41;;8413:27;8443:38;8466:14;8443:22;:38::i;:::-;-1:-1:-1::0;;;;;8517:27:12;::::1;8491:23;8517:27:::0;;;:22:::1;:27;::::0;;;;;8413:68;;-1:-1:-1;8491:23:12;8517:27:::1;;:114;;8612:19;8517:114;;;8559:38;8582:14;8559:22;:38::i;:::-;-1:-1:-1::0;;;;;8642:16:12;::::1;;::::0;;;:9:::1;:16;::::0;;;;:31;;8491:140;;-1:-1:-1;8662:11:12;;8642:16;;;:31:::1;::::0;8662:11;;8642:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;;;;;;8688:27:12;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;8684:159;;;-1:-1:-1::0;;;;;8731:14:12;::::1;;::::0;;;:9:::1;:14;::::0;;;;:33;;8749:15;;8731:14;:33:::1;::::0;8749:15;;8731:33:::1;:::i;:::-;::::0;;;-1:-1:-1;8684:159:12::1;::::0;-1:-1:-1;8684:159:12::1;;-1:-1:-1::0;;;;;8795:14:12;::::1;;::::0;;;:9:::1;:14;::::0;;;;:37;;8813:19;;8795:14;:37:::1;::::0;8813:19;;8795:37:::1;:::i;:::-;::::0;;;-1:-1:-1;;8684:159:12::1;8872:7;8853:15;;:26;;;;;;;:::i;:::-;;;;;;;;8900:7;8889;;:18;;;;;;;:::i;:::-;;;;;;;;8939:3;-1:-1:-1::0;;;;;8923:36:12::1;8932:5;-1:-1:-1::0;;;;;8923:36:12::1;-1:-1:-1::0;;;;;;;;;;;8944:14:12::1;8923:36;;;;1924:25:13::0;;1912:2;1897:18;;1778:177;8923:36:12::1;;;;;;;;8974:11:::0;;8970:87:::1;;9022:14;::::0;9006:40:::1;::::0;1924:25:13;;;-1:-1:-1;;;;;9022:14:12;;::::1;::::0;9006:40;::::1;::::0;-1:-1:-1;;;;;;;;;;;9006:40:12;1912:2:13;1897:18;9006:40:12::1;;;;;;;8970:87;-1:-1:-1::0;;;;;9113:29:12;::::1;;::::0;;;:22:::1;:29;::::0;;;;;::::1;;9112:30;:61:::0;::::1;;;-1:-1:-1::0;;;;;;9146:27:12;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;9112:61;9108:526;;;9214:14;9189:21;;:39;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9108:526:12::1;::::0;-1:-1:-1;9108:526:12::1;;-1:-1:-1::0;;;;;9249:29:12;::::1;;::::0;;;:22:::1;:29;::::0;;;;;::::1;;:61:::0;::::1;;;-1:-1:-1::0;;;;;;9283:27:12;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;9282:28;9249:61;9245:389;;;9351:14;9326:21;;:39;;;;;;;:::i;9245:389::-;-1:-1:-1::0;;;;;9386:29:12;::::1;;::::0;;;:22:::1;:29;::::0;;;;;::::1;;:60:::0;::::1;;;-1:-1:-1::0;;;;;;9419:27:12;::::1;;::::0;;;:22:::1;:27;::::0;;;;;::::1;;9386:60;9382:252:::0;::::1;9648:15;::::0;:19;9644:108:::1;;9709:15;::::0;9726:14:::1;::::0;9683:58:::1;::::0;9709:15;-1:-1:-1;;;;;9726:14:12::1;9683:25;:58::i;:::-;7348:2410;;;;;;7233:2525:::0;;;:::o;14802:224::-;-1:-1:-1;;;;;14906:22:12;;14898:61;;;;-1:-1:-1;;;14898:61:12;;11073:2:13;14898:61:12;;;11055:21:13;11112:2;11092:18;;;11085:30;11151:28;11131:18;;;11124:56;11197:18;;14898:61:12;10871:350:13;14898:61:12;-1:-1:-1;;;;;14969:36:12;;;;;;;;:26;:36;;;;;:50;;-1:-1:-1;;14969:50:12;;;;;;;;;;14802:224::o;5154:284::-;5304:10;5266:4;5350:23;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5350:33:12;;;;;;;;;;5266:4;;5282:128;;5328:8;;5350:50;;5388:11;5350:37;:50::i;12766:115::-;1531:13:4;:11;:13::i;:::-;12846:12:12::1;:28:::0;12766:115::o;17030:63::-;1531:13:4;:11;:13::i;:::-;17076:10:12::1;:8;:10::i;:::-;17030:63::o:0;10999:484::-;11225:14;;11208:13;;11190:31;;:15;:31;:::i;:::-;11189:50;11168:127;;;;-1:-1:-1;;;11168:127:12;;11428:2:13;11168:127:12;;;11410:21:13;11467:2;11447:18;;;11440:30;11506:32;11486:18;;;11479:60;11556:18;;11168:127:12;11226:354:13;11168:127:12;11325:21;;11314:7;;:32;;11306:107;;;;-1:-1:-1;;;11306:107:12;;11787:2:13;11306:107:12;;;11769:21:13;11826:2;11806:18;;;11799:30;11865:34;11845:18;;;11838:62;11936:32;11916:18;;;11909:60;11986:19;;11306:107:12;11585:426:13;11306:107:12;11425:9;:7;:9::i;:::-;-1:-1:-1;;11461:15:12;11445:13;:31;10999:484::o;6112:573::-;-1:-1:-1;;;;;6182:17:12;;6174:61;;;;-1:-1:-1;;;6174:61:12;;12218:2:13;6174:61:12;;;12200:21:13;12257:2;12237:18;;;12230:30;12296:33;12276:18;;;12269:61;12347:18;;6174:61:12;12016:355:13;6174:61:12;6257:7;6246;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;6275:25:12;;-1:-1:-1;6303:31:12;6326:7;6303:22;:31::i;:::-;-1:-1:-1;;;;;6348:27:12;;;;;;:22;:27;;;;;;6275:59;;-1:-1:-1;6348:27:12;;6344:155;;;6416:7;6391:21;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;6457:31:12;;-1:-1:-1;6480:7:12;6457:22;:31::i;:::-;6437:51;;6344:155;-1:-1:-1;;;;;6509:14:12;;;;;;:9;:14;;;;;:35;;6527:17;;6509:14;:35;;6527:17;;6509:35;:::i;:::-;;;;-1:-1:-1;;6560:18:12;;1924:25:13;;;-1:-1:-1;;;;;6560:18:12;;;;;1912:2:13;1897:18;6560::12;;;;;;;6599:14;;-1:-1:-1;;;;;6592:21:12;;;6599:14;;6592:21;6588:91;;6634:34;;1924:25:13;;;-1:-1:-1;;;;;6634:34:12;;;6651:1;;-1:-1:-1;;;;;;;;;;;6634:34:12;1912:2:13;1897:18;6634:34:12;1778:177:13;6588:91:12;6164:521;6112:573;;:::o;16818:141::-;1531:13:4;:11;:13::i;:::-;16895:15:12::1;16878:13;;:32;;16870:41;;;::::0;::::1;;16937:15;16921:13;:31:::0;16818:141::o;6691:536::-;-1:-1:-1;;;;;6763:19:12;;6755:65;;;;-1:-1:-1;;;6755:65:12;;12578:2:13;6755:65:12;;;12560:21:13;12617:2;12597:18;;;12590:30;12656:34;12636:18;;;12629:62;-1:-1:-1;;;12707:18:13;;;12700:31;12748:19;;6755:65:12;12376:397:13;6755:65:12;6842:7;6831;;:18;;;;;;;:::i;:::-;;;;-1:-1:-1;6860:25:12;;-1:-1:-1;6888:31:12;6911:7;6888:22;:31::i;:::-;-1:-1:-1;;;;;6933:29:12;;;;;;:22;:29;;;;;;6860:59;;-1:-1:-1;6933:29:12;;6929:157;;;7003:7;6978:21;;:32;;;;;;;:::i;:::-;;;;-1:-1:-1;7044:31:12;;-1:-1:-1;7067:7:12;7044:22;:31::i;:::-;7024:51;;6929:157;-1:-1:-1;;;;;7096:16:12;;;;;;:9;:16;;;;;:37;;7116:17;;7096:16;:37;;7116:17;;7096:37;:::i;:::-;;;;-1:-1:-1;;7149:20:12;;1924:25:13;;;-1:-1:-1;;;;;7149:20:12;;;;;1912:2:13;1897:18;7149:20:12;;;;;;;7184:36;;1924:25:13;;;7208:1:12;;-1:-1:-1;;;;;7184:36:12;;;-1:-1:-1;;;;;;;;;;;7184:36:12;1912:2:13;1897:18;7184:36:12;1778:177:13;12116:171:12;12191:7;12217:63;918:4;12217:36;12234:18;;12217:12;:16;;:36;;;;:::i;:::-;:40;;:63::i;3166:281::-;1531:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;3237:17:12;::::1;3229:59;;;::::0;-1:-1:-1;;;3229:59:12;;12980:2:13;3229:59:12::1;::::0;::::1;12962:21:13::0;13019:2;12999:18;;;12992:30;13058:31;13038:18;;;13031:59;13107:18;;3229:59:12::1;12778:353:13::0;3229:59:12::1;3299:12;3325:3;-1:-1:-1::0;;;;;3317:17:12::1;3342:21;3317:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3298:70;;;3382:7;3378:63;;3405:25;::::0;-1:-1:-1;;;3405:25:12;;13548:2:13;3405:25:12::1;::::0;::::1;13530:21:13::0;13587:2;13567:18;;;13560:30;-1:-1:-1;;;13606:18:13;;;13599:45;13661:18;;3405:25:12::1;13346:339:13::0;3378:63:12::1;3219:228;3166:281:::0;:::o;9992:661::-;1239:19:5;:17;:19::i;:::-;1907:10:12::1;1890:28;::::0;;;:16:::1;:28;::::0;;;;;::::1;;::::0;:53:::1;;-1:-1:-1::0;1710:6:4;;-1:-1:-1;;;;;1710:6:4;1922:10:12::1;:21;1890:53;1882:62;;;::::0;::::1;;10129:15:::2;::::0;:19;10125:108:::2;;10190:15;::::0;10207:14:::2;::::0;10164:58:::2;::::0;10190:15;-1:-1:-1;;;;;10207:14:12::2;10164:25;:58::i;:::-;-1:-1:-1::0;;;;;10247:27:12;::::2;;::::0;;;:22:::2;:27;::::0;;;;;::::2;;10243:279;;;10308:31;10331:7;10308:22;:31::i;:::-;-1:-1:-1::0;;;;;10290:14:12;::::2;;::::0;;;:9:::2;:14;::::0;;;;:49;;:14;;;:49:::2;::::0;;;::::2;:::i;:::-;::::0;;;-1:-1:-1;10243:279:12::2;::::0;-1:-1:-1;10243:279:12::2;;10388:31;10411:7;10388:22;:31::i;:::-;-1:-1:-1::0;;;;;10370:14:12;::::2;;::::0;;;:9:::2;:14;::::0;;;;:49;;:14;;;:49:::2;::::0;;;::::2;:::i;:::-;;;;;;;;10504:7;10479:21;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10243:279:12::2;10561:31;10584:7;10561:22;:31::i;:::-;10542:14;::::0;-1:-1:-1;;;;;10542:14:12::2;10532:25;::::0;;;:9:::2;:25;::::0;;;;:60;;:25;;;:60:::2;::::0;;;::::2;:::i;:::-;::::0;;;-1:-1:-1;;10617:14:12::2;::::0;10608:38:::2;::::0;1924:25:13;;;-1:-1:-1;;;;;10608:38:12;;::::2;::::0;10617:14:::2;::::0;-1:-1:-1;;;;;;;;;;;10608:38:12;1912:2:13;1897:18;10608:38:12::2;;;;;;;9992:661:::0;;:::o;14440:356::-;1531:13:4;:11;:13::i;:::-;14575:6:12::1;14570:220;14591:9;:16;14587:1;:20;14570:220;;;14652:14;::::0;14636:12;;-1:-1:-1;;;;;14652:14:12;;::::1;::::0;14636:9;;14646:1;;14636:12;::::1;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;14636:30:12::1;::::0;14628:89:::1;;;::::0;-1:-1:-1;;;14628:89:12;;14024:2:13;14628:89:12::1;::::0;::::1;14006:21:13::0;14063:2;14043:18;;;14036:30;14102:34;14082:18;;;14075:62;-1:-1:-1;;;14153:18:13;;;14146:44;14207:19;;14628:89:12::1;13822:410:13::0;14628:89:12::1;14731:48;14753:9;14763:1;14753:12;;;;;;;;:::i;:::-;;;;;;;14767:11;14731:21;:48::i;:::-;14609:3;;14570:220;;10659:334:::0;10784:17;10803:24;10894:14;;10877:13;;10859:15;:31;;;;:::i;:::-;10858:50;10843:65;;10932:9;;10918:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10918:23:12;;-1:-1:-1;;;;10659:334:12;;;;;:::o;13779:655::-;-1:-1:-1;;;;;13879:22:12;;13871:61;;;;-1:-1:-1;;;13871:61:12;;11073:2:13;13871:61:12;;;11055:21:13;11112:2;11092:18;;;11085:30;11151:28;11131:18;;;11124:56;11197:18;;13871:61:12;10871:350:13;13871:61:12;-1:-1:-1;;;;;13964:32:12;;13942:19;13964:32;;;:22;:32;;;;;;;;;14028:19;13987:8;14028:9;:19::i;:::-;14006:41;;14089:11;14071:29;;:14;:29;;;14067:361;;-1:-1:-1;;;;;14116:32:12;;;;;;:22;:32;;;;;:46;;-1:-1:-1;;14116:46:12;;;;;;;14185:15;;:30;;;;;14204:11;14185:30;14181:237;;;14263:11;14238:21;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;14181:237:12;;-1:-1:-1;14181:237:12;;14316:14;:30;;;;;14335:11;14334:12;14316:30;14312:106;;;14392:11;14367:21;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;14312:106:12;13852:582;;13779:655;;:::o;3675:384::-;-1:-1:-1;;;;;3779:32:12;;3756:7;3779:32;;;:22;:32;;;;;;;;3775:218;;;3843:14;;-1:-1:-1;;;;;3843:14:12;;;3831:26;;;;3827:92;;3884:20;:18;:20::i;3827:92::-;-1:-1:-1;;;;;3962:19:12;;;;;;:9;:19;;;;;;3939:43;;:22;:43::i;2293:101:4:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;13564:209:12:-:0;1531:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;13668:19:12;::::1;13660:59;;;::::0;-1:-1:-1;;;13660:59:12;;14439:2:13;13660:59:12::1;::::0;::::1;14421:21:13::0;14478:2;14458:18;;;14451:30;14517:29;14497:18;;;14490:57;14564:18;;13660:59:12::1;14237:351:13::0;13660:59:12::1;-1:-1:-1::0;;;;;13729:23:12;;;::::1;;::::0;;;:16:::1;:23;::::0;;;;:37;;-1:-1:-1;;13729:37:12::1;::::0;::::1;;::::0;;;::::1;::::0;;13564:209::o;15032:248::-;1531:13:4;:11;:13::i;:::-;15158:6:12::1;15153:121;15174:9;:16;15170:1;:20;15153:121;;;15211:52;15237:9;15247:1;15237:12;;;;;;;;:::i;:::-;;;;;;;15251:11;15211:25;:52::i;:::-;15192:3;;15153:121;;13255:303:::0;1531:13:4;:11;:13::i;:::-;-1:-1:-1;;;;;13347:21:12;::::1;13339:68;;;::::0;-1:-1:-1;;;13339:68:12;;14795:2:13;13339:68:12::1;::::0;::::1;14777:21:13::0;14834:2;14814:18;;;14807:30;14873:34;14853:18;;;14846:62;-1:-1:-1;;;14924:18:13;;;14917:32;14966:19;;13339:68:12::1;14593:398:13::0;13339:68:12::1;-1:-1:-1::0;;;;;13417:16:12;::::1;;::::0;;;:7:::1;:16;::::0;;;;:28;;-1:-1:-1;;13417:28:12::1;::::0;::::1;;;::::0;;13455:41:::1;13417:16:::0;:28;13455:21:::1;:41::i;:::-;13506:45;13532:7;13541:9;13506:25;:45::i;12887:233::-:0;1531:13:4;:11;:13::i;:::-;808:5:12::1;12991:11;:37;;12983:96;;;;-1:-1:-1::0;;;12983:96:12::1;;;;;;;:::i;:::-;13089:10;:24:::0;12887:233::o;16965:59::-;1531:13:4;:11;:13::i;:::-;17009:8:12::1;:6;:8::i;17136:83::-:0;17179:7;17205;1710:6:4;;-1:-1:-1;;;;;1710:6:4;;1638:85;12297:155:12;12366:7;12392:53;860:4;12392:33;:6;918:4;12392:10;:33::i;962:29::-;;;;;;;:::i;9764:222::-;9873:7;9854:15;;:26;;9846:68;;;;-1:-1:-1;;;9846:68:12;;15614:2:13;9846:68:12;;;15596:21:13;15653:2;15633:18;;;15626:30;15692:31;15672:18;;;15665:59;15741:18;;9846:68:12;15412:353:13;9846:68:12;9943:7;9924:15;;:26;;;;;;;:::i;:::-;;;;-1:-1:-1;9960:19:12;;-1:-1:-1;9966:3:12;9971:7;9960:5;:19::i;5444:273::-;5538:4;5554:135;5563:10;5575:8;5584:95;5622:16;5584:95;;;;;;;;;;;;;;;;;5596:10;5584:23;;;;:11;:23;;;;;;;;-1:-1:-1;;;;;5584:33:12;;;;;;;;;;;:95;:37;:95::i;4191:165::-;4270:4;4286:42;4296:10;4308;4320:7;4286:9;:42::i;12505:255::-;1531:13:4;:11;:13::i;:::-;12640:4:12::1;12624:12;:20;;12603:114;;;;-1:-1:-1::0;;;12603:114:12::1;;;;;;;:::i;:::-;12727:11;:26:::0;12505:255::o;13126:123::-;1531:13:4;:11;:13::i;:::-;13210:14:12::1;:32:::0;13126:123::o;17225:216::-;17363:14;;-1:-1:-1;;;;;17363:14:12;17276:7;17353:25;;;:9;:25;;;;;;17276:7;;17317:71;;:22;:71::i;:::-;17295:93;;17423:11;17405:15;;:29;;;;:::i;:::-;17398:36;;;17225:216;:::o;15286:1526::-;2261:21:6;:19;:21::i;:::-;1239:19:5::1;:17;:19::i;:::-;15479:8:12::2;:15;15456:12;:19;:38;15448:73;;;::::0;-1:-1:-1;;;15448:73:12;;15972:2:13;15448:73:12::2;::::0;::::2;15954:21:13::0;16011:2;15991:18;;;15984:30;-1:-1:-1;;;16030:18:13;;;16023:52;16092:18;;15448:73:12::2;15770:346:13::0;15448:73:12::2;15532:19;15570:9:::0;15565:97:::2;15589:8;:15;15585:1;:19;15565:97;;;15640:8;15649:1;15640:11;;;;;;;;:::i;:::-;;;;;;;15625:26;;;;;:::i;:::-;::::0;-1:-1:-1;15606:3:12::2;;15565:97;;;;15709:11;15684:21;15694:10;15684:9;:21::i;:::-;:36;;15676:69;;;::::0;-1:-1:-1;;;15676:69:12;;16323:2:13;15676:69:12::2;::::0;::::2;16305:21:13::0;16362:2;16342:18;;;16335:30;-1:-1:-1;;;16381:18:13;;;16374:50;16441:18;;15676:69:12::2;16121:344:13::0;15676:69:12::2;15761:9;15756:1050;15780:12;:19;15776:1;:23;15756:1050;;;15848:8;15857:1;15848:11;;;;;;;;:::i;:::-;;;;;;;15824:21;15834:10;15824:9;:21::i;:::-;:35;15820:976;;;15906:10;15883:34;::::0;;;:22:::2;:34;::::0;;;;;::::2;;15879:398;;;15966:81;16014:8;16023:1;16014:11;;;;;;;;:::i;:::-;;;;;;;15966:22;:81::i;:::-;15951:10;15941:21;::::0;;;:9:::2;:21;::::0;;;;:106;;:21;;;:106:::2;::::0;;;::::2;:::i;:::-;;;;;;;;16094:8;16103:1;16094:11;;;;;;;;:::i;:::-;;;;;;;16069:21;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;15879:398:12::2;::::0;-1:-1:-1;15879:398:12::2;;16177:81;16225:8;16234:1;16225:11;;;;;;;;:::i;16177:81::-;16162:10;16152:21;::::0;;;:9:::2;:21;::::0;;;;:106;;:21;;;:106:::2;::::0;;;::::2;:::i;:::-;::::0;;;-1:-1:-1;;15879:398:12::2;16299:22;:39;16322:12;16335:1;16322:15;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;;;-1:-1:-1;;;;;16299:39:12::2;::::0;;;::::2;::::0;;;;;;-1:-1:-1;16299:39:12;;::::2;;16295:413;;;16438:35;16461:8;16470:1;16461:11;;;;;;;;:::i;16438:35::-;16362:9;:72;16397:12;16410:1;16397:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;16362:72:12::2;-1:-1:-1::0;;;;;16362:72:12::2;;;;;;;;;;;;;:111;;;;;;;:::i;:::-;;;;;;;;16520:8;16529:1;16520:11;;;;;;;;:::i;:::-;;;;;;;16495:21;;:36;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;16295:413:12::2;::::0;-1:-1:-1;16295:413:12::2;;16608:81;16656:8;16665:1;16656:11;;;;;;;;:::i;16608:81::-;16578:9;:26;16588:12;16601:1;16588:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;16578:26:12::2;-1:-1:-1::0;;;;;16578:26:12::2;;;;;;;;;;;;;:111;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16295:413:12::2;16752:12;16765:1;16752:15;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;16731:50:12::2;16740:10;-1:-1:-1::0;;;;;16731:50:12::2;-1:-1:-1::0;;;;;;;;;;;16769:8:12::2;16778:1;16769:11;;;;;;;;:::i;:::-;;;;;;;16731:50;;;;1924:25:13::0;;1912:2;1897:18;;1778:177;16731:50:12::2;;;;;;;;15820:976;15801:3;;15756:1050;;;;15438:1374;2303:20:6::0;1716:1;2809:22;;2629:209;2543:215:4;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:4;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:4;;2700:1:::1;2672:31;::::0;::::1;3541:51:13::0;3514:18;;2672:31:4::1;3395:203:13::0;2623:91:4::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;4959:201:10:-;5045:7;5104:12;5096:6;;;;5088:29;;;;-1:-1:-1;;;5088:29:10;;;;;;;;:::i;:::-;-1:-1:-1;;;5138:5:10;;;4959:201::o;1767:106:5:-;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:5;;16672:2:13;1828:38:5;;;16654:21:13;16711:2;16691:18;;;16684:30;-1:-1:-1;;;16730:18:13;;;16723:46;16786:18;;1828:38:5;16470:340:13;2755:96:10;2813:7;2839:5;2843:1;2839;:5;:::i;:::-;2832:12;2755:96;-1:-1:-1;;;2755:96:10:o;1796:162:4:-;1710:6;;-1:-1:-1;;;;;1710:6:4;735:10:9;1855:23:4;1851:101;;1901:40;;-1:-1:-1;;;1901:40:4;;735:10:9;1901:40:4;;;3541:51:13;3514:18;;1901:40:4;3395:203:13;2433:117:5;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:5::1;::::0;;2521:22:::1;735:10:9::0;2530:12:5::1;2521:22;::::0;-1:-1:-1;;;;;3559:32:13;;;3541:51;;3529:2;3514:18;2521:22:5::1;;;;;;;2433:117::o:0;11489:598:12:-;1239:19:5;:17;:19::i;:::-;11549:13:12::1;808:5;860:4;11566:10;;:27;;;;:::i;:::-;11565:54;;;;:::i;:::-;11549:70;;11630:25;11668:21;;11658:7;;:31;;;;:::i;:::-;11630:59:::0;-1:-1:-1;860:4:12::1;11756:22;11773:5:::0;860:4;11756:22:::1;:::i;:::-;11734:18;;:45;;;;:::i;:::-;11733:76;;;;:::i;:::-;11700:18;:109:::0;11819:22:::1;860:4;11878:22;11895:5:::0;860:4;11878:22:::1;:::i;:::-;11845:56;::::0;:17;:56:::1;:::i;:::-;11844:75;;;;:::i;:::-;11819:100:::0;-1:-1:-1;11930:26:12::1;11959:34;11819:100:::0;11959:17;:34:::1;:::i;:::-;11930:63;;12023:18;12004:15;;:37;;;;;;;:::i;:::-;;;;;;;;12062:18;12051:7;;:29;;;;;;;:::i;3465:96:10:-:0;3523:7;3549:5;3553:1;3549;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;2912:187:4:-;3004:6;;;-1:-1:-1;;;;;3020:17:4;;;-1:-1:-1;;;;;;3020:17:4;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;2186:115:5:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:5::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;735:10:9::0;;656:96;2336:287:6;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:6;;17017:2:13;2460:63:6;;;16999:21:13;17056:2;17036:18;;;17029:30;17095:33;17075:18;;;17068:61;17146:18;;2460:63:6;16815:355:13;2460:63:6;1759:1;2598:7;:18;2336:287::o;1945:106:5:-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:5;;17377:2:13;2003:41:5;;;17359:21:13;17416:2;17396:18;;;17389:30;-1:-1:-1;;;17435:18:13;;;17428:50;17495:18;;2003:41:5;17175:344:13;14:289;56:3;94:5;88:12;121:6;116:3;109:19;177:6;170:4;163:5;159:16;152:4;147:3;143:14;137:47;229:1;222:4;213:6;208:3;204:16;200:27;193:38;292:4;285:2;281:7;276:2;268:6;264:15;260:29;255:3;251:39;247:50;240:57;;;14:289;;;;:::o;308:220::-;457:2;446:9;439:21;420:4;477:45;518:2;507:9;503:18;495:6;477:45;:::i;533:173::-;601:20;;-1:-1:-1;;;;;650:31:13;;640:42;;630:70;;696:1;693;686:12;630:70;533:173;;;:::o;711:300::-;779:6;787;840:2;828:9;819:7;815:23;811:32;808:52;;;856:1;853;846:12;808:52;879:29;898:9;879:29;:::i;:::-;869:39;977:2;962:18;;;;949:32;;-1:-1:-1;;;711:300:13:o;1208:374::-;1285:6;1293;1301;1354:2;1342:9;1333:7;1329:23;1325:32;1322:52;;;1370:1;1367;1360:12;1322:52;1393:29;1412:9;1393:29;:::i;:::-;1383:39;;1441:38;1475:2;1464:9;1460:18;1441:38;:::i;:::-;1208:374;;1431:48;;-1:-1:-1;;;1548:2:13;1533:18;;;;1520:32;;1208:374::o;1587:186::-;1646:6;1699:2;1687:9;1678:7;1674:23;1670:32;1667:52;;;1715:1;1712;1705:12;1667:52;1738:29;1757:9;1738:29;:::i;2149:160::-;2214:20;;2270:13;;2263:21;2253:32;;2243:60;;2299:1;2296;2289:12;2314:254;2379:6;2387;2440:2;2428:9;2419:7;2415:23;2411:32;2408:52;;;2456:1;2453;2446:12;2408:52;2479:29;2498:9;2479:29;:::i;:::-;2469:39;;2527:35;2558:2;2547:9;2543:18;2527:35;:::i;:::-;2517:45;;2314:254;;;;;:::o;2573:226::-;2632:6;2685:2;2673:9;2664:7;2660:23;2656:32;2653:52;;;2701:1;2698;2691:12;2653:52;-1:-1:-1;2746:23:13;;2573:226;-1:-1:-1;2573:226:13:o;2804:586::-;2874:6;2882;2935:2;2923:9;2914:7;2910:23;2906:32;2903:52;;;2951:1;2948;2941:12;2903:52;2991:9;2978:23;3024:18;3016:6;3013:30;3010:50;;;3056:1;3053;3046:12;3010:50;3079:22;;3132:4;3124:13;;3120:27;-1:-1:-1;3110:55:13;;3161:1;3158;3151:12;3110:55;3201:2;3188:16;3227:18;3219:6;3216:30;3213:50;;;3259:1;3256;3249:12;3213:50;3304:7;3299:2;3290:6;3286:2;3282:15;3278:24;3275:37;3272:57;;;3325:1;3322;3315:12;3272:57;3356:2;3348:11;;;;;3378:6;;-1:-1:-1;2804:586:13;-1:-1:-1;;;2804:586:13:o;3603:127::-;3664:10;3659:3;3655:20;3652:1;3645:31;3695:4;3692:1;3685:15;3719:4;3716:1;3709:15;3735:275;3806:2;3800:9;3871:2;3852:13;;-1:-1:-1;;3848:27:13;3836:40;;3906:18;3891:34;;3927:22;;;3888:62;3885:88;;;3953:18;;:::i;:::-;3989:2;3982:22;3735:275;;-1:-1:-1;3735:275:13:o;4015:183::-;4075:4;4108:18;4100:6;4097:30;4094:56;;;4130:18;;:::i;:::-;-1:-1:-1;4175:1:13;4171:14;4187:4;4167:25;;4015:183::o;4203:675::-;4257:5;4310:3;4303:4;4295:6;4291:17;4287:27;4277:55;;4328:1;4325;4318:12;4277:55;4368:6;4355:20;4395:64;4411:47;4451:6;4411:47;:::i;:::-;4395:64;:::i;:::-;4483:3;4507:6;4502:3;4495:19;4539:4;4534:3;4530:14;4523:21;;4600:4;4590:6;4587:1;4583:14;4575:6;4571:27;4567:38;4553:52;;4628:3;4620:6;4617:15;4614:35;;;4645:1;4642;4635:12;4614:35;4681:4;4673:6;4669:17;4695:152;4711:6;4706:3;4703:15;4695:152;;;4779:23;4798:3;4779:23;:::i;:::-;4767:36;;4832:4;4823:14;;;;4728;4695:152;;;-1:-1:-1;4865:7:13;4203:675;-1:-1:-1;;;;;4203:675:13:o;4883:416::-;4973:6;4981;5034:2;5022:9;5013:7;5009:23;5005:32;5002:52;;;5050:1;5047;5040:12;5002:52;5090:9;5077:23;5123:18;5115:6;5112:30;5109:50;;;5155:1;5152;5145:12;5109:50;5178:61;5231:7;5222:6;5211:9;5207:22;5178:61;:::i;:::-;5168:71;;;5258:35;5289:2;5278:9;5274:18;5258:35;:::i;5304:299::-;5487:6;5480:14;5473:22;5462:9;5455:41;5532:2;5527;5516:9;5512:18;5505:30;5436:4;5552:45;5593:2;5582:9;5578:18;5570:6;5552:45;:::i;:::-;5544:53;5304:299;-1:-1:-1;;;;5304:299:13:o;5608:300::-;5676:6;5684;5737:2;5725:9;5716:7;5712:23;5708:32;5705:52;;;5753:1;5750;5743:12;5705:52;5798:23;;;-1:-1:-1;5864:38:13;5898:2;5883:18;;5864:38;:::i;5913:260::-;5981:6;5989;6042:2;6030:9;6021:7;6017:23;6013:32;6010:52;;;6058:1;6055;6048:12;6010:52;6081:29;6100:9;6081:29;:::i;:::-;6071:39;;6129:38;6163:2;6152:9;6148:18;6129:38;:::i;6178:1182::-;6296:6;6304;6357:2;6345:9;6336:7;6332:23;6328:32;6325:52;;;6373:1;6370;6363:12;6325:52;6413:9;6400:23;6446:18;6438:6;6435:30;6432:50;;;6478:1;6475;6468:12;6432:50;6501:61;6554:7;6545:6;6534:9;6530:22;6501:61;:::i;:::-;6491:71;;;6615:2;6604:9;6600:18;6587:32;6644:18;6634:8;6631:32;6628:52;;;6676:1;6673;6666:12;6628:52;6699:24;;6754:4;6746:13;;6742:27;-1:-1:-1;6732:55:13;;6783:1;6780;6773:12;6732:55;6823:2;6810:16;6846:64;6862:47;6902:6;6862:47;:::i;6846:64::-;6932:3;6956:6;6951:3;6944:19;6988:2;6983:3;6979:12;6972:19;;7043:2;7033:6;7030:1;7026:14;7022:2;7018:23;7014:32;7000:46;;7069:7;7061:6;7058:19;7055:39;;;7090:1;7087;7080:12;7055:39;7122:2;7118;7114:11;7103:22;;7134:196;7150:6;7145:3;7142:15;7134:196;;;7240:17;;7270:18;;7317:2;7167:12;;;;7308;;;;7134:196;;;7349:5;7339:15;;;;;;6178:1182;;;;;:::o;7365:380::-;7444:1;7440:12;;;;7487;;;7508:61;;7562:4;7554:6;7550:17;7540:27;;7508:61;7615:2;7607:6;7604:14;7584:18;7581:38;7578:161;;7661:10;7656:3;7652:20;7649:1;7642:31;7696:4;7693:1;7686:15;7724:4;7721:1;7714:15;7578:161;;7365:380;;;:::o;8558:127::-;8619:10;8614:3;8610:20;8607:1;8600:31;8650:4;8647:1;8640:15;8674:4;8671:1;8664:15;8690:125;8755:9;;;8776:10;;;8773:36;;;8789:18;;:::i;10343:128::-;10410:9;;;10431:11;;;10428:37;;;10445:18;;:::i;10476:168::-;10549:9;;;10580;;10597:15;;;10591:22;;10577:37;10567:71;;10618:18;;:::i;10649:217::-;10689:1;10715;10705:132;;10759:10;10754:3;10750:20;10747:1;10740:31;10794:4;10791:1;10784:15;10822:4;10819:1;10812:15;10705:132;-1:-1:-1;10851:9:13;;10649:217::o;13690:127::-;13751:10;13746:3;13742:20;13739:1;13732:31;13782:4;13779:1;13772:15;13806:4;13803:1;13796:15;14996:411;15198:2;15180:21;;;15237:2;15217:18;;;15210:30;15276:34;15271:2;15256:18;;15249:62;-1:-1:-1;;;15342:2:13;15327:18;;15320:45;15397:3;15382:19;;14996:411::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2240600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"PERCENTAGE_DENOMINATOR()": "261",
								"TOKEN_DECIMALS()": "306",
								"TOKEN_public_DECIMALS()": "305",
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_debaseTokenToFragment(uint256)": "infinite",
								"_excludedFromDebasing(address,bool)": "infinite",
								"_excludedFromHoldingLimit(address,bool)": "infinite",
								"_fragmentToDebaseToken(uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_sendTokensTreasuryWallet(uint256,address)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"_treasuryBalanceOf()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24686",
								"balanceOf(address)": "infinite",
								"balanceOfUnderlying(address)": "2646",
								"checkUpkeep(bytes)": "infinite",
								"claimFromTreasury(address,uint256)": "infinite",
								"debaseDuration()": "2428",
								"debaseRate()": "2363",
								"decimals()": "2401",
								"decreaseAllowance(address,uint256)": "infinite",
								"excludeDebasingSupply()": "2427",
								"getOwner()": "2479",
								"holdingLimit()": "2384",
								"increaseAllowance(address,uint256)": "infinite",
								"isExcludedFromDebasing(address)": "2618",
								"isExcludedFromHoldingLimit(address)": "2617",
								"lastTimeStamp()": "2363",
								"lpPools(address)": "2597",
								"multiAirdropTokenRequested(address[],uint256[])": "infinite",
								"multiExcludedFromDebasing(address[],bool)": "infinite",
								"multiExcludedFromHoldingLimit(address[],bool)": "infinite",
								"name()": "infinite",
								"owner()": "2441",
								"pause()": "infinite",
								"paused()": "2436",
								"performUpkeep(bytes)": "infinite",
								"renounceOwnership()": "infinite",
								"sellTaxRate()": "2429",
								"setLastTime()": "26605",
								"symbol()": "infinite",
								"tokenScalingFactor()": "2405",
								"totalSupply()": "4582",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28465",
								"treasuryOperator(address)": "2596",
								"treasuryWallet()": "2404",
								"unpause()": "infinite",
								"updateDebaseDuration(uint256)": "24552",
								"updateDebaseRate(uint256)": "24646",
								"updateHoldingLimit(uint256)": "24620",
								"updateLPPool(address,bool)": "infinite",
								"updateSellTaxRate(uint256)": "24601",
								"updateTreasuryOperator(address,bool)": "infinite",
								"withdrawETH(address)": "infinite"
							},
							"internal": {
								"_debase()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1968,
									"end": 3125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2221,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 2211,
									"end": 2221,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2271,
									"end": 2322,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2232,
									"end": 2249,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2239,
									"end": 2249,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2232,
									"end": 2249,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2232,
									"end": 2249,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2232,
									"end": 2249,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 2232,
									"end": 2249,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2259,
									"end": 2265,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2259,
									"end": 2280,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 2268,
									"end": 2280,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2259,
									"end": 2265,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2259,
									"end": 2280,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 2259,
									"end": 2280,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2259,
									"end": 2280,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 2259,
									"end": 2280,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2302,
									"end": 2304,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 2290,
									"end": 2299,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2290,
									"end": 2304,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2325,
									"end": 2350,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 864,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 2325,
									"end": 2333,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2325,
									"end": 2350,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2325,
									"end": 2350,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2325,
									"end": 2350,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2325,
									"end": 2350,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 2315,
									"end": 2350,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2350,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2315,
									"end": 2350,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2360,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2360,
									"end": 2391,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2360,
									"end": 2391,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2360,
									"end": 2391,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 808,
									"end": 813,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "2710"
								},
								{
									"begin": 808,
									"end": 813,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2431,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2431,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2428,
									"end": 2431,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 2418,
									"end": 2431,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2418,
									"end": 2431,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2431,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2431,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2417,
									"end": 2457,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2417,
									"end": 2457,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2417,
									"end": 2457,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2417,
									"end": 2457,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2417,
									"end": 2457,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2417,
									"end": 2457,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2417,
									"end": 2457,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2402,
									"end": 2414,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 2402,
									"end": 2457,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2479,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "C"
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2468,
									"end": 2494,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2504,
									"end": 2514,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "D"
								},
								{
									"begin": 2504,
									"end": 2528,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2504,
									"end": 2528,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2504,
									"end": 2528,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 860,
									"end": 864,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 2539,
									"end": 2557,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "E"
								},
								{
									"begin": 2539,
									"end": 2574,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2601,
									"end": 2606,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "15180"
								},
								{
									"begin": 2584,
									"end": 2598,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "F"
								},
								{
									"begin": 2584,
									"end": 2606,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2616,
									"end": 2631,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 2616,
									"end": 2635,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2662,
									"end": 2677,
									"modifierDepth": 1,
									"name": "TIMESTAMP",
									"source": 12
								},
								{
									"begin": 2646,
									"end": 2659,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 2646,
									"end": 2677,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2702,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 2688,
									"end": 2720,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2720,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2688,
									"end": 2720,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2688,
									"end": 2720,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2720,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2720,
									"modifierDepth": 1,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2720,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2688,
									"end": 2720,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2731,
									"end": 2771,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2753,
									"end": 2764,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2731,
									"end": 2752,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2731,
									"end": 2771,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2731,
									"end": 2771,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "25"
								},
								{
									"begin": 2731,
									"end": 2771,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2825,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2807,
									"end": 2818,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2820,
									"end": 2824,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2781,
									"end": 2806,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2781,
									"end": 2825,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2781,
									"end": 2825,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 2781,
									"end": 2825,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2871,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 2857,
									"end": 2871,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2835,
									"end": 2878,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 2835,
									"end": 2878,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2857,
									"end": 2871,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2857,
									"end": 2871,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2835,
									"end": 2856,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2835,
									"end": 2878,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2835,
									"end": 2878,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 2835,
									"end": 2878,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 2928,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 2914,
									"end": 2928,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2935,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2888,
									"end": 2935,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2914,
									"end": 2928,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2914,
									"end": 2928,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2888,
									"end": 2913,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 2888,
									"end": 2935,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2888,
									"end": 2935,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 2888,
									"end": 2935,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2994,
									"end": 3001,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 2994,
									"end": 3001,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2971,
									"end": 3002,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2971,
									"end": 3002,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2971,
									"end": 2993,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2971,
									"end": 3002,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2971,
									"end": 3002,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 2971,
									"end": 3002,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2968,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2968,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2955,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 2946,
									"end": 2968,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 2968,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2946,
									"end": 3002,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3013,
									"end": 3020,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 3013,
									"end": 3018,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 3013,
									"end": 3020,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3013,
									"end": 3020,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 3013,
									"end": 3020,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3057,
									"end": 3068,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3053,
									"end": 3054,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 3070,
									"end": 3077,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 3070,
									"end": 3077,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 5515,
									"end": 5540,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5515,
									"end": 5540,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5503,
									"end": 5505,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5488,
									"end": 5506,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5488,
									"end": 5506,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5369,
									"end": 5546,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3036,
									"end": 3078,
									"modifierDepth": 1,
									"name": "LOG3",
									"source": 12
								},
								{
									"begin": 3088,
									"end": 3118,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3088,
									"end": 3105,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 3088,
									"end": 3118,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3088,
									"end": 3118,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 3088,
									"end": 3118,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1968,
									"end": 3125,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "126"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 4,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 13779,
									"end": 14434,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 13779,
									"end": 14434,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13879,
									"end": 13901,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13879,
									"end": 13901,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5753,
									"end": 5755,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5735,
									"end": 5756,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5792,
									"end": 5794,
									"name": "PUSH",
									"source": 13,
									"value": "1A"
								},
								{
									"begin": 5772,
									"end": 5790,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5772,
									"end": 5790,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5772,
									"end": 5790,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5765,
									"end": 5795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5831,
									"end": 5859,
									"name": "PUSH",
									"source": 13,
									"value": "4163636F756E742073686F756C646E2774206265207A65726F2E000000000000"
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5804,
									"end": 5860,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5877,
									"end": 5895,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5877,
									"end": 5895,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 5551,
									"end": 5901,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 13871,
									"end": 13932,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 13942,
									"end": 13961,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13986,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 13964,
									"end": 13996,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14028,
									"end": 14047,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 13987,
									"end": 13995,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 14028,
									"end": 14037,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 14028,
									"end": 14047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 14028,
									"end": 14047,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 14028,
									"end": 14047,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14006,
									"end": 14047,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14006,
									"end": 14047,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14089,
									"end": 14100,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14071,
									"end": 14100,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14071,
									"end": 14100,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14071,
									"end": 14085,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14071,
									"end": 14100,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14071,
									"end": 14100,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14071,
									"end": 14100,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 14067,
									"end": 14428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 14067,
									"end": 14428,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14138,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14148,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14116,
									"end": 14162,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14200,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14200,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14204,
									"end": 14215,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 14185,
									"end": 14215,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 14263,
									"end": 14274,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14259,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 14238,
									"end": 14259,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 14238,
									"end": 14274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14238,
									"end": 14274,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 14181,
									"end": 14418,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14316,
									"end": 14330,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 14335,
									"end": 14346,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14334,
									"end": 14346,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 14316,
									"end": 14346,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14312,
									"end": 14418,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14312,
									"end": 14418,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 14312,
									"end": 14418,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 14392,
									"end": 14403,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14388,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 14367,
									"end": 14388,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 14367,
									"end": 14403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14367,
									"end": 14403,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14312,
									"end": 14418,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 14312,
									"end": 14418,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 13852,
									"end": 14434,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13852,
									"end": 14434,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13779,
									"end": 14434,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13779,
									"end": 14434,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 13779,
									"end": 14434,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 14802,
									"end": 15026,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 14802,
									"end": 15026,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14906,
									"end": 14928,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14906,
									"end": 14928,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5753,
									"end": 5755,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5735,
									"end": 5756,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5792,
									"end": 5794,
									"name": "PUSH",
									"source": 13,
									"value": "1A"
								},
								{
									"begin": 5772,
									"end": 5790,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5772,
									"end": 5790,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5772,
									"end": 5790,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5765,
									"end": 5795,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5831,
									"end": 5859,
									"name": "PUSH",
									"source": 13,
									"value": "4163636F756E742073686F756C646E2774206265207A65726F2E000000000000"
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5811,
									"end": 5829,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5804,
									"end": 5860,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5877,
									"end": 5895,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 5877,
									"end": 5895,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 5551,
									"end": 5901,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 14898,
									"end": 14959,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 14995,
									"name": "PUSH",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15005,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 14969,
									"end": 15019,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 14802,
									"end": 15026,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12297,
									"end": 12452,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 12297,
									"end": 12452,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12366,
									"end": 12373,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12392,
									"end": 12445,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 860,
									"end": 864,
									"name": "PUSH",
									"source": 12,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 12392,
									"end": 12425,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 12392,
									"end": 12398,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 918,
									"end": 922,
									"name": "PUSH",
									"source": 12,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 12392,
									"end": 12402,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 12392,
									"end": 12425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12392,
									"end": 12425,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 12392,
									"end": 12425,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12392,
									"end": 12429,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12392,
									"end": 12429,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 12392,
									"end": 12445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12392,
									"end": 12445,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 12392,
									"end": 12445,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12385,
									"end": 12445,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 12297,
									"end": 12452,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 12297,
									"end": 12452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 16965,
									"end": 17024,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 16965,
									"end": 17024,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 17009,
									"end": 17017,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 17009,
									"end": 17015,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "70"
								},
								{
									"begin": 17009,
									"end": 17017,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 17009,
									"end": 17017,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 17009,
									"end": 17017,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 16965,
									"end": 17024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 1531,
									"end": 1542,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1531,
									"end": 1544,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 1531,
									"end": 1544,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2627,
									"end": 2649,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2627,
									"end": 2649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2700,
									"end": 2701,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2703,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2271,
									"end": 2322,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2672,
									"end": 2703,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2125,
									"end": 2328,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2623,
									"end": 2714,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2742,
									"end": 2750,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2741,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2723,
									"end": 2751,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2723,
									"end": 2751,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2758,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2543,
									"end": 2758,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3675,
									"end": 4059,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 3675,
									"end": 4059,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3756,
									"end": 3763,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3801,
									"name": "PUSH",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3779,
									"end": 3811,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3775,
									"end": 3993,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3775,
									"end": 3993,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3775,
									"end": 3993,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3843,
									"end": 3857,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3831,
									"end": 3857,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3831,
									"end": 3857,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3831,
									"end": 3857,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3831,
									"end": 3857,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 3919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3827,
									"end": 3919,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3884,
									"end": 3904,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3884,
									"end": 3902,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 3884,
									"end": 3904,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3827,
									"end": 3919,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 3827,
									"end": 3919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3971,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 3962,
									"end": 3981,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 3939,
									"end": 3982,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 3939,
									"end": 3982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3939,
									"end": 3961,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3939,
									"end": 3982,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3523,
									"end": 3530,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3553,
									"end": 3554,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3550,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 3549,
									"end": 3554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3549,
									"end": 3554,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3542,
									"end": 3554,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 3465,
									"end": 3561,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3465,
									"end": 3561,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3850,
									"end": 3946,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3908,
									"end": 3915,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3938,
									"end": 3939,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3934,
									"end": 3935,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3934,
									"end": 3939,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3934,
									"end": 3939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1796,
									"end": 1958,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1710,
									"end": 1716,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1855,
									"end": 1878,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 1851,
									"end": 1952,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "118CDAA7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2271,
									"end": 2322,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1901,
									"end": 1941,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 2125,
									"end": 2328,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 2186,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "98"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 1239,
									"end": 1258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "tag",
									"source": 5,
									"value": "98"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2255,
									"end": 2259,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2245,
									"end": 2259,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2245,
									"end": 2259,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "101"
								},
								{
									"begin": 2281,
									"end": 2293,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2274,
									"end": 2294,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2289,
									"end": 2321,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2321,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2289,
									"end": 2321,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2271,
									"end": 2322,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2271,
									"end": 2322,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2259,
									"end": 2261,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2244,
									"end": 2262,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2274,
									"end": 2294,
									"modifierDepth": 1,
									"name": "LOG1",
									"source": 5
								},
								{
									"begin": 2186,
									"end": 2301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 17225,
									"end": 17441,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 17225,
									"end": 17441,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 17363,
									"end": 17377,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 17363,
									"end": 17377,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17363,
									"end": 17377,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 17276,
									"end": 17283,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 17353,
									"end": 17362,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 17353,
									"end": 17378,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 17276,
									"end": 17283,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 17276,
									"end": 17283,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 17317,
									"end": 17388,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 17317,
									"end": 17388,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 17317,
									"end": 17339,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 17317,
									"end": 17388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 17317,
									"end": 17388,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 17317,
									"end": 17388,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 17295,
									"end": 17388,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 17295,
									"end": 17388,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 17423,
									"end": 17434,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 17405,
									"end": 17420,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 17405,
									"end": 17420,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 17405,
									"end": 17434,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 17405,
									"end": 17434,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 17405,
									"end": 17434,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 17405,
									"end": 17434,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 17405,
									"end": 17434,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 17405,
									"end": 17434,
									"name": "tag",
									"source": 12,
									"value": "105"
								},
								{
									"begin": 17405,
									"end": 17434,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 17398,
									"end": 17434,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 17398,
									"end": 17434,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 17398,
									"end": 17434,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 17225,
									"end": 17441,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 17225,
									"end": 17441,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 12116,
									"end": 12287,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 12116,
									"end": 12287,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 12191,
									"end": 12198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 12217,
									"end": 12280,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 918,
									"end": 922,
									"name": "PUSH",
									"source": 12,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 12217,
									"end": 12253,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 12234,
									"end": 12252,
									"name": "PUSH",
									"source": 12,
									"value": "E"
								},
								{
									"begin": 12234,
									"end": 12252,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12229,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12233,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "63"
								},
								{
									"begin": 12217,
									"end": 12233,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12217,
									"end": 12233,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12233,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12253,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12253,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12253,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 12217,
									"end": 12253,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 12217,
									"end": 12253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "tag",
									"source": 5,
									"value": "99"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 6371,
									"end": 6373,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 6353,
									"end": 6374,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6410,
									"end": 6412,
									"name": "PUSH",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 6390,
									"end": 6408,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 6390,
									"end": 6408,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6390,
									"end": 6408,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6383,
									"end": 6413,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6429,
									"end": 6447,
									"name": "PUSH",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 6429,
									"end": 6447,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6429,
									"end": 6447,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6422,
									"end": 6468,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6485,
									"end": 6503,
									"name": "PUSH",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 6485,
									"end": 6503,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 6169,
									"end": 6509,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 13,
									"value": "129"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 13,
									"value": "131"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 13,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 13
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 953,
									"end": 966,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 953,
									"end": 966,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 995,
									"end": 1026,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 995,
									"end": 1026,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 985,
									"end": 1027,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 985,
									"end": 1027,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1041,
									"end": 1042,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1038,
									"end": 1039,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1031,
									"end": 1043,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 975,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1051,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1200,
									"end": 1206,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1208,
									"end": 1214,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1222,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1224,
									"end": 1230,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1232,
									"end": 1238,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1240,
									"end": 1246,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1248,
									"end": 1254,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1301,
									"end": 1304,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 1289,
									"end": 1298,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 1280,
									"end": 1287,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1276,
									"end": 1299,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1305,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1269,
									"end": 1322,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1269,
									"end": 1322,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 1269,
									"end": 1322,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1316,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1320,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1269,
									"end": 1322,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 1269,
									"end": 1322,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 1345,
									"end": 1361,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1373,
									"end": 1403,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1373,
									"end": 1403,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1370,
									"end": 1420,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1370,
									"end": 1420,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 1370,
									"end": 1420,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1416,
									"end": 1417,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1413,
									"end": 1414,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1406,
									"end": 1418,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1370,
									"end": 1420,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 1370,
									"end": 1420,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1439,
									"end": 1500,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 1492,
									"end": 1499,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1483,
									"end": 1489,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1472,
									"end": 1481,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 1468,
									"end": 1490,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1439,
									"end": 1500,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 1439,
									"end": 1500,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1439,
									"end": 1500,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 1439,
									"end": 1500,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1546,
									"end": 1548,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1531,
									"end": 1549,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1531,
									"end": 1549,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1525,
									"end": 1550,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1500,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1500,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1525,
									"end": 1550,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1562,
									"end": 1594,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1562,
									"end": 1594,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1559,
									"end": 1611,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1559,
									"end": 1611,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 1559,
									"end": 1611,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1607,
									"end": 1608,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1597,
									"end": 1609,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 1559,
									"end": 1611,
									"name": "tag",
									"source": 13,
									"value": "141"
								},
								{
									"begin": 1559,
									"end": 1611,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1630,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1674,
									"end": 1682,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1663,
									"end": 1672,
									"name": "DUP12",
									"source": 13
								},
								{
									"begin": 1659,
									"end": 1683,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1630,
									"end": 1693,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 1630,
									"end": 1693,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1630,
									"end": 1693,
									"name": "tag",
									"source": 13,
									"value": "142"
								},
								{
									"begin": 1630,
									"end": 1693,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1755,
									"end": 1757,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1734,
									"end": 1759,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1620,
									"end": 1693,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1620,
									"end": 1693,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1734,
									"end": 1759,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1802,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 1802,
									"end": 1851,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1847,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1832,
									"end": 1850,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1832,
									"end": 1850,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1802,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 1802,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1802,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "143"
								},
								{
									"begin": 1802,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1917,
									"end": 1920,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 1902,
									"end": 1921,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 1902,
									"end": 1921,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1896,
									"end": 1922,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2014,
									"end": 2017,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 1999,
									"end": 2018,
									"name": "DUP11",
									"source": 13
								},
								{
									"begin": 1999,
									"end": 2018,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1993,
									"end": 2019,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1792,
									"end": 1851,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1922,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1993,
									"end": 2019,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2064,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 2109,
									"end": 2112,
									"name": "PUSH",
									"source": 13,
									"value": "C0"
								},
								{
									"begin": 2094,
									"end": 2113,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 2094,
									"end": 2113,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2064,
									"end": 2114,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 2064,
									"end": 2114,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2064,
									"end": 2114,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 2064,
									"end": 2114,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2114,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2114,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP9",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP8",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 2120,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2713,
									"name": "tag",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 2333,
									"end": 2713,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 2408,
									"end": 2420,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2455,
									"end": 2467,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2455,
									"end": 2467,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2455,
									"end": 2467,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2476,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 2476,
									"end": 2537,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2530,
									"end": 2534,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 2522,
									"end": 2528,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2518,
									"end": 2535,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 2508,
									"end": 2535,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2508,
									"end": 2535,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2476,
									"end": 2537,
									"name": "tag",
									"source": 13,
									"value": "147"
								},
								{
									"begin": 2476,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2583,
									"end": 2585,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2575,
									"end": 2581,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2586,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2552,
									"end": 2570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2549,
									"end": 2587,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2546,
									"end": 2707,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 2546,
									"end": 2707,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2629,
									"end": 2639,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 2624,
									"end": 2627,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 2620,
									"end": 2640,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 2617,
									"end": 2618,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2610,
									"end": 2641,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2664,
									"end": 2668,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 2661,
									"end": 2662,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 2654,
									"end": 2669,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2692,
									"end": 2696,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2689,
									"end": 2690,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2682,
									"end": 2697,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2546,
									"end": 2707,
									"name": "tag",
									"source": 13,
									"value": "148"
								},
								{
									"begin": 2546,
									"end": 2707,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2546,
									"end": 2707,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2713,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2713,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2713,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2333,
									"end": 2713,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2844,
									"end": 3362,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2844,
									"end": 3362,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2946,
									"end": 2948,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2941,
									"end": 2944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2938,
									"end": 2949,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2935,
									"end": 3356,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2935,
									"end": 3356,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 2935,
									"end": 3356,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2982,
									"end": 2987,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2979,
									"end": 2980,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2972,
									"end": 2988,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3026,
									"end": 3030,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3023,
									"end": 3024,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3013,
									"end": 3031,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 3096,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3084,
									"end": 3094,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3080,
									"end": 3099,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3077,
									"end": 3078,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 3073,
									"end": 3100,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3067,
									"end": 3071,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3063,
									"end": 3101,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3132,
									"end": 3136,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3120,
									"end": 3130,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3117,
									"end": 3137,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3114,
									"end": 3161,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3114,
									"end": 3161,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 3114,
									"end": 3161,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3155,
									"end": 3159,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3114,
									"end": 3161,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 3114,
									"end": 3161,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3205,
									"end": 3208,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3201,
									"end": 3213,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3198,
									"end": 3199,
									"name": "PUSH",
									"source": 13,
									"value": "5"
								},
								{
									"begin": 3194,
									"end": 3214,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3188,
									"end": 3192,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3184,
									"end": 3215,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3174,
									"end": 3215,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3174,
									"end": 3215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "tag",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3283,
									"end": 3285,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3276,
									"end": 3281,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3273,
									"end": 3286,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3342,
									"end": 3343,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3344,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3328,
									"end": 3344,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3310,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3298,
									"end": 3311,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "153"
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 3265,
									"end": 3346,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3269,
									"end": 3272,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3269,
									"end": 3272,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2935,
									"end": 3356,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 2935,
									"end": 3356,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2844,
									"end": 3362,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2844,
									"end": 3362,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2844,
									"end": 3362,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2844,
									"end": 3362,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3538,
									"end": 4837,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 3538,
									"end": 4837,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3668,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3668,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3680,
									"end": 3710,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3680,
									"end": 3710,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3677,
									"end": 3733,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3677,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 3677,
									"end": 3733,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3713,
									"end": 3731,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 3713,
									"end": 3731,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 3713,
									"end": 3731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3713,
									"end": 3731,
									"name": "tag",
									"source": 13,
									"value": "159"
								},
								{
									"begin": 3713,
									"end": 3731,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3742,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 3832,
									"end": 3838,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3792,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 3824,
									"end": 3828,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3818,
									"end": 3829,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 3792,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "121"
								},
								{
									"begin": 3792,
									"end": 3830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3792,
									"end": 3830,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 3792,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3742,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 3742,
									"end": 3839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3742,
									"end": 3839,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 3742,
									"end": 3839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3888,
									"end": 3892,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3919,
									"end": 3921,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 3908,
									"end": 3922,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3908,
									"end": 3922,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3936,
									"end": 3937,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3931,
									"end": 4580,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3931,
									"end": 4580,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 3931,
									"end": 4580,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 3931,
									"end": 4580,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4624,
									"end": 4625,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4641,
									"end": 4647,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4638,
									"end": 4727,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4638,
									"end": 4727,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 4638,
									"end": 4727,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4693,
									"end": 4712,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4693,
									"end": 4712,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4693,
									"end": 4712,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4713,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4638,
									"end": 4727,
									"name": "tag",
									"source": 13,
									"value": "164"
								},
								{
									"begin": 4638,
									"end": 4727,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3495,
									"end": 3496,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3491,
									"end": 3502,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3491,
									"end": 3502,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3491,
									"end": 3502,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3487,
									"end": 3511,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3483,
									"end": 3512,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3473,
									"end": 3513,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3519,
									"end": 3520,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 3515,
									"end": 3526,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3515,
									"end": 3526,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3515,
									"end": 3526,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 3470,
									"end": 3527,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 4740,
									"end": 4821,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4740,
									"end": 4821,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 3901,
									"end": 4831,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 3901,
									"end": 4831,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3931,
									"end": 4580,
									"name": "tag",
									"source": 13,
									"value": "163"
								},
								{
									"begin": 3931,
									"end": 4580,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2791,
									"end": 2792,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2798,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2784,
									"end": 2798,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2784,
									"end": 2798,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2828,
									"end": 2832,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2815,
									"end": 2833,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2815,
									"end": 2833,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3967,
									"end": 3987,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3967,
									"end": 3987,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3967,
									"end": 3987,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "tag",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4099,
									"end": 4106,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4096,
									"end": 4097,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4093,
									"end": 4107,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4181,
									"end": 4200,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4181,
									"end": 4200,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4181,
									"end": 4200,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4175,
									"end": 4201,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4160,
									"end": 4202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4160,
									"end": 4202,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4288,
									"end": 4292,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4273,
									"end": 4293,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4273,
									"end": 4293,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4273,
									"end": 4293,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4273,
									"end": 4293,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4241,
									"end": 4242,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4229,
									"end": 4243,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4229,
									"end": 4243,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4229,
									"end": 4243,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4229,
									"end": 4243,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4115,
									"end": 4127,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "167"
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "tag",
									"source": 13,
									"value": "169"
								},
								{
									"begin": 4085,
									"end": 4307,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4089,
									"end": 4092,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 4341,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4326,
									"end": 4333,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4323,
									"end": 4342,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4521,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 4320,
									"end": 4521,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4396,
									"end": 4415,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4396,
									"end": 4415,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4396,
									"end": 4415,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4390,
									"end": 4416,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4479,
									"end": 4480,
									"name": "PUSH",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 4475,
									"end": 4489,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 4475,
									"end": 4489,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4475,
									"end": 4489,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4491,
									"end": 4494,
									"name": "PUSH",
									"source": 13,
									"value": "F8"
								},
								{
									"begin": 4471,
									"end": 4495,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4467,
									"end": 4504,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 4463,
									"end": 4505,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4448,
									"end": 4506,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4433,
									"end": 4507,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4433,
									"end": 4507,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4320,
									"end": 4521,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 4320,
									"end": 4521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4567,
									"end": 4568,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4551,
									"end": 4565,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4551,
									"end": 4565,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4551,
									"end": 4565,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4547,
									"end": 4569,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4534,
									"end": 4570,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4534,
									"end": 4570,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3538,
									"end": 4837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4842,
									"end": 4969,
									"name": "tag",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 4842,
									"end": 4969,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4903,
									"end": 4913,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 4898,
									"end": 4901,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 4894,
									"end": 4914,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4891,
									"end": 4892,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4884,
									"end": 4915,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4934,
									"end": 4938,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 4931,
									"end": 4932,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4924,
									"end": 4939,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4958,
									"end": 4962,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4955,
									"end": 4956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4948,
									"end": 4963,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4974,
									"end": 5142,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 4974,
									"end": 5142,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5047,
									"end": 5056,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5047,
									"end": 5056,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5047,
									"end": 5056,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5087,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5087,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5095,
									"end": 5110,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5095,
									"end": 5110,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5095,
									"end": 5110,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 5089,
									"end": 5111,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5089,
									"end": 5111,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 5075,
									"end": 5112,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5065,
									"end": 5136,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 5065,
									"end": 5136,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5116,
									"end": 5134,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 5116,
									"end": 5134,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 5116,
									"end": 5134,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5147,
									"end": 5364,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5147,
									"end": 5364,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5187,
									"end": 5188,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5213,
									"end": 5214,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5203,
									"end": 5335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 5203,
									"end": 5335,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5257,
									"end": 5267,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B71"
								},
								{
									"begin": 5252,
									"end": 5255,
									"name": "PUSH",
									"source": 13,
									"value": "E0"
								},
								{
									"begin": 5248,
									"end": 5268,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 5245,
									"end": 5246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5238,
									"end": 5269,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5292,
									"end": 5296,
									"name": "PUSH",
									"source": 13,
									"value": "12"
								},
								{
									"begin": 5289,
									"end": 5290,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 5282,
									"end": 5297,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5320,
									"end": 5324,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 5317,
									"end": 5318,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5310,
									"end": 5325,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 5203,
									"end": 5335,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 5203,
									"end": 5335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 5349,
									"end": 5358,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 5349,
									"end": 5358,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5147,
									"end": 5364,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5906,
									"end": 6031,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 5906,
									"end": 6031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5971,
									"end": 5980,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5971,
									"end": 5980,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5971,
									"end": 5980,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5992,
									"end": 6002,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5992,
									"end": 6002,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5992,
									"end": 6002,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 5989,
									"end": 6025,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5989,
									"end": 6025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 5989,
									"end": 6025,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6005,
									"end": 6023,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 6005,
									"end": 6023,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 6005,
									"end": 6023,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6036,
									"end": 6164,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 6036,
									"end": 6164,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6112,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6112,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6103,
									"end": 6112,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 6124,
									"end": 6135,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6124,
									"end": 6135,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6124,
									"end": 6135,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6121,
									"end": 6158,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6121,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 6121,
									"end": 6158,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6138,
									"end": 6156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 6138,
									"end": 6156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "125"
								},
								{
									"begin": 6138,
									"end": 6156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6169,
									"end": 6509,
									"name": "tag",
									"source": 13,
									"value": "126"
								},
								{
									"begin": 6169,
									"end": 6509,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 559,
									"end": 17443,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205372ef03b5eb7a4b0db0845b3856162fb806ffa8277192ccfe2519b503eaa89064736f6c634300081a0033",
									".code": [
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "702115DD"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "9220D3ED"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "B3CD4254"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "DF0AB308"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "DF0AB308"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "E2FF2440"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "E5A5E318"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "B3CD4254"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "B4DADE59"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "DC90B442"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "9CC2921C"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "9CC2921C"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "A457C2D7"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "A6D1B891"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "9220D3ED"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "924C2EAD"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "89EEC0F1"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "89EEC0F1"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "8CF66B16"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "8F372FA3"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "874A6AE7"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "893D20E8"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "75C2B13F"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "75C2B13F"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "7819F36F"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "79825EDE"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "81CEA332"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "702115DD"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "3F3B3B27"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "5D70DDE6"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "690D8320"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "690D8320"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "6AA3773F"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "6C5ED03E"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "6E04FF0D"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "5D70DDE6"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "6161EB18"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "639F3CC7"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "685F59DE"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "4626402B"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "4626402B"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "4E6EC247"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "5B7F415C"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "3F3B3B27"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "4585E33B"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "2CE8BD56"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "35C85A34"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "35C85A34"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "39509351"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "3AF9E669"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "3CDE0C0F"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "2CE8BD56"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "30E0789E"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "1658A700"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "1658A700"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "24024EFD"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "104E81FF"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 559,
											"end": 17443,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 929,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 929,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4537,
											"end": 4719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4537,
											"end": 4719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1181,
											"end": 1195,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1174,
											"end": 1196,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1156,
											"end": 1197,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1144,
											"end": 1146,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1016,
											"end": 1203,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 5723,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5723,
											"end": 6106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1473,
											"end": 1512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1473,
											"end": 1512,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3453,
											"end": 3564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1778,
											"end": 1955,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 4725,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4725,
											"end": 5148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1300,
											"end": 1326,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1357,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 7233,
											"end": 9758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "tag",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 7233,
											"end": 9758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3652,
											"end": 3661,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3652,
											"end": 3661,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2136,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2120,
											"end": 2137,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2137,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2137,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2102,
											"end": 2138,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2075,
											"end": 2093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3570,
											"end": 3669,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 1960,
											"end": 2144,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 14802,
											"end": 15026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 14802,
											"end": 15026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5154,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 5154,
											"end": 5438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 4065,
											"end": 4185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4168,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4185,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 12766,
											"end": 12881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 12766,
											"end": 12881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1726,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 17030,
											"end": 17093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 10999,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 10999,
											"end": 11483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1264,
											"end": 1293,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3395,
											"end": 3598,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 6112,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6112,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 819,
											"end": 864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 819,
											"end": 864,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 864,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 819,
											"end": 864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 860,
											"end": 864,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 819,
											"end": 864,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 819,
											"end": 864,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 16818,
											"end": 16959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 6691,
											"end": 7227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 6691,
											"end": 7227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 12116,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 12116,
											"end": 12287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "tag",
											"source": 12,
											"value": "189"
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1403,
											"end": 1432,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "tag",
											"source": 12,
											"value": "193"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3166,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 3166,
											"end": 3447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 9992,
											"end": 10653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 9992,
											"end": 10653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 14440,
											"end": 14796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 14440,
											"end": 14796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 10659,
											"end": 10993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 10659,
											"end": 10993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 10659,
											"end": 10993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 13779,
											"end": 14434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 13779,
											"end": 14434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3675,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3675,
											"end": 4059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 13564,
											"end": 13773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 13564,
											"end": 13773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 15032,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "tag",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 15032,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "tag",
											"source": 12,
											"value": "232"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 13255,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 13255,
											"end": 13558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 12887,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 12887,
											"end": 13120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 16965,
											"end": 17024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1466,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 17136,
											"end": 17219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "tag",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 12297,
											"end": 12452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 12297,
											"end": 12452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1578,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1578,
											"end": 1636,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1058,
											"end": 1094,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1643,
											"end": 1691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1643,
											"end": 1691,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1518,
											"end": 1572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1572,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 9764,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 9764,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5444,
											"end": 5717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 5444,
											"end": 5717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "tag",
											"source": 12,
											"value": "293"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 918,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 870,
											"end": 922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 870,
											"end": 922,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 4191,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4191,
											"end": 4356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 759,
											"end": 813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 759,
											"end": 813,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 759,
											"end": 813,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 759,
											"end": 813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 808,
											"end": 813,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 759,
											"end": 813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 759,
											"end": 813,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "tag",
											"source": 12,
											"value": "306"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 12505,
											"end": 12760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 12505,
											"end": 12760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1364,
											"end": 1397,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 4362,
											"end": 4531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4468,
											"end": 4475,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4505,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4514,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4494,
											"end": 4524,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4362,
											"end": 4531,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "tag",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 13126,
											"end": 13249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 13126,
											"end": 13249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 17225,
											"end": 17441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 15286,
											"end": 16812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 15286,
											"end": 16812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 929,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 929,
											"end": 956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 929,
											"end": 956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4691,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4661,
											"end": 4671,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4673,
											"end": 4681,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4683,
											"end": 4690,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 4652,
											"end": 4691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4691,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4652,
											"end": 4691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4712,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4537,
											"end": 4719,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 5877,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7952,
											"end": 7954,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7934,
											"end": 7955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7991,
											"end": 7993,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7971,
											"end": 7989,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7994,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8030,
											"end": 8064,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 8010,
											"end": 8028,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8010,
											"end": 8028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8028,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8108,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8125,
											"end": 8144,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8125,
											"end": 8144,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 5848,
											"end": 5918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5936,
											"end": 5958,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8357,
											"end": 8359,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8360,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8398,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8376,
											"end": 8394,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8376,
											"end": 8394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8376,
											"end": 8394,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8369,
											"end": 8399,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8435,
											"end": 8469,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8486,
											"end": 8504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8479,
											"end": 8511,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 8528,
											"end": 8547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 8155,
											"end": 8553,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 5928,
											"end": 5997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6019,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6028,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6038,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6008,
											"end": 6048,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6063,
											"end": 6099,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5723,
											"end": 6106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3506,
											"end": 3513,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3532,
											"end": 3539,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 3532,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3532,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "tag",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4882,
											"end": 4889,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4901,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4910,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4881,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4872,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4872,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4921,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4930,
											"end": 4937,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4961,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5029,
											"end": 5036,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH data",
											"source": 12,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "PUSH",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4986,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 4995,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4996,
											"end": 5006,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5007,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5110,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4975,
											"end": 5011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 4975,
											"end": 5110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4921,
											"end": 5120,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4921,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4725,
											"end": 5148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "362"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7366,
											"end": 7385,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7366,
											"end": 7385,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7358,
											"end": 7427,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7358,
											"end": 7427,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7358,
											"end": 7427,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9022,
											"end": 9024,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7358,
											"end": 7427,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9004,
											"end": 9025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9061,
											"end": 9063,
											"name": "PUSH",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9034,
											"end": 9064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9100,
											"end": 9134,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9080,
											"end": 9098,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9073,
											"end": 9135,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9151,
											"end": 9169,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9151,
											"end": 9169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9151,
											"end": 9169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9144,
											"end": 9179,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9215,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9196,
											"end": 9215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 8820,
											"end": 9221,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7358,
											"end": 7427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7445,
											"end": 7462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7445,
											"end": 7462,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7437,
											"end": 7502,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7502,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7502,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9428,
											"end": 9430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7437,
											"end": 7502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9410,
											"end": 9431,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9467,
											"end": 9469,
											"name": "PUSH",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9440,
											"end": 9470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9506,
											"end": 9540,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9479,
											"end": 9541,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9557,
											"end": 9575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9550,
											"end": 9583,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9600,
											"end": 9619,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 9600,
											"end": 9619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9226,
											"end": 9625,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7437,
											"end": 7502,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7536,
											"end": 7543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7533,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7527,
											"end": 7532,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7517,
											"end": 7533,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7533,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 7517,
											"end": 7533,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7517,
											"end": 7543,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7611,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7513,
											"end": 7611,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7513,
											"end": 7611,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7559,
											"end": 7600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7600,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7559,
											"end": 7600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7559,
											"end": 7600,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9832,
											"end": 9834,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7559,
											"end": 7600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7559,
											"end": 7600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7559,
											"end": 7600,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9814,
											"end": 9835,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9873,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9851,
											"end": 9869,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9874,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9910,
											"end": 9943,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742046756E647320466F72205472616E7366657200"
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9890,
											"end": 9908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9883,
											"end": 9944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7559,
											"end": 7600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9630,
											"end": 9985,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7513,
											"end": 7611,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 7513,
											"end": 7611,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7656,
											"end": 7668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 7656,
											"end": 7668,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7652,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7648,
											"end": 7651,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7647,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7638,
											"end": 7652,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7652,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 7638,
											"end": 7652,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7668,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7668,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7704,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7638,
											"end": 7704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7699,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7672,
											"end": 7704,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7638,
											"end": 7704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 7638,
											"end": 7704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7774,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7621,
											"end": 7774,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7621,
											"end": 7774,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7729,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7763,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7763,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7729,
											"end": 7763,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10192,
											"end": 10194,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7729,
											"end": 7763,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7729,
											"end": 7763,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10174,
											"end": 10195,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10233,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10204,
											"end": 10234,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10270,
											"end": 10296,
											"name": "PUSH",
											"source": 13,
											"value": "486F6C64696E6720546F6B656E73206578636565646564210000000000000000"
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10250,
											"end": 10268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10243,
											"end": 10297,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10314,
											"end": 10332,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10314,
											"end": 10332,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7729,
											"end": 7763,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 9990,
											"end": 10338,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7621,
											"end": 7774,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 7621,
											"end": 7774,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7784,
											"end": 7798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 7837,
											"end": 7868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7808,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7801,
											"end": 7808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7837,
											"end": 7868,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7868,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7922,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7922,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7922,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 7836,
											"end": 7922,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7922,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7910,
											"end": 7922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 7910,
											"end": 7922,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7901,
											"end": 7907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 7894,
											"end": 7897,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7884,
											"end": 7898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 7884,
											"end": 7898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 7884,
											"end": 7907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 7884,
											"end": 7907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7884,
											"end": 7922,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7836,
											"end": 7922,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 7836,
											"end": 7922,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8016,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8016,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7819,
											"end": 8016,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7992,
											"end": 8004,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 7992,
											"end": 8004,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7983,
											"end": 7989,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 7976,
											"end": 7979,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7975,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 7966,
											"end": 7980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 7966,
											"end": 7980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 7966,
											"end": 7989,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7989,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7989,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 7966,
											"end": 7989,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 7989,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 7966,
											"end": 7989,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 8004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 7966,
											"end": 8004,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 8004,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 8004,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 7966,
											"end": 8004,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7966,
											"end": 8004,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 7966,
											"end": 8004,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 8005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 7956,
											"end": 8005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 7962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 8005,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 7956,
											"end": 8005,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 8005,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 7956,
											"end": 8005,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 8005,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7947,
											"end": 8005,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7819,
											"end": 8016,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7819,
											"end": 8016,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8078,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8071,
											"end": 8077,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8048,
											"end": 8078,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8048,
											"end": 8078,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 8048,
											"end": 8078,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8114,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8092,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8121,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8078,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8026,
											"end": 8078,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8092,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8092,
											"end": 8121,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8088,
											"end": 8192,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8088,
											"end": 8192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 8088,
											"end": 8192,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 8174,
											"end": 8180,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8151,
											"end": 8181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8151,
											"end": 8181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 8151,
											"end": 8181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8181,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8181,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8088,
											"end": 8192,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 8088,
											"end": 8192,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8202,
											"end": 8217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8245,
											"end": 8252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 8245,
											"end": 8252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8236,
											"end": 8252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8241,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8236,
											"end": 8252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8252,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8252,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8268,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8268,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 8236,
											"end": 8268,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 8256,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8256,
											"end": 8268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8256,
											"end": 8268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8236,
											"end": 8268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 8236,
											"end": 8268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8232,
											"end": 8352,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8232,
											"end": 8352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 8232,
											"end": 8352,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 808,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 8304,
											"end": 8315,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 8304,
											"end": 8315,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8301,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 8295,
											"end": 8315,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 8295,
											"end": 8315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8295,
											"end": 8315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 8295,
											"end": 8315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 8294,
											"end": 8341,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 8294,
											"end": 8341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 8294,
											"end": 8341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8341,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8284,
											"end": 8341,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8232,
											"end": 8352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 8232,
											"end": 8352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8387,
											"end": 8403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 8396,
											"end": 8403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8387,
											"end": 8393,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8387,
											"end": 8403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8387,
											"end": 8403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8387,
											"end": 8403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 8387,
											"end": 8403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8403,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8362,
											"end": 8403,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8440,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8481,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 8466,
											"end": 8480,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8465,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8443,
											"end": 8481,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8443,
											"end": 8481,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 8443,
											"end": 8481,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8491,
											"end": 8514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8517,
											"end": 8544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8481,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8481,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8491,
											"end": 8514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8517,
											"end": 8544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 8517,
											"end": 8631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8612,
											"end": 8631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 8517,
											"end": 8631,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8517,
											"end": 8631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "401"
										},
										{
											"begin": 8517,
											"end": 8631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8597,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 8582,
											"end": 8596,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 8559,
											"end": 8597,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8559,
											"end": 8597,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 8559,
											"end": 8597,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8642,
											"end": 8658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8491,
											"end": 8631,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8491,
											"end": 8631,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8662,
											"end": 8673,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8673,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8658,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8673,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8662,
											"end": 8673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8642,
											"end": 8673,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 8642,
											"end": 8673,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8642,
											"end": 8673,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 8688,
											"end": 8715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8688,
											"end": 8715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8688,
											"end": 8715,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8731,
											"end": 8745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8764,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8764,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8764,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8749,
											"end": 8764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8731,
											"end": 8764,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 8731,
											"end": 8764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8764,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 8684,
											"end": 8843,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8804,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 8795,
											"end": 8809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8832,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8832,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8832,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8813,
											"end": 8832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8795,
											"end": 8832,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 8795,
											"end": 8832,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8795,
											"end": 8832,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 8684,
											"end": 8843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8872,
											"end": 8879,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 8853,
											"end": 8868,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 8853,
											"end": 8879,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8879,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8907,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8889,
											"end": 8896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 8889,
											"end": 8907,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8889,
											"end": 8907,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8939,
											"end": 8942,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8932,
											"end": 8937,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 8958,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1955,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8959,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 8974,
											"end": 8985,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8974,
											"end": 8985,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 9057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 8970,
											"end": 9057,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9022,
											"end": 9036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 9022,
											"end": 9036,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9006,
											"end": 9046,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9022,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9022,
											"end": 9036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9022,
											"end": 9036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9022,
											"end": 9036,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 9006,
											"end": 9046,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9006,
											"end": 9046,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 8970,
											"end": 9057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 8970,
											"end": 9057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9113,
											"end": 9142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9113,
											"end": 9142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9113,
											"end": 9142,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9142,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9173,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 9112,
											"end": 9173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9146,
											"end": 9173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9146,
											"end": 9173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9146,
											"end": 9173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9112,
											"end": 9173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 9112,
											"end": 9173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9214,
											"end": 9228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 9189,
											"end": 9210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 9189,
											"end": 9228,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 9189,
											"end": 9228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9189,
											"end": 9228,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 9108,
											"end": 9634,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 9108,
											"end": 9634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9249,
											"end": 9278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9278,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9249,
											"end": 9278,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9310,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 9249,
											"end": 9310,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9305,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9283,
											"end": 9310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9283,
											"end": 9310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9283,
											"end": 9310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9282,
											"end": 9310,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9249,
											"end": 9310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 9249,
											"end": 9310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9245,
											"end": 9634,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9245,
											"end": 9634,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 9245,
											"end": 9634,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9351,
											"end": 9365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 9326,
											"end": 9347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9326,
											"end": 9365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 9326,
											"end": 9365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9245,
											"end": 9634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 9245,
											"end": 9634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9386,
											"end": 9415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9415,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9386,
											"end": 9415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9386,
											"end": 9446,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9441,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 9419,
											"end": 9446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9419,
											"end": 9446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9419,
											"end": 9446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9386,
											"end": 9446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 9386,
											"end": 9446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9382,
											"end": 9634,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9382,
											"end": 9634,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 9382,
											"end": 9634,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9648,
											"end": 9663,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9648,
											"end": 9663,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9648,
											"end": 9667,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9644,
											"end": 9752,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9709,
											"end": 9724,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9740,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 9726,
											"end": 9740,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9683,
											"end": 9741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9683,
											"end": 9741,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9726,
											"end": 9740,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9683,
											"end": 9708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 9683,
											"end": 9741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9683,
											"end": 9741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 9683,
											"end": 9741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7348,
											"end": 9758,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7233,
											"end": 9758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 14802,
											"end": 15026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14906,
											"end": 14928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14906,
											"end": 14928,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11073,
											"end": 11075,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11085,
											"end": 11115,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11151,
											"end": 11179,
											"name": "PUSH",
											"source": 13,
											"value": "4163636F756E742073686F756C646E2774206265207A65726F2E000000000000"
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11124,
											"end": 11180,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11215,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11197,
											"end": 11215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 10871,
											"end": 11221,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 14898,
											"end": 14959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 14995,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15005,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14969,
											"end": 15019,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 14802,
											"end": 15026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 5154,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5314,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5361,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5373,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5383,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5282,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5282,
											"end": 5410,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5336,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5336,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5350,
											"end": 5400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5388,
											"end": 5399,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5350,
											"end": 5387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 5350,
											"end": 5400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 12766,
											"end": 12881,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12846,
											"end": 12858,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 12846,
											"end": 12874,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 17030,
											"end": 17093,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "442"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17076,
											"end": 17086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 17076,
											"end": 17084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 17076,
											"end": 17086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17076,
											"end": 17086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 17076,
											"end": 17086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17030,
											"end": 17093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 10999,
											"end": 11483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11225,
											"end": 11239,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 11225,
											"end": 11239,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11208,
											"end": 11221,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 11208,
											"end": 11221,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11190,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 11190,
											"end": 11221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11190,
											"end": 11205,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 11190,
											"end": 11221,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11190,
											"end": 11221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11190,
											"end": 11221,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 11190,
											"end": 11221,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11189,
											"end": 11239,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11428,
											"end": 11430,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11410,
											"end": 11431,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11469,
											"name": "PUSH",
											"source": 13,
											"value": "1E"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11447,
											"end": 11465,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11440,
											"end": 11470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11506,
											"end": 11538,
											"name": "PUSH",
											"source": 13,
											"value": "4B656570557020726571756972656D656E74206973206E6F74206D6574210000"
										},
										{
											"begin": 11486,
											"end": 11504,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11486,
											"end": 11504,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11486,
											"end": 11504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11479,
											"end": 11539,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11556,
											"end": 11574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 11226,
											"end": 11580,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 11168,
											"end": 11295,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11325,
											"end": 11346,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 11325,
											"end": 11346,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11321,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 11314,
											"end": 11321,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11346,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11787,
											"end": 11789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11769,
											"end": 11790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11826,
											"end": 11828,
											"name": "PUSH",
											"source": 13,
											"value": "3E"
										},
										{
											"begin": 11806,
											"end": 11824,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11806,
											"end": 11824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11806,
											"end": 11824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11799,
											"end": 11829,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11865,
											"end": 11899,
											"name": "PUSH",
											"source": 13,
											"value": "74537570706C79206D7573742062652067726561746572207468616E206F7220"
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11845,
											"end": 11863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11838,
											"end": 11900,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11936,
											"end": 11968,
											"name": "PUSH",
											"source": 13,
											"value": "657175616C20746F206578636C7564654465626173696E67537570706C790000"
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11916,
											"end": 11934,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11909,
											"end": 11969,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 11585,
											"end": 12011,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 11306,
											"end": 11413,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11425,
											"end": 11434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 11425,
											"end": 11432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 11425,
											"end": 11434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11425,
											"end": 11434,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 11425,
											"end": 11434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11461,
											"end": 11476,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 11445,
											"end": 11458,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 11445,
											"end": 11476,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10999,
											"end": 11483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6182,
											"end": 6199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6182,
											"end": 6199,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12218,
											"end": 12220,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12200,
											"end": 12221,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12237,
											"end": 12255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12260,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12296,
											"end": 12329,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12269,
											"end": 12330,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12347,
											"end": 12365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12016,
											"end": 12371,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6174,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6257,
											"end": 6264,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6253,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6246,
											"end": 6253,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 6246,
											"end": 6264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6246,
											"end": 6264,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6275,
											"end": 6300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6275,
											"end": 6300,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6303,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6326,
											"end": 6333,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6303,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6303,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6303,
											"end": 6334,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6303,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6370,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6334,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6275,
											"end": 6334,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6348,
											"end": 6375,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6344,
											"end": 6499,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6344,
											"end": 6499,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 6344,
											"end": 6499,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6416,
											"end": 6423,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6412,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6391,
											"end": 6412,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 6391,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6423,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6457,
											"end": 6488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6480,
											"end": 6487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6457,
											"end": 6488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6457,
											"end": 6488,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6457,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6488,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6344,
											"end": 6499,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 6344,
											"end": 6499,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6518,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6544,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6544,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6544,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6527,
											"end": 6544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 6509,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6509,
											"end": 6544,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 12,
											"value": "F6798A560793A54C3BCFE86A93CDE1E73087D944C0EA20544137D4121396885"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6578,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6613,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 6599,
											"end": 6613,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6592,
											"end": 6613,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6592,
											"end": 6613,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6592,
											"end": 6613,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6613,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6613,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6592,
											"end": 6613,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6588,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 6588,
											"end": 6679,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6634,
											"end": 6668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1778,
											"end": 1955,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6588,
											"end": 6679,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 6588,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6164,
											"end": 6685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 16818,
											"end": 16959,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "471"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16895,
											"end": 16910,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16891,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 16878,
											"end": 16891,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16910,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 16878,
											"end": 16910,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 16870,
											"end": 16911,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16870,
											"end": 16911,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16911,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16870,
											"end": 16911,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 16870,
											"end": 16911,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16937,
											"end": 16952,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 16921,
											"end": 16934,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 16921,
											"end": 16952,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 6691,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6763,
											"end": 6782,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6763,
											"end": 6782,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12578,
											"end": 12580,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12560,
											"end": 12581,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 12597,
											"end": 12615,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12597,
											"end": 12615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12597,
											"end": 12615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12590,
											"end": 12620,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12690,
											"name": "PUSH",
											"source": 13,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 12636,
											"end": 12654,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 12636,
											"end": 12654,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12636,
											"end": 12654,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12629,
											"end": 12691,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12707,
											"end": 12725,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12700,
											"end": 12731,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12748,
											"end": 12767,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 12748,
											"end": 12767,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12376,
											"end": 12773,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 6755,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 6831,
											"end": 6838,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6831,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6831,
											"end": 6849,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6860,
											"end": 6885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 6885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6888,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 6911,
											"end": 6918,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6888,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6888,
											"end": 6919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6888,
											"end": 6919,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 6888,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6955,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6860,
											"end": 6919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6933,
											"end": 6962,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 7086,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 6929,
											"end": 7086,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7003,
											"end": 7010,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 6999,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6978,
											"end": 6999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 6978,
											"end": 7010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 7010,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7044,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7044,
											"end": 7075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7067,
											"end": 7074,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7044,
											"end": 7066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 7044,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7044,
											"end": 7075,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 7044,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7024,
											"end": 7075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7024,
											"end": 7075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 7086,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 6929,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7105,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7116,
											"end": 7133,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7116,
											"end": 7133,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7112,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7116,
											"end": 7133,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7116,
											"end": 7133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 7096,
											"end": 7133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7096,
											"end": 7133,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "PUSH",
											"source": 12,
											"value": "CC16F5DBB4873280815C1EE09DBD06736CFFCC184412CF7A71A0FDB75D397CA5"
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7149,
											"end": 7169,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7208,
											"end": 7209,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7184,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1778,
											"end": 1955,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 12116,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12191,
											"end": 12198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12217,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 918,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12229,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12217,
											"end": 12233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12217,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12257,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12257,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 12217,
											"end": 12280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "492"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3254,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3237,
											"end": 3254,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3288,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3229,
											"end": 3288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3288,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12980,
											"end": 12982,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3229,
											"end": 3288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12962,
											"end": 12983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13019,
											"end": 13021,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12999,
											"end": 13017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12992,
											"end": 13022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13058,
											"end": 13089,
											"name": "PUSH",
											"source": 13,
											"value": "496E76616C696420616464726573733A207A65726F2061646472657373000000"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13038,
											"end": 13056,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13031,
											"end": 13090,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13107,
											"end": 13125,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13107,
											"end": 13125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12778,
											"end": 13131,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 3229,
											"end": 3288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3311,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3317,
											"end": 3334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3363,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3317,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3368,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3298,
											"end": 3368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3382,
											"end": 3389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3378,
											"end": 3441,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3378,
											"end": 3441,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13548,
											"end": 13550,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3405,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3430,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13530,
											"end": 13551,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13587,
											"end": 13589,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 13567,
											"end": 13585,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13567,
											"end": 13585,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13567,
											"end": 13585,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13560,
											"end": 13590,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8811985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13606,
											"end": 13624,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13599,
											"end": 13644,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13661,
											"end": 13679,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13661,
											"end": 13679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 13346,
											"end": 13685,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3441,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 3378,
											"end": 3441,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3219,
											"end": 3447,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "506"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "506"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1907,
											"end": 1917,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1890,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1890,
											"end": 1918,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1918,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 1890,
											"end": 1943,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1922,
											"end": 1932,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1922,
											"end": 1943,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 1890,
											"end": 1943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 1882,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1944,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1882,
											"end": 1944,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1944,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1944,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 1882,
											"end": 1944,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 10129,
											"end": 10144,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10148,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10125,
											"end": 10233,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10125,
											"end": 10233,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10190,
											"end": 10205,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 10190,
											"end": 10205,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10207,
											"end": 10221,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 10207,
											"end": 10221,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10222,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10164,
											"end": 10222,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10190,
											"end": 10205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10207,
											"end": 10221,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10189,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 10164,
											"end": 10222,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10164,
											"end": 10222,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10164,
											"end": 10222,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10269,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 10247,
											"end": 10274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10247,
											"end": 10274,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 10247,
											"end": 10274,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10339,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10331,
											"end": 10338,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10330,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10308,
											"end": 10339,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10308,
											"end": 10339,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10308,
											"end": 10339,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10299,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 10290,
											"end": 10304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10304,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 10290,
											"end": 10339,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 10290,
											"end": 10339,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10290,
											"end": 10339,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10243,
											"end": 10522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10419,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10411,
											"end": 10418,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10410,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10388,
											"end": 10419,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10388,
											"end": 10419,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10388,
											"end": 10419,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10379,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 10370,
											"end": 10384,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 10370,
											"end": 10419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 10370,
											"end": 10419,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10419,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10504,
											"end": 10511,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 10479,
											"end": 10500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 10479,
											"end": 10511,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10479,
											"end": 10511,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10479,
											"end": 10511,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10243,
											"end": 10522,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10592,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10584,
											"end": 10591,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10583,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10561,
											"end": 10592,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10561,
											"end": 10592,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 10561,
											"end": 10592,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10542,
											"end": 10556,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 10542,
											"end": 10556,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10542,
											"end": 10556,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10541,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 10532,
											"end": 10557,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10557,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 10532,
											"end": 10592,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 10532,
											"end": 10592,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10532,
											"end": 10592,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10617,
											"end": 10631,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 10617,
											"end": 10631,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10608,
											"end": 10646,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 10646,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10617,
											"end": 10631,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10617,
											"end": 10631,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 10608,
											"end": 10646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10608,
											"end": 10646,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9992,
											"end": 10653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 14440,
											"end": 14796,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14575,
											"end": 14581,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14591,
											"end": 14600,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14591,
											"end": 14607,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14587,
											"end": 14588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14587,
											"end": 14607,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14652,
											"end": 14666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 14652,
											"end": 14666,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14652,
											"end": 14666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14652,
											"end": 14666,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14652,
											"end": 14666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14652,
											"end": 14666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14645,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14646,
											"end": 14647,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14646,
											"end": 14647,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 14636,
											"end": 14648,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14636,
											"end": 14666,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14636,
											"end": 14666,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14628,
											"end": 14717,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14628,
											"end": 14717,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14717,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14024,
											"end": 14026,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14628,
											"end": 14717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14027,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14063,
											"end": 14065,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 14043,
											"end": 14061,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14043,
											"end": 14061,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14043,
											"end": 14061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14036,
											"end": 14066,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14102,
											"end": 14136,
											"name": "PUSH",
											"source": 13,
											"value": "54726561737572792077616C6C65742063616E6E6F7420626520696E636C7564"
										},
										{
											"begin": 14082,
											"end": 14100,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14082,
											"end": 14100,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14082,
											"end": 14100,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14075,
											"end": 14137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "656420696E206465626173696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14153,
											"end": 14171,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14153,
											"end": 14171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14153,
											"end": 14171,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14146,
											"end": 14190,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14207,
											"end": 14226,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14207,
											"end": 14226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 13822,
											"end": 14232,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 14628,
											"end": 14717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14731,
											"end": 14779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 14753,
											"end": 14762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14763,
											"end": 14764,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 14753,
											"end": 14765,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14753,
											"end": 14765,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 14767,
											"end": 14778,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14731,
											"end": 14752,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 14731,
											"end": 14779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14731,
											"end": 14779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 14731,
											"end": 14779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14609,
											"end": 14612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 14609,
											"end": 14612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 14570,
											"end": 14790,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10784,
											"end": 10801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10827,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 10894,
											"end": 10908,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10877,
											"end": 10890,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 10877,
											"end": 10890,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10874,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 10859,
											"end": 10890,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 10859,
											"end": 10890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10890,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 10859,
											"end": 10890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10858,
											"end": 10908,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 10843,
											"end": 10908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10843,
											"end": 10908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 10941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10932,
											"end": 10941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10918,
											"end": 10941,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13879,
											"end": 13901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13879,
											"end": 13901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11073,
											"end": 11075,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11055,
											"end": 11076,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11114,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11085,
											"end": 11115,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11151,
											"end": 11179,
											"name": "PUSH",
											"source": 13,
											"value": "4163636F756E742073686F756C646E2774206265207A65726F2E000000000000"
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11131,
											"end": 11149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11124,
											"end": 11180,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11197,
											"end": 11215,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 11197,
											"end": 11215,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 10871,
											"end": 11221,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "tag",
											"source": 12,
											"value": "542"
										},
										{
											"begin": 13871,
											"end": 13932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13942,
											"end": 13961,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13986,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13964,
											"end": 13996,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14047,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 13987,
											"end": 13995,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 14028,
											"end": 14047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14028,
											"end": 14047,
											"name": "tag",
											"source": 12,
											"value": "544"
										},
										{
											"begin": 14028,
											"end": 14047,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14006,
											"end": 14047,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14089,
											"end": 14100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14100,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14100,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14085,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14100,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14100,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14071,
											"end": 14100,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 14067,
											"end": 14428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 14067,
											"end": 14428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14138,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14148,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14116,
											"end": 14162,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14200,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14200,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14204,
											"end": 14215,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "tag",
											"source": 12,
											"value": "546"
										},
										{
											"begin": 14185,
											"end": 14215,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14263,
											"end": 14274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14259,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 14238,
											"end": 14259,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 14238,
											"end": 14274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14238,
											"end": 14274,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 14181,
											"end": 14418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14316,
											"end": 14330,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14335,
											"end": 14346,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14334,
											"end": 14346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 14316,
											"end": 14346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14312,
											"end": 14418,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14312,
											"end": 14418,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 14312,
											"end": 14418,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14392,
											"end": 14403,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14388,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 14367,
											"end": 14388,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 14367,
											"end": 14403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14367,
											"end": 14403,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14312,
											"end": 14418,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 14312,
											"end": 14418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13852,
											"end": 14434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13852,
											"end": 14434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 14434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "tag",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 3675,
											"end": 4059,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3756,
											"end": 3763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3801,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3779,
											"end": 3811,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 3993,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3775,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 3775,
											"end": 3993,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3843,
											"end": 3857,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3831,
											"end": 3857,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3831,
											"end": 3857,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3831,
											"end": 3857,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3831,
											"end": 3857,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3827,
											"end": 3919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 3827,
											"end": 3919,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3884,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3884,
											"end": 3902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3884,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3827,
											"end": 3919,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 3827,
											"end": 3919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3971,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3962,
											"end": 3981,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 3982,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3939,
											"end": 3982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3939,
											"end": 3961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 3939,
											"end": 3982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "560"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "560"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "563"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 13564,
											"end": 13773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "565"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "565"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13668,
											"end": 13687,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13668,
											"end": 13687,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13660,
											"end": 13719,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13660,
											"end": 13719,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13719,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14439,
											"end": 14441,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13660,
											"end": 13719,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14421,
											"end": 14442,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14478,
											"end": 14480,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 14458,
											"end": 14476,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14458,
											"end": 14476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14458,
											"end": 14476,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14451,
											"end": 14481,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14517,
											"end": 14546,
											"name": "PUSH",
											"source": 13,
											"value": "4F70657261746F722073686F756C646E2774206265207A65726F2E0000000000"
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14497,
											"end": 14515,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14490,
											"end": 14547,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14564,
											"end": 14582,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14564,
											"end": 14582,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 14237,
											"end": 14588,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 13660,
											"end": 13719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 13729,
											"end": 13752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13752,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13729,
											"end": 13766,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13729,
											"end": 13766,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13564,
											"end": 13773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 15032,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "571"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "571"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15158,
											"end": 15164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15174,
											"end": 15183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15174,
											"end": 15190,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15171,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15170,
											"end": 15190,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15211,
											"end": 15263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 15237,
											"end": 15246,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15247,
											"end": 15248,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15237,
											"end": 15249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15237,
											"end": 15249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15251,
											"end": 15262,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15211,
											"end": 15236,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 15211,
											"end": 15263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15211,
											"end": 15263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 15211,
											"end": 15263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15192,
											"end": 15195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15192,
											"end": 15195,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 15153,
											"end": 15274,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "tag",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 13255,
											"end": 13558,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "580"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "580"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13347,
											"end": 13368,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13347,
											"end": 13368,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13339,
											"end": 13407,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13339,
											"end": 13407,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14795,
											"end": 14797,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13339,
											"end": 13407,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14777,
											"end": 14798,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14834,
											"end": 14836,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14814,
											"end": 14832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14807,
											"end": 14837,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14873,
											"end": 14907,
											"name": "PUSH",
											"source": 13,
											"value": "4C5020506F6F6C20616464726573732073686F756C646E2774206265207A6572"
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14853,
											"end": 14871,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14846,
											"end": 14908,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14924,
											"end": 14942,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14924,
											"end": 14942,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14924,
											"end": 14942,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14917,
											"end": 14949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14966,
											"end": 14985,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14966,
											"end": 14985,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 14593,
											"end": 14991,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 13339,
											"end": 13407,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13433,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 13417,
											"end": 13433,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13417,
											"end": 13445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13455,
											"end": 13496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 13417,
											"end": 13433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13417,
											"end": 13445,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13455,
											"end": 13476,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 13455,
											"end": 13496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13455,
											"end": 13496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 13455,
											"end": 13496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 13532,
											"end": 13539,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13541,
											"end": 13550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13506,
											"end": 13531,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 13506,
											"end": 13551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 12887,
											"end": 13120,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "588"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "588"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 808,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 12991,
											"end": 13002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12991,
											"end": 13028,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12991,
											"end": 13028,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 12983,
											"end": 13079,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 12983,
											"end": 13079,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13089,
											"end": 13099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 13089,
											"end": 13113,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12887,
											"end": 13120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 16965,
											"end": 17024,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "594"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "594"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17009,
											"end": 17017,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 17009,
											"end": 17015,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "597"
										},
										{
											"begin": 17009,
											"end": 17017,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 17136,
											"end": 17219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17179,
											"end": 17186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17205,
											"end": 17212,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 12297,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12366,
											"end": 12373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12392,
											"end": 12445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 860,
											"end": 864,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 12392,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 12392,
											"end": 12398,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 918,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 12392,
											"end": 12402,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 12392,
											"end": 12425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 962,
											"end": 991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 962,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 962,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 9764,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9873,
											"end": 9880,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9869,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9854,
											"end": 9869,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9880,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9854,
											"end": 9880,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15614,
											"end": 15616,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15596,
											"end": 15617,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15653,
											"end": 15655,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 15633,
											"end": 15651,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15633,
											"end": 15651,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15633,
											"end": 15651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15626,
											"end": 15656,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15692,
											"end": 15723,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E742042616C616E636520746F20636C61696D000000"
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15672,
											"end": 15690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15665,
											"end": 15724,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15741,
											"end": 15759,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15741,
											"end": 15759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 15412,
											"end": 15765,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 9846,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9943,
											"end": 9950,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9939,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 9924,
											"end": 9939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 9924,
											"end": 9950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9924,
											"end": 9950,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9960,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9960,
											"end": 9979,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9966,
											"end": 9969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9971,
											"end": 9978,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9960,
											"end": 9965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 9960,
											"end": 9979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 5444,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5538,
											"end": 5542,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 5563,
											"end": 5573,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5575,
											"end": 5583,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 5622,
											"end": 5638,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH data",
											"source": 12,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "PUSH",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "CODECOPY",
											"source": 12
										},
										{
											"begin": 5596,
											"end": 5606,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5595,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5607,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "DUP14",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5617,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 5584,
											"end": 5679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 4191,
											"end": 4356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 4296,
											"end": 4306,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4308,
											"end": 4318,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4320,
											"end": 4327,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4286,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4286,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 12505,
											"end": 12760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "621"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "621"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12640,
											"end": 12644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1388"
										},
										{
											"begin": 12624,
											"end": 12636,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12644,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 12624,
											"end": 12644,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 12603,
											"end": 12717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "623"
										},
										{
											"begin": 12603,
											"end": 12717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12727,
											"end": 12738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 12727,
											"end": 12753,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12505,
											"end": 12760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 13126,
											"end": 13249,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "627"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "627"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13210,
											"end": 13224,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 13210,
											"end": 13242,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 13126,
											"end": 13249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17363,
											"end": 17377,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 17276,
											"end": 17283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17353,
											"end": 17362,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 17353,
											"end": 17378,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17276,
											"end": 17283,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17276,
											"end": 17283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17317,
											"end": 17388,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 17317,
											"end": 17388,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17317,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 17317,
											"end": 17388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17317,
											"end": 17388,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 17317,
											"end": 17388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17388,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17295,
											"end": 17388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17423,
											"end": 17434,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17420,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 17405,
											"end": 17420,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 17405,
											"end": 17434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17434,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17434,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 17405,
											"end": 17434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17405,
											"end": 17434,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 17405,
											"end": 17434,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17398,
											"end": 17434,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17398,
											"end": 17434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17398,
											"end": 17434,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17225,
											"end": 17441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 15286,
											"end": 16812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "633"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "634"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "633"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "636"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "636"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15479,
											"end": 15487,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15479,
											"end": 15494,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15468,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15475,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15494,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15448,
											"end": 15521,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15448,
											"end": 15521,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15521,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15972,
											"end": 15974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15448,
											"end": 15521,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15954,
											"end": 15975,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16011,
											"end": 16013,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 15991,
											"end": 16009,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15991,
											"end": 16009,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15991,
											"end": 16009,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15984,
											"end": 16014,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82E4E4C2F2E640D8CADCCEE8D040DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16030,
											"end": 16048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16075,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16092,
											"end": 16110,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16092,
											"end": 16110,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 15770,
											"end": 16116,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 15448,
											"end": 15521,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15532,
											"end": 15551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15570,
											"end": 15579,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15589,
											"end": 15597,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15589,
											"end": 15604,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15585,
											"end": 15586,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15585,
											"end": 15604,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15648,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15649,
											"end": 15650,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15640,
											"end": 15651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "645"
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15651,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 15625,
											"end": 15651,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "646"
										},
										{
											"begin": 15625,
											"end": 15651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15625,
											"end": 15651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15606,
											"end": 15609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15606,
											"end": 15609,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15565,
											"end": 15662,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 15720,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15684,
											"end": 15705,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 15694,
											"end": 15704,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 15684,
											"end": 15693,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 15684,
											"end": 15705,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15684,
											"end": 15705,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 15684,
											"end": 15705,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15684,
											"end": 15720,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15684,
											"end": 15720,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15745,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15676,
											"end": 15745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15745,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16323,
											"end": 16325,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15676,
											"end": 15745,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16305,
											"end": 16326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16362,
											"end": 16364,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16342,
											"end": 16360,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16335,
											"end": 16365,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16381,
											"end": 16399,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16381,
											"end": 16399,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16381,
											"end": 16399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16374,
											"end": 16424,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16441,
											"end": 16459,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16441,
											"end": 16459,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 16121,
											"end": 16465,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 15676,
											"end": 15745,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15761,
											"end": 15770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15780,
											"end": 15792,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15780,
											"end": 15799,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15776,
											"end": 15777,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15776,
											"end": 15799,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15856,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15857,
											"end": 15858,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 15848,
											"end": 15859,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15848,
											"end": 15859,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15824,
											"end": 15845,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 15834,
											"end": 15844,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 15824,
											"end": 15833,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "219"
										},
										{
											"begin": 15824,
											"end": 15845,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15824,
											"end": 15845,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "656"
										},
										{
											"begin": 15824,
											"end": 15845,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15824,
											"end": 15859,
											"modifierDepth": 2,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15820,
											"end": 16796,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15820,
											"end": 16796,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 15820,
											"end": 16796,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15906,
											"end": 15916,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15905,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 15883,
											"end": 15917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15883,
											"end": 15917,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 15883,
											"end": 15917,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15966,
											"end": 16047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 16014,
											"end": 16022,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16023,
											"end": 16024,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16014,
											"end": 16025,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16014,
											"end": 16025,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 15966,
											"end": 15988,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 15966,
											"end": 16047,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15966,
											"end": 16047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "659"
										},
										{
											"begin": 15966,
											"end": 16047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15951,
											"end": 15961,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 15941,
											"end": 15962,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 15962,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 15941,
											"end": 16047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 15941,
											"end": 16047,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "662"
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 15941,
											"end": 16047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16102,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16103,
											"end": 16104,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16094,
											"end": 16105,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "664"
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16105,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 16069,
											"end": 16090,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 16069,
											"end": 16105,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 16069,
											"end": 16105,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16069,
											"end": 16105,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 15879,
											"end": 16277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "658"
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 16225,
											"end": 16233,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16234,
											"end": 16235,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16225,
											"end": 16236,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16225,
											"end": 16236,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16177,
											"end": 16258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 16177,
											"end": 16258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16162,
											"end": 16172,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16161,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 16152,
											"end": 16173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 16152,
											"end": 16258,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "670"
										},
										{
											"begin": 16152,
											"end": 16258,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16152,
											"end": 16258,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 15879,
											"end": 16277,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16321,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 16299,
											"end": 16338,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16322,
											"end": 16334,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16335,
											"end": 16336,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16322,
											"end": 16337,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16322,
											"end": 16337,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16299,
											"end": 16338,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16299,
											"end": 16338,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 16299,
											"end": 16338,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16438,
											"end": 16473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 16461,
											"end": 16469,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16470,
											"end": 16471,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16461,
											"end": 16472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16461,
											"end": 16472,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16438,
											"end": 16473,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 16438,
											"end": 16473,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16371,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16397,
											"end": 16409,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16410,
											"end": 16411,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16397,
											"end": 16412,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "678"
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16397,
											"end": 16412,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 16362,
											"end": 16473,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "679"
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 16362,
											"end": 16473,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16528,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16529,
											"end": 16530,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16520,
											"end": 16531,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16520,
											"end": 16531,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 16495,
											"end": 16516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 16495,
											"end": 16531,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "682"
										},
										{
											"begin": 16495,
											"end": 16531,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16495,
											"end": 16531,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 16295,
											"end": 16708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "673"
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16608,
											"end": 16689,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 16656,
											"end": 16664,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16665,
											"end": 16666,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 16656,
											"end": 16667,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16656,
											"end": 16667,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16608,
											"end": 16689,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "684"
										},
										{
											"begin": 16608,
											"end": 16689,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16588,
											"end": 16600,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16601,
											"end": 16602,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16588,
											"end": 16603,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "688"
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16588,
											"end": 16603,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16604,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 16578,
											"end": 16689,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 16578,
											"end": 16689,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16578,
											"end": 16689,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 16295,
											"end": 16708,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16764,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16766,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16752,
											"end": 16767,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16752,
											"end": 16767,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 16740,
											"end": 16750,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 16769,
											"end": 16777,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16778,
											"end": 16779,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 16769,
											"end": 16780,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "693"
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16769,
											"end": 16780,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1924,
											"end": 1949,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1915,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1778,
											"end": 1955,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "694"
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16731,
											"end": 16781,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 15820,
											"end": 16796,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 15820,
											"end": 16796,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15801,
											"end": 15804,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 15801,
											"end": 15804,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "651"
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "652"
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15756,
											"end": 16806,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15438,
											"end": 16812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "698"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 4,
											"value": "698"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "700"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 3395,
											"end": 3598,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "700"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "702"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "563"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "702"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 4959,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5052,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5096,
											"end": 5102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "347"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5088,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 5088,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5138,
											"end": 5143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5138,
											"end": 5143,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5138,
											"end": 5143,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16672,
											"end": 16674,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16654,
											"end": 16675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16711,
											"end": 16713,
											"name": "PUSH",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 16691,
											"end": 16709,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16691,
											"end": 16709,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16691,
											"end": 16709,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16684,
											"end": 16714,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16730,
											"end": 16748,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16730,
											"end": 16748,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16730,
											"end": 16748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16723,
											"end": 16769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16786,
											"end": 16804,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 16786,
											"end": 16804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 16470,
											"end": 16810,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 3395,
											"end": 3598,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 5,
											"value": "445"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "721"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "722"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "721"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "724"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3559,
											"end": 3591,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3592,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3529,
											"end": 3531,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11489,
											"end": 12087,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 11489,
											"end": 12087,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "727"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "727"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11549,
											"end": 11562,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 808,
											"end": 813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2710"
										},
										{
											"begin": 860,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11566,
											"end": 11576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D"
										},
										{
											"begin": 11566,
											"end": 11576,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 11566,
											"end": 11593,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11593,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 11566,
											"end": 11593,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11566,
											"end": 11593,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 11566,
											"end": 11593,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11565,
											"end": 11619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 11565,
											"end": 11619,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11565,
											"end": 11619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11565,
											"end": 11619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 11565,
											"end": 11619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11565,
											"end": 11619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "730"
										},
										{
											"begin": 11565,
											"end": 11619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 11619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11549,
											"end": 11619,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11630,
											"end": 11655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11668,
											"end": 11689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 11668,
											"end": 11689,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11665,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 11658,
											"end": 11665,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 11658,
											"end": 11689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11658,
											"end": 11689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11658,
											"end": 11689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 11658,
											"end": 11689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11630,
											"end": 11689,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 860,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11756,
											"end": 11778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 11773,
											"end": 11778,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 860,
											"end": 864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 11778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11756,
											"end": 11778,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11756,
											"end": 11778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "732"
										},
										{
											"begin": 11756,
											"end": 11778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 11734,
											"end": 11752,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "733"
										},
										{
											"begin": 11734,
											"end": 11779,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11779,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 11734,
											"end": 11779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11734,
											"end": 11779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "733"
										},
										{
											"begin": 11734,
											"end": 11779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11733,
											"end": 11809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "734"
										},
										{
											"begin": 11733,
											"end": 11809,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11733,
											"end": 11809,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11733,
											"end": 11809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 11733,
											"end": 11809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11733,
											"end": 11809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "734"
										},
										{
											"begin": 11733,
											"end": 11809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11700,
											"end": 11718,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 11700,
											"end": 11809,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11819,
											"end": 11841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 860,
											"end": 864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 11878,
											"end": 11900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 11895,
											"end": 11900,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 860,
											"end": 864,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11878,
											"end": 11900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11878,
											"end": 11900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11878,
											"end": 11900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 11878,
											"end": 11900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 11901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 11845,
											"end": 11901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 11862,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 11901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 11845,
											"end": 11901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 11901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "736"
										},
										{
											"begin": 11845,
											"end": 11901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "737"
										},
										{
											"begin": 11844,
											"end": 11919,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 11844,
											"end": 11919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11844,
											"end": 11919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "737"
										},
										{
											"begin": 11844,
											"end": 11919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11819,
											"end": 11919,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11930,
											"end": 11956,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11959,
											"end": 11993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 11819,
											"end": 11919,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11976,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 11959,
											"end": 11993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11959,
											"end": 11993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "738"
										},
										{
											"begin": 11959,
											"end": 11993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11930,
											"end": 11993,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11930,
											"end": 11993,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12023,
											"end": 12041,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 12004,
											"end": 12019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "739"
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 12004,
											"end": 12041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "739"
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 12004,
											"end": 12041,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12080,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 12051,
											"end": 12058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12051,
											"end": 12080,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 12051,
											"end": 12080,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 4,
											"value": "563"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 4,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "597"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "747"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "363"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "747"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "724"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "634"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "752"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 17017,
											"end": 17019,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 16999,
											"end": 17020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17056,
											"end": 17058,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 17036,
											"end": 17054,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17036,
											"end": 17054,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17036,
											"end": 17054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17029,
											"end": 17059,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17095,
											"end": 17128,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17075,
											"end": 17093,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17075,
											"end": 17093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17075,
											"end": 17093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17068,
											"end": 17129,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17146,
											"end": 17164,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17146,
											"end": 17164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "347"
										},
										{
											"begin": 16815,
											"end": 17170,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "752"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 5,
											"value": "722"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "444"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 17377,
											"end": 17379,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 17359,
											"end": 17380,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17416,
											"end": 17418,
											"name": "PUSH",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 17396,
											"end": 17414,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17396,
											"end": 17414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17396,
											"end": 17414,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17389,
											"end": 17419,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17435,
											"end": 17453,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17435,
											"end": 17453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17435,
											"end": 17453,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17428,
											"end": 17478,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17495,
											"end": 17513,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17495,
											"end": 17513,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 17175,
											"end": 17519,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 303,
											"name": "tag",
											"source": 13,
											"value": "762"
										},
										{
											"begin": 14,
											"end": 303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 56,
											"end": 59,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 94,
											"end": 99,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 88,
											"end": 100,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 121,
											"end": 127,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 116,
											"end": 119,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 109,
											"end": 128,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 177,
											"end": 183,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 170,
											"end": 174,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 163,
											"end": 168,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 159,
											"end": 175,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 152,
											"end": 156,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 147,
											"end": 150,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 143,
											"end": 157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 137,
											"end": 184,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 229,
											"end": 230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 226,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 213,
											"end": 219,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 208,
											"end": 211,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 204,
											"end": 220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 200,
											"end": 227,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 193,
											"end": 231,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 292,
											"end": 296,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 287,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 281,
											"end": 288,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 276,
											"end": 278,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 264,
											"end": 279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 260,
											"end": 289,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 255,
											"end": 258,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 251,
											"end": 290,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 247,
											"end": 297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 240,
											"end": 297,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 240,
											"end": 297,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14,
											"end": 303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14,
											"end": 303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 308,
											"end": 528,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 308,
											"end": 528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 457,
											"end": 459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 439,
											"end": 460,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 420,
											"end": 424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 518,
											"end": 520,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 516,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 503,
											"end": 521,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 495,
											"end": 501,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 477,
											"end": 522,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "762"
										},
										{
											"begin": 477,
											"end": 522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 533,
											"end": 706,
											"name": "tag",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 533,
											"end": 706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 601,
											"end": 621,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 601,
											"end": 621,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 650,
											"end": 681,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 650,
											"end": 681,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 640,
											"end": 682,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 640,
											"end": 682,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 630,
											"end": 700,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 696,
											"end": 697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 694,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 686,
											"end": 698,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 630,
											"end": 700,
											"name": "tag",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 630,
											"end": 700,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 533,
											"end": 706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 533,
											"end": 706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 533,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 711,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 779,
											"end": 785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 793,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 828,
											"end": 837,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 815,
											"end": 838,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 811,
											"end": 843,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 808,
											"end": 860,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 808,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "777"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 854,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 846,
											"end": 858,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 808,
											"end": 860,
											"name": "tag",
											"source": 13,
											"value": "777"
										},
										{
											"begin": 808,
											"end": 860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "778"
										},
										{
											"begin": 898,
											"end": 907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 879,
											"end": 908,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 879,
											"end": 908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 879,
											"end": 908,
											"name": "tag",
											"source": 13,
											"value": "778"
										},
										{
											"begin": 879,
											"end": 908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 869,
											"end": 908,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 977,
											"end": 979,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 962,
											"end": 980,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 962,
											"end": 980,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 981,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 981,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 711,
											"end": 1011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1582,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 1208,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1285,
											"end": 1291,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1299,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1301,
											"end": 1307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1342,
											"end": 1351,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1333,
											"end": 1340,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1329,
											"end": 1352,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1325,
											"end": 1357,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "781"
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1370,
											"end": 1371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1367,
											"end": 1368,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1360,
											"end": 1372,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "tag",
											"source": 13,
											"value": "781"
										},
										{
											"begin": 1322,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "782"
										},
										{
											"begin": 1412,
											"end": 1421,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 1393,
											"end": 1422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "tag",
											"source": 13,
											"value": "782"
										},
										{
											"begin": 1393,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1422,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1383,
											"end": 1422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 1475,
											"end": 1477,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1464,
											"end": 1473,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1460,
											"end": 1478,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 1441,
											"end": 1479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1441,
											"end": 1479,
											"name": "tag",
											"source": 13,
											"value": "783"
										},
										{
											"begin": 1441,
											"end": 1479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1582,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1582,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1431,
											"end": 1479,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1431,
											"end": 1479,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1208,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1587,
											"end": 1773,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 1587,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1701,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1678,
											"end": 1685,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1674,
											"end": 1697,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1702,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1713,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1705,
											"end": 1717,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "tag",
											"source": 13,
											"value": "785"
										},
										{
											"begin": 1667,
											"end": 1719,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "712"
										},
										{
											"begin": 1757,
											"end": 1766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 1738,
											"end": 1767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2149,
											"end": 2309,
											"name": "tag",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 2149,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2234,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2234,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2283,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2263,
											"end": 2284,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2285,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "775"
										},
										{
											"begin": 2243,
											"end": 2303,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2393,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2428,
											"end": 2437,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2426,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2415,
											"end": 2438,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2411,
											"end": 2443,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2460,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "792"
										},
										{
											"begin": 2408,
											"end": 2460,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2456,
											"end": 2457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2454,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2408,
											"end": 2460,
											"name": "tag",
											"source": 13,
											"value": "792"
										},
										{
											"begin": 2408,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "793"
										},
										{
											"begin": 2498,
											"end": 2507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 2479,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2479,
											"end": 2508,
											"name": "tag",
											"source": 13,
											"value": "793"
										},
										{
											"begin": 2479,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2469,
											"end": 2508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2469,
											"end": 2508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 2558,
											"end": 2560,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2556,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2543,
											"end": 2561,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 2527,
											"end": 2562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2527,
											"end": 2562,
											"name": "tag",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 2527,
											"end": 2562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2517,
											"end": 2562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2799,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 2573,
											"end": 2799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2632,
											"end": 2638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2687,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2664,
											"end": 2671,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2660,
											"end": 2683,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2656,
											"end": 2688,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "796"
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2701,
											"end": 2702,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2698,
											"end": 2699,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "tag",
											"source": 13,
											"value": "796"
										},
										{
											"begin": 2653,
											"end": 2705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2573,
											"end": 2799,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2573,
											"end": 2799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2804,
											"end": 3390,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 2804,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2935,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2921,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2910,
											"end": 2933,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2938,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "798"
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2952,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2941,
											"end": 2953,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "tag",
											"source": 13,
											"value": "798"
										},
										{
											"begin": 2903,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2991,
											"end": 3000,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2978,
											"end": 3001,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3042,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3013,
											"end": 3043,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "799"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3054,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3046,
											"end": 3058,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "tag",
											"source": 13,
											"value": "799"
										},
										{
											"begin": 3010,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3132,
											"end": 3136,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3137,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3120,
											"end": 3147,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3151,
											"end": 3163,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "tag",
											"source": 13,
											"value": "800"
										},
										{
											"begin": 3110,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3201,
											"end": 3203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3188,
											"end": 3204,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3227,
											"end": 3245,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3246,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3259,
											"end": 3260,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3257,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3249,
											"end": 3261,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "tag",
											"source": 13,
											"value": "801"
										},
										{
											"begin": 3213,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3290,
											"end": 3296,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3282,
											"end": 3297,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3302,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3275,
											"end": 3312,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3272,
											"end": 3329,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3272,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 3272,
											"end": 3329,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3325,
											"end": 3326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3327,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3272,
											"end": 3329,
											"name": "tag",
											"source": 13,
											"value": "802"
										},
										{
											"begin": 3272,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3356,
											"end": 3358,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3348,
											"end": 3359,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3378,
											"end": 3384,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2804,
											"end": 3390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2804,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3603,
											"end": 3730,
											"name": "tag",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 3603,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3664,
											"end": 3674,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3659,
											"end": 3662,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3655,
											"end": 3675,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3652,
											"end": 3653,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3695,
											"end": 3699,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3685,
											"end": 3700,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3716,
											"end": 3717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3709,
											"end": 3724,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 4010,
											"name": "tag",
											"source": 13,
											"value": "766"
										},
										{
											"begin": 3735,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3800,
											"end": 3809,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3873,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3852,
											"end": 3865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3865,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3848,
											"end": 3875,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3876,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3836,
											"end": 3876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3906,
											"end": 3924,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3891,
											"end": 3925,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3949,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3888,
											"end": 3950,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3973,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "807"
										},
										{
											"begin": 3885,
											"end": 3973,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "807"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 3953,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "tag",
											"source": 13,
											"value": "807"
										},
										{
											"begin": 3953,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3982,
											"end": 4004,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 4010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3735,
											"end": 4010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3735,
											"end": 4010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4015,
											"end": 4198,
											"name": "tag",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 4015,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4075,
											"end": 4079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4100,
											"end": 4106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4127,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4150,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4094,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "810"
										},
										{
											"begin": 4094,
											"end": 4150,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "810"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "765"
										},
										{
											"begin": 4130,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "tag",
											"source": 13,
											"value": "810"
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4175,
											"end": 4176,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4171,
											"end": 4185,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4167,
											"end": 4192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4167,
											"end": 4192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4015,
											"end": 4198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4878,
											"name": "tag",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 4203,
											"end": 4878,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4257,
											"end": 4262,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4313,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4303,
											"end": 4307,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4295,
											"end": 4301,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4291,
											"end": 4308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4287,
											"end": 4314,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "812"
										},
										{
											"begin": 4277,
											"end": 4332,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4318,
											"end": 4330,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4277,
											"end": 4332,
											"name": "tag",
											"source": 13,
											"value": "812"
										},
										{
											"begin": 4277,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4374,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4375,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4395,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "813"
										},
										{
											"begin": 4411,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "814"
										},
										{
											"begin": 4451,
											"end": 4457,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4411,
											"end": 4458,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 4411,
											"end": 4458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4411,
											"end": 4458,
											"name": "tag",
											"source": 13,
											"value": "814"
										},
										{
											"begin": 4411,
											"end": 4458,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4395,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "766"
										},
										{
											"begin": 4395,
											"end": 4459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4395,
											"end": 4459,
											"name": "tag",
											"source": 13,
											"value": "813"
										},
										{
											"begin": 4395,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4486,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4505,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4514,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4534,
											"end": 4537,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4523,
											"end": 4544,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4604,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4590,
											"end": 4596,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4583,
											"end": 4597,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 4575,
											"end": 4581,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4567,
											"end": 4605,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4553,
											"end": 4605,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4628,
											"end": 4631,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4620,
											"end": 4626,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4617,
											"end": 4632,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4649,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "815"
										},
										{
											"begin": 4614,
											"end": 4649,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4646,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4643,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4635,
											"end": 4647,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4649,
											"name": "tag",
											"source": 13,
											"value": "815"
										},
										{
											"begin": 4614,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4681,
											"end": 4685,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4679,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4669,
											"end": 4686,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "tag",
											"source": 13,
											"value": "816"
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4711,
											"end": 4717,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4706,
											"end": 4709,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4718,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "818"
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 4798,
											"end": 4801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 4779,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "tag",
											"source": 13,
											"value": "819"
										},
										{
											"begin": 4779,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4803,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4767,
											"end": 4803,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4832,
											"end": 4836,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4742,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "816"
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "tag",
											"source": 13,
											"value": "818"
										},
										{
											"begin": 4695,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4872,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4878,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4883,
											"end": 5299,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4883,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4973,
											"end": 4979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5034,
											"end": 5036,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5013,
											"end": 5020,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5032,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5005,
											"end": 5037,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5054,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "821"
										},
										{
											"begin": 5002,
											"end": 5054,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5048,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5040,
											"end": 5052,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5054,
											"name": "tag",
											"source": 13,
											"value": "821"
										},
										{
											"begin": 5002,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5099,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5077,
											"end": 5100,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5123,
											"end": 5141,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5112,
											"end": 5142,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5159,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "822"
										},
										{
											"begin": 5109,
											"end": 5159,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5155,
											"end": 5156,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5145,
											"end": 5157,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5109,
											"end": 5159,
											"name": "tag",
											"source": 13,
											"value": "822"
										},
										{
											"begin": 5109,
											"end": 5159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "823"
										},
										{
											"begin": 5231,
											"end": 5238,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5211,
											"end": 5220,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5207,
											"end": 5229,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 5178,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5239,
											"name": "tag",
											"source": 13,
											"value": "823"
										},
										{
											"begin": 5178,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5239,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5287,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5274,
											"end": 5292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5258,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "764"
										},
										{
											"begin": 5258,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5603,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 5304,
											"end": 5603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5493,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5480,
											"end": 5494,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5455,
											"end": 5496,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5532,
											"end": 5534,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5529,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5516,
											"end": 5525,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5512,
											"end": 5530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5535,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5436,
											"end": 5440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "826"
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5582,
											"end": 5591,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5578,
											"end": 5596,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5552,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "762"
										},
										{
											"begin": 5552,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5552,
											"end": 5597,
											"name": "tag",
											"source": 13,
											"value": "826"
										},
										{
											"begin": 5552,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5597,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5304,
											"end": 5603,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5608,
											"end": 5908,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 5608,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5682,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5690,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5739,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5725,
											"end": 5734,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5723,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5712,
											"end": 5735,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5708,
											"end": 5740,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5705,
											"end": 5757,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5705,
											"end": 5757,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 5705,
											"end": 5757,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5754,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5751,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 5755,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5705,
											"end": 5757,
											"name": "tag",
											"source": 13,
											"value": "828"
										},
										{
											"begin": 5705,
											"end": 5757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5821,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5821,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5821,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5864,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5864,
											"end": 5902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 5864,
											"end": 5902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5913,
											"end": 6173,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5913,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6040,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "831"
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6048,
											"end": 6060,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "tag",
											"source": 13,
											"value": "831"
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "832"
										},
										{
											"begin": 6100,
											"end": 6109,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 6081,
											"end": 6110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "tag",
											"source": 13,
											"value": "832"
										},
										{
											"begin": 6081,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "794"
										},
										{
											"begin": 6163,
											"end": 6165,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6152,
											"end": 6161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6148,
											"end": 6166,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6129,
											"end": 6167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "763"
										},
										{
											"begin": 6129,
											"end": 6167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6357,
											"end": 6359,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6332,
											"end": 6355,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6328,
											"end": 6360,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6377,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "835"
										},
										{
											"begin": 6325,
											"end": 6377,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6373,
											"end": 6374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6371,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6363,
											"end": 6375,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6325,
											"end": 6377,
											"name": "tag",
											"source": 13,
											"value": "835"
										},
										{
											"begin": 6325,
											"end": 6377,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6422,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6446,
											"end": 6464,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6438,
											"end": 6444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6435,
											"end": 6465,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6482,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "836"
										},
										{
											"begin": 6432,
											"end": 6482,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6475,
											"end": 6476,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6468,
											"end": 6480,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6482,
											"name": "tag",
											"source": 13,
											"value": "836"
										},
										{
											"begin": 6432,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "837"
										},
										{
											"begin": 6554,
											"end": 6561,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6551,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6534,
											"end": 6543,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6552,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "768"
										},
										{
											"begin": 6501,
											"end": 6562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6501,
											"end": 6562,
											"name": "tag",
											"source": 13,
											"value": "837"
										},
										{
											"begin": 6501,
											"end": 6562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6491,
											"end": 6562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6604,
											"end": 6613,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6587,
											"end": 6619,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6662,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6634,
											"end": 6642,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6663,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "838"
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6676,
											"end": 6677,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6666,
											"end": 6678,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "tag",
											"source": 13,
											"value": "838"
										},
										{
											"begin": 6628,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6699,
											"end": 6723,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6699,
											"end": 6723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6754,
											"end": 6758,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6746,
											"end": 6759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6742,
											"end": 6769,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6732,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 6732,
											"end": 6787,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6783,
											"end": 6784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6780,
											"end": 6781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6773,
											"end": 6785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6732,
											"end": 6787,
											"name": "tag",
											"source": 13,
											"value": "839"
										},
										{
											"begin": 6732,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6823,
											"end": 6825,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6810,
											"end": 6826,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6846,
											"end": 6910,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "840"
										},
										{
											"begin": 6862,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "814"
										},
										{
											"begin": 6902,
											"end": 6908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "767"
										},
										{
											"begin": 6862,
											"end": 6909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6846,
											"end": 6910,
											"name": "tag",
											"source": 13,
											"value": "840"
										},
										{
											"begin": 6846,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6932,
											"end": 6935,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 6962,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6951,
											"end": 6954,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6944,
											"end": 6963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6983,
											"end": 6986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6979,
											"end": 6991,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6991,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7043,
											"end": 7045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7033,
											"end": 7039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7030,
											"end": 7031,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 7026,
											"end": 7040,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7018,
											"end": 7041,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7014,
											"end": 7046,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7000,
											"end": 7046,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7000,
											"end": 7046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7069,
											"end": 7076,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7061,
											"end": 7067,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7058,
											"end": 7077,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "842"
										},
										{
											"begin": 7055,
											"end": 7094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7090,
											"end": 7091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7080,
											"end": 7092,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7055,
											"end": 7094,
											"name": "tag",
											"source": 13,
											"value": "842"
										},
										{
											"begin": 7055,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7122,
											"end": 7124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7118,
											"end": 7120,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7114,
											"end": 7125,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7125,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7125,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "tag",
											"source": 13,
											"value": "843"
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7148,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7142,
											"end": 7157,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "845"
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7240,
											"end": 7257,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7240,
											"end": 7257,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7270,
											"end": 7288,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7167,
											"end": 7179,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7167,
											"end": 7179,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7167,
											"end": 7179,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7167,
											"end": 7179,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7308,
											"end": 7320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "843"
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "tag",
											"source": 13,
											"value": "845"
										},
										{
											"begin": 7134,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7349,
											"end": 7354,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7354,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6178,
											"end": 7360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7745,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7365,
											"end": 7745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7445,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7440,
											"end": 7452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7452,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7452,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 7440,
											"end": 7452,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7487,
											"end": 7499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7487,
											"end": 7499,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7487,
											"end": 7499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7508,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "847"
										},
										{
											"begin": 7508,
											"end": 7569,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7562,
											"end": 7566,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 7554,
											"end": 7560,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7567,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7567,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7540,
											"end": 7567,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7508,
											"end": 7569,
											"name": "tag",
											"source": 13,
											"value": "847"
										},
										{
											"begin": 7508,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7615,
											"end": 7617,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7604,
											"end": 7618,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 7584,
											"end": 7602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7581,
											"end": 7619,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7739,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "848"
										},
										{
											"begin": 7578,
											"end": 7739,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7671,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 7656,
											"end": 7659,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 7652,
											"end": 7672,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7673,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7696,
											"end": 7700,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 7693,
											"end": 7694,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7686,
											"end": 7701,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7724,
											"end": 7728,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7721,
											"end": 7722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7714,
											"end": 7729,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7739,
											"name": "tag",
											"source": 13,
											"value": "848"
										},
										{
											"begin": 7578,
											"end": 7739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7578,
											"end": 7739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7745,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7365,
											"end": 7745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8558,
											"end": 8685,
											"name": "tag",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 8558,
											"end": 8685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8619,
											"end": 8629,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 8614,
											"end": 8617,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 8610,
											"end": 8630,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 8607,
											"end": 8608,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8600,
											"end": 8631,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8650,
											"end": 8654,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 8647,
											"end": 8648,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8640,
											"end": 8655,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8678,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8671,
											"end": 8672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8679,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8690,
											"end": 8815,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 8690,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 8786,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 8786,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 8786,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8809,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8773,
											"end": 8809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8773,
											"end": 8809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8789,
											"end": 8807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 8789,
											"end": 8807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10343,
											"end": 10471,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 10343,
											"end": 10471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10431,
											"end": 10442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10431,
											"end": 10442,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10431,
											"end": 10442,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10465,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10428,
											"end": 10465,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10445,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 10445,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10476,
											"end": 10644,
											"name": "tag",
											"source": 13,
											"value": "396"
										},
										{
											"begin": 10476,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10549,
											"end": 10558,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10580,
											"end": 10589,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 10612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 10612,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10597,
											"end": 10612,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10591,
											"end": 10613,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10591,
											"end": 10613,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 10577,
											"end": 10614,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 10567,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10567,
											"end": 10638,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "769"
										},
										{
											"begin": 10618,
											"end": 10636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10649,
											"end": 10866,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 10649,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10689,
											"end": 10690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10715,
											"end": 10716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10705,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "866"
										},
										{
											"begin": 10705,
											"end": 10837,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10759,
											"end": 10769,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10754,
											"end": 10757,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10750,
											"end": 10770,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10771,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10784,
											"end": 10799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10822,
											"end": 10826,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10819,
											"end": 10820,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10812,
											"end": 10827,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10705,
											"end": 10837,
											"name": "tag",
											"source": 13,
											"value": "866"
										},
										{
											"begin": 10705,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10851,
											"end": 10860,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 10851,
											"end": 10860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10649,
											"end": 10866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13690,
											"end": 13817,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 13690,
											"end": 13817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13751,
											"end": 13761,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 13746,
											"end": 13749,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 13742,
											"end": 13762,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 13739,
											"end": 13740,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13732,
											"end": 13763,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13782,
											"end": 13786,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 13779,
											"end": 13780,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 13772,
											"end": 13787,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13806,
											"end": 13810,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13803,
											"end": 13804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13796,
											"end": 13811,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14996,
											"end": 15407,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 14996,
											"end": 15407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15198,
											"end": 15200,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15180,
											"end": 15201,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 15180,
											"end": 15201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15180,
											"end": 15201,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15237,
											"end": 15239,
											"name": "PUSH",
											"source": 13,
											"value": "2F"
										},
										{
											"begin": 15217,
											"end": 15235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15217,
											"end": 15235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15217,
											"end": 15235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15210,
											"end": 15240,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15276,
											"end": 15310,
											"name": "PUSH",
											"source": 13,
											"value": "526174652073686F756C64206265206C657373207468616E2050455243454E54"
										},
										{
											"begin": 15271,
											"end": 15273,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 15256,
											"end": 15274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15256,
											"end": 15274,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15249,
											"end": 15311,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20A3A2AFA222A727A6A4A720AA27A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15342,
											"end": 15344,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15327,
											"end": 15345,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15320,
											"end": 15365,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15397,
											"end": 15400,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 15382,
											"end": 15401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15382,
											"end": 15401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14996,
											"end": 15407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
								"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
								"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
								"SmartContractsInterview/Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"PERCENTAGE_DENOMINATOR()": "b3cd4254",
							"TOKEN_DECIMALS()": "5b7f415c",
							"TOKEN_public_DECIMALS()": "a6d1b891",
							"_approve(address,address,uint256)": "104e81ff",
							"_burn(address,uint256)": "6161eb18",
							"_debaseTokenToFragment(uint256)": "639f3cc7",
							"_excludedFromDebasing(address,bool)": "702115dd",
							"_excludedFromHoldingLimit(address,bool)": "35c85a34",
							"_fragmentToDebaseToken(uint256)": "89eec0f1",
							"_mint(address,uint256)": "4e6ec247",
							"_sendTokensTreasuryWallet(uint256,address)": "9cc2921c",
							"_transfer(address,address,uint256)": "30e0789e",
							"_treasuryBalanceOf()": "e2ff2440",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"balanceOfUnderlying(address)": "3af9e669",
							"checkUpkeep(bytes)": "6e04ff0d",
							"claimFromTreasury(address,uint256)": "6aa3773f",
							"debaseDuration()": "685f59de",
							"debaseRate()": "2ce8bd56",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"excludeDebasingSupply()": "8f372fa3",
							"getOwner()": "893d20e8",
							"holdingLimit()": "874a6ae7",
							"increaseAllowance(address,uint256)": "39509351",
							"isExcludedFromDebasing(address)": "924c2ead",
							"isExcludedFromHoldingLimit(address)": "8cf66b16",
							"lastTimeStamp()": "3f3b3b27",
							"lpPools(address)": "1658a700",
							"multiAirdropTokenRequested(address[],uint256[])": "e5a5e318",
							"multiExcludedFromDebasing(address[],bool)": "6c5ed03e",
							"multiExcludedFromHoldingLimit(address[],bool)": "7819f36f",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"performUpkeep(bytes)": "4585e33b",
							"renounceOwnership()": "715018a6",
							"sellTaxRate()": "24024efd",
							"setLastTime()": "5d70dde6",
							"symbol()": "95d89b41",
							"tokenScalingFactor()": "dc90b442",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"treasuryOperator(address)": "9220d3ed",
							"treasuryWallet()": "4626402b",
							"unpause()": "3f4ba83a",
							"updateDebaseDuration(uint256)": "df0ab308",
							"updateDebaseRate(uint256)": "81cea332",
							"updateHoldingLimit(uint256)": "3cde0c0f",
							"updateLPPool(address,bool)": "79825ede",
							"updateSellTaxRate(uint256)": "b4dade59",
							"updateTreasuryOperator(address,bool)": "75c2b13f",
							"withdrawETH(address)": "690d8320"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_tSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_sellTaxRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_debaseRate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasuryWallet\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERCENTAGE_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_public_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_debaseToken\",\"type\":\"uint256\"}],\"name\":\"_debaseTokenToFragment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isExcluded\",\"type\":\"bool\"}],\"name\":\"_excludedFromDebasing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isExcluded\",\"type\":\"bool\"}],\"name\":\"_excludedFromHoldingLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"_fragmentToDebaseToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"_sendTokensTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"_transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_treasuryBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claimFromTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debaseDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeDebasingSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"holdingLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromDebasing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isExcludedFromHoldingLimit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lpPools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_airdroppers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"multiAirdropTokenRequested\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_isExcluded\",\"type\":\"bool\"}],\"name\":\"multiExcludedFromDebasing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_accounts\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"_isExcluded\",\"type\":\"bool\"}],\"name\":\"multiExcludedFromHoldingLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellTaxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setLastTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenScalingFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"treasuryOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_debaseDuration\",\"type\":\"uint256\"}],\"name\":\"updateDebaseDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_debaseRate\",\"type\":\"uint256\"}],\"name\":\"updateDebaseRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_holdingLimit\",\"type\":\"uint256\"}],\"name\":\"updateHoldingLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lpPool\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isLPPool\",\"type\":\"bool\"}],\"name\":\"updateLPPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_sellTaxRate\",\"type\":\"uint256\"}],\"name\":\"updateSellTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isOperator\",\"type\":\"bool\"}],\"name\":\"updateTreasuryOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"name\":{\"details\":\"Returns the name of the token.\"},\"symbol\":{\"details\":\"Returns the symbol of the token.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"SmartContractsInterview/Token.sol\":\"Token\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"keccak256\":\"0x8c97744adc25cf30d1a2509bff6c0ddc9b36feb75f8e38c85d5c62b8ec773159\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c53c8736dacbf8c517c63937d556c3e4873a62f509c5d84b89e32fc5c9c6c2c\",\"dweb:/ipfs/QmeR6RSce5dTDcPgbwBnG7E8U89716bqsUcv1NeWnX5RJf\"]},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"keccak256\":\"0xce623f3e7fa4addf240032d2817b2b489ac08e79fae14a5cc5850ed3f1acddf8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0546b2739f3989b897c5cb591d01211e2db22e1a8578f68117f1a8a692abd85c\",\"dweb:/ipfs/QmW6guw8uUk2Dq49PWdjeZeEvnDDRg3CVX2BVcVNcT6QNL\"]},\"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol\":{\"keccak256\":\"0xc9f244c19f2a5db3fbc824ba53ca6b2340b8c38ee741c3a267393f34989fdb23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1690a727ba6920aa1129630339ef17c3a89bf8777b6d357c5f718a3971d7340\",\"dweb:/ipfs/QmSSiBzZMDfTQZGb6ce7zzjthWYa7j3PrbVYXcyXqinfHt\"]},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"keccak256\":\"0xf504b227c442cd4ed31b336b7bd15cfcb23220c84c26e750975c7e7d959125aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e35eb46dfadf12396e92dd970547209dfd99f0ae5b1ec7b5a3e81617f620a1\",\"dweb:/ipfs/Qmanoi2CDi9MwkP44HosagvewfMEvCMN1YthGRmCexVjwY\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1\",\"dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA\"]},\"SmartContractsInterview/Token.sol\":{\"keccak256\":\"0xc9f305978de0fd900c34742d7a8b63412980b4c8c003db90c12b265d81a65ef4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://398a60beb41557257bc8b5c75fee699f13fb81cac1e61680074685073aff1fbb\",\"dweb:/ipfs/QmTtcJ3i7SQrsTooWpMLa3UDPVet93KALQE6giMunzfiXc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 241,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 342,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 84,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "_owner",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1494,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 1497,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 1499,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1501,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "tSupply",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1503,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "excludeDebasingSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1509,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1513,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "_balances",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1515,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "treasuryBalance",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1517,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "treasuryWallet",
								"offset": 0,
								"slot": "11",
								"type": "t_address"
							},
							{
								"astId": 1519,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "sellTaxRate",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1521,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "debaseRate",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1523,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "tokenScalingFactor",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1525,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "debaseDuration",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1527,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "holdingLimit",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							},
							{
								"astId": 1531,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "lpPools",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1535,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "isExcludedFromDebasing",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1539,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "isExcludedFromHoldingLimit",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1543,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "treasuryOperator",
								"offset": 0,
								"slot": "20",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1545,
								"contract": "SmartContractsInterview/Token.sol:Token",
								"label": "lastTimeStamp",
								"offset": 0,
								"slot": "21",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkUpkeep(bytes)": {
								"notice": "method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
					"exportedSymbols": {
						"AutomationBase": [
							37
						]
					},
					"id": 38,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 37,
							"linearizedBaseContracts": [
								37
							],
							"name": "AutomationBase",
							"nameLocation": "66:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"errorSelector": "b60ac5db",
									"id": 3,
									"name": "OnlySimulatedBackend",
									"nameLocation": "91:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"src": "85:29:0"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "291:200:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 13,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 7,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "350:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 8,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "353:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "350:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 11,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "371:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 10,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 9,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "363:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "363:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "350:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 20,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 14,
																"name": "tx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967270,
																"src": "377:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_transaction",
																	"typeString": "tx"
																}
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "380:6:0",
															"memberName": "origin",
															"nodeType": "MemberAccess",
															"src": "377:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "307831313131313131313131313131313131313131313131313131313131313131313131313131313131",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "398:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x1111111111111111111111111111111111111111"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "390:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 16,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "390:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "390:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "377:64:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "350:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 26,
												"nodeType": "IfStatement",
												"src": "346:141:0",
												"trueBody": {
													"id": 25,
													"nodeType": "Block",
													"src": "443:44:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 22,
																	"name": "OnlySimulatedBackend",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "458:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "458:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 24,
															"nodeType": "RevertStatement",
															"src": "451:29:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 4,
										"nodeType": "StructuredDocumentation",
										"src": "118:127:0",
										"text": " @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preventExecution",
									"nameLocation": "257:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "291:0:0"
									},
									"scope": 37,
									"src": "248:243:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "652:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 31,
														"name": "_preventExecution",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "658:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "658:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "658:19:0"
											},
											{
												"id": 34,
												"nodeType": "PlaceholderStatement",
												"src": "683:1:0"
											}
										]
									},
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "495:129:0",
										"text": " @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."
									},
									"id": 36,
									"name": "cannotExecute",
									"nameLocation": "636:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:0"
									},
									"src": "627:62:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 38,
							"src": "57:634:0",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "32:660:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
					"exportedSymbols": {
						"AutomationBase": [
							37
						],
						"AutomationCompatible": [
							48
						],
						"AutomationCompatibleInterface": [
							75
						]
					},
					"id": 49,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 39,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
							"file": "./AutomationBase.sol",
							"id": 41,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 38,
							"src": "57:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 40,
										"name": "AutomationBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "65:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "./interfaces/AutomationCompatibleInterface.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 49,
							"sourceUnit": 76,
							"src": "110:93:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 42,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 75,
										"src": "118:29:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 44,
										"name": "AutomationBase",
										"nameLocations": [
											"247:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 37,
										"src": "247:14:1"
									},
									"id": 45,
									"nodeType": "InheritanceSpecifier",
									"src": "247:14:1"
								},
								{
									"baseName": {
										"id": 46,
										"name": "AutomationCompatibleInterface",
										"nameLocations": [
											"263:29:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 75,
										"src": "263:29:1"
									},
									"id": 47,
									"nodeType": "InheritanceSpecifier",
									"src": "263:29:1"
								}
							],
							"canonicalName": "AutomationCompatible",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 48,
							"linearizedBaseContracts": [
								48,
								75,
								37
							],
							"name": "AutomationCompatible",
							"nameLocation": "223:20:1",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 49,
							"src": "205:90:1",
							"usedErrors": [
								3
							],
							"usedEvents": []
						}
					],
					"src": "32:264:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
					"exportedSymbols": {
						"KeeperBase": [
							37
						],
						"KeeperCompatible": [
							48
						],
						"KeeperCompatibleInterface": [
							75
						]
					},
					"id": 57,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 50,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "125:23:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol",
							"file": "./AutomationCompatible.sol",
							"id": 52,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 49,
							"src": "195:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 51,
										"name": "AutomationCompatible",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 48,
										"src": "203:20:2",
										"typeDescriptions": {}
									},
									"local": "KeeperCompatible",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/AutomationBase.sol",
							"file": "./AutomationBase.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 38,
							"src": "326:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 53,
										"name": "AutomationBase",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 37,
										"src": "334:14:2",
										"typeDescriptions": {}
									},
									"local": "KeeperBase",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
							"file": "./interfaces/AutomationCompatibleInterface.sol",
							"id": 56,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 57,
							"sourceUnit": 76,
							"src": "439:122:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 55,
										"name": "AutomationCompatibleInterface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 75,
										"src": "447:29:2",
										"typeDescriptions": {}
									},
									"local": "KeeperCompatibleInterface",
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "125:437:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol",
					"exportedSymbols": {
						"AutomationCompatibleInterface": [
							75
						]
					},
					"id": 76,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 58,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AutomationCompatibleInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "AutomationCompatibleInterface",
							"nameLocation": "120:29:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "154:985:3",
										"text": " @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."
									},
									"functionSelector": "6e04ff0d",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "1151:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "1178:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1163:24:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1163:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1162:26:3"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "1212:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1207:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1207:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "1239:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "1226:24:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 65,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1206:45:3"
									},
									"scope": 75,
									"src": "1142:110:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1256:1003:3",
										"text": " @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."
									},
									"functionSelector": "4585e33b",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "2271:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "2300:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "2285:26:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 70,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2285:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:28:3"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:0:3"
									},
									"scope": 75,
									"src": "2262:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 76,
							"src": "110:2214:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2293:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							530
						],
						"Ownable": [
							223
						]
					},
					"id": 224,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 77,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 79,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 224,
							"sourceUnit": 531,
							"src": "128:45:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 78,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 530,
										"src": "136:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 81,
										"name": "Context",
										"nameLocations": [
											"692:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 530,
										"src": "692:7:4"
									},
									"id": 82,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:4"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:4",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 223,
							"linearizedBaseContracts": [
								223,
								530
							],
							"name": "Ownable",
							"nameLocation": "681:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 223,
									"src": "706:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 83,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:4",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 89,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "858:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:4"
									},
									"src": "825:50:4"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:4",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 94,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "994:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:4"
									},
									"src": "968:41:4"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 100,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1042:29:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "1073:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:4"
									},
									"src": "1015:84:4"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1259:153:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1273:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "1269:95:4",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "1301:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "1322:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "1315:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1392:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "1373:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:4"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:4",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 126,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1237:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:4"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:4"
									},
									"scope": 223,
									"src": "1225:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 133,
										"nodeType": "Block",
										"src": "1521:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 129,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "1531:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:4"
											},
											{
												"id": 132,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:4"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:4",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 134,
									"name": "onlyOwner",
									"nameLocation": "1509:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:4"
									},
									"src": "1500:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 142,
										"nodeType": "Block",
										"src": "1693:30:4",
										"statements": [
											{
												"expression": {
													"id": 140,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "1710:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 139,
												"id": 141,
												"nodeType": "Return",
												"src": "1703:13:4"
											}
										]
									},
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:4",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:4"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "1684:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:4"
									},
									"scope": 223,
									"src": "1638:85:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "1841:117:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 147,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1855:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 149,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "1866:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "1851:101:4",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "1880:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 153,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 512,
																			"src": "1928:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 152,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "1901:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "1894:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:4",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:4"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:4"
									},
									"scope": 223,
									"src": "1796:162:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "2347:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 168,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 167,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 166,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2357:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:4"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:4",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 163,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "2337:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:4"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:4"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:4"
									},
									"scope": 223,
									"src": "2293:101:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "2613:145:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 182,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 177,
														"src": "2627:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 183,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "IfStatement",
												"src": "2623:91:4",
												"trueBody": {
													"id": 195,
													"nodeType": "Block",
													"src": "2651:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 191,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 189,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 188,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "2672:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 194,
															"nodeType": "RevertStatement",
															"src": "2665:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 198,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "2742:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 222,
														"src": "2723:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:4"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 180,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 179,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "2603:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:4"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2570:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:4"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:4"
									},
									"scope": 223,
									"src": "2543:215:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "2975:124:4",
										"statements": [
											{
												"assignments": [
													209
												],
												"declarations": [
													{
														"constant": false,
														"id": 209,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:4",
														"nodeType": "VariableDeclaration",
														"scope": 221,
														"src": "2985:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 208,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 211,
												"initialValue": {
													"id": 210,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 84,
													"src": "3004:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:4"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "3020:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 213,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3029:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 217,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 209,
															"src": "3073:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "3083:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 216,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "3052:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 220,
												"nodeType": "EmitStatement",
												"src": "3047:45:4"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:4",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "2940:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:4"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:4"
									},
									"scope": 223,
									"src": "2912:187:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 224,
							"src": "663:2438:4",
							"usedErrors": [
								89,
								94
							],
							"usedEvents": [
								100
							]
						}
					],
					"src": "102:3000:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							530
						],
						"Pausable": [
							331
						]
					},
					"id": 332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 226,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 332,
							"sourceUnit": 531,
							"src": "130:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 228,
										"name": "Context",
										"nameLocations": [
											"632:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 530,
										"src": "632:7:5"
									},
									"id": 229,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 227,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 331,
							"linearizedBaseContracts": [
								331,
								530
							],
							"name": "Pausable",
							"nameLocation": "620:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 234,
									"name": "Paused",
									"nameLocation": "730:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:5"
									},
									"src": "724:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 239,
									"name": "Unpaused",
									"nameLocation": "841:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:5"
									},
									"src": "835:32:5"
								},
								{
									"constant": false,
									"id": 241,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 331,
									"src": "873:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 240,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "986:32:5",
										"statements": [
											{
												"expression": {
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "996:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "996:15:5"
											}
										]
									},
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 250,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:5"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:5"
									},
									"scope": 331,
									"src": "972:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "1229:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 253,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 287,
														"src": "1239:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:5"
											},
											{
												"id": 256,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:5"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 258,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:5"
									},
									"src": "1204:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "1476:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 261,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 298,
														"src": "1486:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:5"
											},
											{
												"id": 264,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:5"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 266,
									"name": "whenPaused",
									"nameLocation": "1463:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:5"
									},
									"src": "1454:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1668:31:5",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 241,
													"src": "1685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "1678:14:5"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:5"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 269,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 331,
									"src": "1615:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "1818:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:5",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 280,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "1837:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 285,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:5"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:5"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:5"
									},
									"scope": 331,
									"src": "1767:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "1993:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 292,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "2011:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:5"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:5"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:5"
									},
									"scope": 331,
									"src": "1945:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "2235:66:5",
										"statements": [
											{
												"expression": {
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 304,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2245:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 307,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 309,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2281:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 308,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "2274:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 312,
												"nodeType": "EmitStatement",
												"src": "2269:25:5"
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 301,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "2221:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:5"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:5"
									},
									"scope": 331,
									"src": "2186:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "2481:69:5",
										"statements": [
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2491:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 325,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 512,
																"src": "2530:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 324,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "2521:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "EmitStatement",
												"src": "2516:27:5"
											}
										]
									},
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 317,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 266,
												"src": "2470:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:5"
									},
									"returnParameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:5"
									},
									"scope": 331,
									"src": "2433:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 332,
							"src": "602:1950:5",
							"usedErrors": [],
							"usedEvents": [
								234,
								239
							]
						}
					],
					"src": "105:2448:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 333,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 334,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 337,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 335,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 336,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 340,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 338,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 339,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 342,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 341,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 350,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 396,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 356,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 357,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 361,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 365,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 342,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 366,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 370,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 372,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 396,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 379,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 380,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 396,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 390,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 342,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 391,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 389,
												"id": 393,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 396,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 397,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							474
						]
					},
					"id": 475,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 398,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:7",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 474,
							"linearizedBaseContracts": [
								474
							],
							"name": "IERC20",
							"nameLocation": "213:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 408,
									"name": "Transfer",
									"nameLocation": "395:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "404:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "426:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "446:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:7"
									},
									"src": "389:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 417,
									"name": "Approval",
									"nameLocation": "626:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "635:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "658:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "683:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:7"
									},
									"src": "620:78:7"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:7"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "820:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:7"
									},
									"scope": 474,
									"src": "774:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "930:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:7"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "970:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:7"
									},
									"scope": 474,
									"src": "911:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1221:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1233:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:7"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 441,
												"src": "1266:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:7"
									},
									"scope": 474,
									"src": "1203:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 442,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1566:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1581:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:7"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1621:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:7"
									},
									"scope": 474,
									"src": "1547:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 461,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2325:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:7"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 474,
									"src": "2308:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2711:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2725:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2737:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:7"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "2770:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 470,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:7"
									},
									"scope": 474,
									"src": "2689:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 475,
							"src": "203:2575:7",
							"usedErrors": [],
							"usedEvents": [
								408,
								417
							]
						}
					],
					"src": "106:2673:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							474
						],
						"IERC20Metadata": [
							500
						]
					},
					"id": 501,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 476,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 478,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 501,
							"sourceUnit": 475,
							"src": "151:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 477,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 474,
										"src": "159:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 480,
										"name": "IERC20",
										"nameLocations": [
											"305:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 474,
										"src": "305:6:8"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:8"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 479,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:8",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 500,
							"linearizedBaseContracts": [
								500,
								474
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:8"
									},
									"returnParameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "416:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:8"
									},
									"scope": 500,
									"src": "377:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:8",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:8"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 493,
												"src": "539:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 490,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:8"
									},
									"scope": 500,
									"src": "498:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 494,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:8",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:8"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "673:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 496,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:8"
									},
									"scope": 500,
									"src": "630:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 501,
							"src": "277:405:8",
							"usedErrors": [],
							"usedEvents": [
								408,
								417
							]
						}
					],
					"src": "125:558:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							530
						]
					},
					"id": 531,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 502,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 503,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 530,
							"linearizedBaseContracts": [
								530
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 511,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 508,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 507,
												"id": 510,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 530,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 520,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 517,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 516,
												"id": 519,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 514,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 530,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 525,
												"id": 527,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 530,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 531,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							842
						]
					},
					"id": 843,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 532,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 533,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:10",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 842,
							"linearizedBaseContracts": [
								842
							],
							"name": "SafeMath",
							"nameLocation": "490:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "717:140:10",
										"statements": [
											{
												"id": 563,
												"nodeType": "UncheckedBlock",
												"src": "727:124:10",
												"statements": [
													{
														"assignments": [
															546
														],
														"declarations": [
															{
																"constant": false,
																"id": 546,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 563,
																"src": "751:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 545,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 550,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 547,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "763:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 548,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "767:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "786:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 552,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 536,
																"src": "790:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 558,
														"nodeType": "IfStatement",
														"src": "782:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 556,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 544,
															"id": 557,
															"nodeType": "Return",
															"src": "793:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 560,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "838:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 561,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 544,
														"id": 562,
														"nodeType": "Return",
														"src": "824:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:10",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:10"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "702:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "708:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:10"
									},
									"scope": 842,
									"src": "641:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "1078:113:10",
										"statements": [
											{
												"id": 591,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 577,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1116:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 578,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "1120:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 584,
														"nodeType": "IfStatement",
														"src": "1112:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 576,
															"id": 583,
															"nodeType": "Return",
															"src": "1123:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 586,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "1168:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 587,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 570,
																		"src": "1172:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 589,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 576,
														"id": 590,
														"nodeType": "Return",
														"src": "1154:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:10",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1018:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1029:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:10"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1063:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "1069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:10"
									},
									"scope": 842,
									"src": "1002:189:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "1415:417:10",
										"statements": [
											{
												"id": 633,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "1683:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 612,
														"nodeType": "IfStatement",
														"src": "1679:28:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 604,
															"id": 611,
															"nodeType": "Return",
															"src": "1691:16:10"
														}
													},
													{
														"assignments": [
															614
														],
														"declarations": [
															{
																"constant": false,
																"id": 614,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:10",
																"nodeType": "VariableDeclaration",
																"scope": 633,
																"src": "1721:9:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 613,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 618,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 615,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "1733:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 616,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1737:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:10"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 619,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "1756:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 620,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "1760:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 622,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1765:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 628,
														"nodeType": "IfStatement",
														"src": "1752:33:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 626,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 604,
															"id": 627,
															"nodeType": "Return",
															"src": "1768:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 630,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "1813:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 631,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 604,
														"id": 632,
														"nodeType": "Return",
														"src": "1799:16:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:10",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1355:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1366:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:10"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1400:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1406:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:10"
									},
									"scope": 842,
									"src": "1339:493:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "2057:114:10",
										"statements": [
											{
												"id": 661,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 640,
																"src": "2095:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 648,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 654,
														"nodeType": "IfStatement",
														"src": "2091:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 652,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 646,
															"id": 653,
															"nodeType": "Return",
															"src": "2103:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 656,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 638,
																		"src": "2148:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 657,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 640,
																		"src": "2152:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 659,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 646,
														"id": 660,
														"nodeType": "Return",
														"src": "2134:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:10",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "1997:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2008:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:10"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2042:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "2048:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:10"
									},
									"scope": 842,
									"src": "1981:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "2406:114:10",
										"statements": [
											{
												"id": 689,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:10",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2444:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 682,
														"nodeType": "IfStatement",
														"src": "2440:29:10",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 680,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 674,
															"id": 681,
															"nodeType": "Return",
															"src": "2452:17:10"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 684,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "2497:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 685,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "2501:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 687,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 674,
														"id": 688,
														"nodeType": "Return",
														"src": "2483:20:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2346:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2357:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:10"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2391:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "2397:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:10"
									},
									"scope": 842,
									"src": "2330:190:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "2822:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 701,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "2839:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 702,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "2843:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 700,
												"id": 704,
												"nodeType": "Return",
												"src": "2832:12:10"
											}
										]
									},
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:10",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2768:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2779:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:10"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "2813:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:10"
									},
									"scope": 842,
									"src": "2755:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "3189:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 716,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "3206:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 717,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "3210:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 715,
												"id": 719,
												"nodeType": "Return",
												"src": "3199:12:10"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "3135:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "3146:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:10"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "3180:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:10"
									},
									"scope": 842,
									"src": "3122:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "3532:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 731,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "3549:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 732,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "3553:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 730,
												"id": 734,
												"nodeType": "Return",
												"src": "3542:12:10"
											}
										]
									},
									"documentation": {
										"id": 722,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:10",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3478:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3489:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:10"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "3523:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:10"
									},
									"scope": 842,
									"src": "3465:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3917:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 746,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 739,
														"src": "3934:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 747,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "3938:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 745,
												"id": 749,
												"nodeType": "Return",
												"src": "3927:12:10"
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3863:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3874:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:10"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3908:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:10"
									},
									"scope": 842,
									"src": "3850:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "4466:29:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 761,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "4483:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 762,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "4487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 760,
												"id": 764,
												"nodeType": "Return",
												"src": "4476:12:10"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "4412:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "4423:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:10"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 766,
												"src": "4457:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:10"
									},
									"scope": 842,
									"src": "4399:96:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "5054:106:10",
										"statements": [
											{
												"id": 789,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 779,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 771,
																		"src": "5096:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 780,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 769,
																		"src": "5101:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 782,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "5104:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 778,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 784,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 785,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 769,
																"src": "5138:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 786,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 771,
																"src": "5142:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 777,
														"id": 788,
														"nodeType": "Return",
														"src": "5131:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 767,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:10",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4972:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4983:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "4994:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 772,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:10"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5045:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:10"
									},
									"scope": 842,
									"src": "4959:201:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "5739:105:10",
										"statements": [
											{
												"id": 814,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 804,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 796,
																		"src": "5781:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 807,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "5788:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 803,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 809,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "5822:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 811,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "5826:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 802,
														"id": 813,
														"nodeType": "Return",
														"src": "5815:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:10",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5657:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5668:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5679:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:10"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "5730:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:10"
									},
									"scope": 842,
									"src": "5644:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "6585:105:10",
										"statements": [
											{
												"id": 839,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 829,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "6627:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 832,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "6634:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 828,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 834,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:10"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 835,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 819,
																"src": "6668:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 836,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 821,
																"src": "6672:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 827,
														"id": 838,
														"nodeType": "Return",
														"src": "6661:12:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:10",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6503:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6514:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6525:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 822,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:10"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "6576:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:10"
									},
									"scope": 842,
									"src": "6490:200:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 843,
							"src": "482:6210:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1455
						]
					},
					"id": 1456,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 844,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "205:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 845,
								"nodeType": "StructuredDocumentation",
								"src": "231:1098:11",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```solidity\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="
							},
							"fullyImplemented": true,
							"id": 1455,
							"linearizedBaseContracts": [
								1455
							],
							"name": "EnumerableSet",
							"nameLocation": "1338:13:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 853,
									"members": [
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "1862:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "1852:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 846,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 847,
												"nodeType": "ArrayTypeName",
												"src": "1852:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 852,
											"mutability": "mutable",
											"name": "_positions",
											"nameLocation": "2054:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 853,
											"src": "2020:44:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 851,
												"keyName": "value",
												"keyNameLocation": "2036:5:11",
												"keyType": {
													"id": 849,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2020:33:11",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2045:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "1805:3:11",
									"nodeType": "StructDefinition",
									"scope": 1455,
									"src": "1798:273:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "2310:337:11",
										"statements": [
											{
												"condition": {
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2324:22:11",
													"subExpression": {
														"arguments": [
															{
																"id": 865,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "2335:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 866,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "2340:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 864,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "2325:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2325:21:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "2604:37:11",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2625:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 863,
															"id": 891,
															"nodeType": "Return",
															"src": "2618:12:11"
														}
													]
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "2320:321:11",
												"trueBody": {
													"id": 889,
													"nodeType": "Block",
													"src": "2348:250:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 874,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "2379:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 869,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "2362:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2366:7:11",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "2362:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2374:4:11",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "2362:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2362:23:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "2362:23:11"
														},
														{
															"expression": {
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 877,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "2520:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2524:10:11",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 852,
																		"src": "2520:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 881,
																	"indexExpression": {
																		"id": 879,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 859,
																		"src": "2535:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2520:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 882,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "2544:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 883,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2548:7:11",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "2544:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2556:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2544:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2520:42:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 886,
															"nodeType": "ExpressionStatement",
															"src": "2520:42:11"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 887,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2583:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 863,
															"id": 888,
															"nodeType": "Return",
															"src": "2576:11:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "2077:159:11",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "2250:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2267:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2255:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 856,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 855,
														"name": "Set",
														"nameLocations": [
															"2255:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "2255:3:11"
													},
													"referencedDeclaration": 853,
													"src": "2255:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2280:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2272:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2254:32:11"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "2304:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:6:11"
									},
									"scope": 1455,
									"src": "2241:406:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "2887:1296:11",
										"statements": [
											{
												"assignments": [
													907
												],
												"declarations": [
													{
														"constant": false,
														"id": 907,
														"mutability": "mutable",
														"name": "position",
														"nameLocation": "2999:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 978,
														"src": "2991:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 906,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2991:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 912,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 908,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "3010:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3014:10:11",
														"memberName": "_positions",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 852,
														"src": "3010:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 911,
													"indexExpression": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "3025:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3010:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2991:40:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "3046:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3058:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3046:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "4140:37:11",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4161:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 905,
															"id": 975,
															"nodeType": "Return",
															"src": "4154:12:11"
														}
													]
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "3042:1135:11",
												"trueBody": {
													"id": 973,
													"nodeType": "Block",
													"src": "3061:1073:11",
													"statements": [
														{
															"assignments": [
																917
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 917,
																	"mutability": "mutable",
																	"name": "valueIndex",
																	"nameLocation": "3421:10:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 973,
																	"src": "3413:18:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 916,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3413:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 921,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 918,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "3434:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3445:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3434:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3413:33:11"
														},
														{
															"assignments": [
																923
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 923,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "3468:9:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 973,
																	"src": "3460:17:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 922,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3460:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 929,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 924,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "3480:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 925,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3484:7:11",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "3480:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 926,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3492:6:11",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3480:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3501:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3480:22:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3460:42:11"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 930,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "3521:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 931,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "3535:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3521:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "3517:378:11",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "3546:349:11",
																"statements": [
																	{
																		"assignments": [
																			934
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 934,
																				"mutability": "mutable",
																				"name": "lastValue",
																				"nameLocation": "3572:9:11",
																				"nodeType": "VariableDeclaration",
																				"scope": 956,
																				"src": "3564:17:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 933,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3564:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 939,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 935,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 899,
																					"src": "3584:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 936,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3588:7:11",
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 848,
																				"src": "3584:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 938,
																			"indexExpression": {
																				"id": 937,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 923,
																				"src": "3596:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3584:22:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "3564:42:11"
																	},
																	{
																		"expression": {
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 940,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 899,
																						"src": "3705:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 943,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3709:7:11",
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 848,
																					"src": "3705:11:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 944,
																				"indexExpression": {
																					"id": 942,
																					"name": "valueIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 917,
																					"src": "3717:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3705:23:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 945,
																				"name": "lastValue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 934,
																				"src": "3731:9:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "3705:35:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 947,
																		"nodeType": "ExpressionStatement",
																		"src": "3705:35:11"
																	},
																	{
																		"expression": {
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 948,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 899,
																						"src": "3844:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 951,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3848:10:11",
																					"memberName": "_positions",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 852,
																					"src": "3844:14:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 952,
																				"indexExpression": {
																					"id": 950,
																					"name": "lastValue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "3859:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "3844:25:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 953,
																				"name": "position",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "3872:8:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3844:36:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 955,
																		"nodeType": "ExpressionStatement",
																		"src": "3844:36:11"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 958,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "3973:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 961,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3977:7:11",
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "3973:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3985:3:11",
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "3973:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3973:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 964,
															"nodeType": "ExpressionStatement",
															"src": "3973:17:11"
														},
														{
															"expression": {
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4069:28:11",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 965,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "4076:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4080:10:11",
																		"memberName": "_positions",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 852,
																		"src": "4076:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 968,
																	"indexExpression": {
																		"id": 967,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 901,
																		"src": "4091:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4076:21:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 970,
															"nodeType": "ExpressionStatement",
															"src": "4069:28:11"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4119:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 905,
															"id": 972,
															"nodeType": "Return",
															"src": "4112:11:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "2653:157:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "2824:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "2844:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2832:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 898,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 897,
														"name": "Set",
														"nameLocations": [
															"2832:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "2832:3:11"
													},
													"referencedDeclaration": 853,
													"src": "2832:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2857:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2849:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 900,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2831:32:11"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "2881:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 903,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2881:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2880:6:11"
									},
									"scope": 1455,
									"src": "2815:1368:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "4343:50:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 990,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "4360:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4364:10:11",
															"memberName": "_positions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "4360:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 993,
														"indexExpression": {
															"id": 992,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "4375:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4360:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4385:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4360:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 989,
												"id": 996,
												"nodeType": "Return",
												"src": "4353:33:11"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4189:70:11",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "4273:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4295:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "4283:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 982,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 981,
														"name": "Set",
														"nameLocations": [
															"4283:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "4283:3:11"
													},
													"referencedDeclaration": 853,
													"src": "4283:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4308:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "4300:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4282:32:11"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "4337:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 987,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4337:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4336:6:11"
									},
									"scope": 1455,
									"src": "4264:129:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1011,
										"nodeType": "Block",
										"src": "4539:42:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1007,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "4556:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4560:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "4556:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1009,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4568:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4556:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1010,
												"nodeType": "Return",
												"src": "4549:25:11"
											}
										]
									},
									"documentation": {
										"id": 999,
										"nodeType": "StructuredDocumentation",
										"src": "4399:70:11",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "4483:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4503:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "4491:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1001,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1000,
														"name": "Set",
														"nameLocations": [
															"4491:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "4491:3:11"
													},
													"referencedDeclaration": 853,
													"src": "4491:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4490:17:11"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "4530:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4530:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4529:9:11"
									},
									"scope": 1455,
									"src": "4474:107:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "4999:42:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1023,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "5016:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1024,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5020:7:11",
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 848,
														"src": "5016:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1026,
													"indexExpression": {
														"id": 1025,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "5028:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5016:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1022,
												"id": 1027,
												"nodeType": "Return",
												"src": "5009:25:11"
											}
										]
									},
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "4587:331:11",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "4932:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "4948:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "4936:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1015,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1014,
														"name": "Set",
														"nameLocations": [
															"4936:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "4936:3:11"
													},
													"referencedDeclaration": 853,
													"src": "4936:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "4961:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "4953:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4953:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4935:32:11"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "4990:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1020,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4990:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4989:9:11"
									},
									"scope": 1455,
									"src": "4923:118:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "5655:35:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1039,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "5672:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5676:7:11",
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 848,
													"src": "5672:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1038,
												"id": 1041,
												"nodeType": "Return",
												"src": "5665:18:11"
											}
										]
									},
									"documentation": {
										"id": 1030,
										"nodeType": "StructuredDocumentation",
										"src": "5047:529:11",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "5590:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5610:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "5598:15:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1031,
														"name": "Set",
														"nameLocations": [
															"5598:3:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 853,
														"src": "5598:3:11"
													},
													"referencedDeclaration": 853,
													"src": "5598:3:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:17:11"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "5637:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1035,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "5637:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1036,
													"nodeType": "ArrayTypeName",
													"src": "5637:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5636:18:11"
									},
									"scope": 1455,
									"src": "5581:109:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1047,
									"members": [
										{
											"constant": false,
											"id": 1046,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "5747:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1047,
											"src": "5743:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1045,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1044,
													"name": "Set",
													"nameLocations": [
														"5743:3:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 853,
													"src": "5743:3:11"
												},
												"referencedDeclaration": 853,
												"src": "5743:3:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "5722:10:11",
									"nodeType": "StructDefinition",
									"scope": 1455,
									"src": "5715:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "6006:47:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1059,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1051,
																"src": "6028:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6032:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "6028:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1061,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "6040:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1058,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "6023:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6023:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1057,
												"id": 1063,
												"nodeType": "Return",
												"src": "6016:30:11"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "5766:159:11",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "5939:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "5962:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "5943:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1050,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1049,
														"name": "Bytes32Set",
														"nameLocations": [
															"5943:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "5943:10:11"
													},
													"referencedDeclaration": 1047,
													"src": "5943:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5975:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "5967:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5967:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5942:39:11"
									},
									"returnParameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "6000:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1055,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6000:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5999:6:11"
									},
									"scope": 1455,
									"src": "5930:123:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "6300:50:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1077,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "6325:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6329:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "6325:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1079,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1071,
															"src": "6337:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1076,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "6317:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6317:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1081,
												"nodeType": "Return",
												"src": "6310:33:11"
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "6059:157:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "6230:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6256:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "6237:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1067,
														"name": "Bytes32Set",
														"nameLocations": [
															"6237:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "6237:10:11"
													},
													"referencedDeclaration": 1047,
													"src": "6237:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6269:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "6261:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1070,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6261:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:39:11"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "6294:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6294:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6293:6:11"
									},
									"scope": 1455,
									"src": "6221:129:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "6517:52:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1095,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1087,
																"src": "6544:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6548:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "6544:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1097,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "6556:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1094,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "6534:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1099,
												"nodeType": "Return",
												"src": "6527:35:11"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "6356:70:11",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "6440:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6468:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "6449:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1086,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1085,
														"name": "Bytes32Set",
														"nameLocations": [
															"6449:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "6449:10:11"
													},
													"referencedDeclaration": 1047,
													"src": "6449:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6481:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "6473:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1088,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6473:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6448:39:11"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "6511:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6511:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6510:6:11"
									},
									"scope": 1455,
									"src": "6431:138:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "6722:43:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1111,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "6747:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6751:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "6747:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1110,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "6739:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6739:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1109,
												"id": 1114,
												"nodeType": "Return",
												"src": "6732:26:11"
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "6575:70:11",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "6659:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "6685:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6666:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1103,
														"name": "Bytes32Set",
														"nameLocations": [
															"6666:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "6666:10:11"
													},
													"referencedDeclaration": 1047,
													"src": "6666:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:24:11"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "6713:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6713:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6712:9:11"
									},
									"scope": 1455,
									"src": "6650:115:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "7190:46:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1128,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "7211:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7215:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "7211:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1130,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "7223:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1127,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "7207:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7207:22:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1132,
												"nodeType": "Return",
												"src": "7200:29:11"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "6771:331:11",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "7116:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7138:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "7119:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1119,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1118,
														"name": "Bytes32Set",
														"nameLocations": [
															"7119:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "7119:10:11"
													},
													"referencedDeclaration": 1047,
													"src": "7119:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "7151:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "7143:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7143:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7118:39:11"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "7181:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1124,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7181:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7180:9:11"
									},
									"scope": 1455,
									"src": "7107:129:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "7857:219:11",
										"statements": [
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "7884:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "7867:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1146,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7867:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1147,
															"nodeType": "ArrayTypeName",
															"src": "7867:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1153,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "7900:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7904:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1046,
															"src": "7900:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1149,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "7892:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7867:44:11"
											},
											{
												"assignments": [
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7938:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1163,
														"src": "7921:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1156,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "7921:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1157,
															"nodeType": "ArrayTypeName",
															"src": "7921:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1159,
												"nodeType": "VariableDeclarationStatement",
												"src": "7921:23:11"
											},
											{
												"AST": {
													"nativeSrc": "8007:39:11",
													"nodeType": "YulBlock",
													"src": "8007:39:11",
													"statements": [
														{
															"nativeSrc": "8021:15:11",
															"nodeType": "YulAssignment",
															"src": "8021:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "8031:5:11",
																"nodeType": "YulIdentifier",
																"src": "8031:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "8021:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8021:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1158,
														"isOffset": false,
														"isSlot": false,
														"src": "8021:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1148,
														"isOffset": false,
														"isSlot": false,
														"src": "8031:5:11",
														"valueSize": 1
													}
												],
												"id": 1160,
												"nodeType": "InlineAssembly",
												"src": "7998:48:11"
											},
											{
												"expression": {
													"id": 1161,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1158,
													"src": "8063:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1162,
												"nodeType": "Return",
												"src": "8056:13:11"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "7242:529:11",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "7785:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "7811:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "7792:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1137,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1136,
														"name": "Bytes32Set",
														"nameLocations": [
															"7792:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1047,
														"src": "7792:10:11"
													},
													"referencedDeclaration": 1047,
													"src": "7792:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1047_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7791:24:11"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "7839:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1140,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "7839:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1141,
													"nodeType": "ArrayTypeName",
													"src": "7839:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7838:18:11"
									},
									"scope": 1455,
									"src": "7776:300:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1168,
									"members": [
										{
											"constant": false,
											"id": 1167,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "8133:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1168,
											"src": "8129:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1166,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1165,
													"name": "Set",
													"nameLocations": [
														"8129:3:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 853,
													"src": "8129:3:11"
												},
												"referencedDeclaration": 853,
												"src": "8129:3:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "8108:10:11",
									"nodeType": "StructDefinition",
									"scope": 1455,
									"src": "8101:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "8392:74:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1180,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "8414:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8418:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "8414:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1188,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "8450:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8442:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1186,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8442:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8442:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8434:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1184,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8434:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8434:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8426:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1182,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8426:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8426:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1179,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "8409:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8409:50:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1193,
												"nodeType": "Return",
												"src": "8402:57:11"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "8152:159:11",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "8325:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8348:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "8329:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1171,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1170,
														"name": "AddressSet",
														"nameLocations": [
															"8329:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1168,
														"src": "8329:10:11"
													},
													"referencedDeclaration": 1168,
													"src": "8329:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8361:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "8353:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8353:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8328:39:11"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "8386:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8386:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8385:6:11"
									},
									"scope": 1455,
									"src": "8316:150:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1221,
										"nodeType": "Block",
										"src": "8713:77:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1207,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1199,
																"src": "8738:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8742:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "8738:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1215,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1201,
																					"src": "8774:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8766:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1213,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "8766:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8766:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8758:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1211,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8758:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8758:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8750:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1209,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8750:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8750:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1206,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "8730:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8730:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1205,
												"id": 1220,
												"nodeType": "Return",
												"src": "8723:60:11"
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "8472:157:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "8643:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8669:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "8650:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1198,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1197,
														"name": "AddressSet",
														"nameLocations": [
															"8650:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1168,
														"src": "8650:10:11"
													},
													"referencedDeclaration": 1168,
													"src": "8650:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8682:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "8674:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8649:39:11"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1222,
												"src": "8707:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8707:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8706:6:11"
									},
									"scope": 1455,
									"src": "8634:156:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "8957:79:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1234,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "8984:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8988:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "8984:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1242,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1228,
																					"src": "9020:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "9012:7:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1240,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "9012:7:11",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9012:14:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9004:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1238,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9004:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1244,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9004:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8996:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1236,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "8996:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8996:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1233,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "8974:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8974:55:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1232,
												"id": 1247,
												"nodeType": "Return",
												"src": "8967:62:11"
											}
										]
									},
									"documentation": {
										"id": 1223,
										"nodeType": "StructuredDocumentation",
										"src": "8796:70:11",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "8880:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "8908:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "8889:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1224,
														"name": "AddressSet",
														"nameLocations": [
															"8889:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1168,
														"src": "8889:10:11"
													},
													"referencedDeclaration": 1168,
													"src": "8889:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8921:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "8913:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8913:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8888:39:11"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "8951:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1230,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8951:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8950:6:11"
									},
									"scope": 1455,
									"src": "8871:165:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "9189:43:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1259,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1253,
																"src": "9214:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9218:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "9214:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1258,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "9206:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1262,
												"nodeType": "Return",
												"src": "9199:26:11"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "9042:70:11",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "9126:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9152:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "9133:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1252,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1251,
														"name": "AddressSet",
														"nameLocations": [
															"9133:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1168,
														"src": "9133:10:11"
													},
													"referencedDeclaration": 1168,
													"src": "9133:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9132:24:11"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "9180:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9179:9:11"
									},
									"scope": 1455,
									"src": "9117:115:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1290,
										"nodeType": "Block",
										"src": "9657:73:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1282,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1268,
																						"src": "9702:3:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1283,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9706:6:11",
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1167,
																					"src": "9702:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$853_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1284,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1270,
																					"src": "9714:5:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$853_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1281,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "9698:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9698:22:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9690:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1279,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9690:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9690:31:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9682:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1277,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "9682:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9682:40:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9674:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1275,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9674:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9674:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1289,
												"nodeType": "Return",
												"src": "9667:56:11"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "9238:331:11",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "9583:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "9605:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "9586:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1266,
														"name": "AddressSet",
														"nameLocations": [
															"9586:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1168,
														"src": "9586:10:11"
													},
													"referencedDeclaration": 1168,
													"src": "9586:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "9618:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "9610:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9610:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9585:39:11"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "9648:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:9:11"
									},
									"scope": 1455,
									"src": "9574:156:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "10351:219:11",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "10378:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "10361:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1303,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "10361:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1304,
															"nodeType": "ArrayTypeName",
															"src": "10361:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1307,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "10394:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10398:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1167,
															"src": "10394:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1306,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "10386:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10386:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10361:44:11"
											},
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10432:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "10415:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1313,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10415:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1314,
															"nodeType": "ArrayTypeName",
															"src": "10415:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1316,
												"nodeType": "VariableDeclarationStatement",
												"src": "10415:23:11"
											},
											{
												"AST": {
													"nativeSrc": "10501:39:11",
													"nodeType": "YulBlock",
													"src": "10501:39:11",
													"statements": [
														{
															"nativeSrc": "10515:15:11",
															"nodeType": "YulAssignment",
															"src": "10515:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "10525:5:11",
																"nodeType": "YulIdentifier",
																"src": "10525:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10515:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10515:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1315,
														"isOffset": false,
														"isSlot": false,
														"src": "10515:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1305,
														"isOffset": false,
														"isSlot": false,
														"src": "10525:5:11",
														"valueSize": 1
													}
												],
												"id": 1317,
												"nodeType": "InlineAssembly",
												"src": "10492:48:11"
											},
											{
												"expression": {
													"id": 1318,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1315,
													"src": "10557:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1300,
												"id": 1319,
												"nodeType": "Return",
												"src": "10550:13:11"
											}
										]
									},
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "9736:529:11",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "10279:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10305:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "10286:22:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1294,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1293,
														"name": "AddressSet",
														"nameLocations": [
															"10286:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1168,
														"src": "10286:10:11"
													},
													"referencedDeclaration": 1168,
													"src": "10286:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10285:24:11"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "10333:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1297,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10333:7:11",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1298,
													"nodeType": "ArrayTypeName",
													"src": "10333:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:18:11"
									},
									"scope": 1455,
									"src": "10270:300:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1325,
									"members": [
										{
											"constant": false,
											"id": 1324,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "10621:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1325,
											"src": "10617:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1323,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1322,
													"name": "Set",
													"nameLocations": [
														"10617:3:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 853,
													"src": "10617:3:11"
												},
												"referencedDeclaration": 853,
												"src": "10617:3:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$853_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "10599:7:11",
									"nodeType": "StructDefinition",
									"scope": 1455,
									"src": "10592:42:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "10877:56:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1337,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1329,
																"src": "10899:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10903:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1324,
															"src": "10899:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1341,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "10919:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10911:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1339,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10911:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10911:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1336,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 895,
														"src": "10894:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10894:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1344,
												"nodeType": "Return",
												"src": "10887:39:11"
											}
										]
									},
									"documentation": {
										"id": 1326,
										"nodeType": "StructuredDocumentation",
										"src": "10640:159:11",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "10813:3:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "10833:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "10817:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1328,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1327,
														"name": "UintSet",
														"nameLocations": [
															"10817:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "10817:7:11"
													},
													"referencedDeclaration": 1325,
													"src": "10817:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10846:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "10838:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10838:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10816:36:11"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "10871:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10871:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10870:6:11"
									},
									"scope": 1455,
									"src": "10804:129:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "11177:59:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1358,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "11202:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11206:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1324,
															"src": "11202:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1362,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "11222:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11214:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11214:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11214:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1357,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "11194:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11194:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1356,
												"id": 1365,
												"nodeType": "Return",
												"src": "11187:42:11"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "10939:157:11",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "11110:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11133:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "11117:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "UintSet",
														"nameLocations": [
															"11117:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "11117:7:11"
													},
													"referencedDeclaration": 1325,
													"src": "11117:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11146:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "11138:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11116:36:11"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "11171:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11171:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11170:6:11"
									},
									"scope": 1455,
									"src": "11101:135:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "11400:61:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1379,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1371,
																"src": "11427:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11431:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1324,
															"src": "11427:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1383,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1373,
																	"src": "11447:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11439:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1381,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11439:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11439:14:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1378,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 998,
														"src": "11417:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11417:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1377,
												"id": 1386,
												"nodeType": "Return",
												"src": "11410:44:11"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "11242:70:11",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "11326:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11351:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "11335:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1370,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1369,
														"name": "UintSet",
														"nameLocations": [
															"11335:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "11335:7:11"
													},
													"referencedDeclaration": 1325,
													"src": "11335:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11364:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "11356:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11356:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11334:36:11"
									},
									"returnParameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "11394:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11394:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11393:6:11"
									},
									"scope": 1455,
									"src": "11317:144:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "11611:43:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1398,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "11636:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11640:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1324,
															"src": "11636:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1397,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "11628:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11628:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1396,
												"id": 1401,
												"nodeType": "Return",
												"src": "11621:26:11"
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "11467:70:11",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "11551:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "11574:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "11558:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1391,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1390,
														"name": "UintSet",
														"nameLocations": [
															"11558:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "11558:7:11"
													},
													"referencedDeclaration": 1325,
													"src": "11558:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11557:21:11"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "11602:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11602:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11601:9:11"
									},
									"scope": 1455,
									"src": "11542:112:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1423,
										"nodeType": "Block",
										"src": "12076:55:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1417,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "12105:3:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12109:6:11",
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1324,
																	"src": "12105:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$853_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1419,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "12117:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$853_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1416,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "12101:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12101:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12093:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1414,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12093:7:11",
															"typeDescriptions": {}
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12093:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1413,
												"id": 1422,
												"nodeType": "Return",
												"src": "12086:38:11"
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "11660:331:11",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "12005:2:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12024:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "12008:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1406,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1405,
														"name": "UintSet",
														"nameLocations": [
															"12008:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "12008:7:11"
													},
													"referencedDeclaration": 1325,
													"src": "12008:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "12037:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "12029:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12007:36:11"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1424,
												"src": "12067:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12067:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12066:9:11"
									},
									"scope": 1455,
									"src": "11996:135:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "12749:219:11",
										"statements": [
											{
												"assignments": [
													1438
												],
												"declarations": [
													{
														"constant": false,
														"id": 1438,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "12776:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "12759:22:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1436,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "12759:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1437,
															"nodeType": "ArrayTypeName",
															"src": "12759:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1443,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1440,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "12792:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12796:6:11",
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1324,
															"src": "12792:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$853_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1439,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1043,
														"src": "12784:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$853_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12784:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12759:44:11"
											},
											{
												"assignments": [
													1448
												],
												"declarations": [
													{
														"constant": false,
														"id": 1448,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12830:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "12813:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1446,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12813:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1447,
															"nodeType": "ArrayTypeName",
															"src": "12813:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1449,
												"nodeType": "VariableDeclarationStatement",
												"src": "12813:23:11"
											},
											{
												"AST": {
													"nativeSrc": "12899:39:11",
													"nodeType": "YulBlock",
													"src": "12899:39:11",
													"statements": [
														{
															"nativeSrc": "12913:15:11",
															"nodeType": "YulAssignment",
															"src": "12913:15:11",
															"value": {
																"name": "store",
																"nativeSrc": "12923:5:11",
																"nodeType": "YulIdentifier",
																"src": "12923:5:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12913:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1448,
														"isOffset": false,
														"isSlot": false,
														"src": "12913:6:11",
														"valueSize": 1
													},
													{
														"declaration": 1438,
														"isOffset": false,
														"isSlot": false,
														"src": "12923:5:11",
														"valueSize": 1
													}
												],
												"id": 1450,
												"nodeType": "InlineAssembly",
												"src": "12890:48:11"
											},
											{
												"expression": {
													"id": 1451,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1448,
													"src": "12955:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1433,
												"id": 1452,
												"nodeType": "Return",
												"src": "12948:13:11"
											}
										]
									},
									"documentation": {
										"id": 1425,
										"nodeType": "StructuredDocumentation",
										"src": "12137:529:11",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "12680:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "12703:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "12687:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1427,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1426,
														"name": "UintSet",
														"nameLocations": [
															"12687:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1325,
														"src": "12687:7:11"
													},
													"referencedDeclaration": 1325,
													"src": "12687:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1325_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12686:21:11"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "12731:16:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1430,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12731:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1431,
													"nodeType": "ArrayTypeName",
													"src": "12731:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12730:18:11"
									},
									"scope": 1455,
									"src": "12671:297:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1456,
							"src": "1330:11640:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "205:12766:11"
				},
				"id": 11
			},
			"SmartContractsInterview/Token.sol": {
				"ast": {
					"absolutePath": "SmartContractsInterview/Token.sol",
					"exportedSymbols": {
						"Context": [
							530
						],
						"EnumerableSet": [
							1455
						],
						"IERC20": [
							474
						],
						"IERC20Metadata": [
							500
						],
						"KeeperBase": [
							37
						],
						"KeeperCompatible": [
							48
						],
						"KeeperCompatibleInterface": [
							75
						],
						"Ownable": [
							223
						],
						"Pausable": [
							331
						],
						"ReentrancyGuard": [
							396
						],
						"SafeMath": [
							842
						],
						"Token": [
							3135
						]
					},
					"id": 3136,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1457,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1458,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 475,
							"src": "57:56:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 1459,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 501,
							"src": "114:75:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1460,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 332,
							"src": "190:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 397,
							"src": "246:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
							"id": 1462,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 1456,
							"src": "309:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 843,
							"src": "375:57:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
							"file": "@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol",
							"id": 1464,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 57,
							"src": "433:71:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3136,
							"sourceUnit": 224,
							"src": "505:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1466,
										"name": "IERC20Metadata",
										"nameLocations": [
											"581:14:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 500,
										"src": "581:14:12"
									},
									"id": 1467,
									"nodeType": "InheritanceSpecifier",
									"src": "581:14:12"
								},
								{
									"baseName": {
										"id": 1468,
										"name": "Pausable",
										"nameLocations": [
											"601:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 331,
										"src": "601:8:12"
									},
									"id": 1469,
									"nodeType": "InheritanceSpecifier",
									"src": "601:8:12"
								},
								{
									"baseName": {
										"id": 1470,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"615:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 396,
										"src": "615:15:12"
									},
									"id": 1471,
									"nodeType": "InheritanceSpecifier",
									"src": "615:15:12"
								},
								{
									"baseName": {
										"id": 1472,
										"name": "KeeperCompatible",
										"nameLocations": [
											"636:16:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 48,
										"src": "636:16:12"
									},
									"id": 1473,
									"nodeType": "InheritanceSpecifier",
									"src": "636:16:12"
								},
								{
									"baseName": {
										"id": 1474,
										"name": "Ownable",
										"nameLocations": [
											"658:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 223,
										"src": "658:7:12"
									},
									"id": 1475,
									"nodeType": "InheritanceSpecifier",
									"src": "658:7:12"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3135,
							"linearizedBaseContracts": [
								3135,
								223,
								48,
								75,
								37,
								396,
								331,
								530,
								500,
								474
							],
							"name": "Token",
							"nameLocation": "568:5:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1478,
									"libraryName": {
										"id": 1476,
										"name": "SafeMath",
										"nameLocations": [
											"678:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 842,
										"src": "678:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "672:27:12",
									"typeName": {
										"id": 1477,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "691:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 1482,
									"libraryName": {
										"id": 1479,
										"name": "EnumerableSet",
										"nameLocations": [
											"710:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1455,
										"src": "710:13:12"
									},
									"nodeType": "UsingForDirective",
									"src": "704:49:12",
									"typeName": {
										"id": 1481,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1480,
											"name": "EnumerableSet.AddressSet",
											"nameLocations": [
												"728:13:12",
												"742:10:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1168,
											"src": "728:24:12"
										},
										"referencedDeclaration": 1168,
										"src": "728:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1168_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "b3cd4254",
									"id": 1485,
									"mutability": "constant",
									"name": "PERCENTAGE_DENOMINATOR",
									"nameLocation": "783:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "759:54:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1483,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "759:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "808:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b7f415c",
									"id": 1488,
									"mutability": "constant",
									"name": "TOKEN_DECIMALS",
									"nameLocation": "843:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "819:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1486,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "819:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653138",
										"id": 1487,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "860:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"value": "1e18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a6d1b891",
									"id": 1491,
									"mutability": "constant",
									"name": "TOKEN_public_DECIMALS",
									"nameLocation": "894:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "870:52:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1489,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "870:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31653234",
										"id": 1490,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "918:4:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"value": "1e24"
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										487
									],
									"constant": false,
									"functionSelector": "06fdde03",
									"id": 1494,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "952:4:12",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1493,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "943:8:12"
									},
									"scope": 3135,
									"src": "929:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1492,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "929:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										493
									],
									"constant": false,
									"functionSelector": "95d89b41",
									"id": 1497,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "985:6:12",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1496,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "976:8:12"
									},
									"scope": 3135,
									"src": "962:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1495,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "962:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1499,
									"mutability": "mutable",
									"name": "_decimals",
									"nameLocation": "1013:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "997:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1498,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "997:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1501,
									"mutability": "mutable",
									"name": "tSupply",
									"nameLocation": "1045:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1029:23:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1500,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1029:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8f372fa3",
									"id": 1503,
									"mutability": "mutable",
									"name": "excludeDebasingSupply",
									"nameLocation": "1073:21:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1058:36:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1502,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1058:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1509,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1157:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1101:67:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1508,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1504,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1109:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1101:47:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1507,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1505,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1128:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1120:27:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1506,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1139:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1513,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1211:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1175:45:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1512,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1510,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1511,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1194:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1515,
									"mutability": "mutable",
									"name": "treasuryBalance",
									"nameLocation": "1243:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1227:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1514,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1227:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4626402b",
									"id": 1517,
									"mutability": "mutable",
									"name": "treasuryWallet",
									"nameLocation": "1279:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1264:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1516,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1264:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "24024efd",
									"id": 1519,
									"mutability": "mutable",
									"name": "sellTaxRate",
									"nameLocation": "1315:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1300:26:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1518,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1300:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ce8bd56",
									"id": 1521,
									"mutability": "mutable",
									"name": "debaseRate",
									"nameLocation": "1347:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1332:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1520,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1332:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dc90b442",
									"id": 1523,
									"mutability": "mutable",
									"name": "tokenScalingFactor",
									"nameLocation": "1379:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1364:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1364:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "685f59de",
									"id": 1525,
									"mutability": "mutable",
									"name": "debaseDuration",
									"nameLocation": "1418:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1403:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1524,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1403:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "874a6ae7",
									"id": 1527,
									"mutability": "mutable",
									"name": "holdingLimit",
									"nameLocation": "1454:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1439:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1526,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1439:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1658a700",
									"id": 1531,
									"mutability": "mutable",
									"name": "lpPools",
									"nameLocation": "1505:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1473:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1530,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1528,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1481:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1473:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1529,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1492:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "924c2ead",
									"id": 1535,
									"mutability": "mutable",
									"name": "isExcludedFromDebasing",
									"nameLocation": "1550:22:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1518:54:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1534,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1532,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1526:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1518:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1533,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1537:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8cf66b16",
									"id": 1539,
									"mutability": "mutable",
									"name": "isExcludedFromHoldingLimit",
									"nameLocation": "1610:26:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1578:58:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1538,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1536,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1586:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1578:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1537,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1597:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9220d3ed",
									"id": 1543,
									"mutability": "mutable",
									"name": "treasuryOperator",
									"nameLocation": "1675:16:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1643:48:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1542,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1540,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1651:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1643:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1541,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1662:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f3b3b27",
									"id": 1545,
									"mutability": "mutable",
									"name": "lastTimeStamp",
									"nameLocation": "1713:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 3135,
									"src": "1698:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1544,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1698:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
									"id": 1551,
									"name": "Burn",
									"nameLocation": "1739:4:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1547,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1760:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1744:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1549,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1774:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1551,
												"src": "1766:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:38:12"
									},
									"src": "1733:49:12"
								},
								{
									"anonymous": false,
									"eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
									"id": 1557,
									"name": "Mint",
									"nameLocation": "1793:4:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1814:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "1798:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1826:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "1818:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1818:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1797:36:12"
									},
									"src": "1787:47:12"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "1872:90:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1560,
																	"name": "treasuryOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1543,
																	"src": "1890:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1563,
																"indexExpression": {
																	"expression": {
																		"id": 1561,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1907:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1911:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1907:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1890:28:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1564,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1922:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1926:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1922:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1566,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "1936:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1936:7:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1922:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1890:53:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1559,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1882:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1882:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "1882:62:12"
											},
											{
												"id": 1572,
												"nodeType": "PlaceholderStatement",
												"src": "1954:1:12"
											}
										]
									},
									"id": 1574,
									"name": "onlyTreasuryOperator",
									"nameLocation": "1849:20:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1869:2:12"
									},
									"src": "1840:122:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "2222:903:12",
										"statements": [
											{
												"expression": {
													"id": 1597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1595,
														"name": "name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1494,
														"src": "2232:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1596,
														"name": "_tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1576,
														"src": "2239:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2232:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1598,
												"nodeType": "ExpressionStatement",
												"src": "2232:17:12"
											},
											{
												"expression": {
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1599,
														"name": "symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2259:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1600,
														"name": "_tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "2268:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2259:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "2259:21:12"
											},
											{
												"expression": {
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1603,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "2290:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2302:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "2290:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "2290:14:12"
											},
											{
												"expression": {
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1607,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "2315:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1608,
															"name": "_tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1580,
															"src": "2325:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1609,
															"name": "TOKEN_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "2336:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2325:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2315:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1612,
												"nodeType": "ExpressionStatement",
												"src": "2315:35:12"
											},
											{
												"expression": {
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1613,
														"name": "excludeDebasingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "2360:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1614,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "2384:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2360:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "2360:31:12"
											},
											{
												"expression": {
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1617,
														"name": "holdingLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "2402:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1618,
																		"name": "tSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "2418:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2428:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "2418:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1621,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2417:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1622,
															"name": "PERCENTAGE_DENOMINATOR",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "2435:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2417:40:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2402:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "2402:55:12"
											},
											{
												"expression": {
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1626,
														"name": "sellTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "2468:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1627,
														"name": "_sellTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "2482:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2468:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "2468:26:12"
											},
											{
												"expression": {
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1630,
														"name": "debaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2504:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1631,
														"name": "_debaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2517:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2504:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "2504:24:12"
											},
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1634,
														"name": "tokenScalingFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "2539:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1635,
														"name": "TOKEN_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "2560:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2539:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "2539:35:12"
											},
											{
												"expression": {
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1638,
														"name": "debaseDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "2584:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3836343030",
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2601:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "2584:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "2584:22:12"
											},
											{
												"expression": {
													"id": 1644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1642,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "2616:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1643,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2634:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2616:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1645,
												"nodeType": "ExpressionStatement",
												"src": "2616:19:12"
											},
											{
												"expression": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1646,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "2646:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1647,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2662:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2668:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2662:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2646:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "2646:31:12"
											},
											{
												"expression": {
													"id": 1653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1651,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "2688:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1652,
														"name": "_treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1588,
														"src": "2705:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2688:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1654,
												"nodeType": "ExpressionStatement",
												"src": "2688:32:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1656,
															"name": "_tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "2753:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2766:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1655,
														"name": "_excludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "2731:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2731:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "2731:40:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1661,
															"name": "_tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "2807:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2820:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1660,
														"name": "_excludedFromHoldingLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "2781:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:44:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2781:44:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1666,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2857:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2873:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1665,
														"name": "_excludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "2835:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2835:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1669,
												"nodeType": "ExpressionStatement",
												"src": "2835:43:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1671,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "2914:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2930:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1670,
														"name": "_excludedFromHoldingLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "2888:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2888:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1674,
												"nodeType": "ExpressionStatement",
												"src": "2888:47:12"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1675,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "2946:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1677,
														"indexExpression": {
															"id": 1676,
															"name": "_tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "2956:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2946:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1679,
																"name": "tSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "2994:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1678,
															"name": "_fragmentToDebaseToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "2971:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 1680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2971:31:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2946:56:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "2946:56:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1683,
														"name": "pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3098,
														"src": "3013:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3013:7:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "3013:7:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3053:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3045:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1687,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3045:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3045:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1691,
															"name": "_tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "3057:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1692,
															"name": "tSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "3070:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1686,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "3036:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3036:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "EmitStatement",
												"src": "3031:47:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1696,
															"name": "_tokenOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1582,
															"src": "3106:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1695,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "3088:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3088:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "ExpressionStatement",
												"src": "3088:30:12"
											}
										]
									},
									"id": 1700,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1591,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2211:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2215:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2211:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1593,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1590,
												"name": "Ownable",
												"nameLocations": [
													"2203:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 223,
												"src": "2203:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2203:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "_tokenName",
												"nameLocation": "2003:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "1989:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1575,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1989:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "_tokenSymbol",
												"nameLocation": "2037:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2023:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2023:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "_tSupply",
												"nameLocation": "2067:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2059:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "_tokenOwner",
												"nameLocation": "2093:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2085:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2085:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "_sellTaxRate",
												"nameLocation": "2122:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2114:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_debaseRate",
												"nameLocation": "2152:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2144:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2144:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "_treasuryWallet",
												"nameLocation": "2181:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "2173:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:223:12"
									},
									"returnParameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2222:0:12"
									},
									"scope": 3135,
									"src": "1968:1157:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "3158:2:12",
										"statements": []
									},
									"id": 1704,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3138:2:12"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3158:0:12"
									},
									"scope": 3135,
									"src": "3131:29:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "3219:228:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1712,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1706,
																"src": "3237:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3252:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1714,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3244:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1713,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3244:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3244:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3237:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616464726573733a207a65726f2061646472657373",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3256:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_42c77607df448acdb8bc855d46684130f36187daf74deeded3f768350fe35353",
																"typeString": "literal_string \"Invalid address: zero address\""
															},
															"value": "Invalid address: zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_42c77607df448acdb8bc855d46684130f36187daf74deeded3f768350fe35353",
																"typeString": "literal_string \"Invalid address: zero address\""
															}
														],
														"id": 1711,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3229:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3229:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "3229:59:12"
											},
											{
												"assignments": [
													1722,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1722,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3304:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1745,
														"src": "3299:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1721,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3299:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1736,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3365:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1725,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "3325:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3317:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1723,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3317:8:12",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3317:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3330:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3317:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1730,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3350:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Token_$3135",
																				"typeString": "contract Token"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Token_$3135",
																				"typeString": "contract Token"
																			}
																		],
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3342:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1728,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3342:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3342:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3356:7:12",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3342:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3317:47:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3317:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3298:70:12"
											},
											{
												"condition": {
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3381:8:12",
													"subExpression": {
														"id": 1737,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1722,
														"src": "3382:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1744,
												"nodeType": "IfStatement",
												"src": "3378:63:12",
												"trueBody": {
													"id": 1743,
													"nodeType": "Block",
													"src": "3391:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "5472616e73666572204661696c6564",
																		"id": 1740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3412:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																			"typeString": "literal_string \"Transfer Failed\""
																		},
																		"value": "Transfer Failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5acabcb762867cdbcf367c30c495273eabea012d93b81d74177ab1ef966623f",
																			"typeString": "literal_string \"Transfer Failed\""
																		}
																	],
																	"id": 1739,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3405:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3405:25:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1742,
															"nodeType": "ExpressionStatement",
															"src": "3405:25:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "690d8320",
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1709,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1708,
												"name": "onlyOwner",
												"nameLocations": [
													"3209:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "3209:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3209:9:12"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "3175:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3195:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "3187:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1705,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3187:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3186:13:12"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3219:0:12"
									},
									"scope": 3135,
									"src": "3166:281:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										423
									],
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "3515:49:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1752,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "3532:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1753,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "3542:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3532:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1755,
												"nodeType": "Return",
												"src": "3525:32:12"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3462:11:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1748,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3488:8:12"
									},
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3473:2:12"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "3506:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:9:12"
									},
									"scope": 3135,
									"src": "3453:111:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										499
									],
									"body": {
										"id": 1768,
										"nodeType": "Block",
										"src": "3629:40:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1765,
															"name": "_decimals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "3652:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1764,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3646:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 1763,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3646:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 1762,
												"id": 1767,
												"nodeType": "Return",
												"src": "3639:23:12"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3579:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1759,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3604:8:12"
									},
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3587:2:12"
									},
									"returnParameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "3622:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1760,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3622:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3621:7:12"
									},
									"scope": 3135,
									"src": "3570:99:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										431
									],
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "3765:294:12",
										"statements": [
											{
												"condition": {
													"baseExpression": {
														"id": 1777,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "3779:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1779,
													"indexExpression": {
														"id": 1778,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1771,
														"src": "3802:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3779:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1795,
												"nodeType": "IfStatement",
												"src": "3775:218:12",
												"trueBody": {
													"id": 1794,
													"nodeType": "Block",
													"src": "3813:180:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1780,
																	"name": "_account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1771,
																	"src": "3831:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1781,
																	"name": "treasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1517,
																	"src": "3843:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3831:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1787,
															"nodeType": "IfStatement",
															"src": "3827:92:12",
															"trueBody": {
																"id": 1786,
																"nodeType": "Block",
																"src": "3859:60:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1783,
																				"name": "_treasuryBalanceOf",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3134,
																				"src": "3884:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																					"typeString": "function () view returns (uint256)"
																				}
																			},
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3884:20:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1776,
																		"id": 1785,
																		"nodeType": "Return",
																		"src": "3877:27:12"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1789,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1513,
																			"src": "3962:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 1791,
																		"indexExpression": {
																			"id": 1790,
																			"name": "_account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "3972:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3962:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1788,
																	"name": "_debaseTokenToFragment",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2612,
																	"src": "3939:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3939:43:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1776,
															"id": 1793,
															"nodeType": "Return",
															"src": "3932:50:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1797,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "4032:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1799,
															"indexExpression": {
																"id": 1798,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1771,
																"src": "4042:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1796,
														"name": "_debaseTokenToFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "4009:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1776,
												"id": 1801,
												"nodeType": "Return",
												"src": "4002:50:12"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3684:9:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1773,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3738:8:12"
									},
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "3711:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "3703:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3703:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3693:32:12"
									},
									"returnParameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "3756:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:9:12"
									},
									"scope": 3135,
									"src": "3675:384:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1814,
										"nodeType": "Block",
										"src": "4142:43:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1810,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "4159:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1812,
													"indexExpression": {
														"id": 1811,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1805,
														"src": "4169:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4159:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1809,
												"id": 1813,
												"nodeType": "Return",
												"src": "4152:26:12"
											}
										]
									},
									"functionSelector": "3af9e669",
									"id": 1815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfUnderlying",
									"nameLocation": "4074:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "4102:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "4094:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:18:12"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1815,
												"src": "4133:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4133:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4132:9:12"
									},
									"scope": 3135,
									"src": "4065:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										441
									],
									"body": {
										"id": 1834,
										"nodeType": "Block",
										"src": "4276:80:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1826,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4296:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4300:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4296:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1817,
															"src": "4308:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1829,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1819,
															"src": "4320:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1825,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "4286:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4286:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "4286:42:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1832,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4345:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1824,
												"id": 1833,
												"nodeType": "Return",
												"src": "4338:11:12"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4200:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1821,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4252:8:12"
									},
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "4217:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4209:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4209:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4236:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4228:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4208:36:12"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1835,
												"src": "4270:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4270:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4269:6:12"
									},
									"scope": 3135,
									"src": "4191:165:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										451
									],
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "4477:54:12",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1845,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "4494:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1847,
														"indexExpression": {
															"id": 1846,
															"name": "_holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "4506:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4494:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1849,
													"indexExpression": {
														"id": 1848,
														"name": "_spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "4515:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4494:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1844,
												"id": 1850,
												"nodeType": "Return",
												"src": "4487:37:12"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4371:9:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1841,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4450:8:12"
									},
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "_holder",
												"nameLocation": "4398:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4390:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4390:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "4423:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4415:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4380:57:12"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "4468:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:9:12"
									},
									"scope": 3135,
									"src": "4362:169:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										461
									],
									"body": {
										"id": 1871,
										"nodeType": "Block",
										"src": "4642:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1863,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4661:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4665:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4661:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1865,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1854,
															"src": "4673:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1866,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1856,
															"src": "4683:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1862,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "4652:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4652:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "4652:39:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1869,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4708:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1861,
												"id": 1870,
												"nodeType": "Return",
												"src": "4701:11:12"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 1872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4546:7:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1858,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4618:8:12"
									},
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "4571:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "4563:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4563:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4597:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "4589:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4589:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4553:57:12"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "4636:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4636:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4635:6:12"
									},
									"scope": 3135,
									"src": "4537:182:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										473
									],
									"body": {
										"id": 1908,
										"nodeType": "Block",
										"src": "4862:286:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1885,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "4882:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1886,
															"name": "_recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "4891:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1887,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1878,
															"src": "4903:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2389,
														"src": "4872:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4872:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "ExpressionStatement",
												"src": "4872:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1891,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "4930:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1892,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4951:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4955:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4951:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1901,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1878,
																	"src": "5029:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 1902,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5054:42:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1894,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "4975:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1896,
																		"indexExpression": {
																			"id": 1895,
																			"name": "_sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "4987:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4975:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1899,
																	"indexExpression": {
																		"expression": {
																			"id": 1897,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4996:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5000:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4996:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4975:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5008:3:12",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "4975:36:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4975:135:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1890,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "4921:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4921:199:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1905,
												"nodeType": "ExpressionStatement",
												"src": "4921:199:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5137:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1883,
												"id": 1907,
												"nodeType": "Return",
												"src": "5130:11:12"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 1909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4734:12:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1880,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4838:8:12"
									},
									"parameters": {
										"id": 1879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "4764:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4756:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4756:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "_recipient",
												"nameLocation": "4789:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4781:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1878,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4817:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4809:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4809:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4746:84:12"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1909,
												"src": "4856:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4856:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:6:12"
									},
									"scope": 3135,
									"src": "4725:423:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "5272:166:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1919,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5304:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5308:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5304:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "5328:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1929,
																	"name": "_addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1913,
																	"src": "5388:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1922,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "5350:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1925,
																		"indexExpression": {
																			"expression": {
																				"id": 1923,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5362:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5366:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5362:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5350:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1927,
																	"indexExpression": {
																		"id": 1926,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "5374:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5350:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5384:3:12",
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 706,
																"src": "5350:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5350:50:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1918,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "5282:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:128:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "5282:128:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5427:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1917,
												"id": 1934,
												"nodeType": "Return",
												"src": "5420:11:12"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5163:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "5198:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "5190:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5190:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "_addedValue",
												"nameLocation": "5224:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "5216:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5180:61:12"
									},
									"returnParameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1936,
												"src": "5266:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1915,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5266:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:6:12"
									},
									"scope": 3135,
									"src": "5154:284:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "5544:173:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1946,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5563:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5567:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5563:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1948,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "5575:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1956,
																	"name": "_subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1940,
																	"src": "5622:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5639:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1949,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1509,
																			"src": "5584:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1952,
																		"indexExpression": {
																			"expression": {
																				"id": 1950,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5596:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5600:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5596:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5584:23:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1954,
																	"indexExpression": {
																		"id": 1953,
																		"name": "_spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1938,
																		"src": "5608:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5584:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5618:3:12",
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "5584:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 1958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5584:95:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1945,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2008,
														"src": "5554:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5554:135:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "5554:135:12"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5706:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1944,
												"id": 1962,
												"nodeType": "Return",
												"src": "5699:11:12"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "5453:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "5479:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "5471:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "_subtractedValue",
												"nameLocation": "5496:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "5488:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5488:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5470:43:12"
									},
									"returnParameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "5538:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1942,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5538:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5537:6:12"
									},
									"scope": 3135,
									"src": "5444:273:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "5838:268:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1974,
																"name": "_holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "5856:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5875:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5867:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1975,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5867:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5867:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5856:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5879:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1973,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5848:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5848:70:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1982,
												"nodeType": "ExpressionStatement",
												"src": "5848:70:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1984,
																"name": "_spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1968,
																"src": "5936:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5956:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5948:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1985,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5948:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5948:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5936:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5960:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1983,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5928:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5928:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1992,
												"nodeType": "ExpressionStatement",
												"src": "5928:69:12"
											},
											{
												"expression": {
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1993,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1509,
																"src": "6008:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1996,
															"indexExpression": {
																"id": 1994,
																"name": "_holder",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1966,
																"src": "6020:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6008:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1997,
														"indexExpression": {
															"id": 1995,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "6029:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6008:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1998,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1970,
														"src": "6041:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6008:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "6008:40:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2002,
															"name": "_holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1966,
															"src": "6072:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2003,
															"name": "_spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1968,
															"src": "6081:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2004,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "6091:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2001,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "6063:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6063:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2006,
												"nodeType": "EmitStatement",
												"src": "6058:41:12"
											}
										]
									},
									"functionSelector": "104e81ff",
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "5732:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_holder",
												"nameLocation": "5758:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5750:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_spender",
												"nameLocation": "5783:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5775:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5809:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "5801:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5801:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5740:82:12"
									},
									"returnParameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5838:0:12"
									},
									"scope": 3135,
									"src": "5723:383:12",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "6164:521:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2016,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "6182:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6197:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2018,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6189:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2017,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6189:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6189:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6182:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 2015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6174:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2024,
												"nodeType": "ExpressionStatement",
												"src": "6174:61:12"
											},
											{
												"expression": {
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2025,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "6246:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2026,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2012,
														"src": "6257:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6246:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2028,
												"nodeType": "ExpressionStatement",
												"src": "6246:18:12"
											},
											{
												"assignments": [
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "debaseTokenAmount",
														"nameLocation": "6283:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 2075,
														"src": "6275:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2029,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6275:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2034,
												"initialValue": {
													"arguments": [
														{
															"id": 2032,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "6326:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2031,
														"name": "_fragmentToDebaseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "6303:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6303:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6275:59:12"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2035,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "6348:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2037,
													"indexExpression": {
														"id": 2036,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "6371:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6348:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2049,
												"nodeType": "IfStatement",
												"src": "6344:155:12",
												"trueBody": {
													"id": 2048,
													"nodeType": "Block",
													"src": "6377:122:12",
													"statements": [
														{
															"expression": {
																"id": 2040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2038,
																	"name": "excludeDebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "6391:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2039,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2012,
																	"src": "6416:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6391:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2041,
															"nodeType": "ExpressionStatement",
															"src": "6391:32:12"
														},
														{
															"expression": {
																"id": 2046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2042,
																	"name": "debaseTokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "6437:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2044,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2012,
																			"src": "6480:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2043,
																		"name": "_fragmentToDebaseToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "6457:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6457:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6437:51:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2047,
															"nodeType": "ExpressionStatement",
															"src": "6437:51:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2050,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "6509:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2052,
														"indexExpression": {
															"id": 2051,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "6519:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6509:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2053,
														"name": "debaseTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2030,
														"src": "6527:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6509:35:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2055,
												"nodeType": "ExpressionStatement",
												"src": "6509:35:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2057,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "6565:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2058,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "6570:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2056,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1557,
														"src": "6560:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6560:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2060,
												"nodeType": "EmitStatement",
												"src": "6555:23:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2061,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2010,
														"src": "6592:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2062,
														"name": "treasuryWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1517,
														"src": "6599:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6592:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"nodeType": "IfStatement",
												"src": "6588:91:12",
												"trueBody": {
													"id": 2073,
													"nodeType": "Block",
													"src": "6615:64:12",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2067,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6651:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6643:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2065,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6643:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2068,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6643:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2069,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "6655:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2070,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2012,
																		"src": "6660:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2064,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "6634:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6634:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2072,
															"nodeType": "EmitStatement",
															"src": "6629:39:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "4e6ec247",
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "6121:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6135:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6127:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6127:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2012,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6148:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "6140:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6140:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6126:30:12"
									},
									"returnParameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6164:0:12"
									},
									"scope": 3135,
									"src": "6112:573:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2138,
										"nodeType": "Block",
										"src": "6745:482:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2089,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2084,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2078,
																"src": "6763:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6780:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6772:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2085,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6772:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6772:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6763:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6784:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 2083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6755:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6755:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2092,
												"nodeType": "ExpressionStatement",
												"src": "6755:65:12"
											},
											{
												"expression": {
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2093,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "6831:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2094,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "6842:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6831:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "6831:18:12"
											},
											{
												"assignments": [
													2098
												],
												"declarations": [
													{
														"constant": false,
														"id": 2098,
														"mutability": "mutable",
														"name": "debaseTokenAmount",
														"nameLocation": "6868:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 2138,
														"src": "6860:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6860:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2102,
												"initialValue": {
													"arguments": [
														{
															"id": 2100,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "6911:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2099,
														"name": "_fragmentToDebaseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "6888:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6888:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6860:59:12"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2103,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "6933:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2105,
													"indexExpression": {
														"id": 2104,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2078,
														"src": "6956:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6933:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2117,
												"nodeType": "IfStatement",
												"src": "6929:157:12",
												"trueBody": {
													"id": 2116,
													"nodeType": "Block",
													"src": "6964:122:12",
													"statements": [
														{
															"expression": {
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2106,
																	"name": "excludeDebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "6978:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2107,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2080,
																	"src": "7003:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6978:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2109,
															"nodeType": "ExpressionStatement",
															"src": "6978:32:12"
														},
														{
															"expression": {
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2110,
																	"name": "debaseTokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2098,
																	"src": "7024:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2112,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2080,
																			"src": "7067:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2111,
																		"name": "_fragmentToDebaseToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "7044:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2113,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7044:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7024:51:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2115,
															"nodeType": "ExpressionStatement",
															"src": "7024:51:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2118,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "7096:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2120,
														"indexExpression": {
															"id": 2119,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "7106:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7096:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2121,
														"name": "debaseTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2098,
														"src": "7116:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7096:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "7096:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2125,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "7154:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2126,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "7161:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2124,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1551,
														"src": "7149:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7149:20:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2128,
												"nodeType": "EmitStatement",
												"src": "7144:25:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2130,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2078,
															"src": "7193:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7208:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7200:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2131,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7200:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 2134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7200:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2135,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2080,
															"src": "7212:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2129,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "7184:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7184:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2137,
												"nodeType": "EmitStatement",
												"src": "7179:41:12"
											}
										]
									},
									"functionSelector": "6161eb18",
									"id": 2139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "6700:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "6714:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "6706:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6706:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6729:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "6721:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6721:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6705:32:12"
									},
									"returnParameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6745:0:12"
									},
									"scope": 3135,
									"src": "6691:536:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "7348:2410:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2151,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "7366:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7383:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7375:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2152,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7375:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7375:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7366:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 2157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7387:39:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 2150,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7358:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7358:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "7358:69:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2161,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "7445:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7460:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7452:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7452:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7452:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7445:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7464:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 2160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7437:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7437:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2169,
												"nodeType": "ExpressionStatement",
												"src": "7437:65:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2171,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "7527:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2170,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "7517:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 2172,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7517:16:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2173,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2145,
														"src": "7536:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7517:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2180,
												"nodeType": "IfStatement",
												"src": "7513:98:12",
												"trueBody": {
													"id": 2179,
													"nodeType": "Block",
													"src": "7545:66:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "496e73756666696369656e742046756e647320466f72205472616e73666572",
																		"id": 2176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7566:33:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_40dd6eb5f0b12779f51dc2c657d95f9d67c485a171864bc8ffae511283136f08",
																			"typeString": "literal_string \"Insufficient Funds For Transfer\""
																		},
																		"value": "Insufficient Funds For Transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_40dd6eb5f0b12779f51dc2c657d95f9d67c485a171864bc8ffae511283136f08",
																			"typeString": "literal_string \"Insufficient Funds For Transfer\""
																		}
																	],
																	"id": 2175,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "7559:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7559:41:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2178,
															"nodeType": "ExpressionStatement",
															"src": "7559:41:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2182,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "7648:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2181,
																"name": "balanceOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "7638:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view returns (uint256)"
																}
															},
															"id": 2183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7638:14:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2184,
															"name": "holdingLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "7656:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7638:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7672:32:12",
														"subExpression": {
															"baseExpression": {
																"id": 2186,
																"name": "isExcludedFromHoldingLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "7673:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2188,
															"indexExpression": {
																"id": 2187,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "7700:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7673:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7638:66:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "IfStatement",
												"src": "7621:153:12",
												"trueBody": {
													"id": 2195,
													"nodeType": "Block",
													"src": "7715:59:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "486f6c64696e6720546f6b656e7320657863656564656421",
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7736:26:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_9469c4f2eeb72442418ea3737024403ab7b9756617b6b8ffc7558079b2b5b6ed",
																			"typeString": "literal_string \"Holding Tokens exceeded!\""
																		},
																		"value": "Holding Tokens exceeded!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_9469c4f2eeb72442418ea3737024403ab7b9756617b6b8ffc7558079b2b5b6ed",
																			"typeString": "literal_string \"Holding Tokens exceeded!\""
																		}
																	],
																	"id": 2191,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "7729:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7729:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2194,
															"nodeType": "ExpressionStatement",
															"src": "7729:34:12"
														}
													]
												}
											},
											{
												"assignments": [
													2198
												],
												"declarations": [
													{
														"constant": false,
														"id": 2198,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "7792:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "7784:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7784:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2200,
												"initialValue": {
													"id": 2199,
													"name": "_amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2145,
													"src": "7801:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7784:24:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7836:32:12",
														"subExpression": {
															"baseExpression": {
																"id": 2201,
																"name": "isExcludedFromHoldingLimit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1539,
																"src": "7837:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2203,
															"indexExpression": {
																"id": 2202,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2143,
																"src": "7864:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7837:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2206,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "7894:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2205,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "7884:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7884:14:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2208,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2198,
																"src": "7901:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7884:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2210,
															"name": "holdingLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "7910:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7884:38:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7836:86:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2227,
												"nodeType": "IfStatement",
												"src": "7819:197:12",
												"trueBody": {
													"id": 2226,
													"nodeType": "Block",
													"src": "7933:83:12",
													"statements": [
														{
															"expression": {
																"id": 2224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2213,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2198,
																	"src": "7947:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2214,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2198,
																		"src": "7956:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [
																							{
																								"id": 2216,
																								"name": "_to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2143,
																								"src": "7976:3:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"id": 2215,
																							"name": "balanceOf",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1803,
																							"src": "7966:9:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																								"typeString": "function (address) view returns (uint256)"
																							}
																						},
																						"id": 2217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "7966:14:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"id": 2218,
																						"name": "amount",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2198,
																						"src": "7983:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "7966:23:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2220,
																					"name": "holdingLimit",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1527,
																					"src": "7992:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7966:38:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2222,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7965:40:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7956:49:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7947:58:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2225,
															"nodeType": "ExpressionStatement",
															"src": "7947:58:12"
														}
													]
												}
											},
											{
												"assignments": [
													2229
												],
												"declarations": [
													{
														"constant": false,
														"id": 2229,
														"mutability": "mutable",
														"name": "debaseToken",
														"nameLocation": "8034:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "8026:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2228,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8026:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2233,
												"initialValue": {
													"arguments": [
														{
															"id": 2231,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "8071:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2230,
														"name": "_fragmentToDebaseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "8048:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8048:30:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8026:52:12"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2234,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "8092:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2236,
													"indexExpression": {
														"id": 2235,
														"name": "_from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2141,
														"src": "8115:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8092:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2244,
												"nodeType": "IfStatement",
												"src": "8088:104:12",
												"trueBody": {
													"id": 2243,
													"nodeType": "Block",
													"src": "8123:69:12",
													"statements": [
														{
															"expression": {
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2237,
																	"name": "debaseToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2229,
																	"src": "8137:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2239,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2198,
																			"src": "8174:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2238,
																		"name": "_fragmentToDebaseToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "8151:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8151:30:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8137:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2242,
															"nodeType": "ExpressionStatement",
															"src": "8137:44:12"
														}
													]
												}
											},
											{
												"assignments": [
													2246
												],
												"declarations": [
													{
														"constant": false,
														"id": 2246,
														"mutability": "mutable",
														"name": "sellTax",
														"nameLocation": "8210:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "8202:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8202:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2248,
												"initialValue": {
													"hexValue": "30",
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8220:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8202:19:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2249,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "8236:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2250,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "8245:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8245:7:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8236:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 2253,
															"name": "lpPools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "8256:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2255,
														"indexExpression": {
															"id": 2254,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "8264:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8256:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8236:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2267,
												"nodeType": "IfStatement",
												"src": "8232:120:12",
												"trueBody": {
													"id": 2266,
													"nodeType": "Block",
													"src": "8270:82:12",
													"statements": [
														{
															"expression": {
																"id": 2264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2257,
																	"name": "sellTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "8284:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2260,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2258,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2198,
																					"src": "8295:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2259,
																					"name": "sellTaxRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "8304:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8295:20:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2261,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "8294:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2262,
																		"name": "PERCENTAGE_DENOMINATOR",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "8319:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8294:47:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8284:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2265,
															"nodeType": "ExpressionStatement",
															"src": "8284:57:12"
														}
													]
												}
											},
											{
												"assignments": [
													2269
												],
												"declarations": [
													{
														"constant": false,
														"id": 2269,
														"mutability": "mutable",
														"name": "amountAfterTax",
														"nameLocation": "8370:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "8362:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2268,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8362:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2273,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2270,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "8387:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2271,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "8396:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8387:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8362:41:12"
											},
											{
												"assignments": [
													2275
												],
												"declarations": [
													{
														"constant": false,
														"id": 2275,
														"mutability": "mutable",
														"name": "debaseTokenAfterTax",
														"nameLocation": "8421:19:12",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "8413:27:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2274,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8413:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2279,
												"initialValue": {
													"arguments": [
														{
															"id": 2277,
															"name": "amountAfterTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "8466:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2276,
														"name": "_fragmentToDebaseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2628,
														"src": "8443:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) pure returns (uint256)"
														}
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8443:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8413:68:12"
											},
											{
												"assignments": [
													2281
												],
												"declarations": [
													{
														"constant": false,
														"id": 2281,
														"mutability": "mutable",
														"name": "adjustedBalance",
														"nameLocation": "8499:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "8491:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2280,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8491:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2290,
												"initialValue": {
													"condition": {
														"baseExpression": {
															"id": 2282,
															"name": "isExcludedFromDebasing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "8517:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2284,
														"indexExpression": {
															"id": 2283,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "8540:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8517:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2288,
														"name": "debaseTokenAfterTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2275,
														"src": "8612:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8517:114:12",
													"trueExpression": {
														"arguments": [
															{
																"id": 2286,
																"name": "amountAfterTax",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2269,
																"src": "8582:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2285,
															"name": "_fragmentToDebaseToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "8559:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 2287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8559:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8491:140:12"
											},
											{
												"expression": {
													"id": 2295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2291,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "8642:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2293,
														"indexExpression": {
															"id": 2292,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "8652:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8642:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2294,
														"name": "debaseToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2229,
														"src": "8662:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8642:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2296,
												"nodeType": "ExpressionStatement",
												"src": "8642:31:12"
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2297,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "8688:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2299,
													"indexExpression": {
														"id": 2298,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2143,
														"src": "8711:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8688:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2313,
													"nodeType": "Block",
													"src": "8781:62:12",
													"statements": [
														{
															"expression": {
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2307,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "8795:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2309,
																	"indexExpression": {
																		"id": 2308,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "8805:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8795:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2310,
																	"name": "debaseTokenAfterTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "8813:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8795:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2312,
															"nodeType": "ExpressionStatement",
															"src": "8795:37:12"
														}
													]
												},
												"id": 2314,
												"nodeType": "IfStatement",
												"src": "8684:159:12",
												"trueBody": {
													"id": 2306,
													"nodeType": "Block",
													"src": "8717:58:12",
													"statements": [
														{
															"expression": {
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2300,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "8731:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2302,
																	"indexExpression": {
																		"id": 2301,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2143,
																		"src": "8741:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8731:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2303,
																	"name": "adjustedBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2281,
																	"src": "8749:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8731:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2305,
															"nodeType": "ExpressionStatement",
															"src": "8731:33:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2315,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "8853:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2316,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "8872:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8853:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2318,
												"nodeType": "ExpressionStatement",
												"src": "8853:26:12"
											},
											{
												"expression": {
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2319,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "8889:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2320,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "8900:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8889:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2322,
												"nodeType": "ExpressionStatement",
												"src": "8889:18:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2324,
															"name": "_from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2141,
															"src": "8932:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2325,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "8939:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2326,
															"name": "amountAfterTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2269,
															"src": "8944:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2323,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "8923:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8923:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2328,
												"nodeType": "EmitStatement",
												"src": "8918:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2329,
														"name": "sellTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "8974:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8984:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8974:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2339,
												"nodeType": "IfStatement",
												"src": "8970:87:12",
												"trueBody": {
													"id": 2338,
													"nodeType": "Block",
													"src": "8987:70:12",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2333,
																		"name": "_from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2141,
																		"src": "9015:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2334,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "9022:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2335,
																		"name": "sellTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2246,
																		"src": "9038:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2332,
																	"name": "Transfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "9006:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9006:40:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2337,
															"nodeType": "EmitStatement",
															"src": "9001:45:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "9112:30:12",
														"subExpression": {
															"baseExpression": {
																"id": 2340,
																"name": "isExcludedFromDebasing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "9113:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2342,
															"indexExpression": {
																"id": 2341,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "9136:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9113:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"baseExpression": {
															"id": 2344,
															"name": "isExcludedFromDebasing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "9146:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2346,
														"indexExpression": {
															"id": 2345,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "9169:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9146:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9112:61:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 2360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2353,
																"name": "isExcludedFromDebasing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1535,
																"src": "9249:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2355,
															"indexExpression": {
																"id": 2354,
																"name": "_from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2141,
																"src": "9272:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9249:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "9282:28:12",
															"subExpression": {
																"baseExpression": {
																	"id": 2356,
																	"name": "isExcludedFromDebasing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "9283:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2358,
																"indexExpression": {
																	"id": 2357,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "9306:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9283:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "9249:61:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2366,
																	"name": "isExcludedFromDebasing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "9386:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2368,
																"indexExpression": {
																	"id": 2367,
																	"name": "_from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2141,
																	"src": "9409:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9386:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"baseExpression": {
																	"id": 2369,
																	"name": "isExcludedFromDebasing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "9419:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2371,
																"indexExpression": {
																	"id": 2370,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2143,
																	"src": "9442:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9419:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9386:60:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 2374,
															"nodeType": "Block",
															"src": "9542:92:12",
															"statements": []
														},
														"id": 2375,
														"nodeType": "IfStatement",
														"src": "9382:252:12",
														"trueBody": {
															"id": 2373,
															"nodeType": "Block",
															"src": "9448:88:12",
															"statements": []
														}
													},
													"id": 2376,
													"nodeType": "IfStatement",
													"src": "9245:389:12",
													"trueBody": {
														"id": 2365,
														"nodeType": "Block",
														"src": "9312:64:12",
														"statements": [
															{
																"expression": {
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2361,
																		"name": "excludeDebasingSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1503,
																		"src": "9326:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 2362,
																		"name": "amountAfterTax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2269,
																		"src": "9351:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9326:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2364,
																"nodeType": "ExpressionStatement",
																"src": "9326:39:12"
															}
														]
													}
												},
												"id": 2377,
												"nodeType": "IfStatement",
												"src": "9108:526:12",
												"trueBody": {
													"id": 2352,
													"nodeType": "Block",
													"src": "9175:64:12",
													"statements": [
														{
															"expression": {
																"id": 2350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2348,
																	"name": "excludeDebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "9189:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2349,
																	"name": "amountAfterTax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2269,
																	"src": "9214:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9189:39:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2351,
															"nodeType": "ExpressionStatement",
															"src": "9189:39:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2378,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "9648:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9666:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9648:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2387,
												"nodeType": "IfStatement",
												"src": "9644:108:12",
												"trueBody": {
													"id": 2386,
													"nodeType": "Block",
													"src": "9669:83:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2382,
																		"name": "treasuryBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "9709:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2383,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "9726:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2381,
																	"name": "_sendTokensTreasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "9683:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9683:58:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2385,
															"nodeType": "ExpressionStatement",
															"src": "9683:58:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "30e0789e",
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2148,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2147,
												"name": "whenNotPaused",
												"nameLocations": [
													"7334:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "7334:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7334:13:12"
										}
									],
									"name": "_transfer",
									"nameLocation": "7242:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "7269:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7261:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2143,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7292:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7284:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7284:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2145,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "7313:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "7305:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7305:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7251:75:12"
									},
									"returnParameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7348:0:12"
									},
									"scope": 3135,
									"src": "7233:2525:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2412,
										"nodeType": "Block",
										"src": "9836:150:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2397,
																"name": "treasuryBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1515,
																"src": "9854:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2398,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2391,
																"src": "9873:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9854:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742042616c616e636520746f20636c61696d",
															"id": 2400,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9882:31:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_178af170496040e43e5fed3c2211f45b441ebd3eec2edb3c0d04ec63679aa9d9",
																"typeString": "literal_string \"Insufficient Balance to claim\""
															},
															"value": "Insufficient Balance to claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_178af170496040e43e5fed3c2211f45b441ebd3eec2edb3c0d04ec63679aa9d9",
																"typeString": "literal_string \"Insufficient Balance to claim\""
															}
														],
														"id": 2396,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9846:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9846:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "9846:68:12"
											},
											{
												"expression": {
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2403,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "9924:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2404,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2391,
														"src": "9943:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9924:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "9924:26:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2408,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2393,
															"src": "9966:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2409,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "9971:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2407,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2076,
														"src": "9960:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9960:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2411,
												"nodeType": "ExpressionStatement",
												"src": "9960:19:12"
											}
										]
									},
									"functionSelector": "9cc2921c",
									"id": 2413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sendTokensTreasuryWallet",
									"nameLocation": "9773:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "9807:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "9799:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9799:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9824:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2413,
												"src": "9816:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9816:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9798:30:12"
									},
									"returnParameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9836:0:12"
									},
									"scope": 3135,
									"src": "9764:222:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "10115:538:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2424,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "10129:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10147:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10129:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2433,
												"nodeType": "IfStatement",
												"src": "10125:108:12",
												"trueBody": {
													"id": 2432,
													"nodeType": "Block",
													"src": "10150:83:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2428,
																		"name": "treasuryBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1515,
																		"src": "10190:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2429,
																		"name": "treasuryWallet",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1517,
																		"src": "10207:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2427,
																	"name": "_sendTokensTreasuryWallet",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2413,
																	"src": "10164:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (uint256,address)"
																	}
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10164:58:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2431,
															"nodeType": "ExpressionStatement",
															"src": "10164:58:12"
														}
													]
												}
											},
											{
												"condition": {
													"baseExpression": {
														"id": 2434,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "10247:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2436,
													"indexExpression": {
														"id": 2435,
														"name": "_to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2415,
														"src": "10270:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10247:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2458,
													"nodeType": "Block",
													"src": "10356:166:12",
													"statements": [
														{
															"expression": {
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2446,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "10370:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2448,
																	"indexExpression": {
																		"id": 2447,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "10380:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10370:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2450,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2417,
																			"src": "10411:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2449,
																		"name": "_fragmentToDebaseToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "10388:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10388:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10370:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2453,
															"nodeType": "ExpressionStatement",
															"src": "10370:49:12"
														},
														{
															"expression": {
																"id": 2456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2454,
																	"name": "excludeDebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "10479:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2455,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2417,
																	"src": "10504:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10479:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2457,
															"nodeType": "ExpressionStatement",
															"src": "10479:32:12"
														}
													]
												},
												"id": 2459,
												"nodeType": "IfStatement",
												"src": "10243:279:12",
												"trueBody": {
													"id": 2445,
													"nodeType": "Block",
													"src": "10276:74:12",
													"statements": [
														{
															"expression": {
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2437,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "10290:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2439,
																	"indexExpression": {
																		"id": 2438,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2415,
																		"src": "10300:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10290:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2441,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2417,
																			"src": "10331:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2440,
																		"name": "_fragmentToDebaseToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "10308:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10308:31:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10290:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2444,
															"nodeType": "ExpressionStatement",
															"src": "10290:49:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2460,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "10532:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2462,
														"indexExpression": {
															"id": 2461,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "10542:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10532:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2464,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2417,
																"src": "10584:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2463,
															"name": "_fragmentToDebaseToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "10561:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 2465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10561:31:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10532:60:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "10532:60:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2469,
															"name": "treasuryWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "10617:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2470,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2415,
															"src": "10633:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2471,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2417,
															"src": "10638:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2468,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "10608:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10608:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2473,
												"nodeType": "EmitStatement",
												"src": "10603:43:12"
											}
										]
									},
									"functionSelector": "6aa3773f",
									"id": 2475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2419,
												"name": "whenNotPaused",
												"nameLocations": [
													"10080:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "10080:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10080:13:12"
										},
										{
											"id": 2422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2421,
												"name": "onlyTreasuryOperator",
												"nameLocations": [
													"10094:20:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1574,
												"src": "10094:20:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10094:20:12"
										}
									],
									"name": "claimFromTreasury",
									"nameLocation": "10001:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "10036:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "10028:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10028:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2417,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "10057:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "10049:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10049:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:52:12"
									},
									"returnParameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10115:0:12"
									},
									"scope": 3135,
									"src": "9992:661:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "10833:160:12",
										"statements": [
											{
												"expression": {
													"id": 2493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2485,
														"name": "upkeepNeeded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2481,
														"src": "10843:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2486,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10859:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10865:9:12",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10859:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2488,
																		"name": "lastTimeStamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1545,
																		"src": "10877:13:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10859:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2490,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10858:33:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2491,
															"name": "debaseDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "10894:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10858:50:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10843:65:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2494,
												"nodeType": "ExpressionStatement",
												"src": "10843:65:12"
											},
											{
												"expression": {
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2495,
														"name": "performData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2483,
														"src": "10918:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2496,
														"name": "checkData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2477,
														"src": "10932:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_calldata_ptr",
															"typeString": "bytes calldata"
														}
													},
													"src": "10918:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"id": 2498,
												"nodeType": "ExpressionStatement",
												"src": "10918:23:12"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2499,
															"name": "upkeepNeeded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2481,
															"src": "10960:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2500,
															"name": "performData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2483,
															"src": "10974:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"id": 2501,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10959:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"functionReturnParameters": 2484,
												"id": 2502,
												"nodeType": "Return",
												"src": "10952:34:12"
											}
										]
									},
									"functionSelector": "6e04ff0d",
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkUpkeep",
									"nameLocation": "10668:11:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2479,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10758:8:12"
									},
									"parameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2477,
												"mutability": "mutable",
												"name": "checkData",
												"nameLocation": "10704:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "10689:24:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2476,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10689:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10679:40:12"
									},
									"returnParameters": {
										"id": 2484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2481,
												"mutability": "mutable",
												"name": "upkeepNeeded",
												"nameLocation": "10789:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "10784:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2480,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10784:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2483,
												"mutability": "mutable",
												"name": "performData",
												"nameLocation": "10816:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "10803:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10803:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10783:45:12"
									},
									"scope": 3135,
									"src": "10659:334:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										74
									],
									"body": {
										"id": 2536,
										"nodeType": "Block",
										"src": "11074:409:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2511,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "11190:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "11196:9:12",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "11190:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2513,
																			"name": "lastTimeStamp",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "11208:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11190:31:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2515,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11189:33:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2516,
																"name": "debaseDuration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1525,
																"src": "11225:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11189:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b656570557020726571756972656d656e74206973206e6f74206d657421",
															"id": 2518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11253:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3ce739ae4632163ea42e3bb420e91992e17c2c2db110c5ea16c1c9817736f6f3",
																"typeString": "literal_string \"KeepUp requirement is not met!\""
															},
															"value": "KeepUp requirement is not met!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3ce739ae4632163ea42e3bb420e91992e17c2c2db110c5ea16c1c9817736f6f3",
																"typeString": "literal_string \"KeepUp requirement is not met!\""
															}
														],
														"id": 2510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11168:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11168:127:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2520,
												"nodeType": "ExpressionStatement",
												"src": "11168:127:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2522,
																"name": "tSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "11314:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2523,
																"name": "excludeDebasingSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1503,
																"src": "11325:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11314:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "74537570706c79206d7573742062652067726561746572207468616e206f7220657175616c20746f206578636c7564654465626173696e67537570706c79",
															"id": 2525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11348:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ac071be263243feaeb93aefe4b90e1c3125d8814c0c6023f6884f9c607bb4f38",
																"typeString": "literal_string \"tSupply must be greater than or equal to excludeDebasingSupply\""
															},
															"value": "tSupply must be greater than or equal to excludeDebasingSupply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ac071be263243feaeb93aefe4b90e1c3125d8814c0c6023f6884f9c607bb4f38",
																"typeString": "literal_string \"tSupply must be greater than or equal to excludeDebasingSupply\""
															}
														],
														"id": 2521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11306:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11306:107:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2527,
												"nodeType": "ExpressionStatement",
												"src": "11306:107:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2528,
														"name": "_debase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2596,
														"src": "11425:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11425:9:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2530,
												"nodeType": "ExpressionStatement",
												"src": "11425:9:12"
											},
											{
												"expression": {
													"id": 2534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2531,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "11445:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2532,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11461:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11467:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11461:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11445:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2535,
												"nodeType": "ExpressionStatement",
												"src": "11445:31:12"
											}
										]
									},
									"functionSelector": "4585e33b",
									"id": 2537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "performUpkeep",
									"nameLocation": "11008:13:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2508,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11065:8:12"
									},
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2537,
												"src": "11022:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2505,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11022:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11021:34:12"
									},
									"returnParameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:12"
									},
									"scope": 3135,
									"src": "10999:484:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2595,
										"nodeType": "Block",
										"src": "11530:557:12",
										"statements": [
											{
												"assignments": [
													2543
												],
												"declarations": [
													{
														"constant": false,
														"id": 2543,
														"mutability": "mutable",
														"name": "ratio",
														"nameLocation": "11557:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 2595,
														"src": "11549:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2542,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11549:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2550,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2544,
																	"name": "debaseRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "11566:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2545,
																	"name": "TOKEN_DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1488,
																	"src": "11579:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11566:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2547,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11565:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2548,
														"name": "PERCENTAGE_DENOMINATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "11597:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11565:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11549:70:12"
											},
											{
												"assignments": [
													2552
												],
												"declarations": [
													{
														"constant": false,
														"id": 2552,
														"mutability": "mutable",
														"name": "preDebasingSupply",
														"nameLocation": "11638:17:12",
														"nodeType": "VariableDeclaration",
														"scope": 2595,
														"src": "11630:25:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2551,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11630:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2556,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2553,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "11658:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2554,
														"name": "excludeDebasingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1503,
														"src": "11668:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11658:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11630:59:12"
											},
											{
												"expression": {
													"id": 2567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2557,
														"name": "tokenScalingFactor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "11700:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2558,
																		"name": "tokenScalingFactor",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "11734:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2559,
																					"name": "TOKEN_DECIMALS",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1488,
																					"src": "11756:14:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2560,
																					"name": "ratio",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2543,
																					"src": "11773:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11756:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2562,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "11755:24:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11734:45:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2564,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11733:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 2565,
															"name": "TOKEN_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "11795:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11733:76:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11700:109:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2568,
												"nodeType": "ExpressionStatement",
												"src": "11700:109:12"
											},
											{
												"assignments": [
													2570
												],
												"declarations": [
													{
														"constant": false,
														"id": 2570,
														"mutability": "mutable",
														"name": "debasingSupply",
														"nameLocation": "11827:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2595,
														"src": "11819:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2569,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11819:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2580,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2571,
																	"name": "preDebasingSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2552,
																	"src": "11845:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2572,
																				"name": "TOKEN_DECIMALS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1488,
																				"src": "11878:14:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2573,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2543,
																				"src": "11895:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "11878:22:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2575,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "11877:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11845:56:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2577,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11844:58:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2578,
														"name": "TOKEN_DECIMALS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "11905:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11844:75:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11819:100:12"
											},
											{
												"assignments": [
													2582
												],
												"declarations": [
													{
														"constant": false,
														"id": 2582,
														"mutability": "mutable",
														"name": "debasedTokenAmount",
														"nameLocation": "11938:18:12",
														"nodeType": "VariableDeclaration",
														"scope": 2595,
														"src": "11930:26:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11930:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2583,
														"name": "preDebasingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2552,
														"src": "11959:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 2584,
														"name": "debasingSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2570,
														"src": "11979:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11959:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11930:63:12"
											},
											{
												"expression": {
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2587,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "12004:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2588,
														"name": "debasedTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "12023:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12004:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2590,
												"nodeType": "ExpressionStatement",
												"src": "12004:37:12"
											},
											{
												"expression": {
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2591,
														"name": "tSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "12051:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2592,
														"name": "debasedTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "12062:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12051:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2594,
												"nodeType": "ExpressionStatement",
												"src": "12051:29:12"
											}
										]
									},
									"id": 2596,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2540,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2539,
												"name": "whenNotPaused",
												"nameLocations": [
													"11516:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "11516:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "11516:13:12"
										}
									],
									"name": "_debase",
									"nameLocation": "11498:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11505:2:12"
									},
									"returnParameters": {
										"id": 2541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11530:0:12"
									},
									"scope": 3135,
									"src": "11489:598:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2611,
										"nodeType": "Block",
										"src": "12200:87:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2608,
															"name": "TOKEN_public_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "12258:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2605,
																	"name": "tokenScalingFactor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "12234:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2603,
																	"name": "_debaseToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2598,
																	"src": "12217:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12230:3:12",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 736,
																"src": "12217:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12217:36:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12254:3:12",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "12217:40:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12217:63:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2602,
												"id": 2610,
												"nodeType": "Return",
												"src": "12210:70:12"
											}
										]
									},
									"functionSelector": "639f3cc7",
									"id": 2612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_debaseTokenToFragment",
									"nameLocation": "12125:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "_debaseToken",
												"nameLocation": "12156:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "12148:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12148:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12147:22:12"
									},
									"returnParameters": {
										"id": 2602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2612,
												"src": "12191:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12191:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12190:9:12"
									},
									"scope": 3135,
									"src": "12116:171:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2627,
										"nodeType": "Block",
										"src": "12375:77:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2624,
															"name": "TOKEN_DECIMALS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "12430:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2621,
																	"name": "TOKEN_public_DECIMALS",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "12403:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2619,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2614,
																	"src": "12392:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12399:3:12",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 736,
																"src": "12392:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12392:33:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12426:3:12",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "12392:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12392:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2618,
												"id": 2626,
												"nodeType": "Return",
												"src": "12385:60:12"
											}
										]
									},
									"functionSelector": "89eec0f1",
									"id": 2628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fragmentToDebaseToken",
									"nameLocation": "12306:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2614,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "12337:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "12329:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12329:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12328:16:12"
									},
									"returnParameters": {
										"id": 2618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2628,
												"src": "12366:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12366:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12365:9:12"
									},
									"scope": 3135,
									"src": "12297:155:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2646,
										"nodeType": "Block",
										"src": "12573:187:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "_sellTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2630,
																"src": "12624:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "35303030",
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12640:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5000_by_1",
																	"typeString": "int_const 5000"
																},
																"value": "5000"
															},
															"src": "12624:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526174652073686f756c64206265206c657373207468616e2050455243454e544147455f44454e4f4d494e41544f52",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12658:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843",
																"typeString": "literal_string \"Rate should be less than PERCENTAGE_DENOMINATOR\""
															},
															"value": "Rate should be less than PERCENTAGE_DENOMINATOR"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843",
																"typeString": "literal_string \"Rate should be less than PERCENTAGE_DENOMINATOR\""
															}
														],
														"id": 2635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12603:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12603:114:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "12603:114:12"
											},
											{
												"expression": {
													"id": 2644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2642,
														"name": "sellTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "12727:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2643,
														"name": "_sellTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2630,
														"src": "12741:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12727:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2645,
												"nodeType": "ExpressionStatement",
												"src": "12727:26:12"
											}
										]
									},
									"functionSelector": "b4dade59",
									"id": 2647,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2632,
												"name": "onlyOwner",
												"nameLocations": [
													"12563:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "12563:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12563:9:12"
										}
									],
									"name": "updateSellTaxRate",
									"nameLocation": "12514:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "_sellTaxRate",
												"nameLocation": "12540:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2647,
												"src": "12532:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12532:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12531:22:12"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12573:0:12"
									},
									"scope": 3135,
									"src": "12505:255:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "12836:45:12",
										"statements": [
											{
												"expression": {
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2654,
														"name": "holdingLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "12846:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2655,
														"name": "_holdingLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2649,
														"src": "12861:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12846:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2657,
												"nodeType": "ExpressionStatement",
												"src": "12846:28:12"
											}
										]
									},
									"functionSelector": "3cde0c0f",
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2651,
												"name": "onlyOwner",
												"nameLocations": [
													"12826:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "12826:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12826:9:12"
										}
									],
									"name": "updateHoldingLimit",
									"nameLocation": "12775:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "_holdingLimit",
												"nameLocation": "12802:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "12794:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12794:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12793:23:12"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12836:0:12"
									},
									"scope": 3135,
									"src": "12766:115:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2677,
										"nodeType": "Block",
										"src": "12953:167:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2667,
																"name": "_debaseRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2661,
																"src": "12991:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2668,
																"name": "PERCENTAGE_DENOMINATOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "13006:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12991:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526174652073686f756c64206265206c657373207468616e2050455243454e544147455f44454e4f4d494e41544f52",
															"id": 2670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13029:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843",
																"typeString": "literal_string \"Rate should be less than PERCENTAGE_DENOMINATOR\""
															},
															"value": "Rate should be less than PERCENTAGE_DENOMINATOR"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_61c982945502efebf4e206d1ae654bb6fcbd82c1966487b82a7b519e9f6b8843",
																"typeString": "literal_string \"Rate should be less than PERCENTAGE_DENOMINATOR\""
															}
														],
														"id": 2666,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12983:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12983:96:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "12983:96:12"
											},
											{
												"expression": {
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2673,
														"name": "debaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "13089:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2674,
														"name": "_debaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2661,
														"src": "13102:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13089:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2676,
												"nodeType": "ExpressionStatement",
												"src": "13089:24:12"
											}
										]
									},
									"functionSelector": "81cea332",
									"id": 2678,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2664,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2663,
												"name": "onlyOwner",
												"nameLocations": [
													"12943:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "12943:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12943:9:12"
										}
									],
									"name": "updateDebaseRate",
									"nameLocation": "12896:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "_debaseRate",
												"nameLocation": "12921:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2678,
												"src": "12913:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12913:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12912:21:12"
									},
									"returnParameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12953:0:12"
									},
									"scope": 3135,
									"src": "12887:233:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2689,
										"nodeType": "Block",
										"src": "13200:49:12",
										"statements": [
											{
												"expression": {
													"id": 2687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2685,
														"name": "debaseDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "13210:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2686,
														"name": "_debaseDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2680,
														"src": "13227:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13210:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2688,
												"nodeType": "ExpressionStatement",
												"src": "13210:32:12"
											}
										]
									},
									"functionSelector": "df0ab308",
									"id": 2690,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2683,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2682,
												"name": "onlyOwner",
												"nameLocations": [
													"13190:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "13190:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "13190:9:12"
										}
									],
									"name": "updateDebaseDuration",
									"nameLocation": "13135:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "_debaseDuration",
												"nameLocation": "13164:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2690,
												"src": "13156:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13156:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13155:25:12"
									},
									"returnParameters": {
										"id": 2684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13200:0:12"
									},
									"scope": 3135,
									"src": "13126:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2725,
										"nodeType": "Block",
										"src": "13329:229:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2700,
																"name": "_lpPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2692,
																"src": "13347:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13366:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13358:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2701,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13358:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13358:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13347:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4c5020506f6f6c20616464726573732073686f756c646e2774206265207a65726f21",
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13370:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_80610bfd926591e04d7c9e978c0e76c69e04dd673eb3efbbe1432feff9b4b7b7",
																"typeString": "literal_string \"LP Pool address shouldn't be zero!\""
															},
															"value": "LP Pool address shouldn't be zero!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_80610bfd926591e04d7c9e978c0e76c69e04dd673eb3efbbe1432feff9b4b7b7",
																"typeString": "literal_string \"LP Pool address shouldn't be zero!\""
															}
														],
														"id": 2699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13339:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13339:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2708,
												"nodeType": "ExpressionStatement",
												"src": "13339:68:12"
											},
											{
												"expression": {
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2709,
															"name": "lpPools",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "13417:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2711,
														"indexExpression": {
															"id": 2710,
															"name": "_lpPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "13425:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13417:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2712,
														"name": "_isLPPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2694,
														"src": "13436:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13417:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "13417:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2716,
															"name": "_lpPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "13477:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2717,
															"name": "_isLPPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "13486:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2715,
														"name": "_excludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2813,
														"src": "13455:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13455:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2719,
												"nodeType": "ExpressionStatement",
												"src": "13455:41:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2721,
															"name": "_lpPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "13532:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2722,
															"name": "_isLPPool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2694,
															"src": "13541:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2720,
														"name": "_excludedFromHoldingLimit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2877,
														"src": "13506:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13506:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "13506:45:12"
											}
										]
									},
									"functionSelector": "79825ede",
									"id": 2726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2696,
												"name": "onlyOwner",
												"nameLocations": [
													"13319:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "13319:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "13319:9:12"
										}
									],
									"name": "updateLPPool",
									"nameLocation": "13264:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "_lpPool",
												"nameLocation": "13285:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "13277:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13277:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "_isLPPool",
												"nameLocation": "13299:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2726,
												"src": "13294:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13294:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13276:33:12"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13329:0:12"
									},
									"scope": 3135,
									"src": "13255:303:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2751,
										"nodeType": "Block",
										"src": "13650:123:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2736,
																"name": "_addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2728,
																"src": "13668:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13685:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13677:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2737,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13677:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13677:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13668:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f70657261746f722073686f756c646e2774206265207a65726f2e",
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13689:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dcc620396316e80fe3313fdb45381a1c672b33070adfcdfe129154cbb0d20bec",
																"typeString": "literal_string \"Operator shouldn't be zero.\""
															},
															"value": "Operator shouldn't be zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dcc620396316e80fe3313fdb45381a1c672b33070adfcdfe129154cbb0d20bec",
																"typeString": "literal_string \"Operator shouldn't be zero.\""
															}
														],
														"id": 2735,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13660:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13660:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2744,
												"nodeType": "ExpressionStatement",
												"src": "13660:59:12"
											},
											{
												"expression": {
													"id": 2749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2745,
															"name": "treasuryOperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "13729:16:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2747,
														"indexExpression": {
															"id": 2746,
															"name": "_addr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2728,
															"src": "13746:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13729:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2748,
														"name": "_isOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2730,
														"src": "13755:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "13729:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2750,
												"nodeType": "ExpressionStatement",
												"src": "13729:37:12"
											}
										]
									},
									"functionSelector": "75c2b13f",
									"id": 2752,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2733,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2732,
												"name": "onlyOwner",
												"nameLocations": [
													"13640:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "13640:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "13640:9:12"
										}
									],
									"name": "updateTreasuryOperator",
									"nameLocation": "13573:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2728,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "13605:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "13597:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13597:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2730,
												"mutability": "mutable",
												"name": "_isOperator",
												"nameLocation": "13618:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2752,
												"src": "13613:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13613:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13595:35:12"
									},
									"returnParameters": {
										"id": 2734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13650:0:12"
									},
									"scope": 3135,
									"src": "13564:209:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2812,
										"nodeType": "Block",
										"src": "13852:582:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2760,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2754,
																"src": "13879:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13899:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13891:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2761,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13891:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13891:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13879:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e742073686f756c646e2774206265207a65726f2e",
															"id": 2766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13903:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a",
																"typeString": "literal_string \"Account shouldn't be zero.\""
															},
															"value": "Account shouldn't be zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a",
																"typeString": "literal_string \"Account shouldn't be zero.\""
															}
														],
														"id": 2759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13871:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13871:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2768,
												"nodeType": "ExpressionStatement",
												"src": "13871:61:12"
											},
											{
												"assignments": [
													2770
												],
												"declarations": [
													{
														"constant": false,
														"id": 2770,
														"mutability": "mutable",
														"name": "prevIsExcluded",
														"nameLocation": "13947:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "13942:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2769,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13942:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2774,
												"initialValue": {
													"baseExpression": {
														"id": 2771,
														"name": "isExcludedFromDebasing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1535,
														"src": "13964:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2773,
													"indexExpression": {
														"id": 2772,
														"name": "_account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2754,
														"src": "13987:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13964:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13942:54:12"
											},
											{
												"assignments": [
													2776
												],
												"declarations": [
													{
														"constant": false,
														"id": 2776,
														"mutability": "mutable",
														"name": "prevBalance",
														"nameLocation": "14014:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 2812,
														"src": "14006:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2775,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14006:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2780,
												"initialValue": {
													"arguments": [
														{
															"id": 2778,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2754,
															"src": "14038:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2777,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "14028:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 2779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14028:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14006:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2781,
														"name": "prevIsExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "14071:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2782,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2756,
														"src": "14089:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14071:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2811,
												"nodeType": "IfStatement",
												"src": "14067:361:12",
												"trueBody": {
													"id": 2810,
													"nodeType": "Block",
													"src": "14102:326:12",
													"statements": [
														{
															"expression": {
																"id": 2788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2784,
																		"name": "isExcludedFromDebasing",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1535,
																		"src": "14116:22:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 2786,
																	"indexExpression": {
																		"id": 2785,
																		"name": "_account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2754,
																		"src": "14139:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "14116:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2787,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2756,
																	"src": "14151:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14116:46:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2789,
															"nodeType": "ExpressionStatement",
															"src": "14116:46:12"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "14185:15:12",
																	"subExpression": {
																		"id": 2790,
																		"name": "prevIsExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2770,
																		"src": "14186:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2792,
																	"name": "_isExcluded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2756,
																	"src": "14204:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "14185:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2799,
																		"name": "prevIsExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2770,
																		"src": "14316:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "!",
																		"prefix": true,
																		"src": "14334:12:12",
																		"subExpression": {
																			"id": 2800,
																			"name": "_isExcluded",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2756,
																			"src": "14335:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "14316:30:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 2808,
																"nodeType": "IfStatement",
																"src": "14312:106:12",
																"trueBody": {
																	"id": 2807,
																	"nodeType": "Block",
																	"src": "14348:70:12",
																	"statements": [
																		{
																			"expression": {
																				"id": 2805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2803,
																					"name": "excludeDebasingSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1503,
																					"src": "14367:21:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"id": 2804,
																					"name": "prevBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2776,
																					"src": "14392:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14367:36:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2806,
																			"nodeType": "ExpressionStatement",
																			"src": "14367:36:12"
																		}
																	]
																}
															},
															"id": 2809,
															"nodeType": "IfStatement",
															"src": "14181:237:12",
															"trueBody": {
																"id": 2798,
																"nodeType": "Block",
																"src": "14217:89:12",
																"statements": [
																	{
																		"expression": {
																			"id": 2796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2794,
																				"name": "excludeDebasingSupply",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1503,
																				"src": "14238:21:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2795,
																				"name": "prevBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2776,
																				"src": "14263:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14238:36:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2797,
																		"nodeType": "ExpressionStatement",
																		"src": "14238:36:12"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "702115dd",
									"id": 2813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_excludedFromDebasing",
									"nameLocation": "13788:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2754,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "13818:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "13810:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13810:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "_isExcluded",
												"nameLocation": "13832:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2813,
												"src": "13827:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13827:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13809:35:12"
									},
									"returnParameters": {
										"id": 2758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13852:0:12"
									},
									"scope": 3135,
									"src": "13779:655:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2852,
										"nodeType": "Block",
										"src": "14560:236:12",
										"statements": [
											{
												"body": {
													"id": 2850,
													"nodeType": "Block",
													"src": "14614:176:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2835,
																				"name": "_accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2816,
																				"src": "14636:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 2837,
																			"indexExpression": {
																				"id": 2836,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2824,
																				"src": "14646:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "14636:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2838,
																			"name": "treasuryWallet",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1517,
																			"src": "14652:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "14636:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "54726561737572792077616c6c65742063616e6e6f7420626520696e636c7564656420696e206465626173696e67",
																		"id": 2840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14668:48:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_84d5812972af2c1adbf06f4834fb56a990c910224226d45960e515dd2c80b59c",
																			"typeString": "literal_string \"Treasury wallet cannot be included in debasing\""
																		},
																		"value": "Treasury wallet cannot be included in debasing"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_84d5812972af2c1adbf06f4834fb56a990c910224226d45960e515dd2c80b59c",
																			"typeString": "literal_string \"Treasury wallet cannot be included in debasing\""
																		}
																	],
																	"id": 2834,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "14628:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14628:89:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2842,
															"nodeType": "ExpressionStatement",
															"src": "14628:89:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2844,
																			"name": "_accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2816,
																			"src": "14753:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2846,
																		"indexExpression": {
																			"id": 2845,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "14763:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "14753:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2847,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2818,
																		"src": "14767:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2843,
																	"name": "_excludedFromDebasing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2813,
																	"src": "14731:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14731:48:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2849,
															"nodeType": "ExpressionStatement",
															"src": "14731:48:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2827,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "14587:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2828,
															"name": "_accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2816,
															"src": "14591:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14601:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "14591:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14587:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2851,
												"initializationExpression": {
													"assignments": [
														2824
													],
													"declarations": [
														{
															"constant": false,
															"id": 2824,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "14580:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2851,
															"src": "14575:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2823,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "14575:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2826,
													"initialValue": {
														"hexValue": "30",
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14584:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "14575:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "14609:3:12",
														"subExpression": {
															"id": 2831,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "14611:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2833,
													"nodeType": "ExpressionStatement",
													"src": "14609:3:12"
												},
												"nodeType": "ForStatement",
												"src": "14570:220:12"
											}
										]
									},
									"functionSelector": "6c5ed03e",
									"id": 2853,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2821,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2820,
												"name": "onlyOwner",
												"nameLocations": [
													"14550:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "14550:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "14550:9:12"
										}
									],
									"name": "multiExcludedFromDebasing",
									"nameLocation": "14449:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"mutability": "mutable",
												"name": "_accounts",
												"nameLocation": "14501:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "14484:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2814,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "14484:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2815,
													"nodeType": "ArrayTypeName",
													"src": "14484:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"mutability": "mutable",
												"name": "_isExcluded",
												"nameLocation": "14525:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2853,
												"src": "14520:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14520:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14474:68:12"
									},
									"returnParameters": {
										"id": 2822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14560:0:12"
									},
									"scope": 3135,
									"src": "14440:356:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2876,
										"nodeType": "Block",
										"src": "14879:147:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "_account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2855,
																"src": "14906:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14926:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14918:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2862,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14918:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14918:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14906:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4163636f756e742073686f756c646e2774206265207a65726f2e",
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14930:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a",
																"typeString": "literal_string \"Account shouldn't be zero.\""
															},
															"value": "Account shouldn't be zero."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15b955c6e45f8f3a0d716f116d7dc2e4393bdf97deb9d4afac431e91c547383a",
																"typeString": "literal_string \"Account shouldn't be zero.\""
															}
														],
														"id": 2860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14898:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14898:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2869,
												"nodeType": "ExpressionStatement",
												"src": "14898:61:12"
											},
											{
												"expression": {
													"id": 2874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2870,
															"name": "isExcludedFromHoldingLimit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "14969:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2872,
														"indexExpression": {
															"id": 2871,
															"name": "_account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2855,
															"src": "14996:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14969:36:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2873,
														"name": "_isExcluded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2857,
														"src": "15008:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14969:50:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2875,
												"nodeType": "ExpressionStatement",
												"src": "14969:50:12"
											}
										]
									},
									"functionSelector": "35c85a34",
									"id": 2877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_excludedFromHoldingLimit",
									"nameLocation": "14811:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2855,
												"mutability": "mutable",
												"name": "_account",
												"nameLocation": "14845:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "14837:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14837:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2857,
												"mutability": "mutable",
												"name": "_isExcluded",
												"nameLocation": "14859:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2877,
												"src": "14854:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2856,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14854:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14836:35:12"
									},
									"returnParameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14879:0:12"
									},
									"scope": 3135,
									"src": "14802:224:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2907,
										"nodeType": "Block",
										"src": "15134:146:12",
										"statements": [
											{
												"body": {
													"id": 2905,
													"nodeType": "Block",
													"src": "15197:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2899,
																			"name": "_accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2880,
																			"src": "15237:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2901,
																		"indexExpression": {
																			"id": 2900,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2888,
																			"src": "15247:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "15237:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2902,
																		"name": "_isExcluded",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2882,
																		"src": "15251:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2898,
																	"name": "_excludedFromHoldingLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2877,
																	"src": "15211:25:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,bool)"
																	}
																},
																"id": 2903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15211:52:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2904,
															"nodeType": "ExpressionStatement",
															"src": "15211:52:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2891,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "15170:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2892,
															"name": "_accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2880,
															"src": "15174:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15184:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15174:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15170:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2906,
												"initializationExpression": {
													"assignments": [
														2888
													],
													"declarations": [
														{
															"constant": false,
															"id": 2888,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15163:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2906,
															"src": "15158:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2887,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "15158:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2890,
													"initialValue": {
														"hexValue": "30",
														"id": 2889,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15167:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15158:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "15192:3:12",
														"subExpression": {
															"id": 2895,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2888,
															"src": "15194:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2897,
													"nodeType": "ExpressionStatement",
													"src": "15192:3:12"
												},
												"nodeType": "ForStatement",
												"src": "15153:121:12"
											}
										]
									},
									"functionSelector": "7819f36f",
									"id": 2908,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2885,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2884,
												"name": "onlyOwner",
												"nameLocations": [
													"15124:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "15124:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "15124:9:12"
										}
									],
									"name": "multiExcludedFromHoldingLimit",
									"nameLocation": "15041:29:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "_accounts",
												"nameLocation": "15088:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "15071:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2878,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15071:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2879,
													"nodeType": "ArrayTypeName",
													"src": "15071:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "_isExcluded",
												"nameLocation": "15104:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2908,
												"src": "15099:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15099:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15070:46:12"
									},
									"returnParameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15134:0:12"
									},
									"scope": 3135,
									"src": "15032:248:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3070,
										"nodeType": "Block",
										"src": "15438:1374:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2922,
																	"name": "_airdroppers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2911,
																	"src": "15456:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15469:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15456:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2924,
																	"name": "_amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2914,
																	"src": "15479:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15488:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "15479:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15456:38:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "417272617973206c656e677468206d69736d61746368",
															"id": 2927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15496:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
																"typeString": "literal_string \"Arrays length mismatch\""
															},
															"value": "Arrays length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_582fd48f3876d7686bfeaaaa0db0589073271dedd50d66094f02fee2a3d2e01c",
																"typeString": "literal_string \"Arrays length mismatch\""
															}
														],
														"id": 2921,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15448:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15448:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2929,
												"nodeType": "ExpressionStatement",
												"src": "15448:73:12"
											},
											{
												"assignments": [
													2931
												],
												"declarations": [
													{
														"constant": false,
														"id": 2931,
														"mutability": "mutable",
														"name": "totalAmount",
														"nameLocation": "15540:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 3070,
														"src": "15532:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2930,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15532:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2933,
												"initialValue": {
													"hexValue": "30",
													"id": 2932,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15554:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15532:23:12"
											},
											{
												"body": {
													"id": 2951,
													"nodeType": "Block",
													"src": "15611:51:12",
													"statements": [
														{
															"expression": {
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2945,
																	"name": "totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2931,
																	"src": "15625:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 2946,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2914,
																		"src": "15640:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2948,
																	"indexExpression": {
																		"id": 2947,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2935,
																		"src": "15649:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15640:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15625:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2950,
															"nodeType": "ExpressionStatement",
															"src": "15625:26:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2938,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "15585:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2939,
															"name": "_amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "15589:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15598:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15589:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15585:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2952,
												"initializationExpression": {
													"assignments": [
														2935
													],
													"declarations": [
														{
															"constant": false,
															"id": 2935,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15578:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2952,
															"src": "15570:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2934,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15570:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2937,
													"initialValue": {
														"hexValue": "30",
														"id": 2936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15582:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15570:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "15606:3:12",
														"subExpression": {
															"id": 2942,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2935,
															"src": "15608:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2944,
													"nodeType": "ExpressionStatement",
													"src": "15606:3:12"
												},
												"nodeType": "ForStatement",
												"src": "15565:97:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2955,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "15694:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "15698:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "15694:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2954,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1803,
																	"src": "15684:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15684:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2958,
																"name": "totalAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2931,
																"src": "15709:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15684:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15722:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2953,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15676:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15676:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2962,
												"nodeType": "ExpressionStatement",
												"src": "15676:69:12"
											},
											{
												"body": {
													"id": 3068,
													"nodeType": "Block",
													"src": "15806:1000:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 2975,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "15834:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "15838:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "15834:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2974,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1803,
																		"src": "15824:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 2977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15824:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2978,
																		"name": "_amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2914,
																		"src": "15848:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2980,
																	"indexExpression": {
																		"id": 2979,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "15857:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "15848:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15824:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3067,
															"nodeType": "IfStatement",
															"src": "15820:976:12",
															"trueBody": {
																"id": 3066,
																"nodeType": "Block",
																"src": "15861:935:12",
																"statements": [
																	{
																		"condition": {
																			"baseExpression": {
																				"id": 2982,
																				"name": "isExcludedFromDebasing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "15883:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 2985,
																			"indexExpression": {
																				"expression": {
																					"id": 2983,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "15906:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "15910:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "15906:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "15883:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 3015,
																			"nodeType": "Block",
																			"src": "16130:147:12",
																			"statements": [
																				{
																					"expression": {
																						"id": 3013,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3004,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1513,
																								"src": "16152:9:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 3007,
																							"indexExpression": {
																								"expression": {
																									"id": 3005,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "16162:3:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 3006,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "16166:6:12",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "16162:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16152:21:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 3009,
																										"name": "_amounts",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2914,
																										"src": "16225:8:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 3011,
																									"indexExpression": {
																										"id": 3010,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2964,
																										"src": "16234:1:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16225:11:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 3008,
																								"name": "_fragmentToDebaseToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2628,
																								"src": "16177:22:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3012,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "16177:81:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16152:106:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3014,
																					"nodeType": "ExpressionStatement",
																					"src": "16152:106:12"
																				}
																			]
																		},
																		"id": 3016,
																		"nodeType": "IfStatement",
																		"src": "15879:398:12",
																		"trueBody": {
																			"id": 3003,
																			"nodeType": "Block",
																			"src": "15919:205:12",
																			"statements": [
																				{
																					"expression": {
																						"id": 2995,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2986,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1513,
																								"src": "15941:9:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 2989,
																							"indexExpression": {
																								"expression": {
																									"id": 2987,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967281,
																									"src": "15951:3:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 2988,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15955:6:12",
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"src": "15951:10:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "15941:21:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 2991,
																										"name": "_amounts",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2914,
																										"src": "16014:8:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 2993,
																									"indexExpression": {
																										"id": 2992,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2964,
																										"src": "16023:1:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16014:11:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 2990,
																								"name": "_fragmentToDebaseToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2628,
																								"src": "15966:22:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 2994,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "15966:81:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "15941:106:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2996,
																					"nodeType": "ExpressionStatement",
																					"src": "15941:106:12"
																				},
																				{
																					"expression": {
																						"id": 3001,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2997,
																							"name": "excludeDebasingSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1503,
																							"src": "16069:21:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 2998,
																								"name": "_amounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2914,
																								"src": "16094:8:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 3000,
																							"indexExpression": {
																								"id": 2999,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2964,
																								"src": "16103:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16094:11:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16069:36:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3002,
																					"nodeType": "ExpressionStatement",
																					"src": "16069:36:12"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"baseExpression": {
																				"id": 3017,
																				"name": "isExcludedFromDebasing",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1535,
																				"src": "16299:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																					"typeString": "mapping(address => bool)"
																				}
																			},
																			"id": 3021,
																			"indexExpression": {
																				"baseExpression": {
																					"id": 3018,
																					"name": "_airdroppers",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2911,
																					"src": "16322:12:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 3020,
																				"indexExpression": {
																					"id": 3019,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "16335:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "16322:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "16299:39:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 3053,
																			"nodeType": "Block",
																			"src": "16556:152:12",
																			"statements": [
																				{
																					"expression": {
																						"id": 3051,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3041,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1513,
																								"src": "16578:9:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 3045,
																							"indexExpression": {
																								"baseExpression": {
																									"id": 3042,
																									"name": "_airdroppers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2911,
																									"src": "16588:12:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 3044,
																								"indexExpression": {
																									"id": 3043,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2964,
																									"src": "16601:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16588:15:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16578:26:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 3047,
																										"name": "_amounts",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2914,
																										"src": "16656:8:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 3049,
																									"indexExpression": {
																										"id": 3048,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2964,
																										"src": "16665:1:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16656:11:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 3046,
																								"name": "_fragmentToDebaseToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2628,
																								"src": "16608:22:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3050,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "16608:81:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16578:111:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3052,
																					"nodeType": "ExpressionStatement",
																					"src": "16578:111:12"
																				}
																			]
																		},
																		"id": 3054,
																		"nodeType": "IfStatement",
																		"src": "16295:413:12",
																		"trueBody": {
																			"id": 3040,
																			"nodeType": "Block",
																			"src": "16340:210:12",
																			"statements": [
																				{
																					"expression": {
																						"id": 3032,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 3022,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1513,
																								"src": "16362:9:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 3026,
																							"indexExpression": {
																								"baseExpression": {
																									"id": 3023,
																									"name": "_airdroppers",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2911,
																									"src": "16397:12:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																										"typeString": "address[] memory"
																									}
																								},
																								"id": 3025,
																								"indexExpression": {
																									"id": 3024,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2964,
																									"src": "16410:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "16397:15:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "16362:72:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"baseExpression": {
																										"id": 3028,
																										"name": "_amounts",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2914,
																										"src": "16461:8:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																											"typeString": "uint256[] memory"
																										}
																									},
																									"id": 3030,
																									"indexExpression": {
																										"id": 3029,
																										"name": "i",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2964,
																										"src": "16470:1:12",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "16461:11:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"id": 3027,
																								"name": "_fragmentToDebaseToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2628,
																								"src": "16438:22:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																									"typeString": "function (uint256) pure returns (uint256)"
																								}
																							},
																							"id": 3031,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "16438:35:12",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16362:111:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3033,
																					"nodeType": "ExpressionStatement",
																					"src": "16362:111:12"
																				},
																				{
																					"expression": {
																						"id": 3038,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 3034,
																							"name": "excludeDebasingSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1503,
																							"src": "16495:21:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 3035,
																								"name": "_amounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2914,
																								"src": "16520:8:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 3037,
																							"indexExpression": {
																								"id": 3036,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2964,
																								"src": "16529:1:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "16520:11:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "16495:36:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3039,
																					"nodeType": "ExpressionStatement",
																					"src": "16495:36:12"
																				}
																			]
																		}
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 3056,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "16740:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 3057,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "16744:6:12",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "16740:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 3058,
																						"name": "_airdroppers",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2911,
																						"src": "16752:12:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																							"typeString": "address[] memory"
																						}
																					},
																					"id": 3060,
																					"indexExpression": {
																						"id": 3059,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2964,
																						"src": "16765:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "16752:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 3061,
																						"name": "_amounts",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2914,
																						"src": "16769:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																							"typeString": "uint256[] memory"
																						}
																					},
																					"id": 3063,
																					"indexExpression": {
																						"id": 3062,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2964,
																						"src": "16778:1:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "16769:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3055,
																				"name": "Transfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 408,
																				"src": "16731:8:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 3064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "16731:50:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3065,
																		"nodeType": "EmitStatement",
																		"src": "16726:55:12"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2967,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "15776:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2968,
															"name": "_airdroppers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2911,
															"src": "15780:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15793:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15780:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15776:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3069,
												"initializationExpression": {
													"assignments": [
														2964
													],
													"declarations": [
														{
															"constant": false,
															"id": 2964,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "15769:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 3069,
															"src": "15761:9:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2963,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "15761:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2966,
													"initialValue": {
														"hexValue": "30",
														"id": 2965,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15773:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "15761:13:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "15801:3:12",
														"subExpression": {
															"id": 2971,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "15803:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2973,
													"nodeType": "ExpressionStatement",
													"src": "15801:3:12"
												},
												"nodeType": "ForStatement",
												"src": "15756:1050:12"
											}
										]
									},
									"functionSelector": "e5a5e318",
									"id": 3071,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2917,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2916,
												"name": "nonReentrant",
												"nameLocations": [
													"15411:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 361,
												"src": "15411:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "15411:12:12"
										},
										{
											"id": 2919,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2918,
												"name": "whenNotPaused",
												"nameLocations": [
													"15424:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 258,
												"src": "15424:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "15424:13:12"
										}
									],
									"name": "multiAirdropTokenRequested",
									"nameLocation": "15295:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "_airdroppers",
												"nameLocation": "15348:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "15331:29:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2909,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "15331:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2910,
													"nodeType": "ArrayTypeName",
													"src": "15331:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "_amounts",
												"nameLocation": "15387:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 3071,
												"src": "15370:25:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2912,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "15370:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2913,
													"nodeType": "ArrayTypeName",
													"src": "15370:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15321:80:12"
									},
									"returnParameters": {
										"id": 2920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15438:0:12"
									},
									"scope": 3135,
									"src": "15286:1526:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3088,
										"nodeType": "Block",
										"src": "16860:99:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3077,
																"name": "lastTimeStamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "16878:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 3078,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "16895:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "16901:9:12",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "16895:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16878:32:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16870:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16870:41:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3082,
												"nodeType": "ExpressionStatement",
												"src": "16870:41:12"
											},
											{
												"expression": {
													"id": 3086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3083,
														"name": "lastTimeStamp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1545,
														"src": "16921:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3084,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16937:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16943:9:12",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "16937:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16921:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3087,
												"nodeType": "ExpressionStatement",
												"src": "16921:31:12"
											}
										]
									},
									"functionSelector": "5d70dde6",
									"id": 3089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3073,
												"name": "onlyOwner",
												"nameLocations": [
													"16850:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "16850:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "16850:9:12"
										}
									],
									"name": "setLastTime",
									"nameLocation": "16827:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16838:2:12"
									},
									"returnParameters": {
										"id": 3075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16860:0:12"
									},
									"scope": 3135,
									"src": "16818:141:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3097,
										"nodeType": "Block",
										"src": "16999:25:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3094,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "17009:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17009:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3096,
												"nodeType": "ExpressionStatement",
												"src": "17009:8:12"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 3098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3091,
												"name": "onlyOwner",
												"nameLocations": [
													"16989:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "16989:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "16989:9:12"
										}
									],
									"name": "pause",
									"nameLocation": "16974:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16979:2:12"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16999:0:12"
									},
									"scope": 3135,
									"src": "16965:59:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3106,
										"nodeType": "Block",
										"src": "17066:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3103,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "17076:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 3104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17076:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3105,
												"nodeType": "ExpressionStatement",
												"src": "17076:10:12"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 3107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3100,
												"name": "onlyOwner",
												"nameLocations": [
													"17056:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 134,
												"src": "17056:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "17056:9:12"
										}
									],
									"name": "unpause",
									"nameLocation": "17039:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17046:2:12"
									},
									"returnParameters": {
										"id": 3102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17066:0:12"
									},
									"scope": 3135,
									"src": "17030:63:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3115,
										"nodeType": "Block",
										"src": "17188:31:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3112,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 143,
														"src": "17205:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17205:7:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3111,
												"id": 3114,
												"nodeType": "Return",
												"src": "17198:14:12"
											}
										]
									},
									"functionSelector": "893d20e8",
									"id": 3116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOwner",
									"nameLocation": "17145:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17153:2:12"
									},
									"returnParameters": {
										"id": 3111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3116,
												"src": "17179:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17179:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17178:9:12"
									},
									"scope": 3135,
									"src": "17136:83:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3133,
										"nodeType": "Block",
										"src": "17285:156:12",
										"statements": [
											{
												"assignments": [
													3122
												],
												"declarations": [
													{
														"constant": false,
														"id": 3122,
														"mutability": "mutable",
														"name": "realBalance",
														"nameLocation": "17303:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 3133,
														"src": "17295:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17295:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3128,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3124,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1513,
																"src": "17353:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 3126,
															"indexExpression": {
																"id": 3125,
																"name": "treasuryWallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1517,
																"src": "17363:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "17353:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3123,
														"name": "_debaseTokenToFragment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2612,
														"src": "17317:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 3127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17317:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17295:93:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3129,
														"name": "treasuryBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "17405:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 3130,
														"name": "realBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3122,
														"src": "17423:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17405:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3120,
												"id": 3132,
												"nodeType": "Return",
												"src": "17398:36:12"
											}
										]
									},
									"functionSelector": "e2ff2440",
									"id": 3134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_treasuryBalanceOf",
									"nameLocation": "17234:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17252:2:12"
									},
									"returnParameters": {
										"id": 3120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3134,
												"src": "17276:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17276:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17275:9:12"
									},
									"scope": 3135,
									"src": "17225:216:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3136,
							"src": "559:16884:12",
							"usedErrors": [
								3,
								89,
								94
							],
							"usedEvents": [
								100,
								234,
								239,
								408,
								417,
								1551,
								1557
							]
						}
					],
					"src": "32:17412:12"
				},
				"id": 12
			}
		}
	}
}